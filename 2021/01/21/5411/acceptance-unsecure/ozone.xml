<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210121 14:53:55.964" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:16:01.573" starttime="20210121 14:16:01.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:16:01.578" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:16:01.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:16:01.655" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 21 Jan 2021 14:16:01 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 21 Jan 2021 13:41:48 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210121 14:16:01.655" starttime="20210121 14:16:01.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:16:01.656" level="INFO">HTTP/1.1 200 OK
Date: Thu, 21 Jan 2021 14:16:01 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 21 Jan 2021 13:41:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210121 14:16:01.657" starttime="20210121 14:16:01.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:16:01.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:16:01.657" starttime="20210121 14:16:01.657"></status>
</kw>
<status status="PASS" endtime="20210121 14:16:01.658" starttime="20210121 14:16:01.574"></status>
</kw>
<msg timestamp="20210121 14:16:01.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:16:01.658" starttime="20210121 14:16:01.574"></status>
</kw>
<msg timestamp="20210121 14:16:01.658" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 21 Jan 2021 14:16:01 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 21 Jan 2021 13:41:48 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210121 14:16:01.658" starttime="20210121 14:16:01.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210121 14:16:01.659" starttime="20210121 14:16:01.658"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:16:01.659" critical="yes" starttime="20210121 14:16:01.572"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:16:01.665" starttime="20210121 14:16:01.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:16:01.669" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:04.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:04.979" level="INFO">${output} = 2021-01-21 14:16:03,697 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:16:03,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:17:04.979" starttime="20210121 14:16:01.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:04.981" level="INFO">2021-01-21 14:16:03,697 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:16:03,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:16:03,820 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-21 14:16:05,108 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-21 14:16:05,109 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-01-21 14:16:05,114 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-01-21 14:16:05,119 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-21 14:16:05,127 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-21 14:16:05,175 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31715, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:16:05,207 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-23161, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:16:05,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-75059, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:16:05,234 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-07344, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:16:05,245 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-70281, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:16:05,263 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31715/bucket-0-52809, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,298 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23161/bucket-0-24812, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,311 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75059/bucket-0-27080, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-07344/bucket-0-90756, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,334 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-70281/bucket-0-87510, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,346 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31715/bucket-1-00512, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,353 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23161/bucket-1-26827, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,362 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75059/bucket-1-80161, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,373 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-07344/bucket-1-29263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,382 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-70281/bucket-1-69152, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,392 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31715/bucket-2-54478, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,404 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23161/bucket-2-09792, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,415 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75059/bucket-2-67068, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,427 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-07344/bucket-2-10533, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,436 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-70281/bucket-2-16601, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,448 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31715/bucket-3-48246, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,456 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23161/bucket-3-94136, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75059/bucket-3-46383, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,471 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-07344/bucket-3-04751, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,477 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-70281/bucket-3-25036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31715/bucket-4-12243, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-23161/bucket-4-14331, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,499 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75059/bucket-4-34983, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-07344/bucket-4-87700, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:05,510 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-70281/bucket-4-58561, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:16:06,132 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-21 14:16:06,239 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-21 14:16:06,576 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:16:06,577 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3A337811DC5F-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:16:06,579 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-21 14:16:07,133 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-21 14:16:08,133 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2021-01-21 14:16:09,134 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2021-01-21 14:16:10,134 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2021-01-21 14:16:11,135 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2021-01-21 14:16:12,135 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2021-01-21 14:16:13,136 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2021-01-21 14:16:14,136 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2021-01-21 14:16:15,137 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-01-21 14:16:16,137 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-01-21 14:16:17,138 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-01-21 14:16:18,138 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2021-01-21 14:16:19,139 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2021-01-21 14:16:20,139 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2021-01-21 14:16:21,140 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2021-01-21 14:16:22,140 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-21 14:16:23,141 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-21 14:16:24,141 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-01-21 14:16:25,141 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-01-21 14:16:26,142 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-01-21 14:16:27,143 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-21 14:16:28,143 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-21 14:16:29,144 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-21 14:16:30,146 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-01-21 14:16:31,147 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2021-01-21 14:16:32,148 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2021-01-21 14:16:33,148 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2021-01-21 14:16:34,149 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2021-01-21 14:16:35,149 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2021-01-21 14:16:36,150 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-01-21 14:16:37,150 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-01-21 14:16:38,150 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-01-21 14:16:39,151 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-21 14:16:40,151 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-21 14:16:41,152 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-21 14:16:42,152 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-01-21 14:16:43,154 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-01-21 14:16:44,154 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-01-21 14:16:45,155 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-01-21 14:16:46,156 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-01-21 14:16:47,156 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-01-21 14:16:48,157 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2021-01-21 14:16:49,157 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2021-01-21 14:16:50,157 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-01-21 14:16:51,158 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-21 14:16:52,158 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-21 14:16:53,159 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-21 14:16:54,159 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2021-01-21 14:16:55,159 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2021-01-21 14:16:56,160 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2021-01-21 14:16:57,160 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-01-21 14:16:58,161 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-01-21 14:16:59,161 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2021-01-21 14:17:00,162 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,113
Average Time spent in bucket creation: 00:00:00,179
Average Time spent in key creation: 00:00:02,378
Average Time spent in key write: 00:00:01,089
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:00,658
***************************************************</msg>
<status status="PASS" endtime="20210121 14:17:04.981" starttime="20210121 14:17:04.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:04.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:04.982" starttime="20210121 14:17:04.981"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:04.982" starttime="20210121 14:16:01.666"></status>
</kw>
<msg timestamp="20210121 14:17:04.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:04.982" starttime="20210121 14:16:01.666"></status>
</kw>
<msg timestamp="20210121 14:17:04.982" level="INFO">${result} = 2021-01-21 14:16:03,697 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:16:03,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:17:04.983" starttime="20210121 14:16:01.665"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:04.984" starttime="20210121 14:17:04.983"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:04.984" starttime="20210121 14:17:04.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:04.984" starttime="20210121 14:17:04.984"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:04.985" critical="yes" starttime="20210121 14:16:01.660"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210121 14:17:04.986" starttime="20210121 14:16:01.544"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:04.998" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:06.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:06.429" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210121 14:17:06.429" starttime="20210121 14:17:04.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:06.430" level="INFO">om</msg>
<status status="PASS" endtime="20210121 14:17:06.430" starttime="20210121 14:17:06.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:06.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:06.431" starttime="20210121 14:17:06.430"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:06.431" starttime="20210121 14:17:04.994"></status>
</kw>
<msg timestamp="20210121 14:17:06.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:06.431" starttime="20210121 14:17:04.994"></status>
</kw>
<msg timestamp="20210121 14:17:06.432" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210121 14:17:06.432" starttime="20210121 14:17:04.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:06.432" starttime="20210121 14:17:06.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:06.436" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:07.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:07.836" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210121 14:17:07.836" starttime="20210121 14:17:06.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:07.837" level="INFO">om</msg>
<status status="PASS" endtime="20210121 14:17:07.837" starttime="20210121 14:17:07.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:07.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:07.838" starttime="20210121 14:17:07.838"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:07.838" starttime="20210121 14:17:06.433"></status>
</kw>
<msg timestamp="20210121 14:17:07.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:07.839" starttime="20210121 14:17:06.433"></status>
</kw>
<msg timestamp="20210121 14:17:07.839" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210121 14:17:07.839" starttime="20210121 14:17:06.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:07.840" starttime="20210121 14:17:07.839"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:07.840" critical="yes" starttime="20210121 14:17:04.993"></status>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:07.845" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:09.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:09.295" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210121 14:17:09.295" starttime="20210121 14:17:07.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:09.296" level="INFO">scm</msg>
<status status="PASS" endtime="20210121 14:17:09.296" starttime="20210121 14:17:09.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:09.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:09.297" starttime="20210121 14:17:09.297"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:09.298" starttime="20210121 14:17:07.843"></status>
</kw>
<msg timestamp="20210121 14:17:09.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:09.298" starttime="20210121 14:17:07.842"></status>
</kw>
<msg timestamp="20210121 14:17:09.299" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210121 14:17:09.299" starttime="20210121 14:17:07.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:09.299" starttime="20210121 14:17:09.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:09.307" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:10.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:10.654" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210121 14:17:10.654" starttime="20210121 14:17:09.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:10.655" level="INFO">scm</msg>
<status status="PASS" endtime="20210121 14:17:10.655" starttime="20210121 14:17:10.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:10.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:10.656" starttime="20210121 14:17:10.655"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:10.656" starttime="20210121 14:17:09.302"></status>
</kw>
<msg timestamp="20210121 14:17:10.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:10.656" starttime="20210121 14:17:09.302"></status>
</kw>
<msg timestamp="20210121 14:17:10.657" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210121 14:17:10.657" starttime="20210121 14:17:09.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:10.657" starttime="20210121 14:17:10.657"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:10.657" critical="yes" starttime="20210121 14:17:07.841"></status>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:10.662" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:11.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:11.978" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210121 14:17:11.979" starttime="20210121 14:17:10.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:11.980" level="INFO">om</msg>
<status status="PASS" endtime="20210121 14:17:11.980" starttime="20210121 14:17:11.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:11.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:11.980" starttime="20210121 14:17:11.980"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:11.981" starttime="20210121 14:17:10.660"></status>
</kw>
<msg timestamp="20210121 14:17:11.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:11.981" starttime="20210121 14:17:10.659"></status>
</kw>
<msg timestamp="20210121 14:17:11.981" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210121 14:17:11.981" starttime="20210121 14:17:10.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:11.982" starttime="20210121 14:17:11.981"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:11.982" starttime="20210121 14:17:11.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:11.986" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:13.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:13.209" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210121 14:17:13.209" starttime="20210121 14:17:11.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:13.210" level="INFO">om</msg>
<status status="PASS" endtime="20210121 14:17:13.210" starttime="20210121 14:17:13.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:13.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:13.211" starttime="20210121 14:17:13.210"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:13.211" starttime="20210121 14:17:11.984"></status>
</kw>
<msg timestamp="20210121 14:17:13.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:13.211" starttime="20210121 14:17:11.983"></status>
</kw>
<msg timestamp="20210121 14:17:13.212" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210121 14:17:13.212" starttime="20210121 14:17:11.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:13.212" starttime="20210121 14:17:13.212"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:13.213" starttime="20210121 14:17:13.213"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:13.213" critical="yes" starttime="20210121 14:17:10.658"></status>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:13.217" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:14.510" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:17:14.510" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:14.510" starttime="20210121 14:17:13.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:14.511" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:14.511" starttime="20210121 14:17:14.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:14.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:14.512" starttime="20210121 14:17:14.511"></status>
</kw>
<msg timestamp="20210121 14:17:14.512" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:14.512" starttime="20210121 14:17:13.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:14.513" starttime="20210121 14:17:14.513"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:14.516" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:15.724" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:17:15.724" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:15.724" starttime="20210121 14:17:14.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:15.725" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:15.726" starttime="20210121 14:17:15.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:15.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:15.726" starttime="20210121 14:17:15.726"></status>
</kw>
<msg timestamp="20210121 14:17:15.727" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210121 14:17:15.727" starttime="20210121 14:17:14.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:15.727" starttime="20210121 14:17:15.727"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:15.727" critical="yes" starttime="20210121 14:17:13.214"></status>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210121 14:17:15.729" starttime="20210121 14:17:04.988"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:17:15.745" level="INFO">${random} = 44492</msg>
<status status="PASS" endtime="20210121 14:17:15.745" starttime="20210121 14:17:15.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210121 14:17:15.746" level="INFO">${source} = 44492-source</msg>
<status status="PASS" endtime="20210121 14:17:15.747" starttime="20210121 14:17:15.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210121 14:17:15.748" level="INFO">${target} = 44492-target</msg>
<status status="PASS" endtime="20210121 14:17:15.748" starttime="20210121 14:17:15.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:15.751" level="INFO">Running command 'ozone sh volume create 44492-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:18.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:18.806" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:18.806" starttime="20210121 14:17:15.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:18.807" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:18.807" starttime="20210121 14:17:18.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:18.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:18.808" starttime="20210121 14:17:18.807"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:18.808" starttime="20210121 14:17:15.749"></status>
</kw>
<msg timestamp="20210121 14:17:18.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:18.809" starttime="20210121 14:17:15.748"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:18.809" starttime="20210121 14:17:15.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:18.812" level="INFO">Running command 'ozone sh volume create 44492-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:21.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:21.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:21.890" starttime="20210121 14:17:18.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:21.891" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:21.891" starttime="20210121 14:17:21.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:21.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:21.891" starttime="20210121 14:17:21.891"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:21.892" starttime="20210121 14:17:18.810"></status>
</kw>
<msg timestamp="20210121 14:17:21.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:21.892" starttime="20210121 14:17:18.810"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:21.892" starttime="20210121 14:17:18.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:21.893" starttime="20210121 14:17:21.892"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:21.893" starttime="20210121 14:17:15.744"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:21.895" starttime="20210121 14:17:21.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:21.901" level="INFO">Running command 'ozone sh bucket link 44492-source/no-such-bucket 44492-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:24.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:24.951" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:24.951" starttime="20210121 14:17:21.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:24.952" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:24.953" starttime="20210121 14:17:24.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:24.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:24.953" starttime="20210121 14:17:24.953"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:24.954" starttime="20210121 14:17:21.896"></status>
</kw>
<msg timestamp="20210121 14:17:24.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:24.954" starttime="20210121 14:17:21.896"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:24.954" starttime="20210121 14:17:21.895"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:24.957" level="INFO">Running command 'ozone sh key list 44492-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:28.407" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:17:28.407" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210121 14:17:28.407" starttime="20210121 14:17:24.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:28.409" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210121 14:17:28.409" starttime="20210121 14:17:28.408"></status>
</kw>
<msg timestamp="20210121 14:17:28.409" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210121 14:17:28.409" starttime="20210121 14:17:24.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:28.410" starttime="20210121 14:17:28.409"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:28.410" critical="yes" starttime="20210121 14:17:21.893"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:28.413" starttime="20210121 14:17:28.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:28.417" level="INFO">Running command 'ozone sh bucket link 44492-source/bucket1 44492-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:31.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:31.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:31.518" starttime="20210121 14:17:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:31.519" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:31.519" starttime="20210121 14:17:31.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:31.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:31.520" starttime="20210121 14:17:31.519"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:31.520" starttime="20210121 14:17:28.414"></status>
</kw>
<msg timestamp="20210121 14:17:31.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:31.520" starttime="20210121 14:17:28.414"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:31.521" starttime="20210121 14:17:28.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:31.525" level="INFO">Running command 'ozone sh bucket create 44492-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:34.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:34.735" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:34.735" starttime="20210121 14:17:31.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:34.737" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:34.737" starttime="20210121 14:17:34.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:34.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:34.737" starttime="20210121 14:17:34.737"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:34.738" starttime="20210121 14:17:31.522"></status>
</kw>
<msg timestamp="20210121 14:17:34.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:34.738" starttime="20210121 14:17:31.522"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:34.738" starttime="20210121 14:17:31.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:34.743" level="INFO">Running command 'ozone sh key put 44492-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:40.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:40.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:40.097" starttime="20210121 14:17:34.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:40.098" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:40.099" starttime="20210121 14:17:40.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:40.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:40.099" starttime="20210121 14:17:40.099"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:40.100" starttime="20210121 14:17:34.739"></status>
</kw>
<msg timestamp="20210121 14:17:40.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:40.100" starttime="20210121 14:17:34.739"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:40.100" starttime="20210121 14:17:34.738"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:17:40.103" level="INFO">${postfix} = 22557</msg>
<status status="PASS" endtime="20210121 14:17:40.103" starttime="20210121 14:17:40.102"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:17:40.103" level="INFO">${tmpfile} = /tmp/tempkey-22557</msg>
<status status="PASS" endtime="20210121 14:17:40.104" starttime="20210121 14:17:40.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:40.108" level="INFO">Running command 'ozone sh key get -f 44492-target/link1/key1 /tmp/tempkey-22557 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:45.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:45.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:45.256" starttime="20210121 14:17:40.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:45.257" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:45.258" starttime="20210121 14:17:45.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:45.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:45.259" starttime="20210121 14:17:45.258"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:45.259" starttime="20210121 14:17:40.105"></status>
</kw>
<msg timestamp="20210121 14:17:45.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:45.259" starttime="20210121 14:17:40.104"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:45.259" starttime="20210121 14:17:40.104"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:17:45.262" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-22557 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:45.264" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210121 14:17:45.264" starttime="20210121 14:17:45.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:45.268" level="INFO">Running command 'rm -f /tmp/tempkey-22557 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:45.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:45.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:45.271" starttime="20210121 14:17:45.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:45.271" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:45.272" starttime="20210121 14:17:45.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:45.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:45.272" starttime="20210121 14:17:45.272"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:45.273" starttime="20210121 14:17:45.265"></status>
</kw>
<msg timestamp="20210121 14:17:45.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:45.273" starttime="20210121 14:17:45.265"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:45.273" starttime="20210121 14:17:45.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:17:45.274" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210121 14:17:45.274" starttime="20210121 14:17:45.273"></status>
</kw>
<msg timestamp="20210121 14:17:45.274" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210121 14:17:45.274" starttime="20210121 14:17:40.101"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:45.275" starttime="20210121 14:17:45.275"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:45.275" starttime="20210121 14:17:40.100"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:45.275" critical="yes" starttime="20210121 14:17:28.411"></status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:45.277" starttime="20210121 14:17:45.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:45.282" level="INFO">Running command 'ozone sh key put 44492-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:50.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:50.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:50.403" starttime="20210121 14:17:45.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:50.404" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:50.404" starttime="20210121 14:17:50.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:50.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:50.405" starttime="20210121 14:17:50.405"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:50.406" starttime="20210121 14:17:45.279"></status>
</kw>
<msg timestamp="20210121 14:17:50.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:50.406" starttime="20210121 14:17:45.278"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:50.406" starttime="20210121 14:17:45.278"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:17:50.408" level="INFO">${postfix} = 06604</msg>
<status status="PASS" endtime="20210121 14:17:50.408" starttime="20210121 14:17:50.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:17:50.409" level="INFO">${tmpfile} = /tmp/tempkey-06604</msg>
<status status="PASS" endtime="20210121 14:17:50.409" starttime="20210121 14:17:50.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:50.413" level="INFO">Running command 'ozone sh key get -f 44492-source/bucket1/key2 /tmp/tempkey-06604 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:55.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:55.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:55.512" starttime="20210121 14:17:50.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:55.513" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:55.513" starttime="20210121 14:17:55.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:55.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:55.514" starttime="20210121 14:17:55.514"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:55.514" starttime="20210121 14:17:50.410"></status>
</kw>
<msg timestamp="20210121 14:17:55.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:55.515" starttime="20210121 14:17:50.410"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:55.515" starttime="20210121 14:17:50.409"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:17:55.517" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-06604 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:55.520" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210121 14:17:55.520" starttime="20210121 14:17:55.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:55.524" level="INFO">Running command 'rm -f /tmp/tempkey-06604 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:55.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:55.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:17:55.526" starttime="20210121 14:17:55.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:55.527" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:17:55.527" starttime="20210121 14:17:55.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:55.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:55.528" starttime="20210121 14:17:55.527"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:55.528" starttime="20210121 14:17:55.521"></status>
</kw>
<msg timestamp="20210121 14:17:55.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:55.529" starttime="20210121 14:17:55.521"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:55.529" starttime="20210121 14:17:55.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:17:55.530" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210121 14:17:55.530" starttime="20210121 14:17:55.529"></status>
</kw>
<msg timestamp="20210121 14:17:55.530" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210121 14:17:55.530" starttime="20210121 14:17:50.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:55.531" starttime="20210121 14:17:55.531"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:55.531" starttime="20210121 14:17:50.406"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:17:55.531" critical="yes" starttime="20210121 14:17:45.276"></status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:17:55.534" starttime="20210121 14:17:55.533"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:55.537" level="INFO">Running command 'ozone sh key list 44492-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:17:58.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:17:58.837" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210121 14:17:58.837" starttime="20210121 14:17:55.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:17:58.839" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210121 14:17:58.839" starttime="20210121 14:17:58.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:17:58.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:17:58.840" starttime="20210121 14:17:58.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:17:58.840" starttime="20210121 14:17:55.535"></status>
</kw>
<msg timestamp="20210121 14:17:58.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:17:58.840" starttime="20210121 14:17:55.534"></status>
</kw>
<msg timestamp="20210121 14:17:58.840" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210121 14:17:58.840" starttime="20210121 14:17:55.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:17:58.845" level="INFO">Running command 'ozone sh key list 44492-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:01.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:01.939" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210121 14:18:01.939" starttime="20210121 14:17:58.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:01.940" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210121 14:18:01.940" starttime="20210121 14:18:01.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:01.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:01.941" starttime="20210121 14:18:01.940"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:01.941" starttime="20210121 14:17:58.842"></status>
</kw>
<msg timestamp="20210121 14:18:01.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:01.941" starttime="20210121 14:17:58.842"></status>
</kw>
<msg timestamp="20210121 14:18:01.942" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210121 14:18:01.942" starttime="20210121 14:17:58.841"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:01.942" starttime="20210121 14:18:01.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:01.943" starttime="20210121 14:18:01.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:01.943" starttime="20210121 14:18:01.943"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:01.944" critical="yes" starttime="20210121 14:17:55.532"></status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:01.948" starttime="20210121 14:18:01.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:01.952" level="INFO">Running command 'ozone sh key delete 44492-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:04.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:04.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:04.886" starttime="20210121 14:18:01.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:04.888" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:04.888" starttime="20210121 14:18:04.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:04.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:04.889" starttime="20210121 14:18:04.888"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:04.889" starttime="20210121 14:18:01.950"></status>
</kw>
<msg timestamp="20210121 14:18:04.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:04.889" starttime="20210121 14:18:01.949"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:04.889" starttime="20210121 14:18:01.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:04.893" level="INFO">Running command 'ozone sh key list 44492-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:08.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:08.228" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210121 14:18:08.228" starttime="20210121 14:18:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:08.229" level="INFO">key1</msg>
<status status="PASS" endtime="20210121 14:18:08.229" starttime="20210121 14:18:08.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:08.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:08.230" starttime="20210121 14:18:08.230"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:08.230" starttime="20210121 14:18:04.891"></status>
</kw>
<msg timestamp="20210121 14:18:08.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:08.231" starttime="20210121 14:18:04.890"></status>
</kw>
<msg timestamp="20210121 14:18:08.231" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210121 14:18:08.231" starttime="20210121 14:18:04.890"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:08.232" starttime="20210121 14:18:08.231"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:08.232" critical="yes" starttime="20210121 14:18:01.947"></status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:08.235" starttime="20210121 14:18:08.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:08.239" level="INFO">Running command 'ozone sh bucket list 44492-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:11.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:11.666" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210121 14:18:11.666" starttime="20210121 14:18:08.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:11.667" level="INFO">{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:17:24.748Z",
  "modificationTime" : "2021-01-21T14:17:24.748Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:17:31.345Z",
  "modificationTime" : "2021-01-21T14:17:31.345Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:18:11.667" starttime="20210121 14:18:11.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:11.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:11.668" starttime="20210121 14:18:11.667"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:11.669" starttime="20210121 14:18:08.236"></status>
</kw>
<msg timestamp="20210121 14:18:11.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:11.669" starttime="20210121 14:18:08.236"></status>
</kw>
<msg timestamp="20210121 14:18:11.669" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210121 14:18:11.669" starttime="20210121 14:18:08.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:11.670" starttime="20210121 14:18:11.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:11.670" starttime="20210121 14:18:11.670"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:11.671" critical="yes" starttime="20210121 14:18:08.233"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:11.673" starttime="20210121 14:18:11.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:11.677" level="INFO">Running command 'ozone sh bucket info 44492-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:14.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:14.807" level="INFO">${output} = 44492-source bucket1</msg>
<status status="PASS" endtime="20210121 14:18:14.808" starttime="20210121 14:18:11.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:14.809" level="INFO">44492-source bucket1</msg>
<status status="PASS" endtime="20210121 14:18:14.809" starttime="20210121 14:18:14.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:14.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:14.810" starttime="20210121 14:18:14.809"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:14.810" starttime="20210121 14:18:11.674"></status>
</kw>
<msg timestamp="20210121 14:18:14.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:14.810" starttime="20210121 14:18:11.674"></status>
</kw>
<msg timestamp="20210121 14:18:14.810" level="INFO">${result} = 44492-source bucket1</msg>
<status status="PASS" endtime="20210121 14:18:14.810" starttime="20210121 14:18:11.673"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:14.811" starttime="20210121 14:18:14.811"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:14.811" critical="yes" starttime="20210121 14:18:11.672"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:14.814" starttime="20210121 14:18:14.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:14.818" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 44492-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:17.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:17.829" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:18:17.829" starttime="20210121 14:18:14.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:17.831" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:18:17.831" starttime="20210121 14:18:17.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:17.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:17.832" starttime="20210121 14:18:17.832"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:17.832" starttime="20210121 14:18:14.815"></status>
</kw>
<msg timestamp="20210121 14:18:17.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:17.833" starttime="20210121 14:18:14.815"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:17.833" starttime="20210121 14:18:14.814"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:17.838" level="INFO">Running command 'ozone sh bucket getacl 44492-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:21.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:21.204" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210121 14:18:21.204" starttime="20210121 14:18:17.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:21.205" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210121 14:18:21.205" starttime="20210121 14:18:21.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:21.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:21.206" starttime="20210121 14:18:21.205"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:21.206" starttime="20210121 14:18:17.835"></status>
</kw>
<msg timestamp="20210121 14:18:21.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:21.207" starttime="20210121 14:18:17.835"></status>
</kw>
<msg timestamp="20210121 14:18:21.207" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210121 14:18:21.207" starttime="20210121 14:18:17.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:21.207" starttime="20210121 14:18:21.207"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:21.208" starttime="20210121 14:18:17.833"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:21.213" level="INFO">Running command 'ozone sh bucket getacl 44492-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:24.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:24.469" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:24.469" starttime="20210121 14:18:21.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:24.471" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:24.471" starttime="20210121 14:18:24.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:24.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:24.471" starttime="20210121 14:18:24.471"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:24.472" starttime="20210121 14:18:21.210"></status>
</kw>
<msg timestamp="20210121 14:18:24.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:24.472" starttime="20210121 14:18:21.209"></status>
</kw>
<msg timestamp="20210121 14:18:24.472" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210121 14:18:24.472" starttime="20210121 14:18:21.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:24.473" starttime="20210121 14:18:24.472"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:24.473" starttime="20210121 14:18:21.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:24.477" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 44492-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:27.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:27.669" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:18:27.670" starttime="20210121 14:18:24.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:27.671" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:18:27.671" starttime="20210121 14:18:27.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:27.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:27.672" starttime="20210121 14:18:27.671"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:27.672" starttime="20210121 14:18:24.474"></status>
</kw>
<msg timestamp="20210121 14:18:27.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:27.673" starttime="20210121 14:18:24.474"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:27.673" starttime="20210121 14:18:24.473"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:27.678" level="INFO">Running command 'ozone sh bucket getacl 44492-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:30.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:30.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:30.904" starttime="20210121 14:18:27.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:30.905" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:30.905" starttime="20210121 14:18:30.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:30.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:30.906" starttime="20210121 14:18:30.906"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:30.906" starttime="20210121 14:18:27.675"></status>
</kw>
<msg timestamp="20210121 14:18:30.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:30.907" starttime="20210121 14:18:27.675"></status>
</kw>
<msg timestamp="20210121 14:18:30.907" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210121 14:18:30.907" starttime="20210121 14:18:27.674"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:30.908" starttime="20210121 14:18:30.907"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:30.908" starttime="20210121 14:18:27.673"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:30.912" level="INFO">Running command 'ozone sh bucket getacl 44492-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:34.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:34.073" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210121 14:18:34.073" starttime="20210121 14:18:30.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:34.074" level="INFO">READ</msg>
<status status="PASS" endtime="20210121 14:18:34.075" starttime="20210121 14:18:34.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:34.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:34.075" starttime="20210121 14:18:34.075"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:34.076" starttime="20210121 14:18:30.910"></status>
</kw>
<msg timestamp="20210121 14:18:34.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:34.076" starttime="20210121 14:18:30.910"></status>
</kw>
<msg timestamp="20210121 14:18:34.076" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210121 14:18:34.076" starttime="20210121 14:18:30.909"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:34.077" starttime="20210121 14:18:34.076"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:34.077" starttime="20210121 14:18:30.908"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:34.077" critical="yes" starttime="20210121 14:18:14.812"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:34.079" starttime="20210121 14:18:34.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:34.083" level="INFO">Running command 'ozone sh bucket link 44492-source/bucket2 44492-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:37.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:37.212" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:37.212" starttime="20210121 14:18:34.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:37.214" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:37.214" starttime="20210121 14:18:37.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:37.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:37.215" starttime="20210121 14:18:37.214"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:37.215" starttime="20210121 14:18:34.081"></status>
</kw>
<msg timestamp="20210121 14:18:37.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:37.216" starttime="20210121 14:18:34.080"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:37.216" starttime="20210121 14:18:34.080"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:37.218" level="INFO">Running command 'ozone sh bucket create 44492-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:40.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:18:40.321" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:40.322" starttime="20210121 14:18:37.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:40.323" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:40.323" starttime="20210121 14:18:40.322"></status>
</kw>
<msg timestamp="20210121 14:18:40.323" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:40.323" starttime="20210121 14:18:37.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:40.324" starttime="20210121 14:18:40.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:40.329" level="INFO">Running command 'ozone sh bucket create 44492-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:43.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:43.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:43.370" starttime="20210121 14:18:40.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:43.371" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:43.371" starttime="20210121 14:18:43.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:43.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:43.372" starttime="20210121 14:18:43.371"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:43.372" starttime="20210121 14:18:40.325"></status>
</kw>
<msg timestamp="20210121 14:18:43.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:43.372" starttime="20210121 14:18:40.325"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:43.373" starttime="20210121 14:18:40.324"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:43.376" level="INFO">Running command 'ozone sh bucket link 44492-source/bucket1 44492-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:46.421" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:18:46.421" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:46.421" starttime="20210121 14:18:43.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:46.422" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:46.422" starttime="20210121 14:18:46.422"></status>
</kw>
<msg timestamp="20210121 14:18:46.423" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210121 14:18:46.423" starttime="20210121 14:18:43.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.423" starttime="20210121 14:18:46.423"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:46.424" critical="yes" starttime="20210121 14:18:34.078"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.426" starttime="20210121 14:18:46.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.426" starttime="20210121 14:18:46.426"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:46.427" critical="yes" starttime="20210121 14:18:46.424"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.428" starttime="20210121 14:18:46.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.429" starttime="20210121 14:18:46.429"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:46.429" critical="yes" starttime="20210121 14:18:46.427"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.431" starttime="20210121 14:18:46.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.432" starttime="20210121 14:18:46.431"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:46.432" critical="yes" starttime="20210121 14:18:46.430"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:46.433" starttime="20210121 14:18:46.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:46.437" level="INFO">Running command 'ozone sh bucket link 44492-target/loop1 44492-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:49.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:49.520" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:49.520" starttime="20210121 14:18:46.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:49.522" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:49.522" starttime="20210121 14:18:49.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:49.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:49.523" starttime="20210121 14:18:49.522"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:49.523" starttime="20210121 14:18:46.435"></status>
</kw>
<msg timestamp="20210121 14:18:49.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:49.524" starttime="20210121 14:18:46.434"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:49.524" starttime="20210121 14:18:46.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:49.528" level="INFO">Running command 'ozone sh bucket link 44492-target/loop2 44492-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:52.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:52.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:52.772" starttime="20210121 14:18:49.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:52.773" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:52.774" starttime="20210121 14:18:52.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:52.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:52.774" starttime="20210121 14:18:52.774"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:52.775" starttime="20210121 14:18:49.525"></status>
</kw>
<msg timestamp="20210121 14:18:52.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:52.775" starttime="20210121 14:18:49.525"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:52.775" starttime="20210121 14:18:49.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:52.779" level="INFO">Running command 'ozone sh bucket link 44492-target/loop3 44492-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:55.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:18:55.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:18:55.978" starttime="20210121 14:18:52.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:55.980" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:18:55.980" starttime="20210121 14:18:55.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:18:55.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:18:55.980" starttime="20210121 14:18:55.980"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:55.981" starttime="20210121 14:18:52.776"></status>
</kw>
<msg timestamp="20210121 14:18:55.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:18:55.981" starttime="20210121 14:18:52.776"></status>
</kw>
<status status="PASS" endtime="20210121 14:18:55.981" starttime="20210121 14:18:52.775"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:55.984" level="INFO">Running command 'ozone sh key list 44492-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:18:58.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:18:58.870" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210121 14:18:58.870" starttime="20210121 14:18:55.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:18:58.871" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210121 14:18:58.871" starttime="20210121 14:18:58.870"></status>
</kw>
<msg timestamp="20210121 14:18:58.871" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210121 14:18:58.871" starttime="20210121 14:18:55.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:58.872" starttime="20210121 14:18:58.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:18:58.872" critical="yes" starttime="20210121 14:18:46.432"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:18:58.874" starttime="20210121 14:18:58.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:18:58.878" level="INFO">Running command 'ozone sh bucket link 44492-source/bucket1 44492-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:01.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:01.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:01.938" starttime="20210121 14:18:58.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:01.939" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:01.939" starttime="20210121 14:19:01.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:01.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:01.941" starttime="20210121 14:19:01.939"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:01.941" starttime="20210121 14:18:58.876"></status>
</kw>
<msg timestamp="20210121 14:19:01.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:01.941" starttime="20210121 14:18:58.875"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:01.941" starttime="20210121 14:18:58.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:01.945" level="INFO">Running command 'ozone sh key put 44492-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:07.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:07.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:07.873" starttime="20210121 14:19:01.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:07.874" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:07.874" starttime="20210121 14:19:07.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:07.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:07.875" starttime="20210121 14:19:07.875"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:07.876" starttime="20210121 14:19:01.942"></status>
</kw>
<msg timestamp="20210121 14:19:07.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:07.876" starttime="20210121 14:19:01.942"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:07.876" starttime="20210121 14:19:01.941"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:19:07.878" level="INFO">${postfix} = 75754</msg>
<status status="PASS" endtime="20210121 14:19:07.878" starttime="20210121 14:19:07.877"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:19:07.879" level="INFO">${tmpfile} = /tmp/tempkey-75754</msg>
<status status="PASS" endtime="20210121 14:19:07.879" starttime="20210121 14:19:07.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:07.883" level="INFO">Running command 'ozone sh key get -f 44492-target/link1/key3 /tmp/tempkey-75754 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:12.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:12.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:12.618" starttime="20210121 14:19:07.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:12.619" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:12.620" starttime="20210121 14:19:12.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:12.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:12.620" starttime="20210121 14:19:12.620"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:12.621" starttime="20210121 14:19:07.880"></status>
</kw>
<msg timestamp="20210121 14:19:12.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:12.621" starttime="20210121 14:19:07.880"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:12.621" starttime="20210121 14:19:07.879"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:19:12.623" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-75754 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:12.626" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210121 14:19:12.626" starttime="20210121 14:19:12.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:12.630" level="INFO">Running command 'rm -f /tmp/tempkey-75754 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:12.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:12.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:12.632" starttime="20210121 14:19:12.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:12.633" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:12.633" starttime="20210121 14:19:12.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:12.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:12.634" starttime="20210121 14:19:12.633"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:12.634" starttime="20210121 14:19:12.627"></status>
</kw>
<msg timestamp="20210121 14:19:12.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:12.635" starttime="20210121 14:19:12.627"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:12.635" starttime="20210121 14:19:12.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:19:12.635" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210121 14:19:12.635" starttime="20210121 14:19:12.635"></status>
</kw>
<msg timestamp="20210121 14:19:12.636" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210121 14:19:12.636" starttime="20210121 14:19:07.877"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:12.636" starttime="20210121 14:19:12.636"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:12.636" starttime="20210121 14:19:07.876"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:19:12.637" critical="yes" starttime="20210121 14:18:58.873"></status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:12.639" starttime="20210121 14:19:12.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:12.643" level="INFO">Running command 'ozone sh bucket delete 44492-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:15.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:15.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:15.592" starttime="20210121 14:19:12.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:15.593" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:15.593" starttime="20210121 14:19:15.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:15.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:15.594" starttime="20210121 14:19:15.593"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:15.594" starttime="20210121 14:19:12.640"></status>
</kw>
<msg timestamp="20210121 14:19:15.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:15.595" starttime="20210121 14:19:12.640"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:15.595" starttime="20210121 14:19:12.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:15.599" level="INFO">Running command 'ozone sh bucket list 44492-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:18.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:18.767" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T...</msg>
<status status="PASS" endtime="20210121 14:19:18.767" starttime="20210121 14:19:15.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:18.769" level="INFO">{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:18:43.148Z",
  "modificationTime" : "2021-01-21T14:18:43.148Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:17:24.748Z",
  "modificationTime" : "2021-01-21T14:17:24.748Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:18:37.051Z",
  "modificationTime" : "2021-01-21T14:18:37.051Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:19:01.784Z",
  "modificationTime" : "2021-01-21T14:19:01.784Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:18:55.879Z",
  "modificationTime" : "2021-01-21T14:18:55.879Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:18:49.295Z",
  "modificationTime" : "2021-01-21T14:18:49.295Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:18:52.595Z",
  "modificationTime" : "2021-01-21T14:18:52.595Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "44492-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:19:18.769" starttime="20210121 14:19:18.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:18.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:18.770" starttime="20210121 14:19:18.769"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:18.770" starttime="20210121 14:19:15.596"></status>
</kw>
<msg timestamp="20210121 14:19:18.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:18.770" starttime="20210121 14:19:15.596"></status>
</kw>
<msg timestamp="20210121 14:19:18.770" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "44492-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T...</msg>
<status status="PASS" endtime="20210121 14:19:18.770" starttime="20210121 14:19:15.595"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:18.771" starttime="20210121 14:19:18.771"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:18.775" level="INFO">Running command 'ozone sh key list 44492-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:22.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:22.101" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210121 14:19:22.102" starttime="20210121 14:19:18.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:22.103" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210121 14:19:22.103" starttime="20210121 14:19:22.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:22.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:22.105" starttime="20210121 14:19:22.104"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:22.105" starttime="20210121 14:19:18.772"></status>
</kw>
<msg timestamp="20210121 14:19:22.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:22.106" starttime="20210121 14:19:18.772"></status>
</kw>
<msg timestamp="20210121 14:19:22.106" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210121 14:19:22.106" starttime="20210121 14:19:18.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:22.107" starttime="20210121 14:19:22.106"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210121 14:19:22.107" critical="yes" starttime="20210121 14:19:12.638"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210121 14:19:22.110" starttime="20210121 14:17:15.732"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:19:22.137" level="INFO">${random} = 31423</msg>
<status status="PASS" endtime="20210121 14:19:22.137" starttime="20210121 14:19:22.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:19:22.138" level="INFO">${prefix} = 31423</msg>
<status status="PASS" endtime="20210121 14:19:22.138" starttime="20210121 14:19:22.137"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:22.138" starttime="20210121 14:19:22.137"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:22.143" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:25.028" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:19:25.028" level="INFO">${output} = VOLUME_NOT_FOUND Volume 31423-rpcbasic is not found</msg>
<status status="PASS" endtime="20210121 14:19:25.028" starttime="20210121 14:19:22.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:25.030" level="INFO">VOLUME_NOT_FOUND Volume 31423-rpcbasic is not found</msg>
<status status="PASS" endtime="20210121 14:19:25.030" starttime="20210121 14:19:25.029"></status>
</kw>
<msg timestamp="20210121 14:19:25.030" level="INFO">${result} = VOLUME_NOT_FOUND Volume 31423-rpcbasic is not found</msg>
<status status="PASS" endtime="20210121 14:19:25.030" starttime="20210121 14:19:22.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:25.031" starttime="20210121 14:19:25.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:25.035" level="INFO">Running command 'ozone sh volume create /31423-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:28.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:28.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:28.000" starttime="20210121 14:19:25.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:28.002" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:28.002" starttime="20210121 14:19:28.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:28.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:28.002" starttime="20210121 14:19:28.002"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:28.003" starttime="20210121 14:19:25.032"></status>
</kw>
<msg timestamp="20210121 14:19:28.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:28.003" starttime="20210121 14:19:25.032"></status>
</kw>
<msg timestamp="20210121 14:19:28.003" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:19:28.003" starttime="20210121 14:19:25.031"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:28.004" starttime="20210121 14:19:28.003"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:28.008" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="31423-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:31.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:31.286" level="INFO">${output} = {
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:19:31.287" starttime="20210121 14:19:28.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:31.288" level="INFO">{
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:19:27.839Z",
  "modificationTime": "2021-01-21T14:19:27.839Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:19:31.288" starttime="20210121 14:19:31.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:31.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:31.289" starttime="20210121 14:19:31.288"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:31.289" starttime="20210121 14:19:28.005"></status>
</kw>
<msg timestamp="20210121 14:19:31.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:31.289" starttime="20210121 14:19:28.005"></status>
</kw>
<msg timestamp="20210121 14:19:31.290" level="INFO">${result} = {
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:19:31.290" starttime="20210121 14:19:28.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:31.290" starttime="20210121 14:19:31.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:31.296" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31423-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:34.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:34.579" level="INFO">${output} = {
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:19:34.579" starttime="20210121 14:19:31.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:34.580" level="INFO">{
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:19:27.839Z",
  "modificationTime": "2021-01-21T14:19:27.839Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:19:34.581" starttime="20210121 14:19:34.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:34.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:34.581" starttime="20210121 14:19:34.581"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:34.582" starttime="20210121 14:19:31.293"></status>
</kw>
<msg timestamp="20210121 14:19:34.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:34.582" starttime="20210121 14:19:31.293"></status>
</kw>
<msg timestamp="20210121 14:19:34.582" level="INFO">${result} = {
  "metadata": {},
  "name": "31423-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:19:34.582" starttime="20210121 14:19:31.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:34.583" starttime="20210121 14:19:34.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:34.586" level="INFO">Running command 'ozone sh volume setquota /31423-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:37.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:37.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:37.557" starttime="20210121 14:19:34.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:37.558" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:37.558" starttime="20210121 14:19:37.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:37.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:37.559" starttime="20210121 14:19:37.558"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:37.559" starttime="20210121 14:19:34.584"></status>
</kw>
<msg timestamp="20210121 14:19:37.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:37.559" starttime="20210121 14:19:34.584"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:37.560" starttime="20210121 14:19:34.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:37.564" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic | jq -r '. | select(.name=="31423-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:40.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:40.956" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:40.956" starttime="20210121 14:19:37.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:40.958" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:40.958" starttime="20210121 14:19:40.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:40.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:40.958" starttime="20210121 14:19:40.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:40.959" starttime="20210121 14:19:37.561"></status>
</kw>
<msg timestamp="20210121 14:19:40.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:40.959" starttime="20210121 14:19:37.561"></status>
</kw>
<msg timestamp="20210121 14:19:40.959" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:40.959" starttime="20210121 14:19:37.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:40.960" starttime="20210121 14:19:40.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:40.964" level="INFO">Running command 'ozone sh bucket create /31423-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:44.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:44.159" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:44.159" starttime="20210121 14:19:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:44.160" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:44.160" starttime="20210121 14:19:44.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:44.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:44.161" starttime="20210121 14:19:44.160"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:44.161" starttime="20210121 14:19:40.961"></status>
</kw>
<msg timestamp="20210121 14:19:44.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:44.162" starttime="20210121 14:19:40.961"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:44.162" starttime="20210121 14:19:40.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:44.166" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:47.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:47.522" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210121 14:19:47.522" starttime="20210121 14:19:44.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:47.523" level="INFO">DISK</msg>
<status status="PASS" endtime="20210121 14:19:47.523" starttime="20210121 14:19:47.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:47.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:47.524" starttime="20210121 14:19:47.523"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:47.524" starttime="20210121 14:19:44.163"></status>
</kw>
<msg timestamp="20210121 14:19:47.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:47.524" starttime="20210121 14:19:44.163"></status>
</kw>
<msg timestamp="20210121 14:19:47.525" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210121 14:19:47.525" starttime="20210121 14:19:44.162"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:47.525" starttime="20210121 14:19:47.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:47.530" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:50.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:50.764" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:50.764" starttime="20210121 14:19:47.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:50.766" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:50.766" starttime="20210121 14:19:50.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:50.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:50.767" starttime="20210121 14:19:50.766"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:50.767" starttime="20210121 14:19:47.527"></status>
</kw>
<msg timestamp="20210121 14:19:50.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:50.767" starttime="20210121 14:19:47.527"></status>
</kw>
<msg timestamp="20210121 14:19:50.767" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:19:50.767" starttime="20210121 14:19:47.526"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:50.768" starttime="20210121 14:19:50.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:50.772" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:54.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:54.069" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210121 14:19:54.069" starttime="20210121 14:19:50.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:54.071" level="INFO">100</msg>
<status status="PASS" endtime="20210121 14:19:54.071" starttime="20210121 14:19:54.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:54.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:54.072" starttime="20210121 14:19:54.071"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:54.072" starttime="20210121 14:19:50.770"></status>
</kw>
<msg timestamp="20210121 14:19:54.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:54.072" starttime="20210121 14:19:50.769"></status>
</kw>
<msg timestamp="20210121 14:19:54.073" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210121 14:19:54.073" starttime="20210121 14:19:50.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210121 14:19:54.073" starttime="20210121 14:19:54.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:54.077" level="INFO">Running command 'ozone sh bucket setquota /31423-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:19:56.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:19:56.800" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:19:56.800" starttime="20210121 14:19:54.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:19:56.801" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:19:56.801" starttime="20210121 14:19:56.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:19:56.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:19:56.802" starttime="20210121 14:19:56.801"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:56.802" starttime="20210121 14:19:54.074"></status>
</kw>
<msg timestamp="20210121 14:19:56.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:19:56.802" starttime="20210121 14:19:54.074"></status>
</kw>
<status status="PASS" endtime="20210121 14:19:56.803" starttime="20210121 14:19:54.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:19:56.807" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:00.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:00.180" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:20:00.181" starttime="20210121 14:19:56.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:00.182" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210121 14:20:00.182" starttime="20210121 14:20:00.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:00.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:00.183" starttime="20210121 14:20:00.182"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:00.183" starttime="20210121 14:19:56.804"></status>
</kw>
<msg timestamp="20210121 14:20:00.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:00.184" starttime="20210121 14:19:56.804"></status>
</kw>
<msg timestamp="20210121 14:20:00.184" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:20:00.184" starttime="20210121 14:19:56.803"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:00.185" starttime="20210121 14:20:00.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:00.189" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:03.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:03.695" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210121 14:20:03.695" starttime="20210121 14:20:00.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:03.696" level="INFO">1000</msg>
<status status="PASS" endtime="20210121 14:20:03.696" starttime="20210121 14:20:03.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:03.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:03.697" starttime="20210121 14:20:03.696"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:03.697" starttime="20210121 14:20:00.186"></status>
</kw>
<msg timestamp="20210121 14:20:03.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:03.698" starttime="20210121 14:20:00.186"></status>
</kw>
<msg timestamp="20210121 14:20:03.698" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210121 14:20:03.698" starttime="20210121 14:20:00.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:03.699" starttime="20210121 14:20:03.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:03.703" level="INFO">Running command 'ozone sh bucket list /31423-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:06.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:06.941" level="INFO">${output} = 31423-rpcbasic</msg>
<status status="PASS" endtime="20210121 14:20:06.941" starttime="20210121 14:20:03.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:06.942" level="INFO">31423-rpcbasic</msg>
<status status="PASS" endtime="20210121 14:20:06.942" starttime="20210121 14:20:06.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:06.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:06.943" starttime="20210121 14:20:06.942"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:06.943" starttime="20210121 14:20:03.700"></status>
</kw>
<msg timestamp="20210121 14:20:06.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:06.943" starttime="20210121 14:20:03.700"></status>
</kw>
<msg timestamp="20210121 14:20:06.944" level="INFO">${result} = 31423-rpcbasic</msg>
<status status="PASS" endtime="20210121 14:20:06.944" starttime="20210121 14:20:03.699"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:06.944" starttime="20210121 14:20:06.944"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:06.953" level="INFO">Running command 'ozone sh key put /31423-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:12.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:12.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:12.500" starttime="20210121 14:20:06.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:12.501" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:12.501" starttime="20210121 14:20:12.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:12.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:12.502" starttime="20210121 14:20:12.501"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:12.502" starttime="20210121 14:20:06.947"></status>
</kw>
<msg timestamp="20210121 14:20:12.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:12.503" starttime="20210121 14:20:06.947"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:12.503" starttime="20210121 14:20:06.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:12.507" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:12.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:12.509" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:12.509" starttime="20210121 14:20:12.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:12.510" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:12.511" starttime="20210121 14:20:12.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:12.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:12.512" starttime="20210121 14:20:12.511"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:12.512" starttime="20210121 14:20:12.504"></status>
</kw>
<msg timestamp="20210121 14:20:12.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:12.512" starttime="20210121 14:20:12.504"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:12.514" starttime="20210121 14:20:12.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:12.518" level="INFO">Running command 'ozone sh key get /31423-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:17.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:17.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:17.409" starttime="20210121 14:20:12.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:17.410" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:17.410" starttime="20210121 14:20:17.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:17.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:17.411" starttime="20210121 14:20:17.410"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:17.411" starttime="20210121 14:20:12.516"></status>
</kw>
<msg timestamp="20210121 14:20:17.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:17.411" starttime="20210121 14:20:12.515"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:17.411" starttime="20210121 14:20:12.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:17.415" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:17.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:17.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:17.418" starttime="20210121 14:20:17.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:17.419" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:17.419" starttime="20210121 14:20:17.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:17.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:17.420" starttime="20210121 14:20:17.419"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:17.420" starttime="20210121 14:20:17.412"></status>
</kw>
<msg timestamp="20210121 14:20:17.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:17.420" starttime="20210121 14:20:17.412"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:17.421" starttime="20210121 14:20:17.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:17.424" level="INFO">Running command 'ozone sh key put -t RATIS /31423-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:22.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:22.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:22.897" starttime="20210121 14:20:17.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:22.898" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:22.898" starttime="20210121 14:20:22.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:22.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:22.899" starttime="20210121 14:20:22.899"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:22.900" starttime="20210121 14:20:17.422"></status>
</kw>
<msg timestamp="20210121 14:20:22.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:22.900" starttime="20210121 14:20:17.422"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:22.900" starttime="20210121 14:20:17.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:22.904" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:22.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:22.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:22.907" starttime="20210121 14:20:22.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:22.908" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:22.908" starttime="20210121 14:20:22.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:22.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:22.909" starttime="20210121 14:20:22.908"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:22.909" starttime="20210121 14:20:22.902"></status>
</kw>
<msg timestamp="20210121 14:20:22.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:22.909" starttime="20210121 14:20:22.901"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:22.909" starttime="20210121 14:20:22.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:22.913" level="INFO">Running command 'ozone sh key get /31423-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:27.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:27.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:27.776" starttime="20210121 14:20:22.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:27.778" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:27.778" starttime="20210121 14:20:27.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:27.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:27.779" starttime="20210121 14:20:27.779"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:27.780" starttime="20210121 14:20:22.911"></status>
</kw>
<msg timestamp="20210121 14:20:27.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:27.780" starttime="20210121 14:20:22.910"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:27.780" starttime="20210121 14:20:22.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:27.784" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:27.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:27.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:27.786" starttime="20210121 14:20:27.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:27.788" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:27.788" starttime="20210121 14:20:27.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:27.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:27.788" starttime="20210121 14:20:27.788"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:27.789" starttime="20210121 14:20:27.781"></status>
</kw>
<msg timestamp="20210121 14:20:27.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:27.789" starttime="20210121 14:20:27.781"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:27.789" starttime="20210121 14:20:27.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:27.794" level="INFO">Running command 'ozone sh key info /31423-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:31.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:31.373" level="INFO">${output} = {
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:20.380Z",
  "modificationTime": "2021-01-21T14:20:22.416Z",
...</msg>
<status status="PASS" endtime="20210121 14:20:31.373" starttime="20210121 14:20:27.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:31.374" level="INFO">{
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:20.380Z",
  "modificationTime": "2021-01-21T14:20:22.416Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594147332423800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:20:31.374" starttime="20210121 14:20:31.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:31.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:31.375" starttime="20210121 14:20:31.374"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:31.375" starttime="20210121 14:20:27.791"></status>
</kw>
<msg timestamp="20210121 14:20:31.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:31.376" starttime="20210121 14:20:27.790"></status>
</kw>
<msg timestamp="20210121 14:20:31.376" level="INFO">${result} = {
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:20.380Z",
  "modificationTime": "2021-01-21T14:20:22.416Z",
...</msg>
<status status="PASS" endtime="20210121 14:20:31.376" starttime="20210121 14:20:27.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:31.377" starttime="20210121 14:20:31.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:31.380" level="INFO">Running command 'ozone sh key delete /31423-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:34.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:34.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:34.343" starttime="20210121 14:20:31.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:34.344" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:34.344" starttime="20210121 14:20:34.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:34.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:34.345" starttime="20210121 14:20:34.345"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:34.346" starttime="20210121 14:20:31.378"></status>
</kw>
<msg timestamp="20210121 14:20:34.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:34.346" starttime="20210121 14:20:31.377"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:34.346" starttime="20210121 14:20:31.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:34.350" level="INFO">Running command 'ozone sh key cp /31423-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:39.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:39.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:39.798" starttime="20210121 14:20:34.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:39.799" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:39.799" starttime="20210121 14:20:39.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:39.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:39.800" starttime="20210121 14:20:39.799"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:39.800" starttime="20210121 14:20:34.347"></status>
</kw>
<msg timestamp="20210121 14:20:39.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:39.801" starttime="20210121 14:20:34.347"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:39.801" starttime="20210121 14:20:34.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:39.805" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:39.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:39.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:39.807" starttime="20210121 14:20:39.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:39.808" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:39.808" starttime="20210121 14:20:39.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:39.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:39.809" starttime="20210121 14:20:39.808"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:39.809" starttime="20210121 14:20:39.802"></status>
</kw>
<msg timestamp="20210121 14:20:39.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:39.810" starttime="20210121 14:20:39.802"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:39.810" starttime="20210121 14:20:39.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:39.813" level="INFO">Running command 'ozone sh key get /31423-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:44.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:44.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:44.551" starttime="20210121 14:20:39.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:44.552" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:44.552" starttime="20210121 14:20:44.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:44.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:44.553" starttime="20210121 14:20:44.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:44.553" starttime="20210121 14:20:39.811"></status>
</kw>
<msg timestamp="20210121 14:20:44.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:44.554" starttime="20210121 14:20:39.811"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:44.554" starttime="20210121 14:20:39.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:44.558" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:44.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:44.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:44.561" starttime="20210121 14:20:44.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:44.562" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:44.562" starttime="20210121 14:20:44.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:44.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:44.563" starttime="20210121 14:20:44.562"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:44.563" starttime="20210121 14:20:44.555"></status>
</kw>
<msg timestamp="20210121 14:20:44.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:44.563" starttime="20210121 14:20:44.555"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:44.563" starttime="20210121 14:20:44.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:44.567" level="INFO">Running command 'ozone sh key delete /31423-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:47.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:47.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:47.342" starttime="20210121 14:20:44.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:47.344" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:47.344" starttime="20210121 14:20:47.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:47.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:47.345" starttime="20210121 14:20:47.344"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:47.345" starttime="20210121 14:20:44.565"></status>
</kw>
<msg timestamp="20210121 14:20:47.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:47.345" starttime="20210121 14:20:44.564"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:47.345" starttime="20210121 14:20:44.564"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:47.348" level="INFO">Running command 'ozone sh key get /31423-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:50.019" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:20:50.019" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:20:50.019" starttime="20210121 14:20:47.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:50.020" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:20:50.020" starttime="20210121 14:20:50.019"></status>
</kw>
<msg timestamp="20210121 14:20:50.021" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:20:50.021" starttime="20210121 14:20:47.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:50.021" starttime="20210121 14:20:50.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:50.026" level="INFO">Running command 'ozone sh key get --force /31423-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:55.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:55.141" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:20:55.141" starttime="20210121 14:20:50.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:55.142" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:20:55.143" starttime="20210121 14:20:55.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:55.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:55.143" starttime="20210121 14:20:55.143"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:55.144" starttime="20210121 14:20:50.023"></status>
</kw>
<msg timestamp="20210121 14:20:55.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:55.144" starttime="20210121 14:20:50.022"></status>
</kw>
<msg timestamp="20210121 14:20:55.144" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:20:55.144" starttime="20210121 14:20:50.021"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:55.145" starttime="20210121 14:20:55.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:55.149" level="INFO">Running command 'ozone sh key info /31423-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:20:58.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:20:58.460" level="INFO">${output} = {
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:09.972Z",
  "modificationTime": "2021-01-21T14:20:11.977Z",
  "rep...</msg>
<status status="PASS" endtime="20210121 14:20:58.460" starttime="20210121 14:20:55.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:20:58.461" level="INFO">{
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:09.972Z",
  "modificationTime": "2021-01-21T14:20:11.977Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594146650194050,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:20:58.462" starttime="20210121 14:20:58.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:20:58.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:20:58.462" starttime="20210121 14:20:58.462"></status>
</kw>
<status status="PASS" endtime="20210121 14:20:58.463" starttime="20210121 14:20:55.146"></status>
</kw>
<msg timestamp="20210121 14:20:58.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:20:58.463" starttime="20210121 14:20:55.146"></status>
</kw>
<msg timestamp="20210121 14:20:58.463" level="INFO">${result} = {
  "volumeName": "31423-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:20:09.972Z",
  "modificationTime": "2021-01-21T14:20:11.977Z",
  "rep...</msg>
<status status="PASS" endtime="20210121 14:20:58.463" starttime="20210121 14:20:55.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:20:58.465" starttime="20210121 14:20:58.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:20:58.469" level="INFO">Running command 'ozone sh key list /31423-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:01.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:01.646" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210121 14:21:01.646" starttime="20210121 14:20:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:01.647" level="INFO">key1</msg>
<status status="PASS" endtime="20210121 14:21:01.647" starttime="20210121 14:21:01.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:01.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:01.648" starttime="20210121 14:21:01.648"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:01.649" starttime="20210121 14:20:58.466"></status>
</kw>
<msg timestamp="20210121 14:21:01.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:01.649" starttime="20210121 14:20:58.466"></status>
</kw>
<msg timestamp="20210121 14:21:01.649" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210121 14:21:01.649" starttime="20210121 14:20:58.465"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:01.650" starttime="20210121 14:21:01.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:01.654" level="INFO">Running command 'ozone sh key rename /31423-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:04.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:04.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:04.611" starttime="20210121 14:21:01.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:04.612" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:04.612" starttime="20210121 14:21:04.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:04.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:04.613" starttime="20210121 14:21:04.613"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:04.614" starttime="20210121 14:21:01.652"></status>
</kw>
<msg timestamp="20210121 14:21:04.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:04.614" starttime="20210121 14:21:01.651"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:04.614" starttime="20210121 14:21:01.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:04.618" level="INFO">Running command 'ozone sh key list /31423-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:07.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:07.828" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210121 14:21:07.828" starttime="20210121 14:21:04.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:07.829" level="INFO">key2</msg>
<status status="PASS" endtime="20210121 14:21:07.829" starttime="20210121 14:21:07.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:07.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:07.830" starttime="20210121 14:21:07.829"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:07.830" starttime="20210121 14:21:04.616"></status>
</kw>
<msg timestamp="20210121 14:21:07.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:07.831" starttime="20210121 14:21:04.615"></status>
</kw>
<msg timestamp="20210121 14:21:07.831" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210121 14:21:07.831" starttime="20210121 14:21:04.614"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:07.831" starttime="20210121 14:21:07.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:07.835" level="INFO">Running command 'ozone sh key delete /31423-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:10.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:10.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:10.847" starttime="20210121 14:21:07.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:10.848" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:10.848" starttime="20210121 14:21:10.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:10.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:10.849" starttime="20210121 14:21:10.848"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:10.849" starttime="20210121 14:21:07.833"></status>
</kw>
<msg timestamp="20210121 14:21:10.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:10.849" starttime="20210121 14:21:07.832"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:10.849" starttime="20210121 14:21:07.832"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:10.850" starttime="20210121 14:20:06.945"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:10.850" starttime="20210121 14:20:06.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:10.853" level="INFO">Running command 'ozone sh volume clrquota --space-quota /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:13.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:13.673" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:13.673" starttime="20210121 14:21:10.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:13.674" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:13.675" starttime="20210121 14:21:13.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:13.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:13.675" starttime="20210121 14:21:13.675"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:13.676" starttime="20210121 14:21:10.851"></status>
</kw>
<msg timestamp="20210121 14:21:13.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:13.676" starttime="20210121 14:21:10.851"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:13.676" starttime="20210121 14:21:10.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:13.681" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic | jq -r '. | select(.name=="31423-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:16.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:16.728" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:16.728" starttime="20210121 14:21:13.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:16.732" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:16.732" starttime="20210121 14:21:16.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:16.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:16.733" starttime="20210121 14:21:16.733"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:16.734" starttime="20210121 14:21:13.677"></status>
</kw>
<msg timestamp="20210121 14:21:16.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:16.734" starttime="20210121 14:21:13.677"></status>
</kw>
<msg timestamp="20210121 14:21:16.734" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:16.734" starttime="20210121 14:21:13.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:16.735" starttime="20210121 14:21:16.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:16.739" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:19.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:19.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:19.860" starttime="20210121 14:21:16.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:19.861" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:19.861" starttime="20210121 14:21:19.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:19.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:19.862" starttime="20210121 14:21:19.861"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:19.862" starttime="20210121 14:21:16.737"></status>
</kw>
<msg timestamp="20210121 14:21:19.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:19.863" starttime="20210121 14:21:16.736"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:19.863" starttime="20210121 14:21:16.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:19.867" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic | jq -r '. | select(.name=="31423-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:22.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:22.918" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:22.919" starttime="20210121 14:21:19.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:22.920" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:22.920" starttime="20210121 14:21:22.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:22.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:22.921" starttime="20210121 14:21:22.920"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:22.921" starttime="20210121 14:21:19.864"></status>
</kw>
<msg timestamp="20210121 14:21:22.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:22.921" starttime="20210121 14:21:19.864"></status>
</kw>
<msg timestamp="20210121 14:21:22.921" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:22.922" starttime="20210121 14:21:19.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:22.922" starttime="20210121 14:21:22.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:22.926" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /31423-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:26.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:26.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:26.003" starttime="20210121 14:21:22.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:26.005" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:26.005" starttime="20210121 14:21:26.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:26.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:26.005" starttime="20210121 14:21:26.005"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:26.006" starttime="20210121 14:21:22.923"></status>
</kw>
<msg timestamp="20210121 14:21:26.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:26.006" starttime="20210121 14:21:22.923"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:26.006" starttime="20210121 14:21:22.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:26.010" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:29.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:29.201" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:29.201" starttime="20210121 14:21:26.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:29.202" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:29.202" starttime="20210121 14:21:29.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:29.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:29.203" starttime="20210121 14:21:29.202"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:29.203" starttime="20210121 14:21:26.008"></status>
</kw>
<msg timestamp="20210121 14:21:29.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:29.204" starttime="20210121 14:21:26.007"></status>
</kw>
<msg timestamp="20210121 14:21:29.204" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:29.204" starttime="20210121 14:21:26.006"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:29.205" starttime="20210121 14:21:29.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:29.209" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /31423-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:32.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:32.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:32.230" starttime="20210121 14:21:29.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:32.231" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:32.231" starttime="20210121 14:21:32.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:32.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:32.232" starttime="20210121 14:21:32.231"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:32.232" starttime="20210121 14:21:29.206"></status>
</kw>
<msg timestamp="20210121 14:21:32.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:32.232" starttime="20210121 14:21:29.205"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:32.233" starttime="20210121 14:21:29.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:32.236" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:35.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:35.751" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:35.751" starttime="20210121 14:21:32.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:35.752" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:35.752" starttime="20210121 14:21:35.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:35.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:35.753" starttime="20210121 14:21:35.752"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:35.753" starttime="20210121 14:21:32.234"></status>
</kw>
<msg timestamp="20210121 14:21:35.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:35.754" starttime="20210121 14:21:32.234"></status>
</kw>
<msg timestamp="20210121 14:21:35.754" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:35.754" starttime="20210121 14:21:32.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:35.755" starttime="20210121 14:21:35.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:35.758" level="INFO">Running command 'ozone sh bucket delete /31423-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:38.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:38.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:38.729" starttime="20210121 14:21:35.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:38.731" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:38.731" starttime="20210121 14:21:38.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:38.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:38.732" starttime="20210121 14:21:38.731"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:38.732" starttime="20210121 14:21:35.756"></status>
</kw>
<msg timestamp="20210121 14:21:38.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:38.732" starttime="20210121 14:21:35.755"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:38.732" starttime="20210121 14:21:35.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:38.736" level="INFO">Running command 'ozone sh volume delete /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:41.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:41.721" level="INFO">${output} = Volume 31423-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210121 14:21:41.721" starttime="20210121 14:21:38.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:41.722" level="INFO">Volume 31423-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210121 14:21:41.722" starttime="20210121 14:21:41.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:41.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:41.723" starttime="20210121 14:21:41.722"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:41.723" starttime="20210121 14:21:38.734"></status>
</kw>
<msg timestamp="20210121 14:21:41.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:41.724" starttime="20210121 14:21:38.733"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:41.724" starttime="20210121 14:21:38.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:41.728" level="INFO">Running command 'ozone sh volume create /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:44.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:44.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:44.768" starttime="20210121 14:21:41.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:44.769" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:44.769" starttime="20210121 14:21:44.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:44.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:44.770" starttime="20210121 14:21:44.770"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:44.771" starttime="20210121 14:21:41.726"></status>
</kw>
<msg timestamp="20210121 14:21:44.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:44.771" starttime="20210121 14:21:41.725"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:44.771" starttime="20210121 14:21:41.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:44.775" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic | jq -r '. | select(.name=="31423-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:48.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:48.070" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:48.071" starttime="20210121 14:21:44.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:48.072" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:48.072" starttime="20210121 14:21:48.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:48.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:48.073" starttime="20210121 14:21:48.072"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:48.073" starttime="20210121 14:21:44.772"></status>
</kw>
<msg timestamp="20210121 14:21:48.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:48.073" starttime="20210121 14:21:44.772"></status>
</kw>
<msg timestamp="20210121 14:21:48.073" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:48.073" starttime="20210121 14:21:44.771"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:48.074" starttime="20210121 14:21:48.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:48.078" level="INFO">Running command 'ozone sh volume info /31423-rpcbasic | jq -r '. | select(.name=="31423-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:51.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:51.513" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:51.513" starttime="20210121 14:21:48.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:51.514" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:51.514" starttime="20210121 14:21:51.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:51.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:51.515" starttime="20210121 14:21:51.514"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:51.515" starttime="20210121 14:21:48.076"></status>
</kw>
<msg timestamp="20210121 14:21:51.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:51.515" starttime="20210121 14:21:48.075"></status>
</kw>
<msg timestamp="20210121 14:21:51.516" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:51.516" starttime="20210121 14:21:48.074"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:51.516" starttime="20210121 14:21:51.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:51.520" level="INFO">Running command 'ozone sh bucket create /31423-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:54.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:54.636" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:21:54.636" starttime="20210121 14:21:51.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:54.637" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:21:54.637" starttime="20210121 14:21:54.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:54.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:54.638" starttime="20210121 14:21:54.637"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:54.638" starttime="20210121 14:21:51.518"></status>
</kw>
<msg timestamp="20210121 14:21:54.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:54.638" starttime="20210121 14:21:51.517"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:54.639" starttime="20210121 14:21:51.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:54.643" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:21:57.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:21:57.858" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:21:57.858" starttime="20210121 14:21:54.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:21:57.860" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:21:57.860" starttime="20210121 14:21:57.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:21:57.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:21:57.860" starttime="20210121 14:21:57.860"></status>
</kw>
<status status="PASS" endtime="20210121 14:21:57.861" starttime="20210121 14:21:54.640"></status>
</kw>
<msg timestamp="20210121 14:21:57.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:21:57.861" starttime="20210121 14:21:54.640"></status>
</kw>
<msg timestamp="20210121 14:21:57.861" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:21:57.861" starttime="20210121 14:21:54.639"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:21:57.862" starttime="20210121 14:21:57.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:21:57.866" level="INFO">Running command 'ozone sh bucket info /31423-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:01.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:01.166" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:22:01.166" starttime="20210121 14:21:57.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:01.167" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:22:01.167" starttime="20210121 14:22:01.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:01.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:01.168" starttime="20210121 14:22:01.168"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:01.169" starttime="20210121 14:21:57.863"></status>
</kw>
<msg timestamp="20210121 14:22:01.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:01.169" starttime="20210121 14:21:57.863"></status>
</kw>
<msg timestamp="20210121 14:22:01.169" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:22:01.169" starttime="20210121 14:21:57.862"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:01.170" starttime="20210121 14:22:01.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:01.174" level="INFO">Running command 'ozone sh bucket delete /31423-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:04.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:04.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:04.239" starttime="20210121 14:22:01.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:04.241" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:04.241" starttime="20210121 14:22:04.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:04.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:04.241" starttime="20210121 14:22:04.241"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:04.242" starttime="20210121 14:22:01.171"></status>
</kw>
<msg timestamp="20210121 14:22:04.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:04.242" starttime="20210121 14:22:01.171"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:04.242" starttime="20210121 14:22:01.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:04.246" level="INFO">Running command 'ozone sh volume delete /31423-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:07.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:07.061" level="INFO">${output} = Volume 31423-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210121 14:22:07.061" starttime="20210121 14:22:04.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:07.062" level="INFO">Volume 31423-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210121 14:22:07.062" starttime="20210121 14:22:07.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:07.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:07.065" starttime="20210121 14:22:07.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:07.065" starttime="20210121 14:22:04.243"></status>
</kw>
<msg timestamp="20210121 14:22:07.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:07.065" starttime="20210121 14:22:04.243"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:07.066" starttime="20210121 14:22:04.242"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:07.066" starttime="20210121 14:19:22.139"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:22:07.066" critical="yes" starttime="20210121 14:19:22.138"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20210121 14:22:07.067" starttime="20210121 14:19:22.116"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:22:07.082" level="INFO">${random} = 24575</msg>
<status status="PASS" endtime="20210121 14:22:07.082" starttime="20210121 14:22:07.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:22:07.082" level="INFO">${prefix} = 24575</msg>
<status status="PASS" endtime="20210121 14:22:07.082" starttime="20210121 14:22:07.082"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:07.082" starttime="20210121 14:22:07.081"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:07.084" starttime="20210121 14:22:07.083"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:07.087" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:10.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:22:10.053" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24575-rpcwoport is not found</msg>
<status status="PASS" endtime="20210121 14:22:10.053" starttime="20210121 14:22:07.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:10.055" level="INFO">VOLUME_NOT_FOUND Volume 24575-rpcwoport is not found</msg>
<status status="PASS" endtime="20210121 14:22:10.055" starttime="20210121 14:22:10.053"></status>
</kw>
<msg timestamp="20210121 14:22:10.055" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24575-rpcwoport is not found</msg>
<status status="PASS" endtime="20210121 14:22:10.055" starttime="20210121 14:22:07.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:10.056" starttime="20210121 14:22:10.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:10.059" level="INFO">Running command 'ozone sh volume create o3://om:9862/24575-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:13.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:13.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:13.147" starttime="20210121 14:22:10.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:13.148" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:13.148" starttime="20210121 14:22:13.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:13.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:13.149" starttime="20210121 14:22:13.149"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:13.150" starttime="20210121 14:22:10.057"></status>
</kw>
<msg timestamp="20210121 14:22:13.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:13.150" starttime="20210121 14:22:10.056"></status>
</kw>
<msg timestamp="20210121 14:22:13.150" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:22:13.150" starttime="20210121 14:22:10.056"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:13.151" starttime="20210121 14:22:13.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:13.155" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="24575-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:16.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:16.416" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210121 14:22:16.416" starttime="20210121 14:22:13.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:16.417" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:22:13.051Z",
  "modificationTime": "2021-01-21T14:22:13.051Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:22:16.417" starttime="20210121 14:22:16.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:16.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:16.418" starttime="20210121 14:22:16.417"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:16.418" starttime="20210121 14:22:13.153"></status>
</kw>
<msg timestamp="20210121 14:22:16.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:16.419" starttime="20210121 14:22:13.152"></status>
</kw>
<msg timestamp="20210121 14:22:16.419" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210121 14:22:16.419" starttime="20210121 14:22:13.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:16.419" starttime="20210121 14:22:16.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:16.423" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24575-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:19.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:19.732" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210121 14:22:19.732" starttime="20210121 14:22:16.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:19.734" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:22:13.051Z",
  "modificationTime": "2021-01-21T14:22:13.051Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:22:19.734" starttime="20210121 14:22:19.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:19.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:19.735" starttime="20210121 14:22:19.734"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:19.735" starttime="20210121 14:22:16.421"></status>
</kw>
<msg timestamp="20210121 14:22:19.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:19.735" starttime="20210121 14:22:16.420"></status>
</kw>
<msg timestamp="20210121 14:22:19.735" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210121 14:22:19.736" starttime="20210121 14:22:16.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:19.736" starttime="20210121 14:22:19.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:19.742" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/24575-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:22.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:22.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:22.769" starttime="20210121 14:22:19.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:22.770" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:22.770" starttime="20210121 14:22:22.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:22.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:22.771" starttime="20210121 14:22:22.771"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:22.771" starttime="20210121 14:22:19.737"></status>
</kw>
<msg timestamp="20210121 14:22:22.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:22.772" starttime="20210121 14:22:19.737"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:22.772" starttime="20210121 14:22:19.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:22.776" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport | jq -r '. | select(.name=="24575-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:26.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:26.025" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:26.025" starttime="20210121 14:22:22.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:26.026" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:26.026" starttime="20210121 14:22:26.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:26.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:26.027" starttime="20210121 14:22:26.026"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:26.027" starttime="20210121 14:22:22.774"></status>
</kw>
<msg timestamp="20210121 14:22:26.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:26.028" starttime="20210121 14:22:22.773"></status>
</kw>
<msg timestamp="20210121 14:22:26.028" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:26.028" starttime="20210121 14:22:22.772"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:26.029" starttime="20210121 14:22:26.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:26.033" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24575-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:29.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:29.060" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:29.060" starttime="20210121 14:22:26.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:29.061" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:29.061" starttime="20210121 14:22:29.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:29.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:29.062" starttime="20210121 14:22:29.062"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:29.063" starttime="20210121 14:22:26.030"></status>
</kw>
<msg timestamp="20210121 14:22:29.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:29.063" starttime="20210121 14:22:26.030"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:29.063" starttime="20210121 14:22:26.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:29.067" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:32.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:32.461" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210121 14:22:32.461" starttime="20210121 14:22:29.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:32.462" level="INFO">DISK</msg>
<status status="PASS" endtime="20210121 14:22:32.462" starttime="20210121 14:22:32.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:32.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:32.463" starttime="20210121 14:22:32.463"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:32.464" starttime="20210121 14:22:29.064"></status>
</kw>
<msg timestamp="20210121 14:22:32.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:32.464" starttime="20210121 14:22:29.064"></status>
</kw>
<msg timestamp="20210121 14:22:32.464" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210121 14:22:32.464" starttime="20210121 14:22:29.063"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:32.465" starttime="20210121 14:22:32.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:32.471" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:35.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:35.568" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:35.568" starttime="20210121 14:22:32.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:35.569" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:35.570" starttime="20210121 14:22:35.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:35.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:35.570" starttime="20210121 14:22:35.570"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:35.571" starttime="20210121 14:22:32.466"></status>
</kw>
<msg timestamp="20210121 14:22:35.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:35.571" starttime="20210121 14:22:32.466"></status>
</kw>
<msg timestamp="20210121 14:22:35.571" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:22:35.571" starttime="20210121 14:22:32.465"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:35.572" starttime="20210121 14:22:35.571"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:35.576" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:38.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:38.735" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210121 14:22:38.735" starttime="20210121 14:22:35.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:38.736" level="INFO">100</msg>
<status status="PASS" endtime="20210121 14:22:38.736" starttime="20210121 14:22:38.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:38.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:38.737" starttime="20210121 14:22:38.736"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:38.737" starttime="20210121 14:22:35.573"></status>
</kw>
<msg timestamp="20210121 14:22:38.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:38.738" starttime="20210121 14:22:35.573"></status>
</kw>
<msg timestamp="20210121 14:22:38.738" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210121 14:22:38.738" starttime="20210121 14:22:35.572"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:38.739" starttime="20210121 14:22:38.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:38.742" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/24575-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:41.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:41.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:41.705" starttime="20210121 14:22:38.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:41.706" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:41.706" starttime="20210121 14:22:41.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:41.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:41.707" starttime="20210121 14:22:41.706"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:41.707" starttime="20210121 14:22:38.740"></status>
</kw>
<msg timestamp="20210121 14:22:41.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:41.707" starttime="20210121 14:22:38.739"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:41.708" starttime="20210121 14:22:38.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:41.711" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:44.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:44.666" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:22:44.666" starttime="20210121 14:22:41.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:44.667" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210121 14:22:44.667" starttime="20210121 14:22:44.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:44.668" starttime="20210121 14:22:44.667"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:44.669" starttime="20210121 14:22:41.709"></status>
</kw>
<msg timestamp="20210121 14:22:44.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:44.669" starttime="20210121 14:22:41.709"></status>
</kw>
<msg timestamp="20210121 14:22:44.670" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:22:44.670" starttime="20210121 14:22:41.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:44.670" starttime="20210121 14:22:44.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:44.675" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:47.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:47.968" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210121 14:22:47.968" starttime="20210121 14:22:44.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:47.969" level="INFO">1000</msg>
<status status="PASS" endtime="20210121 14:22:47.969" starttime="20210121 14:22:47.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:47.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:47.970" starttime="20210121 14:22:47.969"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:47.970" starttime="20210121 14:22:44.672"></status>
</kw>
<msg timestamp="20210121 14:22:47.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:47.971" starttime="20210121 14:22:44.671"></status>
</kw>
<msg timestamp="20210121 14:22:47.971" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210121 14:22:47.971" starttime="20210121 14:22:44.670"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:47.971" starttime="20210121 14:22:47.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:47.975" level="INFO">Running command 'ozone sh bucket list o3://om:9862/24575-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:51.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:51.070" level="INFO">${output} = 24575-rpcwoport</msg>
<status status="PASS" endtime="20210121 14:22:51.071" starttime="20210121 14:22:47.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:51.072" level="INFO">24575-rpcwoport</msg>
<status status="PASS" endtime="20210121 14:22:51.072" starttime="20210121 14:22:51.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:51.073" starttime="20210121 14:22:51.072"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:51.073" starttime="20210121 14:22:47.973"></status>
</kw>
<msg timestamp="20210121 14:22:51.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:51.073" starttime="20210121 14:22:47.973"></status>
</kw>
<msg timestamp="20210121 14:22:51.074" level="INFO">${result} = 24575-rpcwoport</msg>
<status status="PASS" endtime="20210121 14:22:51.074" starttime="20210121 14:22:47.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:22:51.074" starttime="20210121 14:22:51.074"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:51.079" level="INFO">Running command 'ozone sh key put o3://om:9862/24575-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:56.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:56.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:56.527" starttime="20210121 14:22:51.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:56.528" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:56.529" starttime="20210121 14:22:56.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:56.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:56.529" starttime="20210121 14:22:56.529"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:56.530" starttime="20210121 14:22:51.077"></status>
</kw>
<msg timestamp="20210121 14:22:56.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:56.530" starttime="20210121 14:22:51.076"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:56.530" starttime="20210121 14:22:51.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:56.534" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:22:56.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:22:56.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:22:56.537" starttime="20210121 14:22:56.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:22:56.538" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:22:56.538" starttime="20210121 14:22:56.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:22:56.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:22:56.539" starttime="20210121 14:22:56.538"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:56.539" starttime="20210121 14:22:56.531"></status>
</kw>
<msg timestamp="20210121 14:22:56.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:22:56.540" starttime="20210121 14:22:56.531"></status>
</kw>
<status status="PASS" endtime="20210121 14:22:56.540" starttime="20210121 14:22:56.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:22:56.544" level="INFO">Running command 'ozone sh key get o3://om:9862/24575-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:01.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:01.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:01.500" starttime="20210121 14:22:56.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:01.502" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:01.502" starttime="20210121 14:23:01.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:01.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:01.502" starttime="20210121 14:23:01.502"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:01.503" starttime="20210121 14:22:56.541"></status>
</kw>
<msg timestamp="20210121 14:23:01.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:01.503" starttime="20210121 14:22:56.541"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:01.503" starttime="20210121 14:22:56.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:01.507" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:01.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:01.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:01.510" starttime="20210121 14:23:01.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:01.511" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:01.511" starttime="20210121 14:23:01.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:01.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:01.512" starttime="20210121 14:23:01.511"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:01.512" starttime="20210121 14:23:01.504"></status>
</kw>
<msg timestamp="20210121 14:23:01.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:01.512" starttime="20210121 14:23:01.504"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:01.513" starttime="20210121 14:23:01.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:01.517" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/24575-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:06.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:06.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:06.762" starttime="20210121 14:23:01.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:06.764" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:06.764" starttime="20210121 14:23:06.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:06.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:06.765" starttime="20210121 14:23:06.764"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:06.765" starttime="20210121 14:23:01.514"></status>
</kw>
<msg timestamp="20210121 14:23:06.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:06.766" starttime="20210121 14:23:01.514"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:06.766" starttime="20210121 14:23:01.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:06.770" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:06.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:06.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:06.772" starttime="20210121 14:23:06.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:06.774" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:06.774" starttime="20210121 14:23:06.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:06.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:06.775" starttime="20210121 14:23:06.774"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:06.775" starttime="20210121 14:23:06.767"></status>
</kw>
<msg timestamp="20210121 14:23:06.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:06.775" starttime="20210121 14:23:06.766"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:06.775" starttime="20210121 14:23:06.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:06.779" level="INFO">Running command 'ozone sh key get o3://om:9862/24575-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:11.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:11.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:11.707" starttime="20210121 14:23:06.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:11.708" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:11.708" starttime="20210121 14:23:11.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:11.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:11.709" starttime="20210121 14:23:11.708"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:11.709" starttime="20210121 14:23:06.776"></status>
</kw>
<msg timestamp="20210121 14:23:11.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:11.710" starttime="20210121 14:23:06.776"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:11.710" starttime="20210121 14:23:06.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:11.713" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:11.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:11.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:11.716" starttime="20210121 14:23:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:11.717" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:11.717" starttime="20210121 14:23:11.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:11.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:11.718" starttime="20210121 14:23:11.717"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:11.718" starttime="20210121 14:23:11.711"></status>
</kw>
<msg timestamp="20210121 14:23:11.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:11.718" starttime="20210121 14:23:11.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:11.718" starttime="20210121 14:23:11.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:11.724" level="INFO">Running command 'ozone sh key info o3://om:9862/24575-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:15.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:15.061" level="INFO">${output} = {
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:23:04.320Z",
  "modificationTime": "2021-01-21T14:23:06.265Z",...</msg>
<status status="PASS" endtime="20210121 14:23:15.061" starttime="20210121 14:23:11.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:15.062" level="INFO">{
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:23:04.320Z",
  "modificationTime": "2021-01-21T14:23:06.265Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594158076395650,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:23:15.063" starttime="20210121 14:23:15.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:15.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:15.063" starttime="20210121 14:23:15.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:15.064" starttime="20210121 14:23:11.720"></status>
</kw>
<msg timestamp="20210121 14:23:15.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:15.064" starttime="20210121 14:23:11.719"></status>
</kw>
<msg timestamp="20210121 14:23:15.064" level="INFO">${result} = {
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:23:04.320Z",
  "modificationTime": "2021-01-21T14:23:06.265Z",...</msg>
<status status="PASS" endtime="20210121 14:23:15.064" starttime="20210121 14:23:11.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:15.065" starttime="20210121 14:23:15.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:15.069" level="INFO">Running command 'ozone sh key delete o3://om:9862/24575-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:18.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:18.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:18.168" starttime="20210121 14:23:15.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:18.170" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:18.170" starttime="20210121 14:23:18.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:18.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:18.171" starttime="20210121 14:23:18.170"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:18.171" starttime="20210121 14:23:15.066"></status>
</kw>
<msg timestamp="20210121 14:23:18.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:18.171" starttime="20210121 14:23:15.066"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:18.171" starttime="20210121 14:23:15.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:18.175" level="INFO">Running command 'ozone sh key cp o3://om:9862/24575-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:23.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:23.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:23.729" starttime="20210121 14:23:18.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:23.730" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:23.731" starttime="20210121 14:23:23.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:23.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:23.731" starttime="20210121 14:23:23.731"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:23.732" starttime="20210121 14:23:18.173"></status>
</kw>
<msg timestamp="20210121 14:23:23.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:23.732" starttime="20210121 14:23:18.172"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:23.732" starttime="20210121 14:23:18.172"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:23.736" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:23.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:23.738" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:23.738" starttime="20210121 14:23:23.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:23.739" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:23.739" starttime="20210121 14:23:23.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:23.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:23.740" starttime="20210121 14:23:23.740"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:23.740" starttime="20210121 14:23:23.733"></status>
</kw>
<msg timestamp="20210121 14:23:23.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:23.741" starttime="20210121 14:23:23.733"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:23.741" starttime="20210121 14:23:23.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:23.744" level="INFO">Running command 'ozone sh key get o3://om:9862/24575-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:28.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:28.840" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:28.840" starttime="20210121 14:23:23.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:28.842" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:28.842" starttime="20210121 14:23:28.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:28.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:28.842" starttime="20210121 14:23:28.842"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:28.843" starttime="20210121 14:23:23.742"></status>
</kw>
<msg timestamp="20210121 14:23:28.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:28.843" starttime="20210121 14:23:23.742"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:28.843" starttime="20210121 14:23:23.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:28.847" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:28.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:28.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:28.849" starttime="20210121 14:23:28.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:28.851" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:28.851" starttime="20210121 14:23:28.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:28.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:28.852" starttime="20210121 14:23:28.851"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:28.852" starttime="20210121 14:23:28.844"></status>
</kw>
<msg timestamp="20210121 14:23:28.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:28.852" starttime="20210121 14:23:28.844"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:28.852" starttime="20210121 14:23:28.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:28.856" level="INFO">Running command 'ozone sh key delete o3://om:9862/24575-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:32.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:32.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:32.097" starttime="20210121 14:23:28.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:32.099" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:32.099" starttime="20210121 14:23:32.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:32.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:32.100" starttime="20210121 14:23:32.099"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:32.100" starttime="20210121 14:23:28.853"></status>
</kw>
<msg timestamp="20210121 14:23:32.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:32.100" starttime="20210121 14:23:28.853"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:32.100" starttime="20210121 14:23:28.852"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:32.103" level="INFO">Running command 'ozone sh key get o3://om:9862/24575-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:34.934" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:23:34.934" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:23:34.934" starttime="20210121 14:23:32.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:34.935" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:23:34.936" starttime="20210121 14:23:34.935"></status>
</kw>
<msg timestamp="20210121 14:23:34.936" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:23:34.936" starttime="20210121 14:23:32.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:34.937" starttime="20210121 14:23:34.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:34.941" level="INFO">Running command 'ozone sh key get --force o3://om:9862/24575-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:39.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:39.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:39.885" starttime="20210121 14:23:34.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:39.886" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:39.887" starttime="20210121 14:23:39.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:39.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:39.887" starttime="20210121 14:23:39.887"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:39.888" starttime="20210121 14:23:34.938"></status>
</kw>
<msg timestamp="20210121 14:23:39.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:39.888" starttime="20210121 14:23:34.938"></status>
</kw>
<msg timestamp="20210121 14:23:39.888" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:23:39.889" starttime="20210121 14:23:34.937"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:39.889" starttime="20210121 14:23:39.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:39.893" level="INFO">Running command 'ozone sh key info o3://om:9862/24575-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:43.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:43.162" level="INFO">${output} = {
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:22:53.971Z",
  "modificationTime": "2021-01-21T14:22:56.017Z",
  "re...</msg>
<status status="PASS" endtime="20210121 14:23:43.162" starttime="20210121 14:23:39.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:43.164" level="INFO">{
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:22:53.971Z",
  "modificationTime": "2021-01-21T14:22:56.017Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594157398032510,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:23:43.164" starttime="20210121 14:23:43.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:43.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:43.165" starttime="20210121 14:23:43.164"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:43.165" starttime="20210121 14:23:39.891"></status>
</kw>
<msg timestamp="20210121 14:23:43.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:43.165" starttime="20210121 14:23:39.890"></status>
</kw>
<msg timestamp="20210121 14:23:43.165" level="INFO">${result} = {
  "volumeName": "24575-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:22:53.971Z",
  "modificationTime": "2021-01-21T14:22:56.017Z",
  "re...</msg>
<status status="PASS" endtime="20210121 14:23:43.165" starttime="20210121 14:23:39.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:43.166" starttime="20210121 14:23:43.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:43.170" level="INFO">Running command 'ozone sh key list o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:46.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:46.423" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210121 14:23:46.423" starttime="20210121 14:23:43.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:46.424" level="INFO">key1</msg>
<status status="PASS" endtime="20210121 14:23:46.424" starttime="20210121 14:23:46.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:46.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:46.425" starttime="20210121 14:23:46.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:46.426" starttime="20210121 14:23:43.168"></status>
</kw>
<msg timestamp="20210121 14:23:46.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:46.426" starttime="20210121 14:23:43.167"></status>
</kw>
<msg timestamp="20210121 14:23:46.426" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210121 14:23:46.426" starttime="20210121 14:23:43.166"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:46.427" starttime="20210121 14:23:46.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:46.431" level="INFO">Running command 'ozone sh key rename o3://om:9862/24575-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:49.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:49.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:49.377" starttime="20210121 14:23:46.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:49.378" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:49.378" starttime="20210121 14:23:49.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:49.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:49.379" starttime="20210121 14:23:49.379"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:49.380" starttime="20210121 14:23:46.428"></status>
</kw>
<msg timestamp="20210121 14:23:49.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:49.380" starttime="20210121 14:23:46.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:49.380" starttime="20210121 14:23:46.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:49.384" level="INFO">Running command 'ozone sh key list o3://om:9862/24575-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:52.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:52.427" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210121 14:23:52.427" starttime="20210121 14:23:49.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:52.428" level="INFO">key2</msg>
<status status="PASS" endtime="20210121 14:23:52.428" starttime="20210121 14:23:52.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:52.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:52.429" starttime="20210121 14:23:52.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:52.429" starttime="20210121 14:23:49.382"></status>
</kw>
<msg timestamp="20210121 14:23:52.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:52.429" starttime="20210121 14:23:49.381"></status>
</kw>
<msg timestamp="20210121 14:23:52.430" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210121 14:23:52.430" starttime="20210121 14:23:49.381"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:23:52.430" starttime="20210121 14:23:52.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:52.434" level="INFO">Running command 'ozone sh key delete o3://om:9862/24575-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:55.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:55.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:55.418" starttime="20210121 14:23:52.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:55.419" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:55.419" starttime="20210121 14:23:55.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:55.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:55.420" starttime="20210121 14:23:55.419"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:55.420" starttime="20210121 14:23:52.431"></status>
</kw>
<msg timestamp="20210121 14:23:55.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:55.420" starttime="20210121 14:23:52.431"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:55.421" starttime="20210121 14:23:52.430"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:55.421" starttime="20210121 14:22:51.075"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:55.421" starttime="20210121 14:22:51.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:55.425" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:23:58.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:23:58.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:23:58.422" starttime="20210121 14:23:55.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:23:58.423" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:23:58.423" starttime="20210121 14:23:58.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:23:58.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:23:58.424" starttime="20210121 14:23:58.424"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:58.424" starttime="20210121 14:23:55.423"></status>
</kw>
<msg timestamp="20210121 14:23:58.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:23:58.425" starttime="20210121 14:23:55.422"></status>
</kw>
<status status="PASS" endtime="20210121 14:23:58.425" starttime="20210121 14:23:55.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:23:58.429" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport | jq -r '. | select(.name=="24575-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:01.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:01.619" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:01.619" starttime="20210121 14:23:58.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:01.621" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:01.621" starttime="20210121 14:24:01.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:01.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:01.622" starttime="20210121 14:24:01.621"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:01.622" starttime="20210121 14:23:58.426"></status>
</kw>
<msg timestamp="20210121 14:24:01.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:01.622" starttime="20210121 14:23:58.426"></status>
</kw>
<msg timestamp="20210121 14:24:01.623" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:01.623" starttime="20210121 14:23:58.425"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:01.623" starttime="20210121 14:24:01.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:01.627" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:04.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:04.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:04.809" starttime="20210121 14:24:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:04.810" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:04.810" starttime="20210121 14:24:04.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:04.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:04.811" starttime="20210121 14:24:04.810"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:04.811" starttime="20210121 14:24:01.624"></status>
</kw>
<msg timestamp="20210121 14:24:04.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:04.811" starttime="20210121 14:24:01.624"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:04.812" starttime="20210121 14:24:01.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:04.816" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport | jq -r '. | select(.name=="24575-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:07.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:07.995" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:07.995" starttime="20210121 14:24:04.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:07.997" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:07.997" starttime="20210121 14:24:07.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:07.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:07.998" starttime="20210121 14:24:07.997"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:07.998" starttime="20210121 14:24:04.813"></status>
</kw>
<msg timestamp="20210121 14:24:07.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:07.999" starttime="20210121 14:24:04.813"></status>
</kw>
<msg timestamp="20210121 14:24:07.999" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:07.999" starttime="20210121 14:24:04.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:08.000" starttime="20210121 14:24:07.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:08.013" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/24575-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:11.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:11.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:11.115" starttime="20210121 14:24:08.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:11.116" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:11.116" starttime="20210121 14:24:11.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:11.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:11.117" starttime="20210121 14:24:11.116"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:11.117" starttime="20210121 14:24:08.010"></status>
</kw>
<msg timestamp="20210121 14:24:11.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:11.118" starttime="20210121 14:24:08.000"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:11.118" starttime="20210121 14:24:08.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:11.122" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:14.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:14.121" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:14.121" starttime="20210121 14:24:11.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:14.122" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:14.122" starttime="20210121 14:24:14.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:14.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:14.123" starttime="20210121 14:24:14.122"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:14.124" starttime="20210121 14:24:11.119"></status>
</kw>
<msg timestamp="20210121 14:24:14.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:14.124" starttime="20210121 14:24:11.119"></status>
</kw>
<msg timestamp="20210121 14:24:14.124" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:14.124" starttime="20210121 14:24:11.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:14.125" starttime="20210121 14:24:14.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:14.129" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/24575-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:17.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:17.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:17.073" starttime="20210121 14:24:14.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:17.074" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:17.074" starttime="20210121 14:24:17.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:17.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:17.075" starttime="20210121 14:24:17.074"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:17.076" starttime="20210121 14:24:14.126"></status>
</kw>
<msg timestamp="20210121 14:24:17.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:17.076" starttime="20210121 14:24:14.126"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:17.076" starttime="20210121 14:24:14.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:17.080" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:20.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:20.598" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:20.598" starttime="20210121 14:24:17.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:20.599" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:20.600" starttime="20210121 14:24:20.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:20.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:20.600" starttime="20210121 14:24:20.600"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:20.601" starttime="20210121 14:24:17.077"></status>
</kw>
<msg timestamp="20210121 14:24:20.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:20.601" starttime="20210121 14:24:17.077"></status>
</kw>
<msg timestamp="20210121 14:24:20.601" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:20.601" starttime="20210121 14:24:17.076"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:20.602" starttime="20210121 14:24:20.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:20.606" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/24575-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:23.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:23.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:23.452" starttime="20210121 14:24:20.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:23.453" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:23.453" starttime="20210121 14:24:23.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:23.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:23.454" starttime="20210121 14:24:23.453"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:23.454" starttime="20210121 14:24:20.603"></status>
</kw>
<msg timestamp="20210121 14:24:23.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:23.454" starttime="20210121 14:24:20.603"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:23.455" starttime="20210121 14:24:20.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:23.459" level="INFO">Running command 'ozone sh volume delete o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:26.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:26.519" level="INFO">${output} = Volume 24575-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210121 14:24:26.519" starttime="20210121 14:24:23.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:26.520" level="INFO">Volume 24575-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210121 14:24:26.520" starttime="20210121 14:24:26.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:26.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:26.521" starttime="20210121 14:24:26.520"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:26.521" starttime="20210121 14:24:23.456"></status>
</kw>
<msg timestamp="20210121 14:24:26.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:26.521" starttime="20210121 14:24:23.456"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:26.522" starttime="20210121 14:24:23.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:26.525" level="INFO">Running command 'ozone sh volume create o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:29.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:29.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:29.658" starttime="20210121 14:24:26.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:29.659" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:29.660" starttime="20210121 14:24:29.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:29.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:29.660" starttime="20210121 14:24:29.660"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:29.661" starttime="20210121 14:24:26.523"></status>
</kw>
<msg timestamp="20210121 14:24:29.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:29.661" starttime="20210121 14:24:26.522"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:29.661" starttime="20210121 14:24:26.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:29.665" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport | jq -r '. | select(.name=="24575-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:33.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:33.080" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:33.081" starttime="20210121 14:24:29.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:33.082" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:33.082" starttime="20210121 14:24:33.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:33.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:33.083" starttime="20210121 14:24:33.082"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:33.083" starttime="20210121 14:24:29.663"></status>
</kw>
<msg timestamp="20210121 14:24:33.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:33.084" starttime="20210121 14:24:29.662"></status>
</kw>
<msg timestamp="20210121 14:24:33.084" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:33.084" starttime="20210121 14:24:29.661"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:33.085" starttime="20210121 14:24:33.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:33.089" level="INFO">Running command 'ozone sh volume info o3://om:9862/24575-rpcwoport | jq -r '. | select(.name=="24575-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:36.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:36.371" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:36.371" starttime="20210121 14:24:33.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:36.372" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:36.372" starttime="20210121 14:24:36.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:36.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:36.373" starttime="20210121 14:24:36.372"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:36.373" starttime="20210121 14:24:33.087"></status>
</kw>
<msg timestamp="20210121 14:24:36.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:36.374" starttime="20210121 14:24:33.086"></status>
</kw>
<msg timestamp="20210121 14:24:36.374" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:36.374" starttime="20210121 14:24:33.085"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:36.375" starttime="20210121 14:24:36.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:36.379" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24575-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:39.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:39.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:39.402" starttime="20210121 14:24:36.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:39.403" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:39.403" starttime="20210121 14:24:39.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:39.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:39.405" starttime="20210121 14:24:39.403"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:39.405" starttime="20210121 14:24:36.376"></status>
</kw>
<msg timestamp="20210121 14:24:39.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:39.406" starttime="20210121 14:24:36.375"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:39.406" starttime="20210121 14:24:36.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:39.410" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:42.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:42.727" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:42.727" starttime="20210121 14:24:39.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:42.728" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:42.728" starttime="20210121 14:24:42.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:42.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:42.729" starttime="20210121 14:24:42.728"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:42.729" starttime="20210121 14:24:39.407"></status>
</kw>
<msg timestamp="20210121 14:24:42.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:42.729" starttime="20210121 14:24:39.407"></status>
</kw>
<msg timestamp="20210121 14:24:42.730" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:42.730" starttime="20210121 14:24:39.406"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:42.730" starttime="20210121 14:24:42.730"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:42.734" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24575-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:45.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:45.992" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:24:45.992" starttime="20210121 14:24:42.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:45.993" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:24:45.993" starttime="20210121 14:24:45.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:45.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:45.994" starttime="20210121 14:24:45.993"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:45.994" starttime="20210121 14:24:42.732"></status>
</kw>
<msg timestamp="20210121 14:24:45.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:45.994" starttime="20210121 14:24:42.731"></status>
</kw>
<msg timestamp="20210121 14:24:45.995" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:24:45.995" starttime="20210121 14:24:42.731"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:45.995" starttime="20210121 14:24:45.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:46.000" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/24575-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:48.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:48.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:48.905" starttime="20210121 14:24:45.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:48.906" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:48.907" starttime="20210121 14:24:48.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:48.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:48.907" starttime="20210121 14:24:48.907"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:48.908" starttime="20210121 14:24:45.996"></status>
</kw>
<msg timestamp="20210121 14:24:48.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:48.908" starttime="20210121 14:24:45.996"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:48.908" starttime="20210121 14:24:45.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:48.912" level="INFO">Running command 'ozone sh volume delete o3://om:9862/24575-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:52.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:52.180" level="INFO">${output} = Volume 24575-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210121 14:24:52.180" starttime="20210121 14:24:48.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:52.181" level="INFO">Volume 24575-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210121 14:24:52.181" starttime="20210121 14:24:52.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:52.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:52.182" starttime="20210121 14:24:52.181"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:52.182" starttime="20210121 14:24:48.909"></status>
</kw>
<msg timestamp="20210121 14:24:52.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:52.182" starttime="20210121 14:24:48.909"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:52.183" starttime="20210121 14:24:48.908"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:52.183" starttime="20210121 14:22:07.084"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:24:52.183" critical="yes" starttime="20210121 14:22:07.083"></status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:52.185" starttime="20210121 14:24:52.185"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:52.190" level="INFO">Running command 'ozone sh volume create o3://om:9862/24575-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:55.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:55.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:24:55.249" starttime="20210121 14:24:52.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:55.250" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:24:55.250" starttime="20210121 14:24:55.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:55.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:55.251" starttime="20210121 14:24:55.250"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:55.251" starttime="20210121 14:24:52.187"></status>
</kw>
<msg timestamp="20210121 14:24:55.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:55.252" starttime="20210121 14:24:52.187"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:55.252" starttime="20210121 14:24:52.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:55.258" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24575-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:24:58.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:24:58.533" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:24:58.533" starttime="20210121 14:24:55.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:24:58.534" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:24:58.534" starttime="20210121 14:24:58.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:24:58.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:24:58.535" starttime="20210121 14:24:58.534"></status>
</kw>
<status status="PASS" endtime="20210121 14:24:58.535" starttime="20210121 14:24:55.254"></status>
</kw>
<msg timestamp="20210121 14:24:58.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:24:58.536" starttime="20210121 14:24:55.253"></status>
</kw>
<msg timestamp="20210121 14:24:58.536" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:24:58.536" starttime="20210121 14:24:55.252"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:24:58.537" starttime="20210121 14:24:58.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:24:58.541" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/24575-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:01.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:01.639" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:01.639" starttime="20210121 14:24:58.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:01.641" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:01.641" starttime="20210121 14:25:01.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:01.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:01.642" starttime="20210121 14:25:01.641"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:01.642" starttime="20210121 14:24:58.538"></status>
</kw>
<msg timestamp="20210121 14:25:01.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:01.642" starttime="20210121 14:24:58.538"></status>
</kw>
<msg timestamp="20210121 14:25:01.643" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:01.643" starttime="20210121 14:24:58.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:01.647" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24575-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:04.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:04.997" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:04.997" starttime="20210121 14:25:01.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:05.001" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:05.001" starttime="20210121 14:25:04.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:05.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:05.002" starttime="20210121 14:25:05.002"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:05.003" starttime="20210121 14:25:01.644"></status>
</kw>
<msg timestamp="20210121 14:25:05.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:05.003" starttime="20210121 14:25:01.644"></status>
</kw>
<msg timestamp="20210121 14:25:05.003" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:05.003" starttime="20210121 14:25:01.643"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:05.004" starttime="20210121 14:25:05.003"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:05.008" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/24575-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:08.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:08.196" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:25:08.196" starttime="20210121 14:25:05.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:08.197" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:25:08.197" starttime="20210121 14:25:08.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:08.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:08.198" starttime="20210121 14:25:08.197"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:08.198" starttime="20210121 14:25:05.006"></status>
</kw>
<msg timestamp="20210121 14:25:08.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:08.198" starttime="20210121 14:25:05.005"></status>
</kw>
<msg timestamp="20210121 14:25:08.198" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:25:08.199" starttime="20210121 14:25:05.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:08.203" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24575-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:11.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:11.396" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:11.396" starttime="20210121 14:25:08.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:11.397" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:11.397" starttime="20210121 14:25:11.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:11.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:11.398" starttime="20210121 14:25:11.397"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:11.398" starttime="20210121 14:25:08.200"></status>
</kw>
<msg timestamp="20210121 14:25:11.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:11.398" starttime="20210121 14:25:08.200"></status>
</kw>
<msg timestamp="20210121 14:25:11.399" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:11.399" starttime="20210121 14:25:08.199"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:11.400" starttime="20210121 14:25:11.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:11.403" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/24575-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:14.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:14.457" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:14.457" starttime="20210121 14:25:11.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:14.458" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:14.458" starttime="20210121 14:25:14.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:14.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:14.459" starttime="20210121 14:25:14.459"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:14.459" starttime="20210121 14:25:11.401"></status>
</kw>
<msg timestamp="20210121 14:25:14.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:14.460" starttime="20210121 14:25:11.401"></status>
</kw>
<msg timestamp="20210121 14:25:14.460" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:14.460" starttime="20210121 14:25:11.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:14.464" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24575-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:17.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:17.855" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210121 14:25:17.855" starttime="20210121 14:25:14.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:17.856" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:17.857" starttime="20210121 14:25:17.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:17.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:17.857" starttime="20210121 14:25:17.857"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:17.858" starttime="20210121 14:25:14.461"></status>
</kw>
<msg timestamp="20210121 14:25:17.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:17.859" starttime="20210121 14:25:14.461"></status>
</kw>
<msg timestamp="20210121 14:25:17.859" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210121 14:25:17.859" starttime="20210121 14:25:14.460"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:17.860" starttime="20210121 14:25:17.859"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:17.861" starttime="20210121 14:25:17.860"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:17.861" starttime="20210121 14:24:52.185"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:25:17.861" critical="yes" starttime="20210121 14:24:52.184"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:17.863" starttime="20210121 14:25:17.863"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:17.868" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24575-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:20.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:20.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:25:20.791" starttime="20210121 14:25:17.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:20.792" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:25:20.792" starttime="20210121 14:25:20.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:20.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:20.793" starttime="20210121 14:25:20.793"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:20.794" starttime="20210121 14:25:17.865"></status>
</kw>
<msg timestamp="20210121 14:25:20.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:20.794" starttime="20210121 14:25:17.864"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:20.794" starttime="20210121 14:25:17.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:20.798" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24575-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:24.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:24.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:24.110" starttime="20210121 14:25:20.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:24.111" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:24.111" starttime="20210121 14:25:24.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:24.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:24.112" starttime="20210121 14:25:24.111"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:24.112" starttime="20210121 14:25:20.796"></status>
</kw>
<msg timestamp="20210121 14:25:24.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:24.113" starttime="20210121 14:25:20.795"></status>
</kw>
<msg timestamp="20210121 14:25:24.113" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:24.113" starttime="20210121 14:25:20.794"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:24.114" starttime="20210121 14:25:24.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:24.117" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/24575-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:27.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:27.037" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210121 14:25:27.037" starttime="20210121 14:25:24.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:27.039" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210121 14:25:27.039" starttime="20210121 14:25:27.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:27.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:27.040" starttime="20210121 14:25:27.039"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:27.040" starttime="20210121 14:25:24.115"></status>
</kw>
<msg timestamp="20210121 14:25:27.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:27.040" starttime="20210121 14:25:24.114"></status>
</kw>
<msg timestamp="20210121 14:25:27.040" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210121 14:25:27.040" starttime="20210121 14:25:24.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:27.044" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24575-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:30.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:30.420" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:30.420" starttime="20210121 14:25:27.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:30.422" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:30.422" starttime="20210121 14:25:30.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:30.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:30.422" starttime="20210121 14:25:30.422"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:30.423" starttime="20210121 14:25:27.042"></status>
</kw>
<msg timestamp="20210121 14:25:30.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:30.423" starttime="20210121 14:25:27.041"></status>
</kw>
<msg timestamp="20210121 14:25:30.423" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:30.424" starttime="20210121 14:25:27.041"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:30.425" starttime="20210121 14:25:30.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:30.428" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/24575-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:33.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:33.589" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:25:33.589" starttime="20210121 14:25:30.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:33.590" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:25:33.591" starttime="20210121 14:25:33.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:33.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:33.591" starttime="20210121 14:25:33.591"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:33.592" starttime="20210121 14:25:30.426"></status>
</kw>
<msg timestamp="20210121 14:25:33.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:33.592" starttime="20210121 14:25:30.426"></status>
</kw>
<msg timestamp="20210121 14:25:33.594" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:25:33.594" starttime="20210121 14:25:30.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:33.598" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24575-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:36.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:36.791" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:36.792" starttime="20210121 14:25:33.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:36.793" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:36.793" starttime="20210121 14:25:36.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:36.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:36.794" starttime="20210121 14:25:36.793"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:36.794" starttime="20210121 14:25:33.595"></status>
</kw>
<msg timestamp="20210121 14:25:36.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:36.794" starttime="20210121 14:25:33.594"></status>
</kw>
<msg timestamp="20210121 14:25:36.794" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:36.794" starttime="20210121 14:25:33.594"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:36.796" starttime="20210121 14:25:36.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:36.800" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/24575-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:39.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:39.691" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:39.691" starttime="20210121 14:25:36.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:39.692" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:39.693" starttime="20210121 14:25:39.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:39.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:39.693" starttime="20210121 14:25:39.693"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:39.694" starttime="20210121 14:25:36.797"></status>
</kw>
<msg timestamp="20210121 14:25:39.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:39.694" starttime="20210121 14:25:36.797"></status>
</kw>
<msg timestamp="20210121 14:25:39.694" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:25:39.694" starttime="20210121 14:25:36.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:39.698" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24575-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:42.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:42.838" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210121 14:25:42.838" starttime="20210121 14:25:39.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:42.839" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:42.839" starttime="20210121 14:25:42.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:42.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:42.840" starttime="20210121 14:25:42.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:42.840" starttime="20210121 14:25:39.695"></status>
</kw>
<msg timestamp="20210121 14:25:42.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:42.840" starttime="20210121 14:25:39.695"></status>
</kw>
<msg timestamp="20210121 14:25:42.841" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210121 14:25:42.841" starttime="20210121 14:25:39.694"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:42.841" starttime="20210121 14:25:42.841"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:42.842" starttime="20210121 14:25:42.841"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:42.843" starttime="20210121 14:25:17.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:25:42.843" critical="yes" starttime="20210121 14:25:17.862"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:42.845" starttime="20210121 14:25:42.845"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:42.850" level="INFO">Running command 'ozone sh key put o3://om:9862/24575-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:47.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:47.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:25:47.940" starttime="20210121 14:25:42.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:47.942" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:25:47.942" starttime="20210121 14:25:47.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:47.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:47.942" starttime="20210121 14:25:47.942"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:47.943" starttime="20210121 14:25:42.847"></status>
</kw>
<msg timestamp="20210121 14:25:47.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:47.943" starttime="20210121 14:25:42.846"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:47.943" starttime="20210121 14:25:42.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:47.947" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24575-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:51.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:51.257" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:51.257" starttime="20210121 14:25:47.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:51.258" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:51.258" starttime="20210121 14:25:51.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:51.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:51.259" starttime="20210121 14:25:51.258"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:51.259" starttime="20210121 14:25:47.944"></status>
</kw>
<msg timestamp="20210121 14:25:51.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:51.260" starttime="20210121 14:25:47.944"></status>
</kw>
<msg timestamp="20210121 14:25:51.260" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:51.260" starttime="20210121 14:25:47.943"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:51.260" starttime="20210121 14:25:51.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:51.264" level="INFO">Running command 'ozone sh key addacl o3://om:9862/24575-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:54.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:54.212" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:54.212" starttime="20210121 14:25:51.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:54.213" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:54.214" starttime="20210121 14:25:54.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:54.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:54.214" starttime="20210121 14:25:54.214"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:54.215" starttime="20210121 14:25:51.262"></status>
</kw>
<msg timestamp="20210121 14:25:54.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:54.215" starttime="20210121 14:25:51.261"></status>
</kw>
<msg timestamp="20210121 14:25:54.215" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210121 14:25:54.215" starttime="20210121 14:25:51.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:54.220" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24575-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:25:57.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:25:57.460" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:57.460" starttime="20210121 14:25:54.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:25:57.462" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:25:57.462" starttime="20210121 14:25:57.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:25:57.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:25:57.463" starttime="20210121 14:25:57.462"></status>
</kw>
<status status="PASS" endtime="20210121 14:25:57.463" starttime="20210121 14:25:54.216"></status>
</kw>
<msg timestamp="20210121 14:25:57.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:25:57.463" starttime="20210121 14:25:54.216"></status>
</kw>
<msg timestamp="20210121 14:25:57.463" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:25:57.463" starttime="20210121 14:25:54.215"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:25:57.465" starttime="20210121 14:25:57.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:25:57.469" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/24575-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:00.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:00.171" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:26:00.171" starttime="20210121 14:25:57.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:00.172" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:26:00.173" starttime="20210121 14:26:00.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:00.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:00.174" starttime="20210121 14:26:00.173"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:00.174" starttime="20210121 14:25:57.466"></status>
</kw>
<msg timestamp="20210121 14:26:00.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:00.174" starttime="20210121 14:25:57.465"></status>
</kw>
<msg timestamp="20210121 14:26:00.175" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210121 14:26:00.175" starttime="20210121 14:25:57.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:00.179" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24575-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:03.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:03.460" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:26:03.460" starttime="20210121 14:26:00.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:03.461" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:26:03.461" starttime="20210121 14:26:03.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:03.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:03.462" starttime="20210121 14:26:03.461"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:03.462" starttime="20210121 14:26:00.176"></status>
</kw>
<msg timestamp="20210121 14:26:03.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:03.462" starttime="20210121 14:26:00.176"></status>
</kw>
<msg timestamp="20210121 14:26:03.462" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210121 14:26:03.462" starttime="20210121 14:26:00.175"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:03.463" starttime="20210121 14:26:03.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:03.469" level="INFO">Running command 'ozone sh key setacl o3://om:9862/24575-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:06.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:06.465" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:26:06.465" starttime="20210121 14:26:03.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:06.466" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:26:06.466" starttime="20210121 14:26:06.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:06.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:06.467" starttime="20210121 14:26:06.466"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:06.467" starttime="20210121 14:26:03.464"></status>
</kw>
<msg timestamp="20210121 14:26:06.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:06.468" starttime="20210121 14:26:03.464"></status>
</kw>
<msg timestamp="20210121 14:26:06.469" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210121 14:26:06.469" starttime="20210121 14:26:03.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:06.472" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24575-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:09.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:09.841" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210121 14:26:09.841" starttime="20210121 14:26:06.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:09.843" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210121 14:26:09.843" starttime="20210121 14:26:09.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:09.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:09.844" starttime="20210121 14:26:09.843"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:09.844" starttime="20210121 14:26:06.470"></status>
</kw>
<msg timestamp="20210121 14:26:09.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:09.844" starttime="20210121 14:26:06.470"></status>
</kw>
<msg timestamp="20210121 14:26:09.844" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210121 14:26:09.844" starttime="20210121 14:26:06.469"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:09.845" starttime="20210121 14:26:09.845"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:09.846" starttime="20210121 14:26:09.845"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:09.846" starttime="20210121 14:25:42.845"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:26:09.846" critical="yes" starttime="20210121 14:25:42.844"></status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:09.848" starttime="20210121 14:26:09.848"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:09.852" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:12.632" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:26:12.632" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24575-rpcwport is not found</msg>
<status status="PASS" endtime="20210121 14:26:12.632" starttime="20210121 14:26:09.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:12.634" level="INFO">VOLUME_NOT_FOUND Volume 24575-rpcwport is not found</msg>
<status status="PASS" endtime="20210121 14:26:12.634" starttime="20210121 14:26:12.633"></status>
</kw>
<msg timestamp="20210121 14:26:12.634" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24575-rpcwport is not found</msg>
<status status="PASS" endtime="20210121 14:26:12.634" starttime="20210121 14:26:09.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:12.635" starttime="20210121 14:26:12.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:12.639" level="INFO">Running command 'ozone sh volume create o3:///24575-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:15.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:15.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:26:15.698" starttime="20210121 14:26:12.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:15.699" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:26:15.699" starttime="20210121 14:26:15.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:15.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:15.700" starttime="20210121 14:26:15.699"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:15.700" starttime="20210121 14:26:12.636"></status>
</kw>
<msg timestamp="20210121 14:26:15.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:15.701" starttime="20210121 14:26:12.636"></status>
</kw>
<msg timestamp="20210121 14:26:15.701" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:26:15.701" starttime="20210121 14:26:12.635"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:15.702" starttime="20210121 14:26:15.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:15.706" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="24575-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:18.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:18.828" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:26:18.828" starttime="20210121 14:26:15.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:18.830" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:26:15.552Z",
  "modificationTime": "2021-01-21T14:26:15.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:26:18.830" starttime="20210121 14:26:18.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:18.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:18.830" starttime="20210121 14:26:18.830"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:18.831" starttime="20210121 14:26:15.704"></status>
</kw>
<msg timestamp="20210121 14:26:18.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:18.831" starttime="20210121 14:26:15.703"></status>
</kw>
<msg timestamp="20210121 14:26:18.831" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:26:18.831" starttime="20210121 14:26:15.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:18.832" starttime="20210121 14:26:18.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:18.836" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24575-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:22.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:22.211" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:26:22.211" starttime="20210121 14:26:18.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:22.212" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:26:15.552Z",
  "modificationTime": "2021-01-21T14:26:15.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:26:22.212" starttime="20210121 14:26:22.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:22.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:22.214" starttime="20210121 14:26:22.212"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:22.214" starttime="20210121 14:26:18.833"></status>
</kw>
<msg timestamp="20210121 14:26:22.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:22.215" starttime="20210121 14:26:18.833"></status>
</kw>
<msg timestamp="20210121 14:26:22.215" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210121 14:26:22.215" starttime="20210121 14:26:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:22.215" starttime="20210121 14:26:22.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:22.220" level="INFO">Running command 'ozone sh volume setquota o3:///24575-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:25.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:25.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:26:25.251" starttime="20210121 14:26:22.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:25.252" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:26:25.252" starttime="20210121 14:26:25.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:25.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:25.253" starttime="20210121 14:26:25.252"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:25.253" starttime="20210121 14:26:22.217"></status>
</kw>
<msg timestamp="20210121 14:26:25.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:25.253" starttime="20210121 14:26:22.216"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:25.254" starttime="20210121 14:26:22.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:25.258" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport | jq -r '. | select(.name=="24575-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:28.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:28.646" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:28.646" starttime="20210121 14:26:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:28.647" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:28.648" starttime="20210121 14:26:28.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:28.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:28.648" starttime="20210121 14:26:28.648"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:28.649" starttime="20210121 14:26:25.255"></status>
</kw>
<msg timestamp="20210121 14:26:28.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:28.649" starttime="20210121 14:26:25.255"></status>
</kw>
<msg timestamp="20210121 14:26:28.649" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:28.649" starttime="20210121 14:26:25.254"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:28.650" starttime="20210121 14:26:28.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:28.654" level="INFO">Running command 'ozone sh bucket create o3:///24575-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:31.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:31.738" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:26:31.738" starttime="20210121 14:26:28.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:31.739" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:26:31.739" starttime="20210121 14:26:31.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:31.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:31.740" starttime="20210121 14:26:31.740"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:31.741" starttime="20210121 14:26:28.651"></status>
</kw>
<msg timestamp="20210121 14:26:31.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:31.741" starttime="20210121 14:26:28.651"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:31.741" starttime="20210121 14:26:28.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:31.745" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:35.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:35.032" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210121 14:26:35.032" starttime="20210121 14:26:31.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:35.034" level="INFO">DISK</msg>
<status status="PASS" endtime="20210121 14:26:35.034" starttime="20210121 14:26:35.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:35.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:35.035" starttime="20210121 14:26:35.034"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:35.035" starttime="20210121 14:26:31.742"></status>
</kw>
<msg timestamp="20210121 14:26:35.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:35.035" starttime="20210121 14:26:31.742"></status>
</kw>
<msg timestamp="20210121 14:26:35.036" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210121 14:26:35.036" starttime="20210121 14:26:31.741"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:35.036" starttime="20210121 14:26:35.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:35.040" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:38.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:38.360" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:38.360" starttime="20210121 14:26:35.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:38.361" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:38.361" starttime="20210121 14:26:38.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:38.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:38.362" starttime="20210121 14:26:38.362"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:38.363" starttime="20210121 14:26:35.038"></status>
</kw>
<msg timestamp="20210121 14:26:38.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:38.363" starttime="20210121 14:26:35.037"></status>
</kw>
<msg timestamp="20210121 14:26:38.364" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:26:38.364" starttime="20210121 14:26:35.036"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:38.364" starttime="20210121 14:26:38.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:38.369" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:41.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:41.655" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210121 14:26:41.656" starttime="20210121 14:26:38.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:41.657" level="INFO">100</msg>
<status status="PASS" endtime="20210121 14:26:41.657" starttime="20210121 14:26:41.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:41.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:41.658" starttime="20210121 14:26:41.657"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:41.658" starttime="20210121 14:26:38.366"></status>
</kw>
<msg timestamp="20210121 14:26:41.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:41.658" starttime="20210121 14:26:38.366"></status>
</kw>
<msg timestamp="20210121 14:26:41.659" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210121 14:26:41.659" starttime="20210121 14:26:38.365"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:41.659" starttime="20210121 14:26:41.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:41.663" level="INFO">Running command 'ozone sh bucket setquota o3:///24575-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:44.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:44.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:26:44.938" starttime="20210121 14:26:41.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:44.939" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:26:44.939" starttime="20210121 14:26:44.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:44.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:44.940" starttime="20210121 14:26:44.939"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:44.940" starttime="20210121 14:26:41.661"></status>
</kw>
<msg timestamp="20210121 14:26:44.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:44.940" starttime="20210121 14:26:41.660"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:44.941" starttime="20210121 14:26:41.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:44.945" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:48.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:48.113" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:26:48.113" starttime="20210121 14:26:44.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:48.114" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210121 14:26:48.114" starttime="20210121 14:26:48.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:48.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:48.115" starttime="20210121 14:26:48.114"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:48.115" starttime="20210121 14:26:44.942"></status>
</kw>
<msg timestamp="20210121 14:26:48.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:48.115" starttime="20210121 14:26:44.942"></status>
</kw>
<msg timestamp="20210121 14:26:48.116" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:26:48.116" starttime="20210121 14:26:44.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:48.116" starttime="20210121 14:26:48.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:48.121" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:51.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:51.249" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210121 14:26:51.249" starttime="20210121 14:26:48.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:51.251" level="INFO">1000</msg>
<status status="PASS" endtime="20210121 14:26:51.251" starttime="20210121 14:26:51.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:51.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:51.252" starttime="20210121 14:26:51.251"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:51.252" starttime="20210121 14:26:48.118"></status>
</kw>
<msg timestamp="20210121 14:26:51.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:51.252" starttime="20210121 14:26:48.118"></status>
</kw>
<msg timestamp="20210121 14:26:51.253" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210121 14:26:51.253" starttime="20210121 14:26:48.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:51.253" starttime="20210121 14:26:51.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:51.258" level="INFO">Running command 'ozone sh bucket list o3:///24575-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:26:54.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:26:54.544" level="INFO">${output} = 24575-rpcwport</msg>
<status status="PASS" endtime="20210121 14:26:54.544" starttime="20210121 14:26:51.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:26:54.545" level="INFO">24575-rpcwport</msg>
<status status="PASS" endtime="20210121 14:26:54.545" starttime="20210121 14:26:54.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:26:54.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:26:54.546" starttime="20210121 14:26:54.545"></status>
</kw>
<status status="PASS" endtime="20210121 14:26:54.547" starttime="20210121 14:26:51.255"></status>
</kw>
<msg timestamp="20210121 14:26:54.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:26:54.547" starttime="20210121 14:26:51.254"></status>
</kw>
<msg timestamp="20210121 14:26:54.547" level="INFO">${result} = 24575-rpcwport</msg>
<status status="PASS" endtime="20210121 14:26:54.547" starttime="20210121 14:26:51.253"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:26:54.548" starttime="20210121 14:26:54.548"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:26:54.553" level="INFO">Running command 'ozone sh key put o3:///24575-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:00.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:00.093" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:00.093" starttime="20210121 14:26:54.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:00.095" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:00.095" starttime="20210121 14:27:00.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:00.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:00.096" starttime="20210121 14:27:00.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:00.096" starttime="20210121 14:26:54.550"></status>
</kw>
<msg timestamp="20210121 14:27:00.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:00.096" starttime="20210121 14:26:54.550"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:00.097" starttime="20210121 14:26:54.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:00.100" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:00.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:00.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:00.103" starttime="20210121 14:27:00.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:00.104" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:00.104" starttime="20210121 14:27:00.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:00.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:00.105" starttime="20210121 14:27:00.104"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:00.105" starttime="20210121 14:27:00.098"></status>
</kw>
<msg timestamp="20210121 14:27:00.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:00.105" starttime="20210121 14:27:00.097"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:00.106" starttime="20210121 14:27:00.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:00.110" level="INFO">Running command 'ozone sh key get o3:///24575-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:05.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:05.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:05.222" starttime="20210121 14:27:00.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:05.223" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:05.223" starttime="20210121 14:27:05.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:05.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:05.224" starttime="20210121 14:27:05.223"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:05.224" starttime="20210121 14:27:00.107"></status>
</kw>
<msg timestamp="20210121 14:27:05.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:05.224" starttime="20210121 14:27:00.107"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:05.225" starttime="20210121 14:27:00.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:05.228" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:05.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:05.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:05.231" starttime="20210121 14:27:05.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:05.232" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:05.233" starttime="20210121 14:27:05.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:05.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:05.233" starttime="20210121 14:27:05.233"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:05.234" starttime="20210121 14:27:05.226"></status>
</kw>
<msg timestamp="20210121 14:27:05.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:05.234" starttime="20210121 14:27:05.225"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:05.234" starttime="20210121 14:27:05.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:05.240" level="INFO">Running command 'ozone sh key put -t RATIS o3:///24575-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:10.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:10.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:10.527" starttime="20210121 14:27:05.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:10.528" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:10.528" starttime="20210121 14:27:10.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:10.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:10.529" starttime="20210121 14:27:10.529"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:10.529" starttime="20210121 14:27:05.237"></status>
</kw>
<msg timestamp="20210121 14:27:10.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:10.530" starttime="20210121 14:27:05.236"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:10.530" starttime="20210121 14:27:05.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:10.534" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:10.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:10.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:10.536" starttime="20210121 14:27:10.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:10.537" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:10.537" starttime="20210121 14:27:10.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:10.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:10.538" starttime="20210121 14:27:10.538"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:10.538" starttime="20210121 14:27:10.531"></status>
</kw>
<msg timestamp="20210121 14:27:10.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:10.539" starttime="20210121 14:27:10.531"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:10.539" starttime="20210121 14:27:10.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:10.543" level="INFO">Running command 'ozone sh key get o3:///24575-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:15.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:15.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:15.665" starttime="20210121 14:27:10.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:15.666" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:15.666" starttime="20210121 14:27:15.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:15.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:15.667" starttime="20210121 14:27:15.666"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:15.667" starttime="20210121 14:27:10.540"></status>
</kw>
<msg timestamp="20210121 14:27:15.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:15.668" starttime="20210121 14:27:10.540"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:15.668" starttime="20210121 14:27:10.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:15.672" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:15.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:15.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:15.674" starttime="20210121 14:27:15.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:15.675" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:15.675" starttime="20210121 14:27:15.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:15.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:15.676" starttime="20210121 14:27:15.675"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:15.676" starttime="20210121 14:27:15.669"></status>
</kw>
<msg timestamp="20210121 14:27:15.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:15.676" starttime="20210121 14:27:15.669"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:15.677" starttime="20210121 14:27:15.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:15.681" level="INFO">Running command 'ozone sh key info o3:///24575-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:18.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:18.748" level="INFO">${output} = {
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:27:08.204Z",
  "modificationTime": "2021-01-21T14:27:10.038Z",
...</msg>
<status status="PASS" endtime="20210121 14:27:18.748" starttime="20210121 14:27:15.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:18.751" level="INFO">{
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:27:08.204Z",
  "modificationTime": "2021-01-21T14:27:10.038Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594174059577490,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:27:18.751" starttime="20210121 14:27:18.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:18.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:18.752" starttime="20210121 14:27:18.751"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:18.752" starttime="20210121 14:27:15.678"></status>
</kw>
<msg timestamp="20210121 14:27:18.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:18.752" starttime="20210121 14:27:15.678"></status>
</kw>
<msg timestamp="20210121 14:27:18.753" level="INFO">${result} = {
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:27:08.204Z",
  "modificationTime": "2021-01-21T14:27:10.038Z",
...</msg>
<status status="PASS" endtime="20210121 14:27:18.753" starttime="20210121 14:27:15.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:18.753" starttime="20210121 14:27:18.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:18.757" level="INFO">Running command 'ozone sh key delete o3:///24575-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:21.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:21.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:21.687" starttime="20210121 14:27:18.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:21.688" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:21.688" starttime="20210121 14:27:21.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:21.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:21.689" starttime="20210121 14:27:21.688"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:21.689" starttime="20210121 14:27:18.754"></status>
</kw>
<msg timestamp="20210121 14:27:21.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:21.690" starttime="20210121 14:27:18.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:21.690" starttime="20210121 14:27:18.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:21.694" level="INFO">Running command 'ozone sh key cp o3:///24575-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:27.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:27.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:27.215" starttime="20210121 14:27:21.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:27.216" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:27.216" starttime="20210121 14:27:27.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:27.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:27.217" starttime="20210121 14:27:27.216"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:27.217" starttime="20210121 14:27:21.691"></status>
</kw>
<msg timestamp="20210121 14:27:27.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:27.217" starttime="20210121 14:27:21.691"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:27.218" starttime="20210121 14:27:21.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:27.221" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:27.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:27.224" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:27.224" starttime="20210121 14:27:27.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:27.224" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:27.225" starttime="20210121 14:27:27.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:27.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:27.225" starttime="20210121 14:27:27.225"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:27.226" starttime="20210121 14:27:27.219"></status>
</kw>
<msg timestamp="20210121 14:27:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:27.226" starttime="20210121 14:27:27.218"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:27.226" starttime="20210121 14:27:27.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:27.230" level="INFO">Running command 'ozone sh key get o3:///24575-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:32.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:32.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:32.306" starttime="20210121 14:27:27.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:32.307" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:32.308" starttime="20210121 14:27:32.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:32.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:32.308" starttime="20210121 14:27:32.308"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:32.309" starttime="20210121 14:27:27.227"></status>
</kw>
<msg timestamp="20210121 14:27:32.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:32.309" starttime="20210121 14:27:27.227"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:32.309" starttime="20210121 14:27:27.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:32.313" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:32.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:32.316" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:32.316" starttime="20210121 14:27:32.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:32.317" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:32.317" starttime="20210121 14:27:32.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:32.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:32.317" starttime="20210121 14:27:32.317"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:32.318" starttime="20210121 14:27:32.310"></status>
</kw>
<msg timestamp="20210121 14:27:32.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:32.318" starttime="20210121 14:27:32.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:32.318" starttime="20210121 14:27:32.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:32.322" level="INFO">Running command 'ozone sh key delete o3:///24575-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:35.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:35.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:35.322" starttime="20210121 14:27:32.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:35.323" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:35.323" starttime="20210121 14:27:35.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:35.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:35.324" starttime="20210121 14:27:35.324"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:35.324" starttime="20210121 14:27:32.319"></status>
</kw>
<msg timestamp="20210121 14:27:35.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:35.325" starttime="20210121 14:27:32.319"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:35.325" starttime="20210121 14:27:32.318"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:35.328" level="INFO">Running command 'ozone sh key get o3:///24575-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:38.303" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:27:38.303" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:27:38.303" starttime="20210121 14:27:35.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:38.304" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:27:38.304" starttime="20210121 14:27:38.303"></status>
</kw>
<msg timestamp="20210121 14:27:38.305" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:27:38.305" starttime="20210121 14:27:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:38.305" starttime="20210121 14:27:38.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:38.309" level="INFO">Running command 'ozone sh key get --force o3:///24575-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:43.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:43.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:43.079" starttime="20210121 14:27:38.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:43.080" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:43.080" starttime="20210121 14:27:43.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:43.081" starttime="20210121 14:27:43.081"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:43.081" starttime="20210121 14:27:38.307"></status>
</kw>
<msg timestamp="20210121 14:27:43.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:43.082" starttime="20210121 14:27:38.306"></status>
</kw>
<msg timestamp="20210121 14:27:43.082" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:27:43.082" starttime="20210121 14:27:38.306"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:43.083" starttime="20210121 14:27:43.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:43.087" level="INFO">Running command 'ozone sh key info o3:///24575-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:46.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:46.241" level="INFO">${output} = {
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:26:57.451Z",
  "modificationTime": "2021-01-21T14:26:59.566Z",
  "rep...</msg>
<status status="PASS" endtime="20210121 14:27:46.241" starttime="20210121 14:27:43.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:46.242" level="INFO">{
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:26:57.451Z",
  "modificationTime": "2021-01-21T14:26:59.566Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594173354868860,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:27:46.242" starttime="20210121 14:27:46.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:46.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:46.243" starttime="20210121 14:27:46.242"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:46.243" starttime="20210121 14:27:43.084"></status>
</kw>
<msg timestamp="20210121 14:27:46.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:46.244" starttime="20210121 14:27:43.084"></status>
</kw>
<msg timestamp="20210121 14:27:46.245" level="INFO">${result} = {
  "volumeName": "24575-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:26:57.451Z",
  "modificationTime": "2021-01-21T14:26:59.566Z",
  "rep...</msg>
<status status="PASS" endtime="20210121 14:27:46.245" starttime="20210121 14:27:43.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:46.245" starttime="20210121 14:27:46.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:46.249" level="INFO">Running command 'ozone sh key list o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:49.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:49.538" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210121 14:27:49.538" starttime="20210121 14:27:46.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:49.539" level="INFO">key1</msg>
<status status="PASS" endtime="20210121 14:27:49.539" starttime="20210121 14:27:49.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:49.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:49.540" starttime="20210121 14:27:49.540"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:49.540" starttime="20210121 14:27:46.247"></status>
</kw>
<msg timestamp="20210121 14:27:49.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:49.541" starttime="20210121 14:27:46.246"></status>
</kw>
<msg timestamp="20210121 14:27:49.541" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210121 14:27:49.541" starttime="20210121 14:27:46.245"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:49.542" starttime="20210121 14:27:49.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:49.545" level="INFO">Running command 'ozone sh key rename o3:///24575-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:52.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:52.391" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:52.391" starttime="20210121 14:27:49.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:52.392" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:52.393" starttime="20210121 14:27:52.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:52.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:52.393" starttime="20210121 14:27:52.393"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:52.394" starttime="20210121 14:27:49.543"></status>
</kw>
<msg timestamp="20210121 14:27:52.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:52.394" starttime="20210121 14:27:49.543"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:52.394" starttime="20210121 14:27:49.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:52.398" level="INFO">Running command 'ozone sh key list o3:///24575-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:55.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:55.737" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210121 14:27:55.737" starttime="20210121 14:27:52.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:55.738" level="INFO">key2</msg>
<status status="PASS" endtime="20210121 14:27:55.738" starttime="20210121 14:27:55.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:55.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:55.739" starttime="20210121 14:27:55.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:55.739" starttime="20210121 14:27:52.395"></status>
</kw>
<msg timestamp="20210121 14:27:55.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:55.739" starttime="20210121 14:27:52.395"></status>
</kw>
<msg timestamp="20210121 14:27:55.740" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210121 14:27:55.740" starttime="20210121 14:27:52.394"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:27:55.740" starttime="20210121 14:27:55.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:55.745" level="INFO">Running command 'ozone sh key delete o3:///24575-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:27:58.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:27:58.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:27:58.868" starttime="20210121 14:27:55.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:27:58.870" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:27:58.870" starttime="20210121 14:27:58.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:27:58.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:27:58.871" starttime="20210121 14:27:58.870"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:58.871" starttime="20210121 14:27:55.742"></status>
</kw>
<msg timestamp="20210121 14:27:58.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:27:58.872" starttime="20210121 14:27:55.741"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:58.872" starttime="20210121 14:27:55.740"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:58.872" starttime="20210121 14:26:54.549"></status>
</kw>
<status status="PASS" endtime="20210121 14:27:58.872" starttime="20210121 14:26:54.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:27:58.876" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:01.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:01.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:01.964" starttime="20210121 14:27:58.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:01.965" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:01.966" starttime="20210121 14:28:01.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:01.966" starttime="20210121 14:28:01.966"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:01.967" starttime="20210121 14:27:58.873"></status>
</kw>
<msg timestamp="20210121 14:28:01.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:01.967" starttime="20210121 14:27:58.873"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:01.967" starttime="20210121 14:27:58.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:01.972" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport | jq -r '. | select(.name=="24575-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:05.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:05.120" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:05.120" starttime="20210121 14:28:01.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:05.121" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:05.121" starttime="20210121 14:28:05.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:05.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:05.122" starttime="20210121 14:28:05.121"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:05.122" starttime="20210121 14:28:01.969"></status>
</kw>
<msg timestamp="20210121 14:28:05.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:05.122" starttime="20210121 14:28:01.968"></status>
</kw>
<msg timestamp="20210121 14:28:05.123" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:05.123" starttime="20210121 14:28:01.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:05.123" starttime="20210121 14:28:05.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:05.127" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:08.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:08.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:08.128" starttime="20210121 14:28:05.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:08.129" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:08.129" starttime="20210121 14:28:08.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:08.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:08.130" starttime="20210121 14:28:08.129"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:08.130" starttime="20210121 14:28:05.124"></status>
</kw>
<msg timestamp="20210121 14:28:08.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:08.130" starttime="20210121 14:28:05.124"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:08.130" starttime="20210121 14:28:05.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:08.135" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport | jq -r '. | select(.name=="24575-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:11.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:11.323" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:11.323" starttime="20210121 14:28:08.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:11.324" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:11.324" starttime="20210121 14:28:11.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:11.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:11.325" starttime="20210121 14:28:11.324"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:11.325" starttime="20210121 14:28:08.132"></status>
</kw>
<msg timestamp="20210121 14:28:11.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:11.326" starttime="20210121 14:28:08.132"></status>
</kw>
<msg timestamp="20210121 14:28:11.326" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:11.326" starttime="20210121 14:28:08.131"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:11.326" starttime="20210121 14:28:11.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:11.330" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///24575-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:14.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:14.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:14.443" starttime="20210121 14:28:11.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:14.444" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:14.444" starttime="20210121 14:28:14.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:14.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:14.445" starttime="20210121 14:28:14.445"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:14.445" starttime="20210121 14:28:11.328"></status>
</kw>
<msg timestamp="20210121 14:28:14.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:14.446" starttime="20210121 14:28:11.327"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:14.446" starttime="20210121 14:28:11.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:14.450" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:17.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:17.705" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:17.706" starttime="20210121 14:28:14.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:17.707" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:17.707" starttime="20210121 14:28:17.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:17.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:17.708" starttime="20210121 14:28:17.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:17.708" starttime="20210121 14:28:14.447"></status>
</kw>
<msg timestamp="20210121 14:28:17.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:17.708" starttime="20210121 14:28:14.447"></status>
</kw>
<msg timestamp="20210121 14:28:17.709" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:17.709" starttime="20210121 14:28:14.446"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:17.709" starttime="20210121 14:28:17.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:17.713" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///24575-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:20.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:20.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:20.734" starttime="20210121 14:28:17.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:20.735" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:20.736" starttime="20210121 14:28:20.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:20.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:20.736" starttime="20210121 14:28:20.736"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:20.737" starttime="20210121 14:28:17.710"></status>
</kw>
<msg timestamp="20210121 14:28:20.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:20.737" starttime="20210121 14:28:17.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:20.737" starttime="20210121 14:28:17.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:20.742" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:23.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:23.973" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:23.973" starttime="20210121 14:28:20.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:23.974" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:23.974" starttime="20210121 14:28:23.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:23.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:23.975" starttime="20210121 14:28:23.974"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:23.976" starttime="20210121 14:28:20.739"></status>
</kw>
<msg timestamp="20210121 14:28:23.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:23.976" starttime="20210121 14:28:20.738"></status>
</kw>
<msg timestamp="20210121 14:28:23.976" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:23.976" starttime="20210121 14:28:20.737"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:23.977" starttime="20210121 14:28:23.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:23.981" level="INFO">Running command 'ozone sh bucket delete o3:///24575-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:27.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:27.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:27.007" starttime="20210121 14:28:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:27.008" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:27.008" starttime="20210121 14:28:27.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:27.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:27.009" starttime="20210121 14:28:27.009"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:27.010" starttime="20210121 14:28:23.978"></status>
</kw>
<msg timestamp="20210121 14:28:27.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:27.010" starttime="20210121 14:28:23.978"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:27.010" starttime="20210121 14:28:23.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:27.014" level="INFO">Running command 'ozone sh volume delete o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:30.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:30.073" level="INFO">${output} = Volume 24575-rpcwport is deleted</msg>
<status status="PASS" endtime="20210121 14:28:30.073" starttime="20210121 14:28:27.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:30.074" level="INFO">Volume 24575-rpcwport is deleted</msg>
<status status="PASS" endtime="20210121 14:28:30.074" starttime="20210121 14:28:30.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:30.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:30.075" starttime="20210121 14:28:30.074"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:30.075" starttime="20210121 14:28:27.011"></status>
</kw>
<msg timestamp="20210121 14:28:30.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:30.075" starttime="20210121 14:28:27.011"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:30.076" starttime="20210121 14:28:27.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:30.083" level="INFO">Running command 'ozone sh volume create o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:33.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:33.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:33.423" starttime="20210121 14:28:30.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:33.425" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:33.425" starttime="20210121 14:28:33.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:33.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:33.425" starttime="20210121 14:28:33.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:33.426" starttime="20210121 14:28:30.077"></status>
</kw>
<msg timestamp="20210121 14:28:33.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:33.429" starttime="20210121 14:28:30.076"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:33.430" starttime="20210121 14:28:30.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:33.435" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport | jq -r '. | select(.name=="24575-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:36.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:36.753" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:36.753" starttime="20210121 14:28:33.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:36.754" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:36.754" starttime="20210121 14:28:36.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:36.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:36.755" starttime="20210121 14:28:36.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:36.755" starttime="20210121 14:28:33.431"></status>
</kw>
<msg timestamp="20210121 14:28:36.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:36.756" starttime="20210121 14:28:33.431"></status>
</kw>
<msg timestamp="20210121 14:28:36.756" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:36.756" starttime="20210121 14:28:33.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:36.756" starttime="20210121 14:28:36.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:36.761" level="INFO">Running command 'ozone sh volume info o3:///24575-rpcwport | jq -r '. | select(.name=="24575-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:40.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:40.042" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:40.043" starttime="20210121 14:28:36.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:40.044" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:40.044" starttime="20210121 14:28:40.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:40.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:40.045" starttime="20210121 14:28:40.044"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:40.045" starttime="20210121 14:28:36.758"></status>
</kw>
<msg timestamp="20210121 14:28:40.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:40.045" starttime="20210121 14:28:36.758"></status>
</kw>
<msg timestamp="20210121 14:28:40.045" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:40.045" starttime="20210121 14:28:36.757"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:40.046" starttime="20210121 14:28:40.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:40.051" level="INFO">Running command 'ozone sh bucket create o3:///24575-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:43.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:43.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:43.105" starttime="20210121 14:28:40.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:43.106" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:43.106" starttime="20210121 14:28:43.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:43.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:43.107" starttime="20210121 14:28:43.106"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:43.107" starttime="20210121 14:28:40.047"></status>
</kw>
<msg timestamp="20210121 14:28:43.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:43.108" starttime="20210121 14:28:40.047"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:43.108" starttime="20210121 14:28:40.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:43.114" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:46.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:46.325" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:46.325" starttime="20210121 14:28:43.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:46.327" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:46.327" starttime="20210121 14:28:46.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:46.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:46.327" starttime="20210121 14:28:46.327"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:46.328" starttime="20210121 14:28:43.109"></status>
</kw>
<msg timestamp="20210121 14:28:46.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:46.328" starttime="20210121 14:28:43.109"></status>
</kw>
<msg timestamp="20210121 14:28:46.328" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:46.328" starttime="20210121 14:28:43.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:46.329" starttime="20210121 14:28:46.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:46.334" level="INFO">Running command 'ozone sh bucket info o3:///24575-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:49.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:49.543" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:28:49.543" starttime="20210121 14:28:46.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:49.545" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:28:49.546" starttime="20210121 14:28:49.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:49.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:49.547" starttime="20210121 14:28:49.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:49.547" starttime="20210121 14:28:46.331"></status>
</kw>
<msg timestamp="20210121 14:28:49.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:49.550" starttime="20210121 14:28:46.330"></status>
</kw>
<msg timestamp="20210121 14:28:49.550" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:28:49.550" starttime="20210121 14:28:46.329"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:49.551" starttime="20210121 14:28:49.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:49.555" level="INFO">Running command 'ozone sh bucket delete o3:///24575-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:52.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:52.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:28:52.361" starttime="20210121 14:28:49.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:52.362" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:28:52.362" starttime="20210121 14:28:52.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:52.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:52.363" starttime="20210121 14:28:52.363"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:52.364" starttime="20210121 14:28:49.552"></status>
</kw>
<msg timestamp="20210121 14:28:52.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:52.364" starttime="20210121 14:28:49.551"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:52.364" starttime="20210121 14:28:49.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:52.368" level="INFO">Running command 'ozone sh volume delete o3:///24575-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:55.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:28:55.320" level="INFO">${output} = Volume 24575-rpcwport is deleted</msg>
<status status="PASS" endtime="20210121 14:28:55.320" starttime="20210121 14:28:52.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:55.321" level="INFO">Volume 24575-rpcwport is deleted</msg>
<status status="PASS" endtime="20210121 14:28:55.321" starttime="20210121 14:28:55.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:28:55.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:28:55.322" starttime="20210121 14:28:55.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:55.322" starttime="20210121 14:28:52.365"></status>
</kw>
<msg timestamp="20210121 14:28:55.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:28:55.322" starttime="20210121 14:28:52.365"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:55.323" starttime="20210121 14:28:52.364"></status>
</kw>
<status status="PASS" endtime="20210121 14:28:55.323" starttime="20210121 14:26:09.848"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:28:55.323" critical="yes" starttime="20210121 14:26:09.847"></status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:55.325" starttime="20210121 14:28:55.325"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:55.328" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:28:58.293" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:28:58.293" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24575-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210121 14:28:58.293" starttime="20210121 14:28:55.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:28:58.294" level="INFO">VOLUME_NOT_FOUND Volume 24575-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210121 14:28:58.294" starttime="20210121 14:28:58.294"></status>
</kw>
<msg timestamp="20210121 14:28:58.295" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24575-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210121 14:28:58.295" starttime="20210121 14:28:55.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210121 14:28:58.295" starttime="20210121 14:28:58.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:28:58.301" level="INFO">Running command 'ozone sh volume create /24575-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:01.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:01.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:01.359" starttime="20210121 14:28:58.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:01.362" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:01.362" starttime="20210121 14:29:01.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:01.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:01.363" starttime="20210121 14:29:01.362"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:01.363" starttime="20210121 14:28:58.297"></status>
</kw>
<msg timestamp="20210121 14:29:01.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:01.363" starttime="20210121 14:28:58.296"></status>
</kw>
<msg timestamp="20210121 14:29:01.364" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:29:01.364" starttime="20210121 14:28:58.296"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:01.364" starttime="20210121 14:29:01.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:01.369" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="24575-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:04.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:04.574" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210121 14:29:04.574" starttime="20210121 14:29:01.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:04.575" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:29:01.144Z",
  "modificationTime": "2021-01-21T14:29:01.144Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:29:04.575" starttime="20210121 14:29:04.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:04.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:04.576" starttime="20210121 14:29:04.576"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:04.577" starttime="20210121 14:29:01.366"></status>
</kw>
<msg timestamp="20210121 14:29:04.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:04.577" starttime="20210121 14:29:01.365"></status>
</kw>
<msg timestamp="20210121 14:29:04.577" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210121 14:29:04.577" starttime="20210121 14:29:01.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:04.578" starttime="20210121 14:29:04.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:04.583" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24575-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:07.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:07.974" level="INFO">${output} = {
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210121 14:29:07.974" starttime="20210121 14:29:04.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:07.975" level="INFO">{
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-21T14:29:01.144Z",
  "modificationTime": "2021-01-21T14:29:01.144Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210121 14:29:07.976" starttime="20210121 14:29:07.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:07.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:07.976" starttime="20210121 14:29:07.976"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:07.977" starttime="20210121 14:29:04.579"></status>
</kw>
<msg timestamp="20210121 14:29:07.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:07.977" starttime="20210121 14:29:04.579"></status>
</kw>
<msg timestamp="20210121 14:29:07.977" level="INFO">${result} = {
  "metadata": {},
  "name": "24575-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210121 14:29:07.977" starttime="20210121 14:29:04.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:07.978" starttime="20210121 14:29:07.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:07.981" level="INFO">Running command 'ozone sh volume setquota /24575-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:10.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:10.925" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:10.925" starttime="20210121 14:29:07.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:10.926" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:10.926" starttime="20210121 14:29:10.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:10.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:10.927" starttime="20210121 14:29:10.926"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:10.927" starttime="20210121 14:29:07.979"></status>
</kw>
<msg timestamp="20210121 14:29:10.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:10.928" starttime="20210121 14:29:07.979"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:10.928" starttime="20210121 14:29:07.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:10.932" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme | jq -r '. | select(.name=="24575-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:14.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:14.134" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:14.135" starttime="20210121 14:29:10.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:14.136" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:14.136" starttime="20210121 14:29:14.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:14.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:14.137" starttime="20210121 14:29:14.136"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:14.137" starttime="20210121 14:29:10.930"></status>
</kw>
<msg timestamp="20210121 14:29:14.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:14.137" starttime="20210121 14:29:10.929"></status>
</kw>
<msg timestamp="20210121 14:29:14.137" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:14.137" starttime="20210121 14:29:10.928"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:14.138" starttime="20210121 14:29:14.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:14.142" level="INFO">Running command 'ozone sh bucket create /24575-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:17.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:17.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:17.152" starttime="20210121 14:29:14.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:17.153" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:17.153" starttime="20210121 14:29:17.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:17.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:17.154" starttime="20210121 14:29:17.153"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:17.154" starttime="20210121 14:29:14.139"></status>
</kw>
<msg timestamp="20210121 14:29:17.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:17.155" starttime="20210121 14:29:14.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:17.155" starttime="20210121 14:29:14.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:17.159" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:20.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:20.359" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210121 14:29:20.359" starttime="20210121 14:29:17.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:20.361" level="INFO">DISK</msg>
<status status="PASS" endtime="20210121 14:29:20.361" starttime="20210121 14:29:20.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:20.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:20.362" starttime="20210121 14:29:20.361"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:20.362" starttime="20210121 14:29:17.156"></status>
</kw>
<msg timestamp="20210121 14:29:20.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:20.363" starttime="20210121 14:29:17.156"></status>
</kw>
<msg timestamp="20210121 14:29:20.363" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210121 14:29:20.363" starttime="20210121 14:29:17.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:20.363" starttime="20210121 14:29:20.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:20.368" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:23.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:23.609" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:23.609" starttime="20210121 14:29:20.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:23.613" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:23.613" starttime="20210121 14:29:23.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:23.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:23.614" starttime="20210121 14:29:23.613"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:23.615" starttime="20210121 14:29:20.365"></status>
</kw>
<msg timestamp="20210121 14:29:23.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:23.615" starttime="20210121 14:29:20.365"></status>
</kw>
<msg timestamp="20210121 14:29:23.616" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210121 14:29:23.616" starttime="20210121 14:29:20.364"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:23.616" starttime="20210121 14:29:23.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:23.621" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:26.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:26.953" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210121 14:29:26.953" starttime="20210121 14:29:23.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:26.954" level="INFO">100</msg>
<status status="PASS" endtime="20210121 14:29:26.955" starttime="20210121 14:29:26.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:26.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:26.956" starttime="20210121 14:29:26.956"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:26.957" starttime="20210121 14:29:23.618"></status>
</kw>
<msg timestamp="20210121 14:29:26.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:26.957" starttime="20210121 14:29:23.618"></status>
</kw>
<msg timestamp="20210121 14:29:26.957" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210121 14:29:26.957" starttime="20210121 14:29:23.617"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:26.958" starttime="20210121 14:29:26.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:26.962" level="INFO">Running command 'ozone sh bucket setquota /24575-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:29.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:29.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:29.943" starttime="20210121 14:29:26.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:29.944" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:29.944" starttime="20210121 14:29:29.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:29.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:29.945" starttime="20210121 14:29:29.945"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:29.946" starttime="20210121 14:29:26.959"></status>
</kw>
<msg timestamp="20210121 14:29:29.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:29.946" starttime="20210121 14:29:26.959"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:29.946" starttime="20210121 14:29:26.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:29.950" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:33.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:33.162" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:29:33.163" starttime="20210121 14:29:29.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:33.164" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210121 14:29:33.164" starttime="20210121 14:29:33.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:33.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:33.165" starttime="20210121 14:29:33.164"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:33.165" starttime="20210121 14:29:29.948"></status>
</kw>
<msg timestamp="20210121 14:29:33.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:33.165" starttime="20210121 14:29:29.947"></status>
</kw>
<msg timestamp="20210121 14:29:33.165" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210121 14:29:33.165" starttime="20210121 14:29:29.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:33.166" starttime="20210121 14:29:33.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:33.170" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:36.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:36.607" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210121 14:29:36.607" starttime="20210121 14:29:33.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:36.609" level="INFO">1000</msg>
<status status="PASS" endtime="20210121 14:29:36.609" starttime="20210121 14:29:36.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:36.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:36.610" starttime="20210121 14:29:36.609"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:36.610" starttime="20210121 14:29:33.167"></status>
</kw>
<msg timestamp="20210121 14:29:36.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:36.610" starttime="20210121 14:29:33.167"></status>
</kw>
<msg timestamp="20210121 14:29:36.612" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210121 14:29:36.612" starttime="20210121 14:29:33.166"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:36.612" starttime="20210121 14:29:36.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:36.618" level="INFO">Running command 'ozone sh bucket list /24575-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:39.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:39.957" level="INFO">${output} = 24575-rpcwoscheme</msg>
<status status="PASS" endtime="20210121 14:29:39.957" starttime="20210121 14:29:36.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:39.958" level="INFO">24575-rpcwoscheme</msg>
<status status="PASS" endtime="20210121 14:29:39.958" starttime="20210121 14:29:39.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:39.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:39.959" starttime="20210121 14:29:39.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:39.959" starttime="20210121 14:29:36.613"></status>
</kw>
<msg timestamp="20210121 14:29:39.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:39.960" starttime="20210121 14:29:36.613"></status>
</kw>
<msg timestamp="20210121 14:29:39.960" level="INFO">${result} = 24575-rpcwoscheme</msg>
<status status="PASS" endtime="20210121 14:29:39.960" starttime="20210121 14:29:36.612"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:29:39.961" starttime="20210121 14:29:39.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:39.966" level="INFO">Running command 'ozone sh key put /24575-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:45.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:45.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:45.039" starttime="20210121 14:29:39.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:45.040" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:45.041" starttime="20210121 14:29:45.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:45.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:45.041" starttime="20210121 14:29:45.041"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:45.042" starttime="20210121 14:29:39.963"></status>
</kw>
<msg timestamp="20210121 14:29:45.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:45.042" starttime="20210121 14:29:39.963"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:45.042" starttime="20210121 14:29:39.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:45.046" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:45.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:45.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:45.049" starttime="20210121 14:29:45.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:45.050" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:45.050" starttime="20210121 14:29:45.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:45.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:45.051" starttime="20210121 14:29:45.050"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:45.051" starttime="20210121 14:29:45.043"></status>
</kw>
<msg timestamp="20210121 14:29:45.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:45.051" starttime="20210121 14:29:45.043"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:45.052" starttime="20210121 14:29:45.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:45.055" level="INFO">Running command 'ozone sh key get /24575-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:49.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:49.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:49.966" starttime="20210121 14:29:45.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:49.967" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:49.967" starttime="20210121 14:29:49.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:49.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:49.968" starttime="20210121 14:29:49.967"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:49.968" starttime="20210121 14:29:45.053"></status>
</kw>
<msg timestamp="20210121 14:29:49.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:49.968" starttime="20210121 14:29:45.052"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:49.969" starttime="20210121 14:29:45.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:49.973" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:49.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:49.975" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:49.975" starttime="20210121 14:29:49.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:49.976" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:49.976" starttime="20210121 14:29:49.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:49.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:49.977" starttime="20210121 14:29:49.977"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:49.978" starttime="20210121 14:29:49.970"></status>
</kw>
<msg timestamp="20210121 14:29:49.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:49.978" starttime="20210121 14:29:49.969"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:49.978" starttime="20210121 14:29:49.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:49.982" level="INFO">Running command 'ozone sh key put -t RATIS /24575-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:55.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:55.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:55.226" starttime="20210121 14:29:49.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:55.227" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:55.227" starttime="20210121 14:29:55.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:55.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:55.228" starttime="20210121 14:29:55.227"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:55.228" starttime="20210121 14:29:49.979"></status>
</kw>
<msg timestamp="20210121 14:29:55.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:55.228" starttime="20210121 14:29:49.979"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:55.228" starttime="20210121 14:29:49.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:55.232" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:29:55.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:29:55.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:29:55.235" starttime="20210121 14:29:55.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:29:55.236" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:29:55.236" starttime="20210121 14:29:55.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:29:55.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:29:55.237" starttime="20210121 14:29:55.236"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:55.237" starttime="20210121 14:29:55.229"></status>
</kw>
<msg timestamp="20210121 14:29:55.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:29:55.238" starttime="20210121 14:29:55.229"></status>
</kw>
<status status="PASS" endtime="20210121 14:29:55.238" starttime="20210121 14:29:55.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:29:55.242" level="INFO">Running command 'ozone sh key get /24575-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:00.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:00.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:00.072" starttime="20210121 14:29:55.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:00.074" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:00.074" starttime="20210121 14:30:00.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:00.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:00.074" starttime="20210121 14:30:00.074"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:00.075" starttime="20210121 14:29:55.239"></status>
</kw>
<msg timestamp="20210121 14:30:00.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:00.075" starttime="20210121 14:29:55.239"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:00.075" starttime="20210121 14:29:55.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:00.079" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:00.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:00.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:00.082" starttime="20210121 14:30:00.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:00.083" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:00.083" starttime="20210121 14:30:00.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:00.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:00.084" starttime="20210121 14:30:00.083"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:00.084" starttime="20210121 14:30:00.076"></status>
</kw>
<msg timestamp="20210121 14:30:00.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:00.085" starttime="20210121 14:30:00.076"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:00.085" starttime="20210121 14:30:00.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:00.088" level="INFO">Running command 'ozone sh key info /24575-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:03.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:03.349" level="INFO">${output} = {
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:52.812Z",
  "modificationTime": "2021-01-21T14:29:54.752Z...</msg>
<status status="PASS" endtime="20210121 14:30:03.349" starttime="20210121 14:30:00.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:03.350" level="INFO">{
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:52.812Z",
  "modificationTime": "2021-01-21T14:29:54.752Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594184847261840,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:30:03.350" starttime="20210121 14:30:03.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:03.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:03.351" starttime="20210121 14:30:03.350"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:03.351" starttime="20210121 14:30:00.086"></status>
</kw>
<msg timestamp="20210121 14:30:03.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:03.351" starttime="20210121 14:30:00.086"></status>
</kw>
<msg timestamp="20210121 14:30:03.352" level="INFO">${result} = {
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:52.812Z",
  "modificationTime": "2021-01-21T14:29:54.752Z...</msg>
<status status="PASS" endtime="20210121 14:30:03.352" starttime="20210121 14:30:00.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:03.352" starttime="20210121 14:30:03.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:03.356" level="INFO">Running command 'ozone sh key delete /24575-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:06.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:06.350" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:06.350" starttime="20210121 14:30:03.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:06.351" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:06.351" starttime="20210121 14:30:06.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:06.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:06.352" starttime="20210121 14:30:06.351"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:06.352" starttime="20210121 14:30:03.354"></status>
</kw>
<msg timestamp="20210121 14:30:06.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:06.353" starttime="20210121 14:30:03.353"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:06.353" starttime="20210121 14:30:03.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:06.357" level="INFO">Running command 'ozone sh key cp /24575-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:11.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:11.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:11.931" starttime="20210121 14:30:06.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:11.932" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:11.932" starttime="20210121 14:30:11.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:11.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:11.933" starttime="20210121 14:30:11.932"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:11.933" starttime="20210121 14:30:06.354"></status>
</kw>
<msg timestamp="20210121 14:30:11.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:11.933" starttime="20210121 14:30:06.354"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:11.934" starttime="20210121 14:30:06.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:11.937" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:11.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:11.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:11.940" starttime="20210121 14:30:11.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:11.941" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:11.941" starttime="20210121 14:30:11.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:11.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:11.942" starttime="20210121 14:30:11.941"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:11.942" starttime="20210121 14:30:11.935"></status>
</kw>
<msg timestamp="20210121 14:30:11.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:11.943" starttime="20210121 14:30:11.934"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:11.943" starttime="20210121 14:30:11.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:11.947" level="INFO">Running command 'ozone sh key get /24575-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:17.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:17.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:17.096" starttime="20210121 14:30:11.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:17.098" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:17.098" starttime="20210121 14:30:17.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:17.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:17.098" starttime="20210121 14:30:17.098"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:17.099" starttime="20210121 14:30:11.944"></status>
</kw>
<msg timestamp="20210121 14:30:17.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:17.099" starttime="20210121 14:30:11.944"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:17.099" starttime="20210121 14:30:11.943"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:17.103" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:17.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:17.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:17.106" starttime="20210121 14:30:17.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:17.107" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:17.107" starttime="20210121 14:30:17.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:17.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:17.108" starttime="20210121 14:30:17.107"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:17.108" starttime="20210121 14:30:17.100"></status>
</kw>
<msg timestamp="20210121 14:30:17.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:17.108" starttime="20210121 14:30:17.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:17.108" starttime="20210121 14:30:17.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:17.114" level="INFO">Running command 'ozone sh key delete /24575-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:20.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:20.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:20.243" starttime="20210121 14:30:17.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:20.244" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:20.245" starttime="20210121 14:30:20.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:20.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:20.245" starttime="20210121 14:30:20.245"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:20.246" starttime="20210121 14:30:17.110"></status>
</kw>
<msg timestamp="20210121 14:30:20.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:20.246" starttime="20210121 14:30:17.109"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:20.246" starttime="20210121 14:30:17.109"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:20.249" level="INFO">Running command 'ozone sh key get /24575-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:23.429" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:30:23.429" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:30:23.429" starttime="20210121 14:30:20.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:23.430" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:30:23.430" starttime="20210121 14:30:23.429"></status>
</kw>
<msg timestamp="20210121 14:30:23.431" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210121 14:30:23.431" starttime="20210121 14:30:20.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:23.431" starttime="20210121 14:30:23.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:23.435" level="INFO">Running command 'ozone sh key get --force /24575-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:28.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:28.573" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:28.573" starttime="20210121 14:30:23.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:28.575" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:28.575" starttime="20210121 14:30:28.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:28.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:28.575" starttime="20210121 14:30:28.575"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:28.576" starttime="20210121 14:30:23.433"></status>
</kw>
<msg timestamp="20210121 14:30:28.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:28.576" starttime="20210121 14:30:23.432"></status>
</kw>
<msg timestamp="20210121 14:30:28.576" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:30:28.576" starttime="20210121 14:30:23.431"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:28.577" starttime="20210121 14:30:28.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:28.581" level="INFO">Running command 'ozone sh key info /24575-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:31.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:31.991" level="INFO">${output} = {
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:42.818Z",
  "modificationTime": "2021-01-21T14:29:44.643Z",
  "...</msg>
<status status="PASS" endtime="20210121 14:30:31.991" starttime="20210121 14:30:28.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:31.992" level="INFO">{
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:42.818Z",
  "modificationTime": "2021-01-21T14:29:44.643Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105594184192295060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210121 14:30:31.993" starttime="20210121 14:30:31.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:31.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:31.993" starttime="20210121 14:30:31.993"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:31.994" starttime="20210121 14:30:28.578"></status>
</kw>
<msg timestamp="20210121 14:30:31.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:31.994" starttime="20210121 14:30:28.578"></status>
</kw>
<msg timestamp="20210121 14:30:31.994" level="INFO">${result} = {
  "volumeName": "24575-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-21T14:29:42.818Z",
  "modificationTime": "2021-01-21T14:29:44.643Z",
  "...</msg>
<status status="PASS" endtime="20210121 14:30:31.994" starttime="20210121 14:30:28.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:31.995" starttime="20210121 14:30:31.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:31.999" level="INFO">Running command 'ozone sh key list /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:35.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:35.338" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210121 14:30:35.338" starttime="20210121 14:30:31.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:35.339" level="INFO">key1</msg>
<status status="PASS" endtime="20210121 14:30:35.339" starttime="20210121 14:30:35.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:35.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:35.340" starttime="20210121 14:30:35.339"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:35.340" starttime="20210121 14:30:31.996"></status>
</kw>
<msg timestamp="20210121 14:30:35.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:35.341" starttime="20210121 14:30:31.996"></status>
</kw>
<msg timestamp="20210121 14:30:35.341" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210121 14:30:35.341" starttime="20210121 14:30:31.995"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:35.342" starttime="20210121 14:30:35.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:35.346" level="INFO">Running command 'ozone sh key rename /24575-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:38.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:38.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:38.444" starttime="20210121 14:30:35.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:38.445" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:38.445" starttime="20210121 14:30:38.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:38.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:38.446" starttime="20210121 14:30:38.445"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:38.446" starttime="20210121 14:30:35.343"></status>
</kw>
<msg timestamp="20210121 14:30:38.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:38.446" starttime="20210121 14:30:35.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:38.446" starttime="20210121 14:30:35.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:38.452" level="INFO">Running command 'ozone sh key list /24575-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:41.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:41.725" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210121 14:30:41.725" starttime="20210121 14:30:38.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:41.726" level="INFO">key2</msg>
<status status="PASS" endtime="20210121 14:30:41.726" starttime="20210121 14:30:41.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:41.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:41.727" starttime="20210121 14:30:41.726"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:41.727" starttime="20210121 14:30:38.448"></status>
</kw>
<msg timestamp="20210121 14:30:41.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:41.728" starttime="20210121 14:30:38.447"></status>
</kw>
<msg timestamp="20210121 14:30:41.728" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210121 14:30:41.728" starttime="20210121 14:30:38.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:41.729" starttime="20210121 14:30:41.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:41.732" level="INFO">Running command 'ozone sh key delete /24575-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:44.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:44.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:44.597" starttime="20210121 14:30:41.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:44.598" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:44.598" starttime="20210121 14:30:44.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:44.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:44.599" starttime="20210121 14:30:44.599"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:44.600" starttime="20210121 14:30:41.730"></status>
</kw>
<msg timestamp="20210121 14:30:44.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:44.600" starttime="20210121 14:30:41.729"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:44.600" starttime="20210121 14:30:41.729"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:44.600" starttime="20210121 14:29:39.961"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:44.600" starttime="20210121 14:29:39.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:44.604" level="INFO">Running command 'ozone sh volume clrquota --space-quota /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:47.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:47.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:47.461" starttime="20210121 14:30:44.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:47.463" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:47.463" starttime="20210121 14:30:47.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:47.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:47.463" starttime="20210121 14:30:47.463"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:47.464" starttime="20210121 14:30:44.601"></status>
</kw>
<msg timestamp="20210121 14:30:47.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:47.464" starttime="20210121 14:30:44.601"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:47.464" starttime="20210121 14:30:44.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:47.469" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme | jq -r '. | select(.name=="24575-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:50.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:50.629" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:30:50.629" starttime="20210121 14:30:47.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:50.630" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:30:50.630" starttime="20210121 14:30:50.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:50.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:50.631" starttime="20210121 14:30:50.630"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:50.631" starttime="20210121 14:30:47.466"></status>
</kw>
<msg timestamp="20210121 14:30:50.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:50.632" starttime="20210121 14:30:47.465"></status>
</kw>
<msg timestamp="20210121 14:30:50.632" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:30:50.632" starttime="20210121 14:30:47.464"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:50.633" starttime="20210121 14:30:50.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:50.636" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:53.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:53.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:53.511" starttime="20210121 14:30:50.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:53.512" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:53.512" starttime="20210121 14:30:53.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:53.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:53.514" starttime="20210121 14:30:53.513"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:53.514" starttime="20210121 14:30:50.634"></status>
</kw>
<msg timestamp="20210121 14:30:53.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:53.514" starttime="20210121 14:30:50.633"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:53.515" starttime="20210121 14:30:50.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:53.519" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme | jq -r '. | select(.name=="24575-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:56.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:56.760" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:30:56.760" starttime="20210121 14:30:53.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:56.761" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:30:56.761" starttime="20210121 14:30:56.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:56.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:56.762" starttime="20210121 14:30:56.762"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:56.762" starttime="20210121 14:30:53.516"></status>
</kw>
<msg timestamp="20210121 14:30:56.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:56.763" starttime="20210121 14:30:53.516"></status>
</kw>
<msg timestamp="20210121 14:30:56.763" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:30:56.763" starttime="20210121 14:30:53.515"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:30:56.764" starttime="20210121 14:30:56.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:56.767" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /24575-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:30:59.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:30:59.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:30:59.814" starttime="20210121 14:30:56.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:30:59.817" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:30:59.817" starttime="20210121 14:30:59.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:30:59.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:30:59.818" starttime="20210121 14:30:59.817"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:59.818" starttime="20210121 14:30:56.765"></status>
</kw>
<msg timestamp="20210121 14:30:59.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:30:59.819" starttime="20210121 14:30:56.764"></status>
</kw>
<status status="PASS" endtime="20210121 14:30:59.819" starttime="20210121 14:30:56.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:30:59.823" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:03.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:03.064" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:03.065" starttime="20210121 14:30:59.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:03.069" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:03.070" starttime="20210121 14:31:03.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:03.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:03.070" starttime="20210121 14:31:03.070"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:03.071" starttime="20210121 14:30:59.821"></status>
</kw>
<msg timestamp="20210121 14:31:03.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:03.071" starttime="20210121 14:30:59.820"></status>
</kw>
<msg timestamp="20210121 14:31:03.072" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:03.072" starttime="20210121 14:30:59.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:03.073" starttime="20210121 14:31:03.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:03.076" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /24575-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:06.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:06.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:06.031" starttime="20210121 14:31:03.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:06.032" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:06.032" starttime="20210121 14:31:06.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:06.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:06.033" starttime="20210121 14:31:06.032"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:06.033" starttime="20210121 14:31:03.074"></status>
</kw>
<msg timestamp="20210121 14:31:06.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:06.034" starttime="20210121 14:31:03.073"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:06.034" starttime="20210121 14:31:03.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:06.038" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:09.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:09.628" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:09.628" starttime="20210121 14:31:06.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:09.629" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:09.629" starttime="20210121 14:31:09.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:09.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:09.630" starttime="20210121 14:31:09.629"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:09.630" starttime="20210121 14:31:06.035"></status>
</kw>
<msg timestamp="20210121 14:31:09.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:09.630" starttime="20210121 14:31:06.035"></status>
</kw>
<msg timestamp="20210121 14:31:09.631" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:09.631" starttime="20210121 14:31:06.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:09.631" starttime="20210121 14:31:09.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:09.635" level="INFO">Running command 'ozone sh bucket delete /24575-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:12.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:12.606" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:12.606" starttime="20210121 14:31:09.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:12.608" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:12.608" starttime="20210121 14:31:12.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:12.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:12.610" starttime="20210121 14:31:12.608"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:12.610" starttime="20210121 14:31:09.633"></status>
</kw>
<msg timestamp="20210121 14:31:12.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:12.611" starttime="20210121 14:31:09.632"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:12.611" starttime="20210121 14:31:09.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:12.616" level="INFO">Running command 'ozone sh volume delete /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:15.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:15.721" level="INFO">${output} = Volume 24575-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210121 14:31:15.721" starttime="20210121 14:31:12.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:15.722" level="INFO">Volume 24575-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210121 14:31:15.722" starttime="20210121 14:31:15.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:15.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:15.723" starttime="20210121 14:31:15.722"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:15.723" starttime="20210121 14:31:12.613"></status>
</kw>
<msg timestamp="20210121 14:31:15.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:15.724" starttime="20210121 14:31:12.612"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:15.724" starttime="20210121 14:31:12.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:15.728" level="INFO">Running command 'ozone sh volume create /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:18.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:18.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:18.744" starttime="20210121 14:31:15.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:18.745" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:18.745" starttime="20210121 14:31:18.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:18.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:18.746" starttime="20210121 14:31:18.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:18.746" starttime="20210121 14:31:15.725"></status>
</kw>
<msg timestamp="20210121 14:31:18.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:18.746" starttime="20210121 14:31:15.725"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:18.746" starttime="20210121 14:31:15.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:18.750" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme | jq -r '. | select(.name=="24575-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:22.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:22.098" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:22.098" starttime="20210121 14:31:18.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:22.100" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:22.100" starttime="20210121 14:31:22.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:22.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:22.101" starttime="20210121 14:31:22.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:22.101" starttime="20210121 14:31:18.748"></status>
</kw>
<msg timestamp="20210121 14:31:22.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:22.101" starttime="20210121 14:31:18.748"></status>
</kw>
<msg timestamp="20210121 14:31:22.101" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:22.102" starttime="20210121 14:31:18.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:22.102" starttime="20210121 14:31:22.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:22.107" level="INFO">Running command 'ozone sh volume info /24575-rpcwoscheme | jq -r '. | select(.name=="24575-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:25.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:25.251" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:25.251" starttime="20210121 14:31:22.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:25.252" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:25.252" starttime="20210121 14:31:25.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:25.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:25.253" starttime="20210121 14:31:25.252"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:25.254" starttime="20210121 14:31:22.104"></status>
</kw>
<msg timestamp="20210121 14:31:25.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:25.254" starttime="20210121 14:31:22.103"></status>
</kw>
<msg timestamp="20210121 14:31:25.254" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:25.254" starttime="20210121 14:31:22.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:25.255" starttime="20210121 14:31:25.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:25.258" level="INFO">Running command 'ozone sh bucket create /24575-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:28.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:28.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:28.320" starttime="20210121 14:31:25.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:28.321" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:28.321" starttime="20210121 14:31:28.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:28.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:28.322" starttime="20210121 14:31:28.322"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:28.323" starttime="20210121 14:31:25.256"></status>
</kw>
<msg timestamp="20210121 14:31:28.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:28.323" starttime="20210121 14:31:25.256"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:28.324" starttime="20210121 14:31:25.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:28.328" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:31.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:31.556" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:31.556" starttime="20210121 14:31:28.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:31.557" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:31.557" starttime="20210121 14:31:31.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:31.558" starttime="20210121 14:31:31.557"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:31.558" starttime="20210121 14:31:28.325"></status>
</kw>
<msg timestamp="20210121 14:31:31.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:31.559" starttime="20210121 14:31:28.325"></status>
</kw>
<msg timestamp="20210121 14:31:31.559" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:31.559" starttime="20210121 14:31:28.324"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:31.559" starttime="20210121 14:31:31.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:31.563" level="INFO">Running command 'ozone sh bucket info /24575-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:34.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:34.898" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210121 14:31:34.898" starttime="20210121 14:31:31.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:34.899" level="INFO">-1</msg>
<status status="PASS" endtime="20210121 14:31:34.899" starttime="20210121 14:31:34.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:34.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:34.900" starttime="20210121 14:31:34.899"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:34.900" starttime="20210121 14:31:31.561"></status>
</kw>
<msg timestamp="20210121 14:31:34.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:34.901" starttime="20210121 14:31:31.560"></status>
</kw>
<msg timestamp="20210121 14:31:34.901" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210121 14:31:34.901" starttime="20210121 14:31:31.560"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:34.902" starttime="20210121 14:31:34.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:34.906" level="INFO">Running command 'ozone sh bucket delete /24575-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:37.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:37.840" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:37.840" starttime="20210121 14:31:34.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:37.841" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:37.841" starttime="20210121 14:31:37.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:37.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:37.842" starttime="20210121 14:31:37.841"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:37.842" starttime="20210121 14:31:34.903"></status>
</kw>
<msg timestamp="20210121 14:31:37.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:37.842" starttime="20210121 14:31:34.903"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:37.843" starttime="20210121 14:31:34.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:37.847" level="INFO">Running command 'ozone sh volume delete /24575-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:40.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:40.890" level="INFO">${output} = Volume 24575-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210121 14:31:40.890" starttime="20210121 14:31:37.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:40.892" level="INFO">Volume 24575-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210121 14:31:40.892" starttime="20210121 14:31:40.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:40.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:40.893" starttime="20210121 14:31:40.892"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:40.893" starttime="20210121 14:31:37.844"></status>
</kw>
<msg timestamp="20210121 14:31:40.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:40.893" starttime="20210121 14:31:37.843"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:40.894" starttime="20210121 14:31:37.843"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:40.894" starttime="20210121 14:28:55.325"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:31:40.894" critical="yes" starttime="20210121 14:28:55.324"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20210121 14:31:40.898" starttime="20210121 14:22:07.069"></status>
</suite>
<status status="PASS" endtime="20210121 14:31:40.906" starttime="20210121 14:16:01.512"></status>
</suite>
<suite source="/opt/hadoop/smoketest/gdpr" id="s1-s2" name="Gdpr">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1-s2-s1" name="Gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:31:45.443" level="INFO">${random} = xwndd</msg>
<status status="PASS" endtime="20210121 14:31:45.443" starttime="20210121 14:31:45.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:31:45.444" level="INFO">${volume} = xwndd</msg>
<status status="PASS" endtime="20210121 14:31:45.444" starttime="20210121 14:31:45.443"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:45.444" starttime="20210121 14:31:45.442"></status>
</kw>
<test id="s1-s2-s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:45.453" level="INFO">Running command 'ozone sh volume create /xwndd --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:48.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:48.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:48.400" starttime="20210121 14:31:45.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:48.401" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:48.401" starttime="20210121 14:31:48.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:48.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:48.402" starttime="20210121 14:31:48.401"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:48.402" starttime="20210121 14:31:45.446"></status>
</kw>
<msg timestamp="20210121 14:31:48.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:48.402" starttime="20210121 14:31:45.446"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:48.402" starttime="20210121 14:31:45.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:48.406" level="INFO">Running command 'ozone sh bucket create /xwndd/mybucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:51.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:51.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:31:51.227" starttime="20210121 14:31:48.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:51.228" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:31:51.228" starttime="20210121 14:31:51.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:51.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:51.229" starttime="20210121 14:31:51.228"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:51.229" starttime="20210121 14:31:48.403"></status>
</kw>
<msg timestamp="20210121 14:31:51.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:51.229" starttime="20210121 14:31:48.403"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:51.230" starttime="20210121 14:31:48.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:51.234" level="INFO">Running command 'ozone sh bucket info /xwndd/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:31:54.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:31:54.514" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210121 14:31:54.514" starttime="20210121 14:31:51.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:31:54.515" level="INFO">null</msg>
<status status="PASS" endtime="20210121 14:31:54.515" starttime="20210121 14:31:54.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:31:54.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:31:54.516" starttime="20210121 14:31:54.515"></status>
</kw>
<status status="PASS" endtime="20210121 14:31:54.516" starttime="20210121 14:31:51.231"></status>
</kw>
<msg timestamp="20210121 14:31:54.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:31:54.516" starttime="20210121 14:31:51.231"></status>
</kw>
<msg timestamp="20210121 14:31:54.516" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210121 14:31:54.517" starttime="20210121 14:31:51.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210121 14:31:54.517" starttime="20210121 14:31:54.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket1/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:31:54.521" level="INFO">Running command 'ozone sh key put /xwndd/mybucket1/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:00.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:00.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:00.134" starttime="20210121 14:31:54.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:00.136" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:00.136" starttime="20210121 14:32:00.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:00.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:00.137" starttime="20210121 14:32:00.136"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:00.137" starttime="20210121 14:31:54.518"></status>
</kw>
<msg timestamp="20210121 14:32:00.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:00.137" starttime="20210121 14:31:54.518"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:00.138" starttime="20210121 14:31:54.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:00.141" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:00.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:00.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:00.144" starttime="20210121 14:32:00.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:00.145" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:00.146" starttime="20210121 14:32:00.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:00.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:00.146" starttime="20210121 14:32:00.146"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:00.147" starttime="20210121 14:32:00.139"></status>
</kw>
<msg timestamp="20210121 14:32:00.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:00.147" starttime="20210121 14:32:00.138"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:00.147" starttime="20210121 14:32:00.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:00.151" level="INFO">Running command 'ozone sh key info /xwndd/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:03.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:03.409" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210121 14:32:03.409" starttime="20210121 14:32:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:03.411" level="INFO">null</msg>
<status status="PASS" endtime="20210121 14:32:03.411" starttime="20210121 14:32:03.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:03.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:03.411" starttime="20210121 14:32:03.411"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:03.412" starttime="20210121 14:32:00.148"></status>
</kw>
<msg timestamp="20210121 14:32:03.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:03.412" starttime="20210121 14:32:00.148"></status>
</kw>
<msg timestamp="20210121 14:32:03.412" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210121 14:32:03.412" starttime="20210121 14:32:00.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:03.413" starttime="20210121 14:32:03.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket1/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:03.417" level="INFO">Running command 'ozone sh key delete /xwndd/mybucket1/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:06.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:06.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:06.422" starttime="20210121 14:32:03.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:06.423" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:06.423" starttime="20210121 14:32:06.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:06.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:06.424" starttime="20210121 14:32:06.423"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:06.424" starttime="20210121 14:32:03.414"></status>
</kw>
<msg timestamp="20210121 14:32:06.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:06.424" starttime="20210121 14:32:03.414"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:06.424" starttime="20210121 14:32:03.413"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:06.425" starttime="20210121 14:31:45.445"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:32:06.425" critical="yes" starttime="20210121 14:31:45.444"></status>
</test>
<test id="s1-s2-s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:06.431" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /xwndd/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:09.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:09.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:09.579" starttime="20210121 14:32:06.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:09.580" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:09.580" starttime="20210121 14:32:09.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:09.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:09.581" starttime="20210121 14:32:09.580"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:09.581" starttime="20210121 14:32:06.428"></status>
</kw>
<msg timestamp="20210121 14:32:09.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:09.582" starttime="20210121 14:32:06.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:09.582" starttime="20210121 14:32:06.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:09.586" level="INFO">Running command 'ozone sh bucket info /xwndd/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:12.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:12.703" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210121 14:32:12.703" starttime="20210121 14:32:09.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:12.705" level="INFO">true</msg>
<status status="PASS" endtime="20210121 14:32:12.705" starttime="20210121 14:32:12.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:12.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:12.705" starttime="20210121 14:32:12.705"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:12.706" starttime="20210121 14:32:09.583"></status>
</kw>
<msg timestamp="20210121 14:32:12.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:12.706" starttime="20210121 14:32:09.583"></status>
</kw>
<msg timestamp="20210121 14:32:12.707" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210121 14:32:12.707" starttime="20210121 14:32:09.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:12.708" starttime="20210121 14:32:12.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket2/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:12.711" level="INFO">Running command 'ozone sh key put /xwndd/mybucket2/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:17.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:17.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:17.774" starttime="20210121 14:32:12.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:17.775" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:17.775" starttime="20210121 14:32:17.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:17.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:17.776" starttime="20210121 14:32:17.775"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:17.776" starttime="20210121 14:32:12.709"></status>
</kw>
<msg timestamp="20210121 14:32:17.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:17.776" starttime="20210121 14:32:12.708"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:17.776" starttime="20210121 14:32:12.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:17.780" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:17.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:17.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:17.782" starttime="20210121 14:32:17.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:17.783" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:17.784" starttime="20210121 14:32:17.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:17.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:17.784" starttime="20210121 14:32:17.784"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:17.785" starttime="20210121 14:32:17.777"></status>
</kw>
<msg timestamp="20210121 14:32:17.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:17.785" starttime="20210121 14:32:17.777"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:17.785" starttime="20210121 14:32:17.777"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:17.788" level="INFO">Running command 'ozone sh key info /xwndd/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:21.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:21.059" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210121 14:32:21.059" starttime="20210121 14:32:17.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:21.060" level="INFO">true</msg>
<status status="PASS" endtime="20210121 14:32:21.060" starttime="20210121 14:32:21.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:21.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:21.061" starttime="20210121 14:32:21.060"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:21.061" starttime="20210121 14:32:17.786"></status>
</kw>
<msg timestamp="20210121 14:32:21.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:21.062" starttime="20210121 14:32:17.786"></status>
</kw>
<msg timestamp="20210121 14:32:21.062" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210121 14:32:21.062" starttime="20210121 14:32:17.785"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:21.063" starttime="20210121 14:32:21.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket2/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:21.066" level="INFO">Running command 'ozone sh key delete /xwndd/mybucket2/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:24.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:24.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:24.097" starttime="20210121 14:32:21.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:24.098" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:24.099" starttime="20210121 14:32:24.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:24.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:24.099" starttime="20210121 14:32:24.099"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:24.100" starttime="20210121 14:32:21.064"></status>
</kw>
<msg timestamp="20210121 14:32:24.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:24.100" starttime="20210121 14:32:21.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:24.100" starttime="20210121 14:32:21.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:24.100" starttime="20210121 14:32:06.427"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:32:24.101" critical="yes" starttime="20210121 14:32:06.426"></status>
</test>
<test id="s1-s2-s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:24.107" level="INFO">Running command 'ozone sh bucket create -g=true /xwndd/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:26.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:26.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:26.958" starttime="20210121 14:32:24.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:26.959" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:26.959" starttime="20210121 14:32:26.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:26.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:26.960" starttime="20210121 14:32:26.959"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:26.960" starttime="20210121 14:32:24.104"></status>
</kw>
<msg timestamp="20210121 14:32:26.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:26.960" starttime="20210121 14:32:24.104"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:26.960" starttime="20210121 14:32:24.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:26.964" level="INFO">Running command 'ozone sh bucket info /xwndd/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:30.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:30.241" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210121 14:32:30.241" starttime="20210121 14:32:26.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:30.242" level="INFO">true</msg>
<status status="PASS" endtime="20210121 14:32:30.242" starttime="20210121 14:32:30.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:30.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:30.243" starttime="20210121 14:32:30.242"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:30.243" starttime="20210121 14:32:26.962"></status>
</kw>
<msg timestamp="20210121 14:32:30.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:30.243" starttime="20210121 14:32:26.961"></status>
</kw>
<msg timestamp="20210121 14:32:30.243" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210121 14:32:30.244" starttime="20210121 14:32:26.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:30.244" starttime="20210121 14:32:30.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket3/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:30.249" level="INFO">Running command 'ozone sh key put /xwndd/mybucket3/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:35.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:35.174" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:35.174" starttime="20210121 14:32:30.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:35.176" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:35.176" starttime="20210121 14:32:35.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:35.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:35.176" starttime="20210121 14:32:35.176"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:35.177" starttime="20210121 14:32:30.245"></status>
</kw>
<msg timestamp="20210121 14:32:35.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:35.177" starttime="20210121 14:32:30.245"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:35.177" starttime="20210121 14:32:30.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:35.181" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:35.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:35.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:35.184" starttime="20210121 14:32:35.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:35.184" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:35.185" starttime="20210121 14:32:35.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:35.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:35.186" starttime="20210121 14:32:35.185"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:35.186" starttime="20210121 14:32:35.178"></status>
</kw>
<msg timestamp="20210121 14:32:35.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:35.186" starttime="20210121 14:32:35.178"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:35.186" starttime="20210121 14:32:35.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:35.189" level="INFO">Running command 'ozone sh key info /xwndd/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:38.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:38.323" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210121 14:32:38.324" starttime="20210121 14:32:35.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:38.325" level="INFO">true</msg>
<status status="PASS" endtime="20210121 14:32:38.325" starttime="20210121 14:32:38.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:38.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:38.326" starttime="20210121 14:32:38.325"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:38.326" starttime="20210121 14:32:35.187"></status>
</kw>
<msg timestamp="20210121 14:32:38.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:38.326" starttime="20210121 14:32:35.187"></status>
</kw>
<msg timestamp="20210121 14:32:38.326" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210121 14:32:38.326" starttime="20210121 14:32:35.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:38.327" starttime="20210121 14:32:38.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket3/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:38.331" level="INFO">Running command 'ozone sh key delete /xwndd/mybucket3/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:41.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:41.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:41.377" starttime="20210121 14:32:38.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:41.378" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:41.378" starttime="20210121 14:32:41.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:41.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:41.379" starttime="20210121 14:32:41.378"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:41.379" starttime="20210121 14:32:38.328"></status>
</kw>
<msg timestamp="20210121 14:32:41.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:41.380" starttime="20210121 14:32:38.328"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:41.380" starttime="20210121 14:32:38.327"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:41.380" starttime="20210121 14:32:24.102"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:32:41.380" critical="yes" starttime="20210121 14:32:24.101"></status>
</test>
<test id="s1-s2-s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:41.386" level="INFO">Running command 'ozone sh bucket create /xwndd/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:44.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:44.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:44.238" starttime="20210121 14:32:41.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:44.239" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:44.239" starttime="20210121 14:32:44.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:44.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:44.240" starttime="20210121 14:32:44.239"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:44.240" starttime="20210121 14:32:41.383"></status>
</kw>
<msg timestamp="20210121 14:32:44.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:44.241" starttime="20210121 14:32:41.383"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:44.241" starttime="20210121 14:32:41.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:44.245" level="INFO">Running command 'ozone sh bucket info /xwndd/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:47.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:47.609" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210121 14:32:47.609" starttime="20210121 14:32:44.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:47.611" level="INFO">null</msg>
<status status="PASS" endtime="20210121 14:32:47.611" starttime="20210121 14:32:47.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:47.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:47.611" starttime="20210121 14:32:47.611"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:47.612" starttime="20210121 14:32:44.242"></status>
</kw>
<msg timestamp="20210121 14:32:47.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:47.612" starttime="20210121 14:32:44.242"></status>
</kw>
<msg timestamp="20210121 14:32:47.612" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210121 14:32:47.612" starttime="20210121 14:32:44.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:47.613" starttime="20210121 14:32:47.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket4/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:47.617" level="INFO">Running command 'ozone sh key put /xwndd/mybucket4/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:52.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:52.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:52.727" starttime="20210121 14:32:47.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:52.729" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:52.729" starttime="20210121 14:32:52.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:52.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:52.729" starttime="20210121 14:32:52.729"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:52.730" starttime="20210121 14:32:47.614"></status>
</kw>
<msg timestamp="20210121 14:32:52.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:52.730" starttime="20210121 14:32:47.614"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:52.730" starttime="20210121 14:32:47.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:52.734" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:52.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:52.737" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:52.737" starttime="20210121 14:32:52.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:52.738" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:52.738" starttime="20210121 14:32:52.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:52.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:52.739" starttime="20210121 14:32:52.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:52.739" starttime="20210121 14:32:52.732"></status>
</kw>
<msg timestamp="20210121 14:32:52.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:52.739" starttime="20210121 14:32:52.731"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:52.739" starttime="20210121 14:32:52.730"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:52.743" level="INFO">Running command 'ozone sh key info /xwndd/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:55.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:55.875" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210121 14:32:55.875" starttime="20210121 14:32:52.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:55.876" level="INFO">null</msg>
<status status="PASS" endtime="20210121 14:32:55.876" starttime="20210121 14:32:55.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:55.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:55.877" starttime="20210121 14:32:55.876"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:55.877" starttime="20210121 14:32:52.741"></status>
</kw>
<msg timestamp="20210121 14:32:55.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:55.877" starttime="20210121 14:32:52.740"></status>
</kw>
<msg timestamp="20210121 14:32:55.878" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210121 14:32:55.878" starttime="20210121 14:32:52.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210121 14:32:55.878" starttime="20210121 14:32:55.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket4/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:32:55.882" level="INFO">Running command 'ozone sh key delete /xwndd/mybucket4/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:32:58.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:32:58.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:32:58.924" starttime="20210121 14:32:55.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:32:58.926" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:32:58.926" starttime="20210121 14:32:58.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:32:58.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:32:58.927" starttime="20210121 14:32:58.926"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:58.927" starttime="20210121 14:32:55.880"></status>
</kw>
<msg timestamp="20210121 14:32:58.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:32:58.927" starttime="20210121 14:32:55.879"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:58.928" starttime="20210121 14:32:55.878"></status>
</kw>
<status status="PASS" endtime="20210121 14:32:58.928" starttime="20210121 14:32:41.382"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:32:58.928" critical="yes" starttime="20210121 14:32:41.381"></status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="PASS" endtime="20210121 14:32:58.930" starttime="20210121 14:31:45.411"></status>
</suite>
<status status="PASS" endtime="20210121 14:32:58.934" starttime="20210121 14:31:45.380"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib" id="s1-s3" name="Lib">
<suite source="/opt/hadoop/smoketest/lib/fs_tests.robot" id="s1-s3-s1" name="Fs Tests">
<test id="s1-s3-s1-t1" name="Format o3fs URL without path">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.752" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:14:54.752" starttime="20210121 14:14:54.751"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.752" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.753" starttime="20210121 14:14:54.752"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.753" starttime="20210121 14:14:54.751"></status>
</kw>
<msg timestamp="20210121 14:14:54.753" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.753" starttime="20210121 14:14:54.750"></status>
</kw>
<msg timestamp="20210121 14:14:54.753" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210121 14:14:54.753" starttime="20210121 14:14:54.749"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.754" starttime="20210121 14:14:54.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.754" critical="yes" starttime="20210121 14:14:54.748"></status>
</test>
<test id="s1-s3-s1-t2" name="Format o3fs URL with path">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.758" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:14:54.758" starttime="20210121 14:14:54.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.759" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.766" starttime="20210121 14:14:54.758"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.766" starttime="20210121 14:14:54.757"></status>
</kw>
<msg timestamp="20210121 14:14:54.766" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.766" starttime="20210121 14:14:54.756"></status>
</kw>
<msg timestamp="20210121 14:14:54.767" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.767" starttime="20210121 14:14:54.756"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.767" starttime="20210121 14:14:54.767"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.767" critical="yes" starttime="20210121 14:14:54.755"></status>
</test>
<test id="s1-s3-s1-t3" name="Format o3fs URL with OM">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.779" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:14:54.779" starttime="20210121 14:14:54.778"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.779" level="INFO">${result} = .omservice</msg>
<status status="PASS" endtime="20210121 14:14:54.780" starttime="20210121 14:14:54.779"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.780" starttime="20210121 14:14:54.778"></status>
</kw>
<msg timestamp="20210121 14:14:54.780" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" endtime="20210121 14:14:54.780" starttime="20210121 14:14:54.777"></status>
</kw>
<msg timestamp="20210121 14:14:54.780" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.780" starttime="20210121 14:14:54.776"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.781" starttime="20210121 14:14:54.780"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.781" critical="yes" starttime="20210121 14:14:54.775"></status>
</test>
<test id="s1-s3-s1-t4" name="Format ofs URL without path">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.785" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:14:54.785" starttime="20210121 14:14:54.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.786" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.786" starttime="20210121 14:14:54.785"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.786" starttime="20210121 14:14:54.784"></status>
</kw>
<msg timestamp="20210121 14:14:54.786" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.786" starttime="20210121 14:14:54.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.791" starttime="20210121 14:14:54.791"></status>
</kw>
<msg timestamp="20210121 14:14:54.791" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:14:54.791" starttime="20210121 14:14:54.787"></status>
</kw>
<msg timestamp="20210121 14:14:54.792" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210121 14:14:54.792" starttime="20210121 14:14:54.783"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.792" starttime="20210121 14:14:54.792"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.793" critical="yes" starttime="20210121 14:14:54.782"></status>
</test>
<test id="s1-s3-s1-t5" name="Format ofs URL with path">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.797" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:14:54.797" starttime="20210121 14:14:54.796"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.797" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.797" starttime="20210121 14:14:54.797"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.798" starttime="20210121 14:14:54.795"></status>
</kw>
<msg timestamp="20210121 14:14:54.798" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.798" starttime="20210121 14:14:54.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.799" level="INFO">${first} = d</msg>
<status status="PASS" endtime="20210121 14:14:54.799" starttime="20210121 14:14:54.799"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.800" level="INFO">${result} = /dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.800" starttime="20210121 14:14:54.799"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.800" starttime="20210121 14:14:54.798"></status>
</kw>
<msg timestamp="20210121 14:14:54.800" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.800" starttime="20210121 14:14:54.798"></status>
</kw>
<msg timestamp="20210121 14:14:54.801" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.801" starttime="20210121 14:14:54.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.801" starttime="20210121 14:14:54.801"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.801" critical="yes" starttime="20210121 14:14:54.794"></status>
</test>
<test id="s1-s3-s1-t6" name="Format ofs URL with OM">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.805" level="INFO">${last} = 4</msg>
<status status="PASS" endtime="20210121 14:14:54.805" starttime="20210121 14:14:54.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.806" level="INFO">${result} = om:1234/</msg>
<status status="PASS" endtime="20210121 14:14:54.806" starttime="20210121 14:14:54.806"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.807" starttime="20210121 14:14:54.804"></status>
</kw>
<msg timestamp="20210121 14:14:54.807" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" endtime="20210121 14:14:54.807" starttime="20210121 14:14:54.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.809" level="INFO">${first} = d</msg>
<status status="PASS" endtime="20210121 14:14:54.809" starttime="20210121 14:14:54.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.810" level="INFO">${result} = /dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.810" starttime="20210121 14:14:54.809"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.810" starttime="20210121 14:14:54.807"></status>
</kw>
<msg timestamp="20210121 14:14:54.810" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.810" starttime="20210121 14:14:54.807"></status>
</kw>
<msg timestamp="20210121 14:14:54.811" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" endtime="20210121 14:14:54.811" starttime="20210121 14:14:54.803"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.811" starttime="20210121 14:14:54.811"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.811" critical="yes" starttime="20210121 14:14:54.803"></status>
</test>
<test id="s1-s3-s1-t7" name="Format FS URL with ofs scheme">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.816" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:14:54.816" starttime="20210121 14:14:54.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.817" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.817" starttime="20210121 14:14:54.817"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.817" starttime="20210121 14:14:54.815"></status>
</kw>
<msg timestamp="20210121 14:14:54.817" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.818" starttime="20210121 14:14:54.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.819" starttime="20210121 14:14:54.818"></status>
</kw>
<msg timestamp="20210121 14:14:54.819" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:14:54.819" starttime="20210121 14:14:54.818"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.819" starttime="20210121 14:14:54.814"></status>
</kw>
<msg timestamp="20210121 14:14:54.819" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210121 14:14:54.819" starttime="20210121 14:14:54.814"></status>
</kw>
<msg timestamp="20210121 14:14:54.820" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210121 14:14:54.820" starttime="20210121 14:14:54.813"></status>
</kw>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.822" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:14:54.822" starttime="20210121 14:14:54.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.823" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.823" starttime="20210121 14:14:54.822"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.823" starttime="20210121 14:14:54.821"></status>
</kw>
<msg timestamp="20210121 14:14:54.823" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:14:54.823" starttime="20210121 14:14:54.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.824" starttime="20210121 14:14:54.824"></status>
</kw>
<msg timestamp="20210121 14:14:54.824" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:14:54.824" starttime="20210121 14:14:54.823"></status>
</kw>
<msg timestamp="20210121 14:14:54.825" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210121 14:14:54.825" starttime="20210121 14:14:54.820"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.825" starttime="20210121 14:14:54.825"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.825" critical="yes" starttime="20210121 14:14:54.812"></status>
</test>
<test id="s1-s3-s1-t8" name="Format FS URL with o3fs scheme">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.830" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:14:54.830" starttime="20210121 14:14:54.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.831" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.831" starttime="20210121 14:14:54.830"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.831" starttime="20210121 14:14:54.829"></status>
</kw>
<msg timestamp="20210121 14:14:54.831" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.831" starttime="20210121 14:14:54.829"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.832" starttime="20210121 14:14:54.828"></status>
</kw>
<msg timestamp="20210121 14:14:54.832" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210121 14:14:54.832" starttime="20210121 14:14:54.828"></status>
</kw>
<msg timestamp="20210121 14:14:54.832" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210121 14:14:54.832" starttime="20210121 14:14:54.827"></status>
</kw>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.835" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:14:54.835" starttime="20210121 14:14:54.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.835" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.836" starttime="20210121 14:14:54.835"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.836" starttime="20210121 14:14:54.834"></status>
</kw>
<msg timestamp="20210121 14:14:54.836" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:14:54.836" starttime="20210121 14:14:54.833"></status>
</kw>
<msg timestamp="20210121 14:14:54.837" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210121 14:14:54.837" starttime="20210121 14:14:54.832"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.837" starttime="20210121 14:14:54.837"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.838" critical="yes" starttime="20210121 14:14:54.826"></status>
</test>
<test id="s1-s3-s1-t9" name="Format FS URL with unsupported scheme">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.841" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" endtime="20210121 14:14:54.841" starttime="20210121 14:14:54.841"></status>
</kw>
<status status="FAIL" endtime="20210121 14:14:54.841" starttime="20210121 14:14:54.840"></status>
</kw>
<status status="FAIL" endtime="20210121 14:14:54.841" starttime="20210121 14:14:54.839"></status>
</kw>
<msg timestamp="20210121 14:14:54.842" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" endtime="20210121 14:14:54.842" starttime="20210121 14:14:54.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>http</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.842" starttime="20210121 14:14:54.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>nsupported</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.843" starttime="20210121 14:14:54.842"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.843" critical="yes" starttime="20210121 14:14:54.838"></status>
</test>
<status status="PASS" endtime="20210121 14:14:54.844" starttime="20210121 14:14:54.732"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib/os_tests.robot" id="s1-s3-s2" name="Os Tests">
<test id="s1-s3-s2-t1" name="Execute">
<kw name="Execute" library="os">
<arguments>
<arg>echo 42</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:54.872" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:14:54.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:14:54.873" level="INFO">${output} = 42</msg>
<status status="PASS" endtime="20210121 14:14:54.873" starttime="20210121 14:14:54.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.874" level="INFO">42</msg>
<status status="PASS" endtime="20210121 14:14:54.874" starttime="20210121 14:14:54.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:14:54.874" starttime="20210121 14:14:54.874"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.875" starttime="20210121 14:14:54.867"></status>
</kw>
<msg timestamp="20210121 14:14:54.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:14:54.875" starttime="20210121 14:14:54.867"></status>
</kw>
<msg timestamp="20210121 14:14:54.875" level="INFO">${output} = 42</msg>
<status status="PASS" endtime="20210121 14:14:54.875" starttime="20210121 14:14:54.866"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>42</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.876" starttime="20210121 14:14:54.875"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.876" critical="yes" starttime="20210121 14:14:54.865"></status>
</test>
<test id="s1-s3-s2-t2" name="Execute failing command">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>false</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:54.882" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:14:54.893" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:14:54.893" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:14:54.894" starttime="20210121 14:14:54.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.894" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:14:54.894" starttime="20210121 14:14:54.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:14:54.895" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210121 14:14:54.895" starttime="20210121 14:14:54.895"></status>
</kw>
<status status="FAIL" endtime="20210121 14:14:54.896" starttime="20210121 14:14:54.879"></status>
</kw>
<msg timestamp="20210121 14:14:54.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:14:54.896" starttime="20210121 14:14:54.879"></status>
</kw>
<status status="FAIL" endtime="20210121 14:14:54.903" starttime="20210121 14:14:54.878"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.903" starttime="20210121 14:14:54.878"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.903" critical="yes" starttime="20210121 14:14:54.877"></status>
</test>
<test id="s1-s3-s2-t3" name="Execute And Ignore Error">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>echo 123 &amp;&amp; false</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:54.909" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:14:54.910" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:14:54.910" level="INFO">${output} = 123</msg>
<status status="PASS" endtime="20210121 14:14:54.910" starttime="20210121 14:14:54.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.911" level="INFO">123</msg>
<status status="PASS" endtime="20210121 14:14:54.911" starttime="20210121 14:14:54.910"></status>
</kw>
<msg timestamp="20210121 14:14:54.911" level="INFO">${output} = 123</msg>
<status status="PASS" endtime="20210121 14:14:54.911" starttime="20210121 14:14:54.905"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>123</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.912" starttime="20210121 14:14:54.911"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.912" critical="yes" starttime="20210121 14:14:54.904"></status>
</test>
<test id="s1-s3-s2-t4" name="Execute and checkrc">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:54.916" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:14:54.918" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:14:54.918" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210121 14:14:54.918" starttime="20210121 14:14:54.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.919" level="INFO">failure</msg>
<status status="PASS" endtime="20210121 14:14:54.919" starttime="20210121 14:14:54.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:14:54.920" starttime="20210121 14:14:54.919"></status>
</kw>
<msg timestamp="20210121 14:14:54.920" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210121 14:14:54.920" starttime="20210121 14:14:54.914"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>failure</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.920" starttime="20210121 14:14:54.920"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.921" critical="yes" starttime="20210121 14:14:54.913"></status>
</test>
<test id="s1-s3-s2-t5" name="Execute and checkrc RC mismatch">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:54.926" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:14:54.927" level="INFO">${rc} = 3</msg>
<msg timestamp="20210121 14:14:54.927" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210121 14:14:54.927" starttime="20210121 14:14:54.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.928" level="INFO">failure</msg>
<status status="PASS" endtime="20210121 14:14:54.928" starttime="20210121 14:14:54.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:14:54.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:14:54.929" level="FAIL">3 != 1</msg>
<status status="FAIL" endtime="20210121 14:14:54.929" starttime="20210121 14:14:54.928"></status>
</kw>
<status status="FAIL" endtime="20210121 14:14:54.929" starttime="20210121 14:14:54.923"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.929" starttime="20210121 14:14:54.923"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.929" critical="yes" starttime="20210121 14:14:54.922"></status>
</test>
<status status="PASS" endtime="20210121 14:14:54.930" starttime="20210121 14:14:54.846"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib/string_tests.robot" id="s1-s3-s3" name="String Tests">
<test id="s1-s3-s3-t1" name="Ensure Leading without Leading">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>a/b</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.939" level="INFO">${first} = a</msg>
<status status="PASS" endtime="20210121 14:14:54.939" starttime="20210121 14:14:54.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.940" level="INFO">${result} = /a/b</msg>
<status status="PASS" endtime="20210121 14:14:54.940" starttime="20210121 14:14:54.939"></status>
</kw>
<msg timestamp="20210121 14:14:54.940" level="INFO">${result} = /a/b</msg>
<status status="PASS" endtime="20210121 14:14:54.940" starttime="20210121 14:14:54.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>/a/b</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.940" starttime="20210121 14:14:54.940"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.941" critical="yes" starttime="20210121 14:14:54.937"></status>
</test>
<test id="s1-s3-s3-t2" name="Ensure Leading with Leading">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>_</arg>
<arg>_a_b_c</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.943" level="INFO">${first} = _</msg>
<status status="PASS" endtime="20210121 14:14:54.944" starttime="20210121 14:14:54.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.944" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" endtime="20210121 14:14:54.944" starttime="20210121 14:14:54.944"></status>
</kw>
<msg timestamp="20210121 14:14:54.945" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" endtime="20210121 14:14:54.945" starttime="20210121 14:14:54.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>_a_b_c</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.945" starttime="20210121 14:14:54.945"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.945" critical="yes" starttime="20210121 14:14:54.941"></status>
</test>
<test id="s1-s3-s3-t3" name="Ensure Leading for empty">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>|</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:14:54.948" level="INFO">${first} = </msg>
<status status="PASS" endtime="20210121 14:14:54.948" starttime="20210121 14:14:54.948"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.949" level="INFO">${result} = |</msg>
<status status="PASS" endtime="20210121 14:14:54.949" starttime="20210121 14:14:54.948"></status>
</kw>
<msg timestamp="20210121 14:14:54.949" level="INFO">${result} = |</msg>
<status status="PASS" endtime="20210121 14:14:54.949" starttime="20210121 14:14:54.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>|</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.950" starttime="20210121 14:14:54.949"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.950" critical="yes" starttime="20210121 14:14:54.946"></status>
</test>
<test id="s1-s3-s3-t4" name="Ensure Trailing without Trailing">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>.</arg>
<arg>x.y.z</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.952" level="INFO">${last} = z</msg>
<status status="PASS" endtime="20210121 14:14:54.952" starttime="20210121 14:14:54.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.953" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" endtime="20210121 14:14:54.953" starttime="20210121 14:14:54.953"></status>
</kw>
<msg timestamp="20210121 14:14:54.953" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" endtime="20210121 14:14:54.954" starttime="20210121 14:14:54.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>x.y.z.</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.954" starttime="20210121 14:14:54.954"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.954" critical="yes" starttime="20210121 14:14:54.951"></status>
</test>
<test id="s1-s3-s3-t5" name="Ensure Trailing with Trailing">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>x</arg>
<arg>axbxcx</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.957" level="INFO">${last} = x</msg>
<status status="PASS" endtime="20210121 14:14:54.957" starttime="20210121 14:14:54.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.958" level="INFO">${result} = axbxcx</msg>
<status status="PASS" endtime="20210121 14:14:54.958" starttime="20210121 14:14:54.957"></status>
</kw>
<msg timestamp="20210121 14:14:54.958" level="INFO">${result} = axbxcx</msg>
<status status="PASS" endtime="20210121 14:14:54.958" starttime="20210121 14:14:54.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>axbxcx</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.958" starttime="20210121 14:14:54.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.959" critical="yes" starttime="20210121 14:14:54.955"></status>
</test>
<test id="s1-s3-s3-t6" name="Ensure Trailing for empty">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>=</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:14:54.962" level="INFO">${last} = </msg>
<status status="PASS" endtime="20210121 14:14:54.962" starttime="20210121 14:14:54.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:14:54.962" level="INFO">${result} = =</msg>
<status status="PASS" endtime="20210121 14:14:54.962" starttime="20210121 14:14:54.962"></status>
</kw>
<msg timestamp="20210121 14:14:54.963" level="INFO">${result} = =</msg>
<status status="PASS" endtime="20210121 14:14:54.963" starttime="20210121 14:14:54.960"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>=</arg>
</arguments>
<status status="PASS" endtime="20210121 14:14:54.963" starttime="20210121 14:14:54.963"></status>
</kw>
<status status="PASS" endtime="20210121 14:14:54.963" critical="yes" starttime="20210121 14:14:54.960"></status>
</test>
<status status="PASS" endtime="20210121 14:14:54.965" starttime="20210121 14:14:54.933"></status>
</suite>
<status status="PASS" endtime="20210121 14:14:54.969" starttime="20210121 14:14:54.698"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozone-lib" id="s1-s4" name="Ozone-Lib">
<suite source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot" id="s1-s4-s1" name="Shell Tests">
<test id="s1-s4-s1-t1" name="Bucket Exists should not if No Such Volume">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:14:59.798" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:03.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:15:03.669" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:15:03.669" starttime="20210121 14:14:59.792"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210121 14:15:03.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:03.671" starttime="20210121 14:15:03.669"></status>
</kw>
<msg timestamp="20210121 14:15:03.672" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210121 14:15:03.672" starttime="20210121 14:14:59.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:03.672" starttime="20210121 14:15:03.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:03.673" critical="yes" starttime="20210121 14:14:59.791"></status>
</test>
<test id="s1-s4-s1-t2" name="Bucket Exists should not if No Such Bucket">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:03.677" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:07.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:07.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:07.362" starttime="20210121 14:15:03.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:07.363" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:07.363" starttime="20210121 14:15:07.362"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:07.363" starttime="20210121 14:15:03.675"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:07.368" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:10.393" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:15:10.393" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210121 14:15:10.393" starttime="20210121 14:15:07.364"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210121 14:15:10.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:10.394" starttime="20210121 14:15:10.394"></status>
</kw>
<msg timestamp="20210121 14:15:10.395" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210121 14:15:10.395" starttime="20210121 14:15:07.363"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:10.396" starttime="20210121 14:15:10.395"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:10.396" critical="yes" starttime="20210121 14:15:03.674"></status>
</test>
<test id="s1-s4-s1-t3" name="Bucket Exists">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:10.401" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:13.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:13.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:13.613" starttime="20210121 14:15:10.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:13.614" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:13.614" starttime="20210121 14:15:13.614"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:13.615" starttime="20210121 14:15:10.398"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:13.618" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:16.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:16.855" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:15:13....</msg>
<status status="PASS" endtime="20210121 14:15:16.855" starttime="20210121 14:15:13.616"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:16.856" starttime="20210121 14:15:16.855"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:16.857" starttime="20210121 14:15:16.856"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:16.857" starttime="20210121 14:15:16.857"></status>
</kw>
<msg timestamp="20210121 14:15:16.857" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:15:16.858" starttime="20210121 14:15:13.615"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${TRUE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:16.858" starttime="20210121 14:15:16.858"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:16.858" critical="yes" starttime="20210121 14:15:10.397"></status>
</test>
<test id="s1-s4-s1-t4" name="Bucket Exists should not if No Such OM service">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:16.862" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:31.908" level="INFO">${rc} = 124</msg>
<msg timestamp="20210121 14:15:31.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:31.909" starttime="20210121 14:15:16.861"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210121 14:15:31.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:31.910" starttime="20210121 14:15:31.909"></status>
</kw>
<msg timestamp="20210121 14:15:31.910" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210121 14:15:31.910" starttime="20210121 14:15:16.860"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:31.911" starttime="20210121 14:15:31.911"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:31.911" critical="yes" starttime="20210121 14:15:16.859"></status>
</test>
<test id="s1-s4-s1-t5" name="Key Should Match Local File">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:31.916" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:41.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:41.046" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:41.046" starttime="20210121 14:15:31.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:41.047" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:41.047" starttime="20210121 14:15:41.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:41.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:41.048" starttime="20210121 14:15:41.048"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:41.048" starttime="20210121 14:15:31.914"></status>
</kw>
<msg timestamp="20210121 14:15:41.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:41.049" starttime="20210121 14:15:31.914"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:41.049" starttime="20210121 14:15:31.913"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:15:41.051" level="INFO">${postfix} = 15364</msg>
<status status="PASS" endtime="20210121 14:15:41.051" starttime="20210121 14:15:41.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:15:41.051" level="INFO">${tmpfile} = /tmp/tempkey-15364</msg>
<status status="PASS" endtime="20210121 14:15:41.051" starttime="20210121 14:15:41.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:41.057" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-15364 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:46.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:46.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:46.527" starttime="20210121 14:15:41.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.528" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:46.528" starttime="20210121 14:15:46.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:46.529" starttime="20210121 14:15:46.528"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.529" starttime="20210121 14:15:41.052"></status>
</kw>
<msg timestamp="20210121 14:15:46.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:46.529" starttime="20210121 14:15:41.052"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.530" starttime="20210121 14:15:41.051"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:15:46.532" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-15364 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:46.534" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210121 14:15:46.534" starttime="20210121 14:15:46.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:46.539" level="INFO">Running command 'rm -f /tmp/tempkey-15364 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:46.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:46.541" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:46.541" starttime="20210121 14:15:46.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.542" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:46.542" starttime="20210121 14:15:46.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:46.543" starttime="20210121 14:15:46.542"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.543" starttime="20210121 14:15:46.536"></status>
</kw>
<msg timestamp="20210121 14:15:46.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:46.543" starttime="20210121 14:15:46.535"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.543" starttime="20210121 14:15:46.534"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:15:46.544" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210121 14:15:46.544" starttime="20210121 14:15:46.543"></status>
</kw>
<msg timestamp="20210121 14:15:46.544" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210121 14:15:46.544" starttime="20210121 14:15:41.050"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:46.545" starttime="20210121 14:15:46.544"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.545" starttime="20210121 14:15:41.049"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:46.545" critical="yes" starttime="20210121 14:15:31.912"></status>
</test>
<test id="s1-s4-s1-t6" name="Compare Key With Local File with Different File">
<kw name="Create Random File" library="os">
<assign>
<var>${random_file}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:15:46.548" level="INFO">${postfix} = 37865</msg>
<status status="PASS" endtime="20210121 14:15:46.548" starttime="20210121 14:15:46.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempfile-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:15:46.548" level="INFO">${tmpfile} = /tmp/tempfile-37865</msg>
<status status="PASS" endtime="20210121 14:15:46.548" starttime="20210121 14:15:46.548"></status>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<doc>Fails if the given path points to an existing file.</doc>
<arguments>
<arg>${tmpfile}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.549" html="yes" level="INFO">File '&lt;a href="file:///tmp/tempfile-37865"&gt;/tmp/tempfile-37865&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20210121 14:15:46.549" starttime="20210121 14:15:46.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"Random string"</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20210121 14:15:46.549" level="INFO">${content} = "Random string"</msg>
<status status="PASS" endtime="20210121 14:15:46.549" starttime="20210121 14:15:46.549"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${tmpfile}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20210121 14:15:46.550" html="yes" level="INFO">Created file '&lt;a href="file:///tmp/tempfile-37865"&gt;/tmp/tempfile-37865&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20210121 14:15:46.550" starttime="20210121 14:15:46.549"></status>
</kw>
<msg timestamp="20210121 14:15:46.550" level="INFO">${random_file} = /tmp/tempfile-37865</msg>
<status status="PASS" endtime="20210121 14:15:46.551" starttime="20210121 14:15:46.547"></status>
</kw>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:15:46.552" level="INFO">${postfix} = 54258</msg>
<status status="PASS" endtime="20210121 14:15:46.552" starttime="20210121 14:15:46.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:15:46.552" level="INFO">${tmpfile} = /tmp/tempkey-54258</msg>
<status status="PASS" endtime="20210121 14:15:46.552" starttime="20210121 14:15:46.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:46.556" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-54258 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:51.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:51.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:51.655" starttime="20210121 14:15:46.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:51.656" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:51.656" starttime="20210121 14:15:51.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:51.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:51.657" starttime="20210121 14:15:51.656"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:51.657" starttime="20210121 14:15:46.553"></status>
</kw>
<msg timestamp="20210121 14:15:51.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:51.658" starttime="20210121 14:15:46.553"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:51.658" starttime="20210121 14:15:46.552"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:15:51.660" level="INFO">Running command 'diff -q /tmp/tempfile-37865 /tmp/tempkey-54258 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:51.662" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20210121 14:15:51.662" starttime="20210121 14:15:51.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:51.666" level="INFO">Running command 'rm -f /tmp/tempkey-54258 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:51.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:51.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:51.669" starttime="20210121 14:15:51.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:51.669" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:51.670" starttime="20210121 14:15:51.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:51.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:51.670" starttime="20210121 14:15:51.670"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:51.671" starttime="20210121 14:15:51.664"></status>
</kw>
<msg timestamp="20210121 14:15:51.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:51.671" starttime="20210121 14:15:51.664"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:51.671" starttime="20210121 14:15:51.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:15:51.672" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20210121 14:15:51.672" starttime="20210121 14:15:51.671"></status>
</kw>
<msg timestamp="20210121 14:15:51.672" level="INFO">${matches} = False</msg>
<status status="PASS" endtime="20210121 14:15:51.672" starttime="20210121 14:15:46.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:51.673" starttime="20210121 14:15:51.672"></status>
</kw>
<kw type="teardown" name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${random_file}</arg>
</arguments>
<msg timestamp="20210121 14:15:51.673" html="yes" level="INFO">Removed file '&lt;a href="file:///tmp/tempfile-37865"&gt;/tmp/tempfile-37865&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20210121 14:15:51.673" starttime="20210121 14:15:51.673"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:51.674" critical="yes" starttime="20210121 14:15:46.546"></status>
</test>
<test id="s1-s4-s1-t7" name="Compare Key With Local File if File Does Not Exist">
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:15:51.676" level="INFO">${postfix} = 93687</msg>
<status status="PASS" endtime="20210121 14:15:51.676" starttime="20210121 14:15:51.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210121 14:15:51.676" level="INFO">${tmpfile} = /tmp/tempkey-93687</msg>
<status status="PASS" endtime="20210121 14:15:51.677" starttime="20210121 14:15:51.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:51.680" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-93687 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:56.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:56.998" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:56.998" starttime="20210121 14:15:51.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:56.999" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:56.999" starttime="20210121 14:15:56.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:57.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:57.000" starttime="20210121 14:15:56.999"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:57.000" starttime="20210121 14:15:51.677"></status>
</kw>
<msg timestamp="20210121 14:15:57.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:57.000" starttime="20210121 14:15:51.677"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:57.001" starttime="20210121 14:15:51.677"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210121 14:15:57.003" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-93687 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:57.006" level="INFO">${rc} = 2</msg>
<status status="PASS" endtime="20210121 14:15:57.006" starttime="20210121 14:15:57.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:15:57.012" level="INFO">Running command 'rm -f /tmp/tempkey-93687 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:15:57.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:15:57.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:15:57.015" starttime="20210121 14:15:57.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:15:57.016" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:15:57.017" starttime="20210121 14:15:57.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:15:57.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:15:57.017" starttime="20210121 14:15:57.017"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:57.018" starttime="20210121 14:15:57.008"></status>
</kw>
<msg timestamp="20210121 14:15:57.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:15:57.018" starttime="20210121 14:15:57.007"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:57.018" starttime="20210121 14:15:57.006"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:15:57.019" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20210121 14:15:57.019" starttime="20210121 14:15:57.018"></status>
</kw>
<msg timestamp="20210121 14:15:57.019" level="INFO">${matches} = False</msg>
<status status="PASS" endtime="20210121 14:15:57.019" starttime="20210121 14:15:51.675"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:15:57.020" starttime="20210121 14:15:57.019"></status>
</kw>
<status status="PASS" endtime="20210121 14:15:57.020" critical="yes" starttime="20210121 14:15:51.674"></status>
</test>
<status status="PASS" endtime="20210121 14:15:57.023" starttime="20210121 14:14:59.761"></status>
</suite>
<status status="PASS" endtime="20210121 14:15:57.030" starttime="20210121 14:14:59.730"></status>
</suite>
<suite source="/opt/hadoop/smoketest/security/ozone-secure-token.robot" id="s1-s5" name="Ozone-Secure-Token">
<test id="s1-s5-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
</arguments>
<kw name="Token Test in Unsecure Cluster">
<kw name="Get Token in Unsecure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token get</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:18.100" level="INFO">Running command 'ozone sh token get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:19.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:19.832" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:19.832" starttime="20210121 14:46:18.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:19.833" level="INFO">Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:19.833" starttime="20210121 14:46:19.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:19.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:19.834" starttime="20210121 14:46:19.833"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:19.834" starttime="20210121 14:46:18.094"></status>
</kw>
<msg timestamp="20210121 14:46:19.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:19.835" starttime="20210121 14:46:18.093"></status>
</kw>
<msg timestamp="20210121 14:46:19.835" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:19.835" starttime="20210121 14:46:18.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token get</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:19.836" starttime="20210121 14:46:19.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:19.836" starttime="20210121 14:46:19.836"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:19.836" starttime="20210121 14:46:18.093"></status>
</kw>
<kw name="Renew Token in Unsecure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token renew</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:19.840" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:21.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:21.718" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:21.718" starttime="20210121 14:46:19.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:21.719" level="INFO">Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:21.720" starttime="20210121 14:46:21.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:21.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:21.720" starttime="20210121 14:46:21.720"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:21.721" starttime="20210121 14:46:19.838"></status>
</kw>
<msg timestamp="20210121 14:46:21.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:21.721" starttime="20210121 14:46:19.837"></status>
</kw>
<msg timestamp="20210121 14:46:21.721" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:21.721" starttime="20210121 14:46:19.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token renew</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:21.722" starttime="20210121 14:46:21.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:21.722" starttime="20210121 14:46:21.722"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:21.722" starttime="20210121 14:46:19.836"></status>
</kw>
<kw name="Cancel Token in Unsecure Cluster">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token cancel</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:21.727" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:23.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:23.504" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:23.504" starttime="20210121 14:46:21.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:23.505" level="INFO">Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:23.506" starttime="20210121 14:46:23.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:23.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:23.506" starttime="20210121 14:46:23.506"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:23.507" starttime="20210121 14:46:21.724"></status>
</kw>
<msg timestamp="20210121 14:46:23.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:23.507" starttime="20210121 14:46:21.724"></status>
</kw>
<msg timestamp="20210121 14:46:23.507" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" endtime="20210121 14:46:23.507" starttime="20210121 14:46:21.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token cancel</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:23.508" starttime="20210121 14:46:23.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:23.508" starttime="20210121 14:46:23.508"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:23.508" starttime="20210121 14:46:21.723"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:23.509" starttime="20210121 14:46:18.092"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:23.509" starttime="20210121 14:46:18.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:23.509" starttime="20210121 14:46:23.509"></status>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh token print -t /asdf</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:23.514" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:25.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:25.349" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:46:25.349" starttime="20210121 14:46:23.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:25.350" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:46:25.350" starttime="20210121 14:46:25.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:25.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:25.351" starttime="20210121 14:46:25.350"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:25.351" starttime="20210121 14:46:23.511"></status>
</kw>
<msg timestamp="20210121 14:46:25.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:25.351" starttime="20210121 14:46:23.510"></status>
</kw>
<msg timestamp="20210121 14:46:25.352" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" endtime="20210121 14:46:25.352" starttime="20210121 14:46:23.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:25.352" starttime="20210121 14:46:25.352"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:25.352" starttime="20210121 14:46:23.509"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:46:25.353" critical="yes" starttime="20210121 14:46:18.091"></status>
</test>
<doc>Test token operations</doc>
<status status="PASS" endtime="20210121 14:46:25.354" starttime="20210121 14:46:18.030"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s6" name="ozonefs-ofs-bucket">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:27.993" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:31.075" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:36:31.075" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:36:31.075" starttime="20210121 14:36:27.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:31.076" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:36:31.076" starttime="20210121 14:36:31.075"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:31.076" starttime="20210121 14:36:27.988"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:31.079" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:34.083" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:36:34.083" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:36:34.083" starttime="20210121 14:36:31.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:34.084" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:36:34.085" starttime="20210121 14:36:34.083"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:34.085" starttime="20210121 14:36:31.076"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:34.085" starttime="20210121 14:36:27.988"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:34.090" level="INFO">Running command 'ozone sh bucket create fstest1/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:37.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:37.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:37.066" starttime="20210121 14:36:34.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:37.066" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:37.067" starttime="20210121 14:36:37.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:37.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:37.067" starttime="20210121 14:36:37.067"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:37.068" starttime="20210121 14:36:34.087"></status>
</kw>
<msg timestamp="20210121 14:36:37.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:37.068" starttime="20210121 14:36:34.087"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:37.068" starttime="20210121 14:36:34.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:37.072" level="INFO">Running command 'ozone sh bucket create fstest1/bucket2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:40.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:40.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:40.114" starttime="20210121 14:36:37.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:40.115" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:40.115" starttime="20210121 14:36:40.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:40.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:40.117" starttime="20210121 14:36:40.116"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:40.117" starttime="20210121 14:36:37.069"></status>
</kw>
<msg timestamp="20210121 14:36:40.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:40.117" starttime="20210121 14:36:37.069"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:40.117" starttime="20210121 14:36:37.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:40.121" level="INFO">Running command 'ozone sh bucket create fstest2/bucket3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:43.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:43.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:43.328" starttime="20210121 14:36:40.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:43.329" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:43.329" starttime="20210121 14:36:43.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:43.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:43.330" starttime="20210121 14:36:43.329"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:43.330" starttime="20210121 14:36:40.118"></status>
</kw>
<msg timestamp="20210121 14:36:43.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:43.330" starttime="20210121 14:36:40.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:43.331" starttime="20210121 14:36:40.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:43.331" starttime="20210121 14:36:34.086"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:43.331" starttime="20210121 14:36:34.085"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:43.335" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:46.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:46.887" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:36:46.887" starttime="20210121 14:36:43.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:46.888" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:33:14.778Z",
  "modificationTime" : "2021-01-21T14:33:14.778Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-07344",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.235Z",
  "modificationTime" : "2021-01-21T14:16:05.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:15:06.850Z",
  "modificationTime" : "2021-01-21T14:15:06.850Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:17:18.631Z",
  "modificationTime" : "2021-01-21T14:17:18.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "24575-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:24:55.046Z",
  "modificationTime" : "2021-01-21T14:25:14.298Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-21T14:17:21.709Z",
  "modificationTime" : "2021-01-21T14:17:21.709Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:11.911Z",
  "modificationTime" : "2021-01-21T14:33:11.911Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-75059",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.224Z",
  "modificationTime" : "2021-01-21T14:16:05.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:14:51.718Z",
  "modificationTime" : "2021-01-21T14:14:51.718Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31715",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.191Z",
  "modificationTime" : "2021-01-21T14:16:05.191Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:09.035Z",
  "modificationTime" : "2021-01-21T14:33:09.035Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:33:06.196Z",
  "modificationTime" : "2021-01-21T14:33:06.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "xwndd",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:31:48.317Z",
  "modificationTime" : "2021-01-21T14:31:48.317Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-70281",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.246Z",
  "modificationTime" : "2021-01-21T14:16:05.246Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-23161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.215Z",
  "modificationTime" : "2021-01-21T14:16:05.215Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210121 14:36:46.888" starttime="20210121 14:36:46.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:46.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:46.889" starttime="20210121 14:36:46.888"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:46.889" starttime="20210121 14:36:43.332"></status>
</kw>
<msg timestamp="20210121 14:36:46.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:46.889" starttime="20210121 14:36:43.332"></status>
</kw>
<msg timestamp="20210121 14:36:46.890" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:36:46.890" starttime="20210121 14:36:43.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:46.890" starttime="20210121 14:36:46.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:46.891" starttime="20210121 14:36:46.891"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:46.892" starttime="20210121 14:36:46.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:46.895" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:50.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:50.087" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T1...</msg>
<status status="PASS" endtime="20210121 14:36:50.087" starttime="20210121 14:36:46.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:50.088" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:36:36.880Z",
  "modificationTime" : "2021-01-21T14:36:36.880Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:36:40.039Z",
  "modificationTime" : "2021-01-21T14:36:40.039Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:26.525Z",
  "modificationTime" : "2021-01-21T14:33:26.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:29.585Z",
  "modificationTime" : "2021-01-21T14:33:29.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:36:50.088" starttime="20210121 14:36:50.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:50.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:50.089" starttime="20210121 14:36:50.088"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.089" starttime="20210121 14:36:46.893"></status>
</kw>
<msg timestamp="20210121 14:36:50.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:50.089" starttime="20210121 14:36:46.892"></status>
</kw>
<msg timestamp="20210121 14:36:50.089" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T1...</msg>
<status status="PASS" endtime="20210121 14:36:50.090" starttime="20210121 14:36:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:50.090" starttime="20210121 14:36:50.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:50.091" starttime="20210121 14:36:50.090"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.091" starttime="20210121 14:36:43.331"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:36:50.095" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:36:50.095" starttime="20210121 14:36:50.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:36:50.096" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:36:50.096" starttime="20210121 14:36:50.096"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.096" starttime="20210121 14:36:50.094"></status>
</kw>
<msg timestamp="20210121 14:36:50.097" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:36:50.097" starttime="20210121 14:36:50.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:36:50.098" level="INFO">${first} = /</msg>
<status status="PASS" endtime="20210121 14:36:50.098" starttime="20210121 14:36:50.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:36:50.099" level="INFO">${result} = /</msg>
<status status="PASS" endtime="20210121 14:36:50.099" starttime="20210121 14:36:50.098"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.099" starttime="20210121 14:36:50.097"></status>
</kw>
<msg timestamp="20210121 14:36:50.099" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" endtime="20210121 14:36:50.099" starttime="20210121 14:36:50.097"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.100" starttime="20210121 14:36:50.093"></status>
</kw>
<msg timestamp="20210121 14:36:50.100" level="INFO">${url} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210121 14:36:50.100" starttime="20210121 14:36:50.092"></status>
</kw>
<msg timestamp="20210121 14:36:50.100" level="INFO">${BASE_URL} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210121 14:36:50.100" starttime="20210121 14:36:50.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:36:50.101" level="INFO">${BASE_URL} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210121 14:36:50.101" starttime="20210121 14:36:50.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210121 14:36:50.102" level="INFO">${DEEP_URL} = ofs://om/fstest1/bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" endtime="20210121 14:36:50.103" starttime="20210121 14:36:50.101"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.103" starttime="20210121 14:36:50.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:36:50.103" level="INFO">Completed setup for ofs tests with buckets in fstest1/bucket1-ofs using FS base URL: ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210121 14:36:50.103" starttime="20210121 14:36:50.103"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.104" starttime="20210121 14:36:27.987"></status>
</kw>
<test id="s1-s6-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:36:50.108" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:36:50.109" starttime="20210121 14:36:50.108"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:36:50.109" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:36:50.109" starttime="20210121 14:36:50.109"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.110" starttime="20210121 14:36:50.107"></status>
</kw>
<msg timestamp="20210121 14:36:50.110" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:36:50.110" starttime="20210121 14:36:50.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:50.111" starttime="20210121 14:36:50.111"></status>
</kw>
<msg timestamp="20210121 14:36:50.111" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:36:50.111" starttime="20210121 14:36:50.110"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:50.112" starttime="20210121 14:36:50.106"></status>
</kw>
<msg timestamp="20210121 14:36:50.112" level="INFO">${url} = ofs://om/fstest1/bucket1-ofs</msg>
<status status="PASS" endtime="20210121 14:36:50.112" starttime="20210121 14:36:50.105"></status>
</kw>
<msg timestamp="20210121 14:36:50.112" level="INFO">${root} = ofs://om/fstest1/bucket1-ofs</msg>
<status status="PASS" endtime="20210121 14:36:50.112" starttime="20210121 14:36:50.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:50.116" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:53.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:53.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:53.297" starttime="20210121 14:36:50.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:53.298" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:53.299" starttime="20210121 14:36:53.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:53.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:53.299" starttime="20210121 14:36:53.299"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:53.300" starttime="20210121 14:36:50.113"></status>
</kw>
<msg timestamp="20210121 14:36:53.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:53.300" starttime="20210121 14:36:50.113"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:53.300" starttime="20210121 14:36:50.112"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:53.300" critical="yes" starttime="20210121 14:36:50.104"></status>
</test>
<test id="s1-s6-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:36:53.307" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:36:53.307" starttime="20210121 14:36:53.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:36:53.308" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:36:53.308" starttime="20210121 14:36:53.307"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:53.308" starttime="20210121 14:36:53.306"></status>
</kw>
<msg timestamp="20210121 14:36:53.308" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:36:53.308" starttime="20210121 14:36:53.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:53.309" starttime="20210121 14:36:53.309"></status>
</kw>
<msg timestamp="20210121 14:36:53.309" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:36:53.309" starttime="20210121 14:36:53.308"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:53.310" starttime="20210121 14:36:53.304"></status>
</kw>
<msg timestamp="20210121 14:36:53.310" level="INFO">${url} = ofs://om/no-such-volume/bucket1-ofs</msg>
<status status="PASS" endtime="20210121 14:36:53.310" starttime="20210121 14:36:53.304"></status>
</kw>
<msg timestamp="20210121 14:36:53.310" level="INFO">${url} = ofs://om/no-such-volume/bucket1-ofs</msg>
<status status="PASS" endtime="20210121 14:36:53.310" starttime="20210121 14:36:53.302"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:53.313" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:56.482" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:36:56.482" level="INFO">${output} = ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:56.482" starttime="20210121 14:36:53.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:56.484" level="INFO">ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:56.484" starttime="20210121 14:36:56.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:56.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:56.485" starttime="20210121 14:36:56.484"></status>
</kw>
<msg timestamp="20210121 14:36:56.485" level="INFO">${result} = ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:56.485" starttime="20210121 14:36:53.310"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:56.486" starttime="20210121 14:36:56.485"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:56.486" critical="yes" starttime="20210121 14:36:53.301"></status>
</test>
<test id="s1-s6-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:36:56.492" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:36:56.492" starttime="20210121 14:36:56.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:36:56.493" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:36:56.493" starttime="20210121 14:36:56.492"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:56.493" starttime="20210121 14:36:56.491"></status>
</kw>
<msg timestamp="20210121 14:36:56.494" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:36:56.494" starttime="20210121 14:36:56.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:56.495" starttime="20210121 14:36:56.494"></status>
</kw>
<msg timestamp="20210121 14:36:56.495" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:36:56.495" starttime="20210121 14:36:56.494"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:56.495" starttime="20210121 14:36:56.490"></status>
</kw>
<msg timestamp="20210121 14:36:56.495" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210121 14:36:56.495" starttime="20210121 14:36:56.489"></status>
</kw>
<msg timestamp="20210121 14:36:56.496" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210121 14:36:56.496" starttime="20210121 14:36:56.488"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:56.499" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:59.967" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:36:59.967" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:59.967" starttime="20210121 14:36:56.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:59.969" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:59.969" starttime="20210121 14:36:59.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:59.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:59.970" starttime="20210121 14:36:59.969"></status>
</kw>
<msg timestamp="20210121 14:36:59.970" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:36:59.970" starttime="20210121 14:36:56.496"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:59.972" starttime="20210121 14:36:59.971"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:59.972" critical="yes" starttime="20210121 14:36:56.487"></status>
</test>
<test id="s1-s6-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:59.977" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:03.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:03.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:37:03.656" starttime="20210121 14:36:59.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:03.657" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:37:03.658" starttime="20210121 14:37:03.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:03.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:03.658" starttime="20210121 14:37:03.658"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:03.659" starttime="20210121 14:36:59.974"></status>
</kw>
<msg timestamp="20210121 14:37:03.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:03.659" starttime="20210121 14:36:59.974"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:03.659" starttime="20210121 14:36:59.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:03.664" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:06.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:06.896" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:37:06.896" starttime="20210121 14:37:03.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:06.898" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:37:06.898" starttime="20210121 14:37:06.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:06.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:06.899" starttime="20210121 14:37:06.898"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:06.899" starttime="20210121 14:37:03.660"></status>
</kw>
<msg timestamp="20210121 14:37:06.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:06.899" starttime="20210121 14:37:03.660"></status>
</kw>
<msg timestamp="20210121 14:37:06.900" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:37:06.900" starttime="20210121 14:37:03.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:06.900" starttime="20210121 14:37:06.900"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:06.900" critical="yes" starttime="20210121 14:36:59.972"></status>
</test>
<test id="s1-s6-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:06.906" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:12.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:12.057" level="INFO">${output} = 2021-01-21 14:37:10,229 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:10,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:37:12.057" starttime="20210121 14:37:06.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:12.059" level="INFO">2021-01-21 14:37:10,229 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:10,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:37:10,368 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:37:10,771 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:37:10,772 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E7A8BCD8954E-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:37:10,773 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:37:12.059" starttime="20210121 14:37:12.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:12.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:12.059" starttime="20210121 14:37:12.059"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:12.060" starttime="20210121 14:37:06.903"></status>
</kw>
<msg timestamp="20210121 14:37:12.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:12.060" starttime="20210121 14:37:06.903"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:12.060" starttime="20210121 14:37:06.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:12.064" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:15.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:15.268" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:15.268" starttime="20210121 14:37:12.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:15.269" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:15.269" starttime="20210121 14:37:15.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:15.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:15.270" starttime="20210121 14:37:15.270"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:15.270" starttime="20210121 14:37:12.061"></status>
</kw>
<msg timestamp="20210121 14:37:15.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:15.271" starttime="20210121 14:37:12.061"></status>
</kw>
<msg timestamp="20210121 14:37:15.271" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:15.271" starttime="20210121 14:37:12.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:15.272" starttime="20210121 14:37:15.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:15.276" level="INFO">Running command 'ozone sh key info fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:18.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:18.475" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210121 14:37:18.475" starttime="20210121 14:37:15.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:18.476" level="INFO">3</msg>
<status status="PASS" endtime="20210121 14:37:18.477" starttime="20210121 14:37:18.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:18.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:18.477" starttime="20210121 14:37:18.477"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:18.478" starttime="20210121 14:37:15.274"></status>
</kw>
<msg timestamp="20210121 14:37:18.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:18.478" starttime="20210121 14:37:15.273"></status>
</kw>
<msg timestamp="20210121 14:37:18.478" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210121 14:37:18.478" starttime="20210121 14:37:15.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:18.479" starttime="20210121 14:37:18.478"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:18.479" critical="yes" starttime="20210121 14:37:06.901"></status>
</test>
<test id="s1-s6-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:18.484" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:23.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:23.403" level="INFO">${output} = 2021-01-21 14:37:21,776 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:21,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:37:23.403" starttime="20210121 14:37:18.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:23.405" level="INFO">2021-01-21 14:37:21,776 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:21,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:37:21,903 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:37:22,241 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:37:22,242 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E5713AACD227-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:37:22,243 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:37:23.405" starttime="20210121 14:37:23.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:23.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:23.405" starttime="20210121 14:37:23.405"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:23.406" starttime="20210121 14:37:18.482"></status>
</kw>
<msg timestamp="20210121 14:37:23.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:23.406" starttime="20210121 14:37:18.481"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:23.406" starttime="20210121 14:37:18.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:23.410" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:26.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:26.633" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:26.633" starttime="20210121 14:37:23.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:26.634" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:26.635" starttime="20210121 14:37:26.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:26.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:26.635" starttime="20210121 14:37:26.635"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:26.636" starttime="20210121 14:37:23.408"></status>
</kw>
<msg timestamp="20210121 14:37:26.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:26.636" starttime="20210121 14:37:23.407"></status>
</kw>
<msg timestamp="20210121 14:37:26.636" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:26.636" starttime="20210121 14:37:23.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:26.637" starttime="20210121 14:37:26.636"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:26.637" critical="yes" starttime="20210121 14:37:18.480"></status>
</test>
<test id="s1-s6-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:26.642" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:30.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:30.036" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bu...</msg>
<status status="PASS" endtime="20210121 14:37:30.036" starttime="20210121 14:37:26.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:30.038" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:30.038" starttime="20210121 14:37:30.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:30.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:30.039" starttime="20210121 14:37:30.038"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:30.039" starttime="20210121 14:37:26.640"></status>
</kw>
<msg timestamp="20210121 14:37:30.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:30.039" starttime="20210121 14:37:26.639"></status>
</kw>
<msg timestamp="20210121 14:37:30.039" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bu...</msg>
<status status="PASS" endtime="20210121 14:37:30.039" starttime="20210121 14:37:26.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:30.040" starttime="20210121 14:37:30.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:30.041" starttime="20210121 14:37:30.040"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:30.041" critical="yes" starttime="20210121 14:37:26.638"></status>
</test>
<test id="s1-s6-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:30.046" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:33.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:33.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:37:33.283" starttime="20210121 14:37:30.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:33.284" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:37:33.284" starttime="20210121 14:37:33.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:33.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:33.285" starttime="20210121 14:37:33.285"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:33.286" starttime="20210121 14:37:30.043"></status>
</kw>
<msg timestamp="20210121 14:37:33.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:33.286" starttime="20210121 14:37:30.043"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:33.286" starttime="20210121 14:37:30.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:33.290" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:36.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:36.447" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:36.447" starttime="20210121 14:37:33.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:36.448" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:36.448" starttime="20210121 14:37:36.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:36.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:36.449" starttime="20210121 14:37:36.449"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:36.450" starttime="20210121 14:37:33.287"></status>
</kw>
<msg timestamp="20210121 14:37:36.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:36.450" starttime="20210121 14:37:33.287"></status>
</kw>
<msg timestamp="20210121 14:37:36.450" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:37:36.450" starttime="20210121 14:37:33.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:36.451" starttime="20210121 14:37:36.450"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:36.451" starttime="20210121 14:37:36.451"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:36.452" critical="yes" starttime="20210121 14:37:30.042"></status>
</test>
<test id="s1-s6-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:36.457" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:39.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:39.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:37:39.801" starttime="20210121 14:37:36.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:39.802" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:37:39.803" starttime="20210121 14:37:39.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:39.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:39.803" starttime="20210121 14:37:39.803"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:39.805" starttime="20210121 14:37:36.454"></status>
</kw>
<msg timestamp="20210121 14:37:39.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:39.805" starttime="20210121 14:37:36.454"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:39.805" starttime="20210121 14:37:36.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:39.809" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:44.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:44.865" level="INFO">${output} = 2021-01-21 14:37:42,868 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:43,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:37:44.865" starttime="20210121 14:37:39.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:44.867" level="INFO">2021-01-21 14:37:42,868 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:43,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:37:43,024 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:37:43,991 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:37:43,992 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1CE1304C0E19-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:37:43,993 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:37:44.867" starttime="20210121 14:37:44.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:44.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:44.868" starttime="20210121 14:37:44.867"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:44.868" starttime="20210121 14:37:39.807"></status>
</kw>
<msg timestamp="20210121 14:37:44.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:44.868" starttime="20210121 14:37:39.806"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:44.869" starttime="20210121 14:37:39.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:44.873" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:48.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:48.174" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:48.174" starttime="20210121 14:37:44.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:48.175" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:48.176" starttime="20210121 14:37:48.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:48.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:48.176" starttime="20210121 14:37:48.176"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:48.177" starttime="20210121 14:37:44.870"></status>
</kw>
<msg timestamp="20210121 14:37:48.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:48.177" starttime="20210121 14:37:44.870"></status>
</kw>
<msg timestamp="20210121 14:37:48.177" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:48.177" starttime="20210121 14:37:44.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:48.178" starttime="20210121 14:37:48.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:48.182" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:51.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:51.725" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:51.725" starttime="20210121 14:37:48.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:51.727" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:51.727" starttime="20210121 14:37:51.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:51.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:51.727" starttime="20210121 14:37:51.727"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:51.728" starttime="20210121 14:37:48.179"></status>
</kw>
<msg timestamp="20210121 14:37:51.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:51.728" starttime="20210121 14:37:48.179"></status>
</kw>
<msg timestamp="20210121 14:37:51.728" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:51.728" starttime="20210121 14:37:48.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:51.729" starttime="20210121 14:37:51.728"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:37:51.729" starttime="20210121 14:37:51.729"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:51.730" critical="yes" starttime="20210121 14:37:36.452"></status>
</test>
<test id="s1-s6-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:51.735" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:56.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:56.665" level="INFO">${output} = 2021-01-21 14:37:55,154 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:55,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:37:56.665" starttime="20210121 14:37:51.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:56.666" level="INFO">2021-01-21 14:37:55,154 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:37:55,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:37:55,269 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210121 14:37:56.667" starttime="20210121 14:37:56.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:56.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:56.667" starttime="20210121 14:37:56.667"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:56.668" starttime="20210121 14:37:51.733"></status>
</kw>
<msg timestamp="20210121 14:37:56.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:56.668" starttime="20210121 14:37:51.732"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:56.669" starttime="20210121 14:37:51.731"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:37:56.669" critical="yes" starttime="20210121 14:37:51.731"></status>
</test>
<test id="s1-s6-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:56.675" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:37:59.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:37:59.901" level="INFO">${output} = Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:59.901" starttime="20210121 14:37:56.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:37:59.902" level="INFO">Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:37:59.902" starttime="20210121 14:37:59.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:37:59.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:37:59.903" starttime="20210121 14:37:59.902"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:59.903" starttime="20210121 14:37:56.672"></status>
</kw>
<msg timestamp="20210121 14:37:59.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:37:59.903" starttime="20210121 14:37:56.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:37:59.904" starttime="20210121 14:37:56.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:37:59.908" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:03.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:03.330" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:38:03.330" starttime="20210121 14:37:59.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:03.331" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:38:03.331" starttime="20210121 14:38:03.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:03.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:03.332" starttime="20210121 14:38:03.332"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:03.332" starttime="20210121 14:37:59.905"></status>
</kw>
<msg timestamp="20210121 14:38:03.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:03.333" starttime="20210121 14:37:59.904"></status>
</kw>
<msg timestamp="20210121 14:38:03.333" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:38:03.333" starttime="20210121 14:37:59.904"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:03.334" starttime="20210121 14:38:03.333"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:03.334" critical="yes" starttime="20210121 14:37:56.670"></status>
</test>
<test id="s1-s6-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:03.340" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:06.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:06.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:06.846" starttime="20210121 14:38:03.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:06.847" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:06.848" starttime="20210121 14:38:06.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:06.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:06.848" starttime="20210121 14:38:06.848"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:06.849" starttime="20210121 14:38:03.337"></status>
</kw>
<msg timestamp="20210121 14:38:06.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:06.849" starttime="20210121 14:38:03.337"></status>
</kw>
<msg timestamp="20210121 14:38:06.849" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:38:06.849" starttime="20210121 14:38:03.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:06.854" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:09.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:09.972" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:38:09.972" starttime="20210121 14:38:06.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:09.973" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:38:09.973" starttime="20210121 14:38:09.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:09.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:09.974" starttime="20210121 14:38:09.973"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:09.974" starttime="20210121 14:38:06.851"></status>
</kw>
<msg timestamp="20210121 14:38:09.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:09.974" starttime="20210121 14:38:06.850"></status>
</kw>
<msg timestamp="20210121 14:38:09.975" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:38:09.975" starttime="20210121 14:38:06.849"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:09.975" starttime="20210121 14:38:09.975"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:09.976" critical="yes" starttime="20210121 14:38:03.334"></status>
</test>
<test id="s1-s6-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:09.981" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:13.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:13.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:13.334" starttime="20210121 14:38:09.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:13.335" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:13.335" starttime="20210121 14:38:13.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:13.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:13.336" starttime="20210121 14:38:13.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:13.336" starttime="20210121 14:38:09.978"></status>
</kw>
<msg timestamp="20210121 14:38:13.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:13.337" starttime="20210121 14:38:09.978"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:13.337" starttime="20210121 14:38:09.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:13.341" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:16.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:16.550" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:38:16.550" starttime="20210121 14:38:13.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:16.551" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:38:16.551" starttime="20210121 14:38:16.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:16.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:16.552" starttime="20210121 14:38:16.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:16.553" starttime="20210121 14:38:13.338"></status>
</kw>
<msg timestamp="20210121 14:38:16.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:16.553" starttime="20210121 14:38:13.338"></status>
</kw>
<msg timestamp="20210121 14:38:16.553" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:38:16.553" starttime="20210121 14:38:13.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:16.555" starttime="20210121 14:38:16.553"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:16.555" critical="yes" starttime="20210121 14:38:09.976"></status>
</test>
<test id="s1-s6-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:16.561" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:19.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:19.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:19.705" starttime="20210121 14:38:16.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:19.707" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:19.707" starttime="20210121 14:38:19.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:19.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:19.707" starttime="20210121 14:38:19.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:19.708" starttime="20210121 14:38:16.559"></status>
</kw>
<msg timestamp="20210121 14:38:19.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:19.708" starttime="20210121 14:38:16.558"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:19.708" starttime="20210121 14:38:16.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:19.713" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:23.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:23.318" level="INFO">${output} = 2021-01-21 14:38:22,892 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:38:23,019 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:38:23.318" starttime="20210121 14:38:19.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:23.320" level="INFO">2021-01-21 14:38:22,892 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:38:23,019 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210121 14:38:23.320" starttime="20210121 14:38:23.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:23.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:23.321" starttime="20210121 14:38:23.320"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:23.321" starttime="20210121 14:38:19.710"></status>
</kw>
<msg timestamp="20210121 14:38:23.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:23.321" starttime="20210121 14:38:19.709"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:23.322" starttime="20210121 14:38:19.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:23.326" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:26.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:26.948" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop
drwxrwx...</msg>
<status status="PASS" endtime="20210121 14:38:26.949" starttime="20210121 14:38:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:26.950" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:38:26.950" starttime="20210121 14:38:26.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:26.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:26.951" starttime="20210121 14:38:26.950"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:26.951" starttime="20210121 14:38:23.323"></status>
</kw>
<msg timestamp="20210121 14:38:26.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:26.951" starttime="20210121 14:38:23.322"></status>
</kw>
<msg timestamp="20210121 14:38:26.952" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop
drwxrwx...</msg>
<status status="PASS" endtime="20210121 14:38:26.952" starttime="20210121 14:38:23.322"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:26.952" starttime="20210121 14:38:26.952"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser/scm@EXAMPLE.COM</arg>
<arg>.Trash/root</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:26.953" starttime="20210121 14:38:26.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:26.954" starttime="20210121 14:38:26.953"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:26.954" critical="yes" starttime="20210121 14:38:16.556"></status>
</test>
<test id="s1-s6-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:26.959" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:30.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:30.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:30.425" starttime="20210121 14:38:26.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:30.426" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:30.426" starttime="20210121 14:38:30.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:30.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:30.427" starttime="20210121 14:38:30.427"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:30.428" starttime="20210121 14:38:26.956"></status>
</kw>
<msg timestamp="20210121 14:38:30.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:30.428" starttime="20210121 14:38:26.956"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:30.428" starttime="20210121 14:38:26.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:30.433" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:33.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:33.725" level="INFO">${output} = Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:38:33.725" starttime="20210121 14:38:30.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:33.726" level="INFO">Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:38:33.726" starttime="20210121 14:38:33.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:33.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:33.727" starttime="20210121 14:38:33.726"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:33.727" starttime="20210121 14:38:30.429"></status>
</kw>
<msg timestamp="20210121 14:38:33.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:33.727" starttime="20210121 14:38:30.429"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:33.728" starttime="20210121 14:38:30.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:33.732" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:36.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:36.950" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/bucket1-ofs/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/
.Trash/hadoop/Current/fstest1/bu...</msg>
<status status="PASS" endtime="20210121 14:38:36.950" starttime="20210121 14:38:33.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.952" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/bucket1-ofs/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:38:36.952" starttime="20210121 14:38:36.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:36.952" starttime="20210121 14:38:36.952"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.953" starttime="20210121 14:38:33.729"></status>
</kw>
<msg timestamp="20210121 14:38:36.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:36.953" starttime="20210121 14:38:33.729"></status>
</kw>
<msg timestamp="20210121 14:38:36.953" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/bucket1-ofs/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/
.Trash/hadoop/Current/fstest1/bu...</msg>
<status status="PASS" endtime="20210121 14:38:36.953" starttime="20210121 14:38:33.728"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:36.954" starttime="20210121 14:38:36.953"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:36.954" critical="yes" starttime="20210121 14:38:26.955"></status>
</test>
<test id="s1-s6-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:36.959" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:36.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:36.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:36.964" starttime="20210121 14:38:36.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.965" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:36.965" starttime="20210121 14:38:36.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:36.966" starttime="20210121 14:38:36.965"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.967" starttime="20210121 14:38:36.957"></status>
</kw>
<msg timestamp="20210121 14:38:36.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:36.967" starttime="20210121 14:38:36.957"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.967" starttime="20210121 14:38:36.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:36.971" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:36.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:36.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:36.974" starttime="20210121 14:38:36.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.974" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:36.975" starttime="20210121 14:38:36.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:36.975" starttime="20210121 14:38:36.975"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.976" starttime="20210121 14:38:36.968"></status>
</kw>
<msg timestamp="20210121 14:38:36.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:36.976" starttime="20210121 14:38:36.968"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.976" starttime="20210121 14:38:36.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:36.979" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:36.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:36.982" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:36.982" starttime="20210121 14:38:36.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.983" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:36.983" starttime="20210121 14:38:36.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:36.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:36.984" starttime="20210121 14:38:36.984"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.984" starttime="20210121 14:38:36.977"></status>
</kw>
<msg timestamp="20210121 14:38:36.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:36.985" starttime="20210121 14:38:36.977"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:36.985" starttime="20210121 14:38:36.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:36.988" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:40.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:40.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:40.270" starttime="20210121 14:38:36.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:40.271" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:40.271" starttime="20210121 14:38:40.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:40.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:40.272" starttime="20210121 14:38:40.271"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:40.272" starttime="20210121 14:38:36.986"></status>
</kw>
<msg timestamp="20210121 14:38:40.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:40.272" starttime="20210121 14:38:36.986"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:40.273" starttime="20210121 14:38:36.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:40.277" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:45.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:45.669" level="INFO">${output} = 2021-01-21 14:38:43,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:38:44,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:38:45.669" starttime="20210121 14:38:40.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:45.670" level="INFO">2021-01-21 14:38:43,839 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:38:44,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:38:44,012 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:38:44,398 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:38:44,399 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A283705BCA24-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:38:44,400 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:38:45.670" starttime="20210121 14:38:45.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:45.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:45.671" starttime="20210121 14:38:45.670"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:45.671" starttime="20210121 14:38:40.274"></status>
</kw>
<msg timestamp="20210121 14:38:45.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:45.672" starttime="20210121 14:38:40.274"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:45.672" starttime="20210121 14:38:40.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:45.676" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:50.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:50.762" level="INFO">${output} = 2021-01-21 14:38:48,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:38:49,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:38:50.762" starttime="20210121 14:38:45.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:50.763" level="INFO">2021-01-21 14:38:48,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:38:49,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:38:49,033 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:38:49,467 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:38:49,468 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-703566883577-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:38:49,469 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:38:50.764" starttime="20210121 14:38:50.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:50.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:50.764" starttime="20210121 14:38:50.764"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:50.765" starttime="20210121 14:38:45.673"></status>
</kw>
<msg timestamp="20210121 14:38:50.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:50.765" starttime="20210121 14:38:45.673"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:50.765" starttime="20210121 14:38:45.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:50.765" starttime="20210121 14:38:36.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:50.769" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:54.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:54.084" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1...</msg>
<status status="PASS" endtime="20210121 14:38:54.084" starttime="20210121 14:38:50.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:54.085" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210121 14:38:54.085" starttime="20210121 14:38:54.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:54.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:54.086" starttime="20210121 14:38:54.085"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:54.086" starttime="20210121 14:38:50.767"></status>
</kw>
<msg timestamp="20210121 14:38:54.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:54.087" starttime="20210121 14:38:50.766"></status>
</kw>
<msg timestamp="20210121 14:38:54.087" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:38 ofs://om/fstest1/bucket1-ofs/testdir1...</msg>
<status status="PASS" endtime="20210121 14:38:54.087" starttime="20210121 14:38:50.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:54.088" starttime="20210121 14:38:54.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:38:54.088" starttime="20210121 14:38:54.088"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:38:54.088" critical="yes" starttime="20210121 14:38:36.955"></status>
</test>
<test id="s1-s6-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:38:54.095" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:38:54.095" starttime="20210121 14:38:54.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:38:54.096" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:38:54.096" starttime="20210121 14:38:54.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:54.096" starttime="20210121 14:38:54.094"></status>
</kw>
<msg timestamp="20210121 14:38:54.096" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:38:54.096" starttime="20210121 14:38:54.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:38:54.098" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210121 14:38:54.098" starttime="20210121 14:38:54.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:38:54.099" level="INFO">${result} = /testdir2</msg>
<status status="PASS" endtime="20210121 14:38:54.099" starttime="20210121 14:38:54.098"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:54.099" starttime="20210121 14:38:54.097"></status>
</kw>
<msg timestamp="20210121 14:38:54.099" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" endtime="20210121 14:38:54.099" starttime="20210121 14:38:54.096"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:54.100" starttime="20210121 14:38:54.093"></status>
</kw>
<msg timestamp="20210121 14:38:54.100" level="INFO">${url} = ofs://om/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:38:54.100" starttime="20210121 14:38:54.092"></status>
</kw>
<msg timestamp="20210121 14:38:54.100" level="INFO">${target} = ofs://om/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:38:54.100" starttime="20210121 14:38:54.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:54.104" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:38:57.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:38:57.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:38:57.557" starttime="20210121 14:38:54.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:38:57.558" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:38:57.558" starttime="20210121 14:38:57.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:38:57.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:38:57.559" starttime="20210121 14:38:57.558"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:57.560" starttime="20210121 14:38:54.101"></status>
</kw>
<msg timestamp="20210121 14:38:57.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:38:57.560" starttime="20210121 14:38:54.101"></status>
</kw>
<status status="PASS" endtime="20210121 14:38:57.560" starttime="20210121 14:38:54.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:38:57.564" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:02.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:02.815" level="INFO">${output} = 2021-01-21 14:39:01,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:01,163 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:39:02.815" starttime="20210121 14:38:57.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:02.816" level="INFO">2021-01-21 14:39:01,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:01,163 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:39:01,163 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:39:02,095 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:39:02,096 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D4F9D00A0C59-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:39:02,097 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:39:02.816" starttime="20210121 14:39:02.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:02.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:02.817" starttime="20210121 14:39:02.816"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:02.817" starttime="20210121 14:38:57.561"></status>
</kw>
<msg timestamp="20210121 14:39:02.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:02.817" starttime="20210121 14:38:57.561"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:02.818" starttime="20210121 14:38:57.560"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:02.822" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:06.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:06.404" level="INFO">${output} = 2021-01-21 14:39:05,932 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:39:06,158 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:39:06.404" starttime="20210121 14:39:02.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:06.405" level="INFO">2021-01-21 14:39:05,932 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:39:06,158 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/bucket2-ofs/.Trash/hadoop/Current/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:39:06.406" starttime="20210121 14:39:06.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:06.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:06.406" starttime="20210121 14:39:06.406"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:06.407" starttime="20210121 14:39:02.819"></status>
</kw>
<msg timestamp="20210121 14:39:06.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:06.407" starttime="20210121 14:39:02.819"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:06.407" starttime="20210121 14:39:02.818"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:39:06.407" critical="yes" starttime="20210121 14:38:54.090"></status>
</test>
<test id="s1-s6-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:39:06.415" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:39:06.415" starttime="20210121 14:39:06.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:39:06.416" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:39:06.416" starttime="20210121 14:39:06.415"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:06.416" starttime="20210121 14:39:06.412"></status>
</kw>
<msg timestamp="20210121 14:39:06.416" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:39:06.416" starttime="20210121 14:39:06.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:39:06.420" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210121 14:39:06.420" starttime="20210121 14:39:06.418"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:39:06.421" level="INFO">${result} = /testdir3</msg>
<status status="PASS" endtime="20210121 14:39:06.421" starttime="20210121 14:39:06.420"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:06.421" starttime="20210121 14:39:06.417"></status>
</kw>
<msg timestamp="20210121 14:39:06.421" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" endtime="20210121 14:39:06.421" starttime="20210121 14:39:06.417"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:06.422" starttime="20210121 14:39:06.411"></status>
</kw>
<msg timestamp="20210121 14:39:06.422" level="INFO">${url} = ofs://om/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:39:06.422" starttime="20210121 14:39:06.411"></status>
</kw>
<msg timestamp="20210121 14:39:06.422" level="INFO">${target} = ofs://om/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:39:06.422" starttime="20210121 14:39:06.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:06.426" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:10.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:10.313" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:39:10.313" starttime="20210121 14:39:06.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:10.314" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:39:10.314" starttime="20210121 14:39:10.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:10.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:10.315" starttime="20210121 14:39:10.314"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:10.315" starttime="20210121 14:39:06.423"></status>
</kw>
<msg timestamp="20210121 14:39:10.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:10.315" starttime="20210121 14:39:06.423"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:10.316" starttime="20210121 14:39:06.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:10.320" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:15.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:15.599" level="INFO">${output} = 2021-01-21 14:39:13,655 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:39:15.599" starttime="20210121 14:39:10.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:15.600" level="INFO">2021-01-21 14:39:13,655 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:39:13,753 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:39:14,678 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:39:14,679 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-493A3AE9E930-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:39:14,680 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:39:15.600" starttime="20210121 14:39:15.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:15.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:15.601" starttime="20210121 14:39:15.600"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:15.601" starttime="20210121 14:39:10.317"></status>
</kw>
<msg timestamp="20210121 14:39:15.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:15.602" starttime="20210121 14:39:10.317"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:15.602" starttime="20210121 14:39:10.316"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:15.606" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:19.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:19.056" level="INFO">${output} = 2021-01-21 14:39:18,582 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:39:18,773 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:39:19.057" starttime="20210121 14:39:15.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:19.058" level="INFO">2021-01-21 14:39:18,582 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:39:18,773 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/bucket3-ofs/.Trash/hadoop/Current/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:39:19.058" starttime="20210121 14:39:19.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:19.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:19.058" starttime="20210121 14:39:19.058"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:19.059" starttime="20210121 14:39:15.603"></status>
</kw>
<msg timestamp="20210121 14:39:19.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:19.059" starttime="20210121 14:39:15.603"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:19.059" starttime="20210121 14:39:15.602"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:39:19.059" critical="yes" starttime="20210121 14:39:06.408"></status>
</test>
<test id="s1-s6-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:19.065" level="INFO">Running command 'ozone sh key put fstest1/bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:24.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:24.104" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:39:24.104" starttime="20210121 14:39:19.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:24.105" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:39:24.105" starttime="20210121 14:39:24.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:24.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:24.106" starttime="20210121 14:39:24.105"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:24.106" starttime="20210121 14:39:19.062"></status>
</kw>
<msg timestamp="20210121 14:39:24.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:24.107" starttime="20210121 14:39:19.062"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:24.107" starttime="20210121 14:39:19.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:24.111" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:27.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:27.552" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:39:27.552" starttime="20210121 14:39:24.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:27.553" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:39:27.553" starttime="20210121 14:39:27.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:27.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:27.554" starttime="20210121 14:39:27.554"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:27.555" starttime="20210121 14:39:24.108"></status>
</kw>
<msg timestamp="20210121 14:39:27.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:27.556" starttime="20210121 14:39:24.108"></status>
</kw>
<msg timestamp="20210121 14:39:27.556" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:39:27.556" starttime="20210121 14:39:24.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:39:27.557" starttime="20210121 14:39:27.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:39:27.557" critical="yes" starttime="20210121 14:39:19.060"></status>
</test>
<test id="s1-s6-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:27.562" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:31.088" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:39:31.088" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:39:31.089" starttime="20210121 14:39:27.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:31.090" level="INFO">copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:39:31.090" starttime="20210121 14:39:31.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:31.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:31.091" starttime="20210121 14:39:31.090"></status>
</kw>
<msg timestamp="20210121 14:39:31.091" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:39:31.091" starttime="20210121 14:39:27.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:39:31.092" starttime="20210121 14:39:31.091"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:39:31.092" critical="yes" starttime="20210121 14:39:27.558"></status>
</test>
<test id="s1-s6-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:31.098" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:31.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:31.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:39:31.101" starttime="20210121 14:39:31.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:31.102" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:39:31.102" starttime="20210121 14:39:31.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:31.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:31.103" starttime="20210121 14:39:31.102"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:31.103" starttime="20210121 14:39:31.095"></status>
</kw>
<msg timestamp="20210121 14:39:31.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:31.103" starttime="20210121 14:39:31.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:31.104" starttime="20210121 14:39:31.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:31.107" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:35.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:35.691" level="INFO">${output} = 2021-01-21 14:39:34,386 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:34,481 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:39:35.691" starttime="20210121 14:39:31.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:35.693" level="INFO">2021-01-21 14:39:34,386 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:39:34,481 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:39:34,481 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210121 14:39:35.693" starttime="20210121 14:39:35.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:35.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:35.694" starttime="20210121 14:39:35.693"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:35.694" starttime="20210121 14:39:31.105"></status>
</kw>
<msg timestamp="20210121 14:39:35.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:35.694" starttime="20210121 14:39:31.105"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:35.694" starttime="20210121 14:39:31.104"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210121 14:39:35.695" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210121 14:39:35.695" starttime="20210121 14:39:35.694"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:39:35.695" critical="yes" starttime="20210121 14:39:31.093"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" endtime="20210121 14:39:35.699" starttime="20210121 14:36:27.918"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s7" name="ozonefs-o3fs-link">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:40.219" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:43.294" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:39:43.294" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:43.294" starttime="20210121 14:39:40.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:43.295" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:43.296" starttime="20210121 14:39:43.295"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:43.296" starttime="20210121 14:39:40.215"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:43.299" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:46.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:39:46.148" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:46.148" starttime="20210121 14:39:43.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:46.152" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:46.152" starttime="20210121 14:39:46.151"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:46.153" starttime="20210121 14:39:43.296"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:46.153" starttime="20210121 14:39:40.215"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:46.157" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:49.210" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:39:49.210" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:49.210" starttime="20210121 14:39:46.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:49.214" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:49.214" starttime="20210121 14:39:49.211"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:49.214" starttime="20210121 14:39:46.154"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:49.217" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:52.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:39:52.060" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:52.061" starttime="20210121 14:39:49.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:52.062" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:39:52.062" starttime="20210121 14:39:52.061"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:52.062" starttime="20210121 14:39:49.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:52.066" level="INFO">Running command 'ozone sh bucket create fstest1-src/link1-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:55.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:55.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:39:55.249" starttime="20210121 14:39:52.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:55.250" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:39:55.250" starttime="20210121 14:39:55.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:55.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:55.251" starttime="20210121 14:39:55.251"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:55.251" starttime="20210121 14:39:52.063"></status>
</kw>
<msg timestamp="20210121 14:39:55.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:55.252" starttime="20210121 14:39:52.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:55.252" starttime="20210121 14:39:52.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:55.256" level="INFO">Running command 'ozone sh bucket create fstest1-src/link2-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:39:58.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:39:58.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:39:58.281" starttime="20210121 14:39:55.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:39:58.282" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:39:58.282" starttime="20210121 14:39:58.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:39:58.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:39:58.283" starttime="20210121 14:39:58.282"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:58.283" starttime="20210121 14:39:55.253"></status>
</kw>
<msg timestamp="20210121 14:39:58.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:39:58.283" starttime="20210121 14:39:55.253"></status>
</kw>
<status status="PASS" endtime="20210121 14:39:58.283" starttime="20210121 14:39:55.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:39:58.287" level="INFO">Running command 'ozone sh bucket create fstest2-src/link3-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:01.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:01.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:01.426" starttime="20210121 14:39:58.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:01.427" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:01.427" starttime="20210121 14:40:01.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:01.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:01.428" starttime="20210121 14:40:01.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:01.428" starttime="20210121 14:39:58.284"></status>
</kw>
<msg timestamp="20210121 14:40:01.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:01.429" starttime="20210121 14:39:58.284"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:01.429" starttime="20210121 14:39:58.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:01.432" level="INFO">Running command 'ozone sh bucket link fstest1-src/link1-o3fs-src fstest1/link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:04.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:04.351" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:04.351" starttime="20210121 14:40:01.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:04.352" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:04.352" starttime="20210121 14:40:04.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:04.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:04.353" starttime="20210121 14:40:04.352"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:04.353" starttime="20210121 14:40:01.430"></status>
</kw>
<msg timestamp="20210121 14:40:04.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:04.354" starttime="20210121 14:40:01.430"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:04.354" starttime="20210121 14:40:01.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:04.357" level="INFO">Running command 'ozone sh bucket link fstest1-src/link2-o3fs-src fstest1/link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:07.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:07.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:07.300" starttime="20210121 14:40:04.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:07.301" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:07.301" starttime="20210121 14:40:07.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:07.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:07.302" starttime="20210121 14:40:07.301"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:07.302" starttime="20210121 14:40:04.355"></status>
</kw>
<msg timestamp="20210121 14:40:07.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:07.302" starttime="20210121 14:40:04.355"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:07.303" starttime="20210121 14:40:04.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:07.307" level="INFO">Running command 'ozone sh bucket link fstest2-src/link3-o3fs-src fstest2/link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:10.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:10.312" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:10.312" starttime="20210121 14:40:07.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:10.313" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:10.313" starttime="20210121 14:40:10.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:10.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:10.314" starttime="20210121 14:40:10.313"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:10.314" starttime="20210121 14:40:07.304"></status>
</kw>
<msg timestamp="20210121 14:40:10.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:10.314" starttime="20210121 14:40:07.303"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:10.315" starttime="20210121 14:40:07.303"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:10.315" starttime="20210121 14:39:46.153"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:10.315" starttime="20210121 14:39:46.153"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:10.319" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:13.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:13.661" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:40:13.661" starttime="20210121 14:40:10.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:13.662" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:14.778Z",
  "modificationTime" : "2021-01-21T14:33:14.778Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-07344",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.235Z",
  "modificationTime" : "2021-01-21T14:16:05.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:15:06.850Z",
  "modificationTime" : "2021-01-21T14:15:06.850Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:17:18.631Z",
  "modificationTime" : "2021-01-21T14:17:18.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "24575-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:24:55.046Z",
  "modificationTime" : "2021-01-21T14:25:14.298Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-21T14:17:21.709Z",
  "modificationTime" : "2021-01-21T14:17:21.709Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:33:11.911Z",
  "modificationTime" : "2021-01-21T14:33:11.911Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-75059",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.224Z",
  "modificationTime" : "2021-01-21T14:16:05.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:14:51.718Z",
  "modificationTime" : "2021-01-21T14:14:51.718Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31715",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.191Z",
  "modificationTime" : "2021-01-21T14:16:05.191Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-01-21T14:33:09.035Z",
  "modificationTime" : "2021-01-21T14:33:09.035Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 6,
  "creationTime" : "2021-01-21T14:33:06.196Z",
  "modificationTime" : "2021-01-21T14:33:06.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "xwndd",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:31:48.317Z",
  "modificationTime" : "2021-01-21T14:31:48.317Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-70281",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.246Z",
  "modificationTime" : "2021-01-21T14:16:05.246Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-23161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.215Z",
  "modificationTime" : "2021-01-21T14:16:05.215Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210121 14:40:13.663" starttime="20210121 14:40:13.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:13.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:13.663" starttime="20210121 14:40:13.663"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:13.664" starttime="20210121 14:40:10.316"></status>
</kw>
<msg timestamp="20210121 14:40:13.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:13.664" starttime="20210121 14:40:10.316"></status>
</kw>
<msg timestamp="20210121 14:40:13.664" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:40:13.664" starttime="20210121 14:40:10.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:13.665" starttime="20210121 14:40:13.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:13.666" starttime="20210121 14:40:13.666"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:13.667" starttime="20210121 14:40:13.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:13.670" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:16.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:16.838" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 263100,
  "usedNamespace" : -2,
  "creationTime" : "2021-0...</msg>
<status status="PASS" endtime="20210121 14:40:16.838" starttime="20210121 14:40:13.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:16.839" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 263100,
  "usedNamespace" : -2,
  "creationTime" : "2021-01-21T14:36:36.880Z",
  "modificationTime" : "2021-01-21T14:36:36.880Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52620,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:36:40.039Z",
  "modificationTime" : "2021-01-21T14:36:40.039Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:40:04.161Z",
  "modificationTime" : "2021-01-21T14:40:04.161Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:26.525Z",
  "modificationTime" : "2021-01-21T14:33:26.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:40:07.166Z",
  "modificationTime" : "2021-01-21T14:40:07.166Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:29.585Z",
  "modificationTime" : "2021-01-21T14:33:29.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:40:16.839" starttime="20210121 14:40:16.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:16.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:16.840" starttime="20210121 14:40:16.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.840" starttime="20210121 14:40:13.668"></status>
</kw>
<msg timestamp="20210121 14:40:16.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:16.841" starttime="20210121 14:40:13.668"></status>
</kw>
<msg timestamp="20210121 14:40:16.841" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 263100,
  "usedNamespace" : -2,
  "creationTime" : "2021-0...</msg>
<status status="PASS" endtime="20210121 14:40:16.841" starttime="20210121 14:40:13.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:16.842" starttime="20210121 14:40:16.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:16.842" starttime="20210121 14:40:16.842"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.842" starttime="20210121 14:40:10.315"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:40:16.846" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:40:16.846" starttime="20210121 14:40:16.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:40:16.847" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:40:16.847" starttime="20210121 14:40:16.846"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.847" starttime="20210121 14:40:16.845"></status>
</kw>
<msg timestamp="20210121 14:40:16.848" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:40:16.848" starttime="20210121 14:40:16.845"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.848" starttime="20210121 14:40:16.844"></status>
</kw>
<msg timestamp="20210121 14:40:16.848" level="INFO">${url} = o3fs://link1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:40:16.848" starttime="20210121 14:40:16.843"></status>
</kw>
<msg timestamp="20210121 14:40:16.848" level="INFO">${BASE_URL} = o3fs://link1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:40:16.848" starttime="20210121 14:40:16.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:40:16.849" level="INFO">${BASE_URL} = o3fs://link1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:40:16.849" starttime="20210121 14:40:16.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210121 14:40:16.850" level="INFO">${DEEP_URL} = o3fs://link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" endtime="20210121 14:40:16.851" starttime="20210121 14:40:16.849"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.851" starttime="20210121 14:40:16.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:40:16.851" level="INFO">Completed setup for o3fs tests with links in fstest1/link1-o3fs using FS base URL: o3fs://link1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:40:16.851" starttime="20210121 14:40:16.851"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.852" starttime="20210121 14:39:40.214"></status>
</kw>
<test id="s1-s7-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:40:16.858" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:40:16.858" starttime="20210121 14:40:16.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:40:16.859" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:40:16.859" starttime="20210121 14:40:16.859"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.859" starttime="20210121 14:40:16.856"></status>
</kw>
<msg timestamp="20210121 14:40:16.860" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:40:16.860" starttime="20210121 14:40:16.856"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:16.860" starttime="20210121 14:40:16.855"></status>
</kw>
<msg timestamp="20210121 14:40:16.860" level="INFO">${url} = o3fs://link1-o3fs.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:40:16.860" starttime="20210121 14:40:16.854"></status>
</kw>
<msg timestamp="20210121 14:40:16.860" level="INFO">${root} = o3fs://link1-o3fs.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:40:16.860" starttime="20210121 14:40:16.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:16.864" level="INFO">Running command 'ozone fs -ls o3fs://link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:20.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:20.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:20.047" starttime="20210121 14:40:16.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:20.048" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:20.048" starttime="20210121 14:40:20.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:20.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:20.049" starttime="20210121 14:40:20.048"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:20.049" starttime="20210121 14:40:16.861"></status>
</kw>
<msg timestamp="20210121 14:40:20.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:20.049" starttime="20210121 14:40:16.861"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:20.050" starttime="20210121 14:40:16.861"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:20.050" critical="yes" starttime="20210121 14:40:16.852"></status>
</test>
<test id="s1-s7-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:40:20.056" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:40:20.056" starttime="20210121 14:40:20.055"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:40:20.057" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:40:20.057" starttime="20210121 14:40:20.056"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:20.057" starttime="20210121 14:40:20.054"></status>
</kw>
<msg timestamp="20210121 14:40:20.057" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:40:20.057" starttime="20210121 14:40:20.054"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:20.058" starttime="20210121 14:40:20.053"></status>
</kw>
<msg timestamp="20210121 14:40:20.058" level="INFO">${url} = o3fs://link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" endtime="20210121 14:40:20.058" starttime="20210121 14:40:20.052"></status>
</kw>
<msg timestamp="20210121 14:40:20.058" level="INFO">${url} = o3fs://link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" endtime="20210121 14:40:20.058" starttime="20210121 14:40:20.051"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:20.061" level="INFO">Running command 'ozone fs -ls o3fs://link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:23.167" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:40:23.167" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:40:23.167" starttime="20210121 14:40:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:23.169" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:40:23.169" starttime="20210121 14:40:23.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:23.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:23.170" starttime="20210121 14:40:23.169"></status>
</kw>
<msg timestamp="20210121 14:40:23.170" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:40:23.170" starttime="20210121 14:40:20.058"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:23.171" starttime="20210121 14:40:23.170"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:23.171" critical="yes" starttime="20210121 14:40:20.050"></status>
</test>
<test id="s1-s7-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:40:23.177" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:40:23.177" starttime="20210121 14:40:23.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:40:23.178" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:40:23.178" starttime="20210121 14:40:23.177"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:23.178" starttime="20210121 14:40:23.176"></status>
</kw>
<msg timestamp="20210121 14:40:23.178" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:40:23.178" starttime="20210121 14:40:23.175"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:23.178" starttime="20210121 14:40:23.174"></status>
</kw>
<msg timestamp="20210121 14:40:23.178" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:40:23.178" starttime="20210121 14:40:23.174"></status>
</kw>
<msg timestamp="20210121 14:40:23.179" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:40:23.179" starttime="20210121 14:40:23.173"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:23.182" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:26.450" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:40:26.451" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:40:26.451" starttime="20210121 14:40:23.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:26.452" level="INFO">ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:40:26.452" starttime="20210121 14:40:26.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:26.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:26.453" starttime="20210121 14:40:26.452"></status>
</kw>
<msg timestamp="20210121 14:40:26.453" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:40:26.453" starttime="20210121 14:40:23.179"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:26.454" starttime="20210121 14:40:26.453"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:26.454" critical="yes" starttime="20210121 14:40:23.172"></status>
</test>
<test id="s1-s7-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:26.460" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:30.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:30.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:40:30.104" starttime="20210121 14:40:26.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:30.105" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:40:30.105" starttime="20210121 14:40:30.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:30.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:30.105" starttime="20210121 14:40:30.105"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:30.106" starttime="20210121 14:40:26.457"></status>
</kw>
<msg timestamp="20210121 14:40:30.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:30.106" starttime="20210121 14:40:26.457"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:30.106" starttime="20210121 14:40:26.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:30.110" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:33.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:33.348" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:40:33.348" starttime="20210121 14:40:30.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:33.349" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:40:33.349" starttime="20210121 14:40:33.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:33.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:33.350" starttime="20210121 14:40:33.349"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:33.350" starttime="20210121 14:40:30.108"></status>
</kw>
<msg timestamp="20210121 14:40:33.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:33.351" starttime="20210121 14:40:30.107"></status>
</kw>
<msg timestamp="20210121 14:40:33.351" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:40:33.351" starttime="20210121 14:40:30.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:33.351" starttime="20210121 14:40:33.351"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:33.352" critical="yes" starttime="20210121 14:40:26.455"></status>
</test>
<test id="s1-s7-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:33.357" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:38.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:38.349" level="INFO">${output} = 2021-01-21 14:40:36,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:40:36,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:40:38.349" starttime="20210121 14:40:33.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:38.350" level="INFO">2021-01-21 14:40:36,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:40:36,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:40:36,792 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:40:37,211 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:40:37,212 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-85236A173624-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:40:37,213 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:40:38.350" starttime="20210121 14:40:38.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:38.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:38.351" starttime="20210121 14:40:38.350"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:38.351" starttime="20210121 14:40:33.355"></status>
</kw>
<msg timestamp="20210121 14:40:38.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:38.351" starttime="20210121 14:40:33.354"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:38.352" starttime="20210121 14:40:33.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:38.356" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:41.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:41.423" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:40:41.423" starttime="20210121 14:40:38.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:41.424" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:40:41.424" starttime="20210121 14:40:41.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:41.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:41.425" starttime="20210121 14:40:41.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:41.425" starttime="20210121 14:40:38.353"></status>
</kw>
<msg timestamp="20210121 14:40:41.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:41.426" starttime="20210121 14:40:38.353"></status>
</kw>
<msg timestamp="20210121 14:40:41.427" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:40:41.427" starttime="20210121 14:40:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:41.430" starttime="20210121 14:40:41.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:41.434" level="INFO">Running command 'ozone sh key info fstest1/link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:44.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:44.890" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210121 14:40:44.890" starttime="20210121 14:40:41.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:44.892" level="INFO">3</msg>
<status status="PASS" endtime="20210121 14:40:44.892" starttime="20210121 14:40:44.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:44.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:44.893" starttime="20210121 14:40:44.892"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:44.893" starttime="20210121 14:40:41.431"></status>
</kw>
<msg timestamp="20210121 14:40:44.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:44.893" starttime="20210121 14:40:41.431"></status>
</kw>
<msg timestamp="20210121 14:40:44.893" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210121 14:40:44.893" starttime="20210121 14:40:41.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:44.894" starttime="20210121 14:40:44.894"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:44.894" critical="yes" starttime="20210121 14:40:33.353"></status>
</test>
<test id="s1-s7-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:44.899" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:50.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:50.210" level="INFO">${output} = 2021-01-21 14:40:48,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:40:48,520 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:40:50.210" starttime="20210121 14:40:44.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:50.212" level="INFO">2021-01-21 14:40:48,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:40:48,520 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:40:48,521 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:40:48,890 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:40:48,891 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E3A49BA1D5E6-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:40:48,892 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:40:50.212" starttime="20210121 14:40:50.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:50.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:50.213" starttime="20210121 14:40:50.213"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:50.213" starttime="20210121 14:40:44.897"></status>
</kw>
<msg timestamp="20210121 14:40:50.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:50.214" starttime="20210121 14:40:44.896"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:50.214" starttime="20210121 14:40:44.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:50.218" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:53.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:53.579" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:40:53.579" starttime="20210121 14:40:50.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:53.581" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:40:53.581" starttime="20210121 14:40:53.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:53.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:53.581" starttime="20210121 14:40:53.581"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:53.582" starttime="20210121 14:40:50.215"></status>
</kw>
<msg timestamp="20210121 14:40:53.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:53.582" starttime="20210121 14:40:50.215"></status>
</kw>
<msg timestamp="20210121 14:40:53.582" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:40:53.582" starttime="20210121 14:40:50.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:53.583" starttime="20210121 14:40:53.583"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:53.583" critical="yes" starttime="20210121 14:40:44.895"></status>
</test>
<test id="s1-s7-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:53.589" level="INFO">Running command 'ozone fs -ls o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:40:56.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:40:56.973" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs....</msg>
<status status="PASS" endtime="20210121 14:40:56.973" starttime="20210121 14:40:53.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:40:56.974" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:40:56.975" starttime="20210121 14:40:56.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:40:56.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:40:56.976" starttime="20210121 14:40:56.975"></status>
</kw>
<status status="PASS" endtime="20210121 14:40:56.976" starttime="20210121 14:40:53.586"></status>
</kw>
<msg timestamp="20210121 14:40:56.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:40:56.976" starttime="20210121 14:40:53.586"></status>
</kw>
<msg timestamp="20210121 14:40:56.977" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs....</msg>
<status status="PASS" endtime="20210121 14:40:56.977" starttime="20210121 14:40:53.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:56.977" starttime="20210121 14:40:56.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:40:56.978" starttime="20210121 14:40:56.977"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:40:56.978" critical="yes" starttime="20210121 14:40:53.584"></status>
</test>
<test id="s1-s7-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:40:56.983" level="INFO">Running command 'ozone fs -mv o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:00.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:00.591" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:00.591" starttime="20210121 14:40:56.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:00.592" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:00.592" starttime="20210121 14:41:00.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:00.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:00.593" starttime="20210121 14:41:00.592"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:00.593" starttime="20210121 14:40:56.980"></status>
</kw>
<msg timestamp="20210121 14:41:00.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:00.593" starttime="20210121 14:40:56.980"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:00.594" starttime="20210121 14:40:56.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:00.598" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:04.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:04.052" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:04.052" starttime="20210121 14:41:00.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:04.053" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:04.054" starttime="20210121 14:41:04.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:04.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:04.054" starttime="20210121 14:41:04.054"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:04.055" starttime="20210121 14:41:00.595"></status>
</kw>
<msg timestamp="20210121 14:41:04.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:04.055" starttime="20210121 14:41:00.595"></status>
</kw>
<msg timestamp="20210121 14:41:04.055" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:04.055" starttime="20210121 14:41:00.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:04.057" starttime="20210121 14:41:04.056"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:04.057" starttime="20210121 14:41:04.057"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:04.057" critical="yes" starttime="20210121 14:40:56.979"></status>
</test>
<test id="s1-s7-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:04.062" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:07.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:07.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:07.604" starttime="20210121 14:41:04.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:07.605" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:07.606" starttime="20210121 14:41:07.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:07.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:07.607" starttime="20210121 14:41:07.606"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:07.607" starttime="20210121 14:41:04.060"></status>
</kw>
<msg timestamp="20210121 14:41:07.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:07.607" starttime="20210121 14:41:04.059"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:07.608" starttime="20210121 14:41:04.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:07.612" level="INFO">Running command 'ozone fs -cp o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:12.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:12.745" level="INFO">${output} = 2021-01-21 14:41:10,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:41:10,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:41:12.745" starttime="20210121 14:41:07.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:12.746" level="INFO">2021-01-21 14:41:10,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:41:10,839 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:41:10,839 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:41:11,834 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:41:11,835 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-927BD67693F8-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:41:11,837 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:41:12.746" starttime="20210121 14:41:12.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:12.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:12.747" starttime="20210121 14:41:12.746"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:12.747" starttime="20210121 14:41:07.609"></status>
</kw>
<msg timestamp="20210121 14:41:12.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:12.747" starttime="20210121 14:41:07.609"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:12.748" starttime="20210121 14:41:07.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:12.752" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:15.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:15.994" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:15.995" starttime="20210121 14:41:12.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:15.996" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:15.996" starttime="20210121 14:41:15.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:15.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:15.997" starttime="20210121 14:41:15.996"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:15.997" starttime="20210121 14:41:12.749"></status>
</kw>
<msg timestamp="20210121 14:41:15.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:15.997" starttime="20210121 14:41:12.748"></status>
</kw>
<msg timestamp="20210121 14:41:15.998" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:15.998" starttime="20210121 14:41:12.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:15.998" starttime="20210121 14:41:15.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:16.002" level="INFO">Running command 'ozone fs -ls o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:19.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:19.423" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:19.423" starttime="20210121 14:41:16.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:19.425" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:19.425" starttime="20210121 14:41:19.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:19.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:19.425" starttime="20210121 14:41:19.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:19.426" starttime="20210121 14:41:15.999"></status>
</kw>
<msg timestamp="20210121 14:41:19.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:19.426" starttime="20210121 14:41:15.999"></status>
</kw>
<msg timestamp="20210121 14:41:19.426" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:19.426" starttime="20210121 14:41:15.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:19.427" starttime="20210121 14:41:19.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:19.427" starttime="20210121 14:41:19.427"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:19.428" critical="yes" starttime="20210121 14:41:04.058"></status>
</test>
<test id="s1-s7-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:19.434" level="INFO">Running command 'ozone fs -cat o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:24.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:24.209" level="INFO">${output} = 2021-01-21 14:41:22,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:41:22,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:41:24.209" starttime="20210121 14:41:19.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:24.210" level="INFO">2021-01-21 14:41:22,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:41:22,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:41:22,964 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210121 14:41:24.211" starttime="20210121 14:41:24.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:24.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:24.211" starttime="20210121 14:41:24.211"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:24.212" starttime="20210121 14:41:19.431"></status>
</kw>
<msg timestamp="20210121 14:41:24.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:24.212" starttime="20210121 14:41:19.430"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:24.214" starttime="20210121 14:41:19.430"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:24.214" critical="yes" starttime="20210121 14:41:19.429"></status>
</test>
<test id="s1-s7-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:24.220" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:27.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:27.224" level="INFO">${output} = Deleted o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:27.224" starttime="20210121 14:41:24.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:27.226" level="INFO">Deleted o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:41:27.226" starttime="20210121 14:41:27.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:27.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:27.226" starttime="20210121 14:41:27.226"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:27.227" starttime="20210121 14:41:24.217"></status>
</kw>
<msg timestamp="20210121 14:41:27.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:27.227" starttime="20210121 14:41:24.216"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:27.227" starttime="20210121 14:41:24.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:27.231" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:30.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:30.574" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:41:30.574" starttime="20210121 14:41:27.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:30.575" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:41:30.575" starttime="20210121 14:41:30.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:30.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:30.576" starttime="20210121 14:41:30.575"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:30.576" starttime="20210121 14:41:27.228"></status>
</kw>
<msg timestamp="20210121 14:41:30.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:30.577" starttime="20210121 14:41:27.228"></status>
</kw>
<msg timestamp="20210121 14:41:30.577" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:41:30.577" starttime="20210121 14:41:27.227"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:30.578" starttime="20210121 14:41:30.577"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:30.578" critical="yes" starttime="20210121 14:41:24.215"></status>
</test>
<test id="s1-s7-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:30.584" level="INFO">Running command 'ozone fs -rmdir o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:34.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:34.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:34.040" starttime="20210121 14:41:30.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:34.041" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:34.041" starttime="20210121 14:41:34.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:34.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:34.042" starttime="20210121 14:41:34.041"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:34.042" starttime="20210121 14:41:30.580"></status>
</kw>
<msg timestamp="20210121 14:41:34.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:34.043" starttime="20210121 14:41:30.580"></status>
</kw>
<msg timestamp="20210121 14:41:34.043" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:41:34.043" starttime="20210121 14:41:30.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:34.047" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:37.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:37.090" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:37.090" starttime="20210121 14:41:34.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:37.091" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:37.091" starttime="20210121 14:41:37.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:37.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:37.092" starttime="20210121 14:41:37.091"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:37.092" starttime="20210121 14:41:34.044"></status>
</kw>
<msg timestamp="20210121 14:41:37.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:37.092" starttime="20210121 14:41:34.044"></status>
</kw>
<msg timestamp="20210121 14:41:37.093" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:41:37.093" starttime="20210121 14:41:34.043"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:37.093" starttime="20210121 14:41:37.093"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:37.094" critical="yes" starttime="20210121 14:41:30.578"></status>
</test>
<test id="s1-s7-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:37.098" level="INFO">Running command 'ozone fs -touch o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:40.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:40.516" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:40.516" starttime="20210121 14:41:37.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:40.518" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:40.518" starttime="20210121 14:41:40.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:40.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:40.518" starttime="20210121 14:41:40.518"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:40.519" starttime="20210121 14:41:37.096"></status>
</kw>
<msg timestamp="20210121 14:41:40.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:40.519" starttime="20210121 14:41:37.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:40.519" starttime="20210121 14:41:37.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:40.523" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:43.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:43.932" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:41:43.932" starttime="20210121 14:41:40.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:43.933" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:41:43.933" starttime="20210121 14:41:43.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:43.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:43.934" starttime="20210121 14:41:43.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:43.934" starttime="20210121 14:41:40.520"></status>
</kw>
<msg timestamp="20210121 14:41:43.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:43.935" starttime="20210121 14:41:40.520"></status>
</kw>
<msg timestamp="20210121 14:41:43.935" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:41:43.935" starttime="20210121 14:41:40.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:43.936" starttime="20210121 14:41:43.935"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:43.936" critical="yes" starttime="20210121 14:41:37.094"></status>
</test>
<test id="s1-s7-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:43.943" level="INFO">Running command 'ozone fs -touch o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:47.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:47.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:47.267" starttime="20210121 14:41:43.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:47.268" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:47.268" starttime="20210121 14:41:47.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:47.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:47.269" starttime="20210121 14:41:47.268"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:47.269" starttime="20210121 14:41:43.941"></status>
</kw>
<msg timestamp="20210121 14:41:47.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:47.269" starttime="20210121 14:41:43.940"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:47.270" starttime="20210121 14:41:43.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:47.275" level="INFO">Running command 'ozone fs -rm o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:50.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:50.723" level="INFO">${output} = 2021-01-21 14:41:50,525 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:41:50,596 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:41:50.723" starttime="20210121 14:41:47.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:50.724" level="INFO">2021-01-21 14:41:50,525 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:41:50,596 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/hadoop/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210121 14:41:50.724" starttime="20210121 14:41:50.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:50.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:50.725" starttime="20210121 14:41:50.724"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:50.725" starttime="20210121 14:41:47.271"></status>
</kw>
<msg timestamp="20210121 14:41:50.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:50.725" starttime="20210121 14:41:47.270"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:50.726" starttime="20210121 14:41:47.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:50.731" level="INFO">Running command 'ozone fs -ls -R o3fs://link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:54.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:54.241" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop
drwxrwx...</msg>
<status status="PASS" endtime="20210121 14:41:54.241" starttime="20210121 14:41:50.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:54.242" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop/Current/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:40 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:41:54.243" starttime="20210121 14:41:54.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:54.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:54.243" starttime="20210121 14:41:54.243"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:54.244" starttime="20210121 14:41:50.727"></status>
</kw>
<msg timestamp="20210121 14:41:54.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:54.244" starttime="20210121 14:41:50.726"></status>
</kw>
<msg timestamp="20210121 14:41:54.244" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:41 o3fs://link1-o3fs.fstest1.om/.Trash/hadoop
drwxrwx...</msg>
<status status="PASS" endtime="20210121 14:41:54.244" starttime="20210121 14:41:50.726"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:54.245" starttime="20210121 14:41:54.245"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser/scm@EXAMPLE.COM</arg>
<arg>.Trash/root</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:54.246" starttime="20210121 14:41:54.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:41:54.246" starttime="20210121 14:41:54.246"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:41:54.246" critical="yes" starttime="20210121 14:41:43.938"></status>
</test>
<test id="s1-s7-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:54.252" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:41:57.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:41:57.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:41:57.545" starttime="20210121 14:41:54.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:41:57.547" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:41:57.547" starttime="20210121 14:41:57.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:41:57.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:41:57.548" starttime="20210121 14:41:57.547"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:57.548" starttime="20210121 14:41:54.249"></status>
</kw>
<msg timestamp="20210121 14:41:57.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:41:57.548" starttime="20210121 14:41:54.248"></status>
</kw>
<status status="PASS" endtime="20210121 14:41:57.548" starttime="20210121 14:41:54.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:41:57.552" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:00.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:00.931" level="INFO">${output} = Deleted o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:42:00.931" starttime="20210121 14:41:57.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:00.932" level="INFO">Deleted o3fs://link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:42:00.932" starttime="20210121 14:42:00.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:00.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:00.933" starttime="20210121 14:42:00.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:00.933" starttime="20210121 14:41:57.550"></status>
</kw>
<msg timestamp="20210121 14:42:00.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:00.934" starttime="20210121 14:41:57.549"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:00.934" starttime="20210121 14:41:57.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:00.938" level="INFO">Running command 'ozone sh key list fstest1/link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:04.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:04.056" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/210121144200/
.Trash/hadoop/210121144200/test/
.Trash/hadoop/210121144200/test/o3fs/
.Trash/hadoop/210121144200/test/o3fs/dir/
.Trash/hadoop/210121144200/test/o3fs...</msg>
<status status="PASS" endtime="20210121 14:42:04.056" starttime="20210121 14:42:00.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.058" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/210121144200/
.Trash/hadoop/210121144200/test/
.Trash/hadoop/210121144200/test/o3fs/
.Trash/hadoop/210121144200/test/o3fs/dir/
.Trash/hadoop/210121144200/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:42:04.058" starttime="20210121 14:42:04.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:04.059" starttime="20210121 14:42:04.058"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.059" starttime="20210121 14:42:00.935"></status>
</kw>
<msg timestamp="20210121 14:42:04.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:04.059" starttime="20210121 14:42:00.935"></status>
</kw>
<msg timestamp="20210121 14:42:04.059" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/210121144200/
.Trash/hadoop/210121144200/test/
.Trash/hadoop/210121144200/test/o3fs/
.Trash/hadoop/210121144200/test/o3fs/dir/
.Trash/hadoop/210121144200/test/o3fs...</msg>
<status status="PASS" endtime="20210121 14:42:04.059" starttime="20210121 14:42:00.934"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:42:04.060" starttime="20210121 14:42:04.060"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:04.060" critical="yes" starttime="20210121 14:41:54.247"></status>
</test>
<test id="s1-s7-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:04.066" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:04.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:04.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:04.068" starttime="20210121 14:42:04.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.070" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:04.070" starttime="20210121 14:42:04.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:04.070" starttime="20210121 14:42:04.070"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.071" starttime="20210121 14:42:04.063"></status>
</kw>
<msg timestamp="20210121 14:42:04.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:04.071" starttime="20210121 14:42:04.063"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.071" starttime="20210121 14:42:04.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:04.076" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:04.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:04.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:04.078" starttime="20210121 14:42:04.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.079" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:04.080" starttime="20210121 14:42:04.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:04.080" starttime="20210121 14:42:04.080"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.081" starttime="20210121 14:42:04.072"></status>
</kw>
<msg timestamp="20210121 14:42:04.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:04.081" starttime="20210121 14:42:04.072"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.081" starttime="20210121 14:42:04.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:04.085" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:04.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:04.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:04.088" starttime="20210121 14:42:04.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.089" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:04.089" starttime="20210121 14:42:04.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:04.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:04.090" starttime="20210121 14:42:04.089"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.090" starttime="20210121 14:42:04.083"></status>
</kw>
<msg timestamp="20210121 14:42:04.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:04.090" starttime="20210121 14:42:04.082"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:04.091" starttime="20210121 14:42:04.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:04.094" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:07.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:07.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:07.503" starttime="20210121 14:42:04.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:07.504" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:07.505" starttime="20210121 14:42:07.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:07.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:07.505" starttime="20210121 14:42:07.505"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:07.506" starttime="20210121 14:42:04.092"></status>
</kw>
<msg timestamp="20210121 14:42:07.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:07.506" starttime="20210121 14:42:04.091"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:07.506" starttime="20210121 14:42:04.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:07.510" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:12.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:12.501" level="INFO">${output} = 2021-01-21 14:42:10,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:10,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:42:12.501" starttime="20210121 14:42:07.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:12.502" level="INFO">2021-01-21 14:42:10,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:10,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:42:10,928 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:42:11,316 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:42:11,317 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3A3188A58BE8-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:42:11,318 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:42:12.502" starttime="20210121 14:42:12.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:12.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:12.503" starttime="20210121 14:42:12.502"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:12.503" starttime="20210121 14:42:07.507"></status>
</kw>
<msg timestamp="20210121 14:42:12.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:12.503" starttime="20210121 14:42:07.507"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:12.504" starttime="20210121 14:42:07.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:12.508" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:17.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:17.891" level="INFO">${output} = 2021-01-21 14:42:16,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:16,220 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:42:17.891" starttime="20210121 14:42:12.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:17.892" level="INFO">2021-01-21 14:42:16,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:16,220 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:42:16,220 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:42:16,612 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:42:16,613 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F360BBDDCF9F-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:42:16,614 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:42:17.892" starttime="20210121 14:42:17.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:17.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:17.893" starttime="20210121 14:42:17.892"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:17.893" starttime="20210121 14:42:12.505"></status>
</kw>
<msg timestamp="20210121 14:42:17.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:17.894" starttime="20210121 14:42:12.504"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:17.894" starttime="20210121 14:42:12.504"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:17.894" starttime="20210121 14:42:04.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:17.898" level="INFO">Running command 'ozone fs -ls -R o3fs://link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:21.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:21.006" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1...</msg>
<status status="PASS" endtime="20210121 14:42:21.006" starttime="20210121 14:42:17.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:21.007" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210121 14:42:21.008" starttime="20210121 14:42:21.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:21.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:21.008" starttime="20210121 14:42:21.008"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:21.009" starttime="20210121 14:42:17.895"></status>
</kw>
<msg timestamp="20210121 14:42:21.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:21.009" starttime="20210121 14:42:17.895"></status>
</kw>
<msg timestamp="20210121 14:42:21.009" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/testdir1...</msg>
<status status="PASS" endtime="20210121 14:42:21.009" starttime="20210121 14:42:17.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:42:21.010" starttime="20210121 14:42:21.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:42:21.011" starttime="20210121 14:42:21.011"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:21.011" critical="yes" starttime="20210121 14:42:04.061"></status>
</test>
<test id="s1-s7-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:42:21.016" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:42:21.016" starttime="20210121 14:42:21.016"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:42:21.017" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:42:21.017" starttime="20210121 14:42:21.017"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:21.018" starttime="20210121 14:42:21.015"></status>
</kw>
<msg timestamp="20210121 14:42:21.018" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:42:21.018" starttime="20210121 14:42:21.015"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:21.019" starttime="20210121 14:42:21.014"></status>
</kw>
<msg timestamp="20210121 14:42:21.019" level="INFO">${url} = o3fs://link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" endtime="20210121 14:42:21.019" starttime="20210121 14:42:21.013"></status>
</kw>
<msg timestamp="20210121 14:42:21.019" level="INFO">${target} = o3fs://link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" endtime="20210121 14:42:21.019" starttime="20210121 14:42:21.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:21.024" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:24.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:24.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:24.200" starttime="20210121 14:42:21.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:24.201" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:24.201" starttime="20210121 14:42:24.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:24.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:24.202" starttime="20210121 14:42:24.201"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:24.202" starttime="20210121 14:42:21.020"></status>
</kw>
<msg timestamp="20210121 14:42:24.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:24.202" starttime="20210121 14:42:21.020"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:24.203" starttime="20210121 14:42:21.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:24.207" level="INFO">Running command 'ozone fs -cp o3fs://link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:29.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:29.341" level="INFO">${output} = 2021-01-21 14:42:27,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:27,765 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:42:29.341" starttime="20210121 14:42:24.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:29.342" level="INFO">2021-01-21 14:42:27,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:27,765 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:42:27,765 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:42:28,687 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:42:28,688 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-253B4467E880-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:42:28,689 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:42:29.342" starttime="20210121 14:42:29.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:29.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:29.343" starttime="20210121 14:42:29.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:29.343" starttime="20210121 14:42:24.204"></status>
</kw>
<msg timestamp="20210121 14:42:29.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:29.344" starttime="20210121 14:42:24.203"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:29.344" starttime="20210121 14:42:24.203"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:29.348" level="INFO">Running command 'ozone fs -rm -r o3fs://link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:32.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:32.593" level="INFO">${output} = 2021-01-21 14:42:32,309 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:42:32,409 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:42:32.594" starttime="20210121 14:42:29.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:32.594" level="INFO">2021-01-21 14:42:32,309 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:42:32,409 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://link2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/hadoop/Current/testdir2</msg>
<status status="PASS" endtime="20210121 14:42:32.595" starttime="20210121 14:42:32.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:32.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:32.595" starttime="20210121 14:42:32.595"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:32.596" starttime="20210121 14:42:29.345"></status>
</kw>
<msg timestamp="20210121 14:42:32.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:32.596" starttime="20210121 14:42:29.345"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:32.596" starttime="20210121 14:42:29.344"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:32.596" critical="yes" starttime="20210121 14:42:21.012"></status>
</test>
<test id="s1-s7-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:42:32.602" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:42:32.602" starttime="20210121 14:42:32.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:42:32.603" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:42:32.603" starttime="20210121 14:42:32.602"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:32.603" starttime="20210121 14:42:32.601"></status>
</kw>
<msg timestamp="20210121 14:42:32.603" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:42:32.603" starttime="20210121 14:42:32.600"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:32.603" starttime="20210121 14:42:32.599"></status>
</kw>
<msg timestamp="20210121 14:42:32.604" level="INFO">${url} = o3fs://link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" endtime="20210121 14:42:32.604" starttime="20210121 14:42:32.599"></status>
</kw>
<msg timestamp="20210121 14:42:32.604" level="INFO">${target} = o3fs://link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" endtime="20210121 14:42:32.604" starttime="20210121 14:42:32.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:32.615" level="INFO">Running command 'ozone fs -mkdir -p o3fs://link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:35.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:35.980" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:35.980" starttime="20210121 14:42:32.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:35.981" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:35.981" starttime="20210121 14:42:35.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:35.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:35.982" starttime="20210121 14:42:35.982"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:35.982" starttime="20210121 14:42:32.608"></status>
</kw>
<msg timestamp="20210121 14:42:35.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:35.983" starttime="20210121 14:42:32.607"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:35.983" starttime="20210121 14:42:32.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:35.987" level="INFO">Running command 'ozone fs -cp o3fs://link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:41.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:41.249" level="INFO">${output} = 2021-01-21 14:42:39,496 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:39,652 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:42:41.249" starttime="20210121 14:42:35.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:41.250" level="INFO">2021-01-21 14:42:39,496 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:42:39,652 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:42:39,652 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:42:40,607 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:42:40,607 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-23E69AE2E1EA-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:42:40,609 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:42:41.250" starttime="20210121 14:42:41.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:41.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:41.251" starttime="20210121 14:42:41.250"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:41.251" starttime="20210121 14:42:35.984"></status>
</kw>
<msg timestamp="20210121 14:42:41.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:41.252" starttime="20210121 14:42:35.984"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:41.252" starttime="20210121 14:42:35.983"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:41.256" level="INFO">Running command 'ozone fs -rm -r o3fs://link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:44.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:44.569" level="INFO">${output} = 2021-01-21 14:42:44,275 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:42:44,362 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:42:44.569" starttime="20210121 14:42:41.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:44.570" level="INFO">2021-01-21 14:42:44,275 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:42:44,362 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://link3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/hadoop/Current/testdir3</msg>
<status status="PASS" endtime="20210121 14:42:44.570" starttime="20210121 14:42:44.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:44.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:44.571" starttime="20210121 14:42:44.571"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:44.571" starttime="20210121 14:42:41.253"></status>
</kw>
<msg timestamp="20210121 14:42:44.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:44.572" starttime="20210121 14:42:41.253"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:44.572" starttime="20210121 14:42:41.252"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:44.572" critical="yes" starttime="20210121 14:42:32.597"></status>
</test>
<test id="s1-s7-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:44.578" level="INFO">Running command 'ozone sh key put fstest1/link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:49.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:49.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:49.874" starttime="20210121 14:42:44.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:49.875" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:49.875" starttime="20210121 14:42:49.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:49.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:49.876" starttime="20210121 14:42:49.875"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:49.876" starttime="20210121 14:42:44.575"></status>
</kw>
<msg timestamp="20210121 14:42:49.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:49.877" starttime="20210121 14:42:44.575"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:49.877" starttime="20210121 14:42:44.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:49.881" level="INFO">Running command 'ozone fs -ls o3fs://link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:53.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:53.362" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:42:53.362" starttime="20210121 14:42:49.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:53.363" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:42:53.363" starttime="20210121 14:42:53.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:53.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:53.364" starttime="20210121 14:42:53.363"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:53.364" starttime="20210121 14:42:49.878"></status>
</kw>
<msg timestamp="20210121 14:42:53.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:53.364" starttime="20210121 14:42:49.878"></status>
</kw>
<msg timestamp="20210121 14:42:53.365" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:42 o3fs://link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:42:53.365" starttime="20210121 14:42:49.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:42:53.366" starttime="20210121 14:42:53.365"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:53.366" critical="yes" starttime="20210121 14:42:44.573"></status>
</test>
<test id="s1-s7-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:53.371" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:56.714" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:42:56.714" level="INFO">${output} = copyFromLocal: `o3fs://link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:42:56.714" starttime="20210121 14:42:53.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:56.716" level="INFO">copyFromLocal: `o3fs://link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:42:56.716" starttime="20210121 14:42:56.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:56.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:56.717" starttime="20210121 14:42:56.716"></status>
</kw>
<msg timestamp="20210121 14:42:56.717" level="INFO">${result} = copyFromLocal: `o3fs://link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:42:56.717" starttime="20210121 14:42:53.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:42:56.718" starttime="20210121 14:42:56.717"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:42:56.718" critical="yes" starttime="20210121 14:42:53.366"></status>
</test>
<test id="s1-s7-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:56.726" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:42:56.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:42:56.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:42:56.728" starttime="20210121 14:42:56.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:42:56.729" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:42:56.729" starttime="20210121 14:42:56.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:42:56.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:42:56.730" starttime="20210121 14:42:56.730"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:56.731" starttime="20210121 14:42:56.723"></status>
</kw>
<msg timestamp="20210121 14:42:56.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:42:56.731" starttime="20210121 14:42:56.722"></status>
</kw>
<status status="PASS" endtime="20210121 14:42:56.731" starttime="20210121 14:42:56.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:42:56.735" level="INFO">Running command 'ozone fs -get o3fs://link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:01.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:01.656" level="INFO">${output} = 2021-01-21 14:42:59,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:00,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:43:01.656" starttime="20210121 14:42:56.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:01.658" level="INFO">2021-01-21 14:42:59,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:00,176 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:43:00,176 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210121 14:43:01.658" starttime="20210121 14:43:01.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:01.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:01.658" starttime="20210121 14:43:01.658"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:01.659" starttime="20210121 14:42:56.732"></status>
</kw>
<msg timestamp="20210121 14:43:01.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:01.659" starttime="20210121 14:42:56.732"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:01.659" starttime="20210121 14:42:56.731"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210121 14:43:01.660" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210121 14:43:01.660" starttime="20210121 14:43:01.659"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:01.660" critical="yes" starttime="20210121 14:42:56.720"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" endtime="20210121 14:43:01.664" starttime="20210121 14:39:40.145"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s8" name="ozonefs-o3fs-bucket">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:06.150" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:09.190" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:43:09.190" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:43:09.190" starttime="20210121 14:43:06.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:09.191" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:43:09.191" starttime="20210121 14:43:09.191"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:09.192" starttime="20210121 14:43:06.144"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:09.194" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:12.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:43:12.250" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:43:12.251" starttime="20210121 14:43:09.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:12.251" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210121 14:43:12.252" starttime="20210121 14:43:12.251"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:12.252" starttime="20210121 14:43:09.192"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:12.252" starttime="20210121 14:43:06.144"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:12.257" level="INFO">Running command 'ozone sh bucket create fstest1/bucket1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:15.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:15.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:43:15.239" starttime="20210121 14:43:12.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:15.240" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:43:15.240" starttime="20210121 14:43:15.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:15.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:15.241" starttime="20210121 14:43:15.241"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:15.242" starttime="20210121 14:43:12.254"></status>
</kw>
<msg timestamp="20210121 14:43:15.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:15.242" starttime="20210121 14:43:12.254"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:15.242" starttime="20210121 14:43:12.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:15.246" level="INFO">Running command 'ozone sh bucket create fstest1/bucket2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:18.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:18.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:43:18.262" starttime="20210121 14:43:15.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:18.263" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:43:18.264" starttime="20210121 14:43:18.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:18.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:18.264" starttime="20210121 14:43:18.264"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:18.265" starttime="20210121 14:43:15.243"></status>
</kw>
<msg timestamp="20210121 14:43:18.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:18.265" starttime="20210121 14:43:15.243"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:18.265" starttime="20210121 14:43:15.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:18.269" level="INFO">Running command 'ozone sh bucket create fstest2/bucket3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:21.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:21.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:43:21.255" starttime="20210121 14:43:18.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:21.256" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:43:21.256" starttime="20210121 14:43:21.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:21.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:21.257" starttime="20210121 14:43:21.257"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:21.257" starttime="20210121 14:43:18.266"></status>
</kw>
<msg timestamp="20210121 14:43:21.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:21.258" starttime="20210121 14:43:18.266"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:21.258" starttime="20210121 14:43:18.265"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:21.258" starttime="20210121 14:43:12.253"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:21.258" starttime="20210121 14:43:12.252"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:21.263" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:24.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:24.544" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:43:24.544" starttime="20210121 14:43:21.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:24.545" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:14.778Z",
  "modificationTime" : "2021-01-21T14:33:14.778Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-07344",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.235Z",
  "modificationTime" : "2021-01-21T14:16:05.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:15:06.850Z",
  "modificationTime" : "2021-01-21T14:15:06.850Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:17:18.631Z",
  "modificationTime" : "2021-01-21T14:17:18.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "24575-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:24:55.046Z",
  "modificationTime" : "2021-01-21T14:25:14.298Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-21T14:17:21.709Z",
  "modificationTime" : "2021-01-21T14:17:21.709Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:33:11.911Z",
  "modificationTime" : "2021-01-21T14:33:11.911Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-75059",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.224Z",
  "modificationTime" : "2021-01-21T14:16:05.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:14:51.718Z",
  "modificationTime" : "2021-01-21T14:14:51.718Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31715",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.191Z",
  "modificationTime" : "2021-01-21T14:16:05.191Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:33:09.035Z",
  "modificationTime" : "2021-01-21T14:33:09.035Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2021-01-21T14:33:06.196Z",
  "modificationTime" : "2021-01-21T14:33:06.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "xwndd",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:31:48.317Z",
  "modificationTime" : "2021-01-21T14:31:48.317Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-70281",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.246Z",
  "modificationTime" : "2021-01-21T14:16:05.246Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-23161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.215Z",
  "modificationTime" : "2021-01-21T14:16:05.215Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210121 14:43:24.546" starttime="20210121 14:43:24.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:24.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:24.546" starttime="20210121 14:43:24.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:24.547" starttime="20210121 14:43:21.259"></status>
</kw>
<msg timestamp="20210121 14:43:24.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:24.547" starttime="20210121 14:43:21.259"></status>
</kw>
<msg timestamp="20210121 14:43:24.547" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:43:24.547" starttime="20210121 14:43:21.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:24.548" starttime="20210121 14:43:24.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:24.548" starttime="20210121 14:43:24.548"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:24.549" starttime="20210121 14:43:24.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:24.553" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:27.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:27.681" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T...</msg>
<status status="PASS" endtime="20210121 14:43:27.681" starttime="20210121 14:43:24.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:27.682" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:43:15.063Z",
  "modificationTime" : "2021-01-21T14:43:15.063Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 263100,
  "usedNamespace" : -2,
  "creationTime" : "2021-01-21T14:36:36.880Z",
  "modificationTime" : "2021-01-21T14:36:36.880Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:43:18.154Z",
  "modificationTime" : "2021-01-21T14:43:18.154Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : -5,
  "creationTime" : "2021-01-21T14:36:40.039Z",
  "modificationTime" : "2021-01-21T14:36:40.039Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:40:04.161Z",
  "modificationTime" : "2021-01-21T14:40:04.161Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:26.525Z",
  "modificationTime" : "2021-01-21T14:33:26.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:40:07.166Z",
  "modificationTime" : "2021-01-21T14:40:07.166Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:29.585Z",
  "modificationTime" : "2021-01-21T14:33:29.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:43:27.682" starttime="20210121 14:43:27.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:27.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:27.683" starttime="20210121 14:43:27.682"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.683" starttime="20210121 14:43:24.550"></status>
</kw>
<msg timestamp="20210121 14:43:27.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:27.684" starttime="20210121 14:43:24.550"></status>
</kw>
<msg timestamp="20210121 14:43:27.684" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T...</msg>
<status status="PASS" endtime="20210121 14:43:27.684" starttime="20210121 14:43:24.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:27.685" starttime="20210121 14:43:27.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:27.685" starttime="20210121 14:43:27.685"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.685" starttime="20210121 14:43:21.258"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:43:27.690" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:43:27.690" starttime="20210121 14:43:27.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:43:27.690" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:43:27.690" starttime="20210121 14:43:27.690"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.691" starttime="20210121 14:43:27.688"></status>
</kw>
<msg timestamp="20210121 14:43:27.691" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:43:27.691" starttime="20210121 14:43:27.688"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.691" starttime="20210121 14:43:27.687"></status>
</kw>
<msg timestamp="20210121 14:43:27.691" level="INFO">${url} = o3fs://bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:43:27.691" starttime="20210121 14:43:27.686"></status>
</kw>
<msg timestamp="20210121 14:43:27.692" level="INFO">${BASE_URL} = o3fs://bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:43:27.692" starttime="20210121 14:43:27.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:43:27.692" level="INFO">${BASE_URL} = o3fs://bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:43:27.692" starttime="20210121 14:43:27.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210121 14:43:27.694" level="INFO">${DEEP_URL} = o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" endtime="20210121 14:43:27.694" starttime="20210121 14:43:27.693"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.694" starttime="20210121 14:43:27.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:43:27.695" level="INFO">Completed setup for o3fs tests with buckets in fstest1/bucket1-o3fs using FS base URL: o3fs://bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" endtime="20210121 14:43:27.695" starttime="20210121 14:43:27.694"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.695" starttime="20210121 14:43:06.140"></status>
</kw>
<test id="s1-s8-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:43:27.701" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:43:27.701" starttime="20210121 14:43:27.700"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:43:27.702" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:43:27.702" starttime="20210121 14:43:27.701"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.702" starttime="20210121 14:43:27.699"></status>
</kw>
<msg timestamp="20210121 14:43:27.702" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:43:27.702" starttime="20210121 14:43:27.698"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:27.703" starttime="20210121 14:43:27.697"></status>
</kw>
<msg timestamp="20210121 14:43:27.703" level="INFO">${url} = o3fs://bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:43:27.703" starttime="20210121 14:43:27.697"></status>
</kw>
<msg timestamp="20210121 14:43:27.704" level="INFO">${root} = o3fs://bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:43:27.704" starttime="20210121 14:43:27.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:27.707" level="INFO">Running command 'ozone fs -ls o3fs://bucket1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:30.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:30.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:43:30.940" starttime="20210121 14:43:27.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:30.941" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:43:30.941" starttime="20210121 14:43:30.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:30.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:30.942" starttime="20210121 14:43:30.942"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:30.942" starttime="20210121 14:43:27.705"></status>
</kw>
<msg timestamp="20210121 14:43:30.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:30.943" starttime="20210121 14:43:27.704"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:30.943" starttime="20210121 14:43:27.704"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:30.943" critical="yes" starttime="20210121 14:43:27.695"></status>
</test>
<test id="s1-s8-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:43:30.950" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:43:30.950" starttime="20210121 14:43:30.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:43:30.951" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:43:30.951" starttime="20210121 14:43:30.950"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:30.951" starttime="20210121 14:43:30.949"></status>
</kw>
<msg timestamp="20210121 14:43:30.951" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:43:30.951" starttime="20210121 14:43:30.948"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:30.951" starttime="20210121 14:43:30.947"></status>
</kw>
<msg timestamp="20210121 14:43:30.951" level="INFO">${url} = o3fs://bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" endtime="20210121 14:43:30.951" starttime="20210121 14:43:30.946"></status>
</kw>
<msg timestamp="20210121 14:43:30.952" level="INFO">${url} = o3fs://bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" endtime="20210121 14:43:30.952" starttime="20210121 14:43:30.946"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:30.955" level="INFO">Running command 'ozone fs -ls o3fs://bucket1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:34.111" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:43:34.111" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:43:34.111" starttime="20210121 14:43:30.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:34.112" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:43:34.112" starttime="20210121 14:43:34.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:34.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:34.113" starttime="20210121 14:43:34.112"></status>
</kw>
<msg timestamp="20210121 14:43:34.113" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210121 14:43:34.113" starttime="20210121 14:43:30.952"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:34.114" starttime="20210121 14:43:34.113"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:34.115" critical="yes" starttime="20210121 14:43:30.945"></status>
</test>
<test id="s1-s8-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:43:34.121" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:43:34.121" starttime="20210121 14:43:34.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:43:34.121" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:43:34.122" starttime="20210121 14:43:34.121"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:34.122" starttime="20210121 14:43:34.119"></status>
</kw>
<msg timestamp="20210121 14:43:34.122" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:43:34.122" starttime="20210121 14:43:34.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:34.122" starttime="20210121 14:43:34.118"></status>
</kw>
<msg timestamp="20210121 14:43:34.122" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:43:34.122" starttime="20210121 14:43:34.117"></status>
</kw>
<msg timestamp="20210121 14:43:34.123" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" endtime="20210121 14:43:34.123" starttime="20210121 14:43:34.116"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:34.126" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:37.204" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:43:37.204" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:43:37.205" starttime="20210121 14:43:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:37.206" level="INFO">ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:43:37.206" starttime="20210121 14:43:37.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:37.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:37.207" starttime="20210121 14:43:37.206"></status>
</kw>
<msg timestamp="20210121 14:43:37.207" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" endtime="20210121 14:43:37.207" starttime="20210121 14:43:34.123"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:37.208" starttime="20210121 14:43:37.207"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:37.208" critical="yes" starttime="20210121 14:43:34.115"></status>
</test>
<test id="s1-s8-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:37.213" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:40.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:40.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:43:40.524" starttime="20210121 14:43:37.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:40.525" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:43:40.526" starttime="20210121 14:43:40.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:40.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:40.526" starttime="20210121 14:43:40.526"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:40.527" starttime="20210121 14:43:37.211"></status>
</kw>
<msg timestamp="20210121 14:43:40.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:40.527" starttime="20210121 14:43:37.210"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:40.527" starttime="20210121 14:43:37.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:40.531" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:43.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:43.706" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:43:43.706" starttime="20210121 14:43:40.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:43.708" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:43:43.708" starttime="20210121 14:43:43.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:43.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:43.708" starttime="20210121 14:43:43.708"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:43.709" starttime="20210121 14:43:40.529"></status>
</kw>
<msg timestamp="20210121 14:43:43.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:43.709" starttime="20210121 14:43:40.528"></status>
</kw>
<msg timestamp="20210121 14:43:43.709" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" endtime="20210121 14:43:43.709" starttime="20210121 14:43:40.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:43.710" starttime="20210121 14:43:43.710"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:43.710" critical="yes" starttime="20210121 14:43:37.209"></status>
</test>
<test id="s1-s8-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:43.717" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:48.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:48.662" level="INFO">${output} = 2021-01-21 14:43:47,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:47,157 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:43:48.662" starttime="20210121 14:43:43.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:48.663" level="INFO">2021-01-21 14:43:47,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:47,157 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:43:47,157 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:43:47,509 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:43:47,510 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BFDF5BB59421-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:43:47,511 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:43:48.663" starttime="20210121 14:43:48.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:48.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:48.664" starttime="20210121 14:43:48.664"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:48.664" starttime="20210121 14:43:43.713"></status>
</kw>
<msg timestamp="20210121 14:43:48.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:48.665" starttime="20210121 14:43:43.712"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:48.665" starttime="20210121 14:43:43.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:48.669" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:52.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:52.086" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:43:52.086" starttime="20210121 14:43:48.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:52.087" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:43:52.087" starttime="20210121 14:43:52.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:52.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:52.088" starttime="20210121 14:43:52.087"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:52.088" starttime="20210121 14:43:48.666"></status>
</kw>
<msg timestamp="20210121 14:43:52.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:52.088" starttime="20210121 14:43:48.666"></status>
</kw>
<msg timestamp="20210121 14:43:52.089" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:43:52.089" starttime="20210121 14:43:48.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:52.090" starttime="20210121 14:43:52.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:52.094" level="INFO">Running command 'ozone sh key info fstest1/bucket1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:43:55.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:43:55.412" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210121 14:43:55.412" starttime="20210121 14:43:52.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:43:55.413" level="INFO">3</msg>
<status status="PASS" endtime="20210121 14:43:55.413" starttime="20210121 14:43:55.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:43:55.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:43:55.414" starttime="20210121 14:43:55.413"></status>
</kw>
<status status="PASS" endtime="20210121 14:43:55.414" starttime="20210121 14:43:52.091"></status>
</kw>
<msg timestamp="20210121 14:43:55.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:43:55.414" starttime="20210121 14:43:52.091"></status>
</kw>
<msg timestamp="20210121 14:43:55.415" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210121 14:43:55.415" starttime="20210121 14:43:52.090"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:43:55.415" starttime="20210121 14:43:55.415"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:43:55.415" critical="yes" starttime="20210121 14:43:43.711"></status>
</test>
<test id="s1-s8-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:43:55.422" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:00.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:00.747" level="INFO">${output} = 2021-01-21 14:43:58,873 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:59,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:44:00.747" starttime="20210121 14:43:55.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:00.748" level="INFO">2021-01-21 14:43:58,873 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:43:59,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:43:59,048 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:43:59,425 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:43:59,425 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-45445D8A0EB1-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:43:59,426 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:44:00.748" starttime="20210121 14:44:00.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:00.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:00.749" starttime="20210121 14:44:00.748"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:00.749" starttime="20210121 14:43:55.419"></status>
</kw>
<msg timestamp="20210121 14:44:00.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:00.749" starttime="20210121 14:43:55.419"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:00.750" starttime="20210121 14:43:55.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:00.754" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:04.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:04.034" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:04.034" starttime="20210121 14:44:00.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:04.035" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:04.035" starttime="20210121 14:44:04.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:04.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:04.036" starttime="20210121 14:44:04.035"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:04.036" starttime="20210121 14:44:00.751"></status>
</kw>
<msg timestamp="20210121 14:44:04.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:04.037" starttime="20210121 14:44:00.750"></status>
</kw>
<msg timestamp="20210121 14:44:04.037" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:04.037" starttime="20210121 14:44:00.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:04.038" starttime="20210121 14:44:04.037"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:04.038" critical="yes" starttime="20210121 14:43:55.416"></status>
</test>
<test id="s1-s8-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:04.044" level="INFO">Running command 'ozone fs -ls o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:07.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:07.438" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o...</msg>
<status status="PASS" endtime="20210121 14:44:07.438" starttime="20210121 14:44:04.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:07.439" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:07.439" starttime="20210121 14:44:07.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:07.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:07.440" starttime="20210121 14:44:07.439"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:07.440" starttime="20210121 14:44:04.041"></status>
</kw>
<msg timestamp="20210121 14:44:07.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:07.441" starttime="20210121 14:44:04.041"></status>
</kw>
<msg timestamp="20210121 14:44:07.441" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o...</msg>
<status status="PASS" endtime="20210121 14:44:07.441" starttime="20210121 14:44:04.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:07.442" starttime="20210121 14:44:07.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:07.442" starttime="20210121 14:44:07.442"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:07.442" critical="yes" starttime="20210121 14:44:04.039"></status>
</test>
<test id="s1-s8-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:07.448" level="INFO">Running command 'ozone fs -mv o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:10.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:10.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:44:10.729" starttime="20210121 14:44:07.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:10.731" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:44:10.731" starttime="20210121 14:44:10.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:10.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:10.732" starttime="20210121 14:44:10.731"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:10.732" starttime="20210121 14:44:07.445"></status>
</kw>
<msg timestamp="20210121 14:44:10.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:10.732" starttime="20210121 14:44:07.444"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:10.733" starttime="20210121 14:44:07.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:10.736" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:14.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:14.009" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:14.009" starttime="20210121 14:44:10.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:14.010" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:14.011" starttime="20210121 14:44:14.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:14.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:14.015" starttime="20210121 14:44:14.011"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:14.015" starttime="20210121 14:44:10.734"></status>
</kw>
<msg timestamp="20210121 14:44:14.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:14.015" starttime="20210121 14:44:10.734"></status>
</kw>
<msg timestamp="20210121 14:44:14.015" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:14.015" starttime="20210121 14:44:10.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:14.016" starttime="20210121 14:44:14.016"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:14.017" starttime="20210121 14:44:14.016"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:14.017" critical="yes" starttime="20210121 14:44:07.443"></status>
</test>
<test id="s1-s8-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:14.022" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:17.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:17.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:44:17.297" starttime="20210121 14:44:14.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:17.299" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:44:17.299" starttime="20210121 14:44:17.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:17.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:17.300" starttime="20210121 14:44:17.299"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:17.300" starttime="20210121 14:44:14.019"></status>
</kw>
<msg timestamp="20210121 14:44:17.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:17.300" starttime="20210121 14:44:14.019"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:17.301" starttime="20210121 14:44:14.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:17.305" level="INFO">Running command 'ozone fs -cp o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:22.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:22.548" level="INFO">${output} = 2021-01-21 14:44:20,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:44:20,676 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:44:22.549" starttime="20210121 14:44:17.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:22.550" level="INFO">2021-01-21 14:44:20,516 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:44:20,676 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:44:20,676 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:44:21,679 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:44:21,680 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6ECE4450E782-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:44:21,681 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:44:22.550" starttime="20210121 14:44:22.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:22.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:22.551" starttime="20210121 14:44:22.550"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:22.551" starttime="20210121 14:44:17.302"></status>
</kw>
<msg timestamp="20210121 14:44:22.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:22.551" starttime="20210121 14:44:17.302"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:22.551" starttime="20210121 14:44:17.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:22.555" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:26.022" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:26.022" starttime="20210121 14:44:22.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:26.023" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:26.023" starttime="20210121 14:44:26.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:26.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:26.024" starttime="20210121 14:44:26.023"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:26.025" starttime="20210121 14:44:22.553"></status>
</kw>
<msg timestamp="20210121 14:44:26.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:26.025" starttime="20210121 14:44:22.552"></status>
</kw>
<msg timestamp="20210121 14:44:26.026" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:26.026" starttime="20210121 14:44:22.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:26.026" starttime="20210121 14:44:26.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:26.030" level="INFO">Running command 'ozone fs -ls o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:29.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:29.469" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:29.469" starttime="20210121 14:44:26.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:29.470" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:29.470" starttime="20210121 14:44:29.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:29.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:29.471" starttime="20210121 14:44:29.471"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:29.471" starttime="20210121 14:44:26.028"></status>
</kw>
<msg timestamp="20210121 14:44:29.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:29.472" starttime="20210121 14:44:26.027"></status>
</kw>
<msg timestamp="20210121 14:44:29.472" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:29.472" starttime="20210121 14:44:26.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:29.473" starttime="20210121 14:44:29.472"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:29.473" starttime="20210121 14:44:29.473"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:29.473" critical="yes" starttime="20210121 14:44:14.017"></status>
</test>
<test id="s1-s8-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:29.479" level="INFO">Running command 'ozone fs -cat o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:34.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:34.500" level="INFO">${output} = 2021-01-21 14:44:32,890 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:44:33,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:44:34.500" starttime="20210121 14:44:29.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:34.501" level="INFO">2021-01-21 14:44:32,890 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:44:33,048 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:44:33,048 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210121 14:44:34.502" starttime="20210121 14:44:34.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:34.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:34.503" starttime="20210121 14:44:34.502"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:34.503" starttime="20210121 14:44:29.476"></status>
</kw>
<msg timestamp="20210121 14:44:34.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:34.503" starttime="20210121 14:44:29.475"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:34.504" starttime="20210121 14:44:29.475"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:34.505" critical="yes" starttime="20210121 14:44:29.474"></status>
</test>
<test id="s1-s8-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:34.510" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:37.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:37.896" level="INFO">${output} = Deleted o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:37.896" starttime="20210121 14:44:34.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:37.898" level="INFO">Deleted o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:44:37.898" starttime="20210121 14:44:37.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:37.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:37.899" starttime="20210121 14:44:37.898"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:37.899" starttime="20210121 14:44:34.507"></status>
</kw>
<msg timestamp="20210121 14:44:37.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:37.899" starttime="20210121 14:44:34.507"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:37.899" starttime="20210121 14:44:34.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:37.904" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:41.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:41.226" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:44:41.226" starttime="20210121 14:44:37.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:41.227" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:44:41.227" starttime="20210121 14:44:41.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:41.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:41.228" starttime="20210121 14:44:41.227"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:41.228" starttime="20210121 14:44:37.901"></status>
</kw>
<msg timestamp="20210121 14:44:41.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:41.229" starttime="20210121 14:44:37.900"></status>
</kw>
<msg timestamp="20210121 14:44:41.229" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:44:41.229" starttime="20210121 14:44:37.900"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:41.230" starttime="20210121 14:44:41.229"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:41.230" critical="yes" starttime="20210121 14:44:34.505"></status>
</test>
<test id="s1-s8-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:41.236" level="INFO">Running command 'ozone fs -rmdir o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:44.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:44.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:44:44.771" starttime="20210121 14:44:41.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:44.773" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:44:44.773" starttime="20210121 14:44:44.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:44.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:44.774" starttime="20210121 14:44:44.773"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:44.774" starttime="20210121 14:44:41.233"></status>
</kw>
<msg timestamp="20210121 14:44:44.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:44.774" starttime="20210121 14:44:41.232"></status>
</kw>
<msg timestamp="20210121 14:44:44.774" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:44:44.775" starttime="20210121 14:44:41.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:44.779" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:47.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:47.939" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:47.940" starttime="20210121 14:44:44.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:47.941" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:47.941" starttime="20210121 14:44:47.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:47.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:47.942" starttime="20210121 14:44:47.941"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:47.942" starttime="20210121 14:44:44.776"></status>
</kw>
<msg timestamp="20210121 14:44:47.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:47.942" starttime="20210121 14:44:44.775"></status>
</kw>
<msg timestamp="20210121 14:44:47.942" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:44:47.943" starttime="20210121 14:44:44.775"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:47.943" starttime="20210121 14:44:47.943"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:47.943" critical="yes" starttime="20210121 14:44:41.231"></status>
</test>
<test id="s1-s8-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:47.949" level="INFO">Running command 'ozone fs -touch o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:51.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:51.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:44:51.334" starttime="20210121 14:44:47.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:51.335" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:44:51.335" starttime="20210121 14:44:51.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:51.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:51.336" starttime="20210121 14:44:51.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:51.336" starttime="20210121 14:44:47.946"></status>
</kw>
<msg timestamp="20210121 14:44:51.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:51.336" starttime="20210121 14:44:47.945"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:51.336" starttime="20210121 14:44:47.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:51.340" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:54.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:54.664" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:44:54.664" starttime="20210121 14:44:51.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:54.665" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:44:54.665" starttime="20210121 14:44:54.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:54.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:54.666" starttime="20210121 14:44:54.666"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:54.667" starttime="20210121 14:44:51.338"></status>
</kw>
<msg timestamp="20210121 14:44:54.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:54.667" starttime="20210121 14:44:51.337"></status>
</kw>
<msg timestamp="20210121 14:44:54.667" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:44:54.667" starttime="20210121 14:44:51.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:44:54.669" starttime="20210121 14:44:54.667"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:44:54.669" critical="yes" starttime="20210121 14:44:47.944"></status>
</test>
<test id="s1-s8-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:54.675" level="INFO">Running command 'ozone fs -touch o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:44:57.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:44:57.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:44:57.999" starttime="20210121 14:44:54.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:44:58.000" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:44:58.000" starttime="20210121 14:44:58.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:44:58.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:44:58.001" starttime="20210121 14:44:58.001"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:58.002" starttime="20210121 14:44:54.673"></status>
</kw>
<msg timestamp="20210121 14:44:58.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:44:58.002" starttime="20210121 14:44:54.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:44:58.002" starttime="20210121 14:44:54.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:44:58.006" level="INFO">Running command 'ozone fs -rm o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:01.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:01.394" level="INFO">${output} = 2021-01-21 14:45:01,008 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:01,104 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:45:01.394" starttime="20210121 14:44:58.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:01.395" level="INFO">2021-01-21 14:45:01,008 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:01,104 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/hadoop/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210121 14:45:01.396" starttime="20210121 14:45:01.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:01.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:01.396" starttime="20210121 14:45:01.396"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:01.397" starttime="20210121 14:44:58.003"></status>
</kw>
<msg timestamp="20210121 14:45:01.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:01.397" starttime="20210121 14:44:58.003"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:01.397" starttime="20210121 14:44:58.002"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:01.404" level="INFO">Running command 'ozone fs -ls -R o3fs://bucket1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:04.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:04.771" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop
drw...</msg>
<status status="PASS" endtime="20210121 14:45:04.771" starttime="20210121 14:45:01.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:04.773" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:43 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:44 o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:45:04.773" starttime="20210121 14:45:04.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:04.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:04.774" starttime="20210121 14:45:04.773"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:04.774" starttime="20210121 14:45:01.398"></status>
</kw>
<msg timestamp="20210121 14:45:04.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:04.774" starttime="20210121 14:45:01.398"></status>
</kw>
<msg timestamp="20210121 14:45:04.774" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/.Trash/hadoop
drw...</msg>
<status status="PASS" endtime="20210121 14:45:04.775" starttime="20210121 14:45:01.397"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:04.775" starttime="20210121 14:45:04.775"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser/scm@EXAMPLE.COM</arg>
<arg>.Trash/root</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:04.776" starttime="20210121 14:45:04.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:04.776" starttime="20210121 14:45:04.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:45:04.777" critical="yes" starttime="20210121 14:44:54.670"></status>
</test>
<test id="s1-s8-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:04.783" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:08.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:08.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:08.147" starttime="20210121 14:45:04.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:08.148" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:08.148" starttime="20210121 14:45:08.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:08.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:08.149" starttime="20210121 14:45:08.148"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:08.149" starttime="20210121 14:45:04.780"></status>
</kw>
<msg timestamp="20210121 14:45:08.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:08.149" starttime="20210121 14:45:04.780"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:08.149" starttime="20210121 14:45:04.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:08.154" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:11.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:11.616" level="INFO">${output} = Deleted o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:45:11.616" starttime="20210121 14:45:08.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:11.618" level="INFO">Deleted o3fs://bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:45:11.618" starttime="20210121 14:45:11.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:11.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:11.619" starttime="20210121 14:45:11.618"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:11.619" starttime="20210121 14:45:08.151"></status>
</kw>
<msg timestamp="20210121 14:45:11.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:11.619" starttime="20210121 14:45:08.150"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:11.620" starttime="20210121 14:45:08.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:11.625" level="INFO">Running command 'ozone sh key list fstest1/bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:15.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:15.036" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
t...</msg>
<status status="PASS" endtime="20210121 14:45:15.037" starttime="20210121 14:45:11.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.038" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:45:15.038" starttime="20210121 14:45:15.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:15.039" starttime="20210121 14:45:15.038"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.039" starttime="20210121 14:45:11.622"></status>
</kw>
<msg timestamp="20210121 14:45:15.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:15.039" starttime="20210121 14:45:11.621"></status>
</kw>
<msg timestamp="20210121 14:45:15.039" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/test/
.Trash/hadoop/Current/test/o3fs/
.Trash/hadoop/Current/test/o3fs/dir/
.Trash/hadoop/Current/test/o3fs/dir/testFile.txt
test/
t...</msg>
<status status="PASS" endtime="20210121 14:45:15.040" starttime="20210121 14:45:11.620"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:15.040" starttime="20210121 14:45:15.040"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:45:15.040" critical="yes" starttime="20210121 14:45:04.778"></status>
</test>
<test id="s1-s8-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:15.046" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:15.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:15.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:15.049" starttime="20210121 14:45:15.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.050" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:15.050" starttime="20210121 14:45:15.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:15.051" starttime="20210121 14:45:15.050"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.051" starttime="20210121 14:45:15.044"></status>
</kw>
<msg timestamp="20210121 14:45:15.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:15.051" starttime="20210121 14:45:15.043"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.051" starttime="20210121 14:45:15.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:15.055" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:15.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:15.058" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:15.058" starttime="20210121 14:45:15.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.060" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:15.060" starttime="20210121 14:45:15.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:15.060" starttime="20210121 14:45:15.060"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.061" starttime="20210121 14:45:15.053"></status>
</kw>
<msg timestamp="20210121 14:45:15.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:15.061" starttime="20210121 14:45:15.052"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.061" starttime="20210121 14:45:15.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:15.065" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:15.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:15.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:15.070" starttime="20210121 14:45:15.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.071" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:15.071" starttime="20210121 14:45:15.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:15.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:15.072" starttime="20210121 14:45:15.072"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.073" starttime="20210121 14:45:15.062"></status>
</kw>
<msg timestamp="20210121 14:45:15.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:15.074" starttime="20210121 14:45:15.062"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:15.074" starttime="20210121 14:45:15.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:15.078" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:18.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:18.742" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:18.742" starttime="20210121 14:45:15.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:18.743" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:18.743" starttime="20210121 14:45:18.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:18.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:18.744" starttime="20210121 14:45:18.744"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:18.745" starttime="20210121 14:45:15.075"></status>
</kw>
<msg timestamp="20210121 14:45:18.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:18.745" starttime="20210121 14:45:15.075"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:18.745" starttime="20210121 14:45:15.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:18.758" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:24.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:24.115" level="INFO">${output} = 2021-01-21 14:45:22,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:22,468 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:45:24.115" starttime="20210121 14:45:18.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:24.116" level="INFO">2021-01-21 14:45:22,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:22,468 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:45:22,468 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:45:22,897 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:45:22,898 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3CA77C0287AB-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:45:22,899 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:45:24.116" starttime="20210121 14:45:24.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:24.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:24.117" starttime="20210121 14:45:24.116"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:24.117" starttime="20210121 14:45:18.746"></status>
</kw>
<msg timestamp="20210121 14:45:24.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:24.117" starttime="20210121 14:45:18.746"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:24.118" starttime="20210121 14:45:18.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:24.123" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://bucket1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:28.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:28.941" level="INFO">${output} = 2021-01-21 14:45:27,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:27,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:45:28.941" starttime="20210121 14:45:24.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:28.942" level="INFO">2021-01-21 14:45:27,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:27,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:45:27,414 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:45:27,743 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:45:27,743 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B6663AB7834A-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:45:27,744 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:45:28.942" starttime="20210121 14:45:28.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:28.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:28.943" starttime="20210121 14:45:28.943"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:28.943" starttime="20210121 14:45:24.119"></status>
</kw>
<msg timestamp="20210121 14:45:28.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:28.944" starttime="20210121 14:45:24.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:28.944" starttime="20210121 14:45:24.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:28.944" starttime="20210121 14:45:15.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:28.948" level="INFO">Running command 'ozone fs -ls -R o3fs://bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:32.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:32.415" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/test...</msg>
<status status="PASS" endtime="20210121 14:45:32.415" starttime="20210121 14:45:28.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:32.416" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210121 14:45:32.416" starttime="20210121 14:45:32.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:32.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:32.417" starttime="20210121 14:45:32.416"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:32.417" starttime="20210121 14:45:28.945"></status>
</kw>
<msg timestamp="20210121 14:45:32.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:32.417" starttime="20210121 14:45:28.945"></status>
</kw>
<msg timestamp="20210121 14:45:32.418" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:45 o3fs://bucket1-o3fs.fstest1.om/test...</msg>
<status status="PASS" endtime="20210121 14:45:32.418" starttime="20210121 14:45:28.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:32.419" starttime="20210121 14:45:32.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:45:32.419" starttime="20210121 14:45:32.419"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:45:32.420" critical="yes" starttime="20210121 14:45:15.041"></status>
</test>
<test id="s1-s8-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:45:32.425" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:45:32.425" starttime="20210121 14:45:32.425"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:45:32.426" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:45:32.426" starttime="20210121 14:45:32.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:32.426" starttime="20210121 14:45:32.424"></status>
</kw>
<msg timestamp="20210121 14:45:32.426" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:45:32.426" starttime="20210121 14:45:32.423"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:32.427" starttime="20210121 14:45:32.423"></status>
</kw>
<msg timestamp="20210121 14:45:32.427" level="INFO">${url} = o3fs://bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" endtime="20210121 14:45:32.427" starttime="20210121 14:45:32.422"></status>
</kw>
<msg timestamp="20210121 14:45:32.427" level="INFO">${target} = o3fs://bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" endtime="20210121 14:45:32.427" starttime="20210121 14:45:32.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:32.431" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:35.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:35.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:35.528" starttime="20210121 14:45:32.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:35.529" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:35.529" starttime="20210121 14:45:35.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:35.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:35.530" starttime="20210121 14:45:35.530"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:35.531" starttime="20210121 14:45:32.428"></status>
</kw>
<msg timestamp="20210121 14:45:35.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:35.531" starttime="20210121 14:45:32.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:35.531" starttime="20210121 14:45:32.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:35.536" level="INFO">Running command 'ozone fs -cp o3fs://bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:40.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:40.881" level="INFO">${output} = 2021-01-21 14:45:38,977 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:39,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:45:40.881" starttime="20210121 14:45:35.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:40.882" level="INFO">2021-01-21 14:45:38,977 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:39,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:45:39,104 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:45:40,065 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:45:40,066 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6450D8297B05-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:45:40,068 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:45:40.882" starttime="20210121 14:45:40.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:40.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:40.883" starttime="20210121 14:45:40.883"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:40.883" starttime="20210121 14:45:35.532"></status>
</kw>
<msg timestamp="20210121 14:45:40.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:40.884" starttime="20210121 14:45:35.532"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:40.884" starttime="20210121 14:45:35.531"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:40.888" level="INFO">Running command 'ozone fs -rm -r o3fs://bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:44.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:44.571" level="INFO">${output} = 2021-01-21 14:45:44,174 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:44,277 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:45:44.571" starttime="20210121 14:45:40.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:44.572" level="INFO">2021-01-21 14:45:44,174 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:44,277 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://bucket2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/hadoop/Current/testdir2</msg>
<status status="PASS" endtime="20210121 14:45:44.573" starttime="20210121 14:45:44.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:44.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:44.573" starttime="20210121 14:45:44.573"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:44.574" starttime="20210121 14:45:40.885"></status>
</kw>
<msg timestamp="20210121 14:45:44.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:44.574" starttime="20210121 14:45:40.885"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:44.574" starttime="20210121 14:45:40.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:45:44.574" critical="yes" starttime="20210121 14:45:32.420"></status>
</test>
<test id="s1-s8-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:45:44.580" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210121 14:45:44.580" starttime="20210121 14:45:44.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:45:44.580" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210121 14:45:44.580" starttime="20210121 14:45:44.580"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:44.581" starttime="20210121 14:45:44.578"></status>
</kw>
<msg timestamp="20210121 14:45:44.581" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210121 14:45:44.581" starttime="20210121 14:45:44.578"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:44.581" starttime="20210121 14:45:44.577"></status>
</kw>
<msg timestamp="20210121 14:45:44.581" level="INFO">${url} = o3fs://bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" endtime="20210121 14:45:44.581" starttime="20210121 14:45:44.577"></status>
</kw>
<msg timestamp="20210121 14:45:44.582" level="INFO">${target} = o3fs://bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" endtime="20210121 14:45:44.582" starttime="20210121 14:45:44.576"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:44.586" level="INFO">Running command 'ozone fs -mkdir -p o3fs://bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:47.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:47.770" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:45:47.770" starttime="20210121 14:45:44.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:47.771" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:45:47.771" starttime="20210121 14:45:47.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:47.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:47.772" starttime="20210121 14:45:47.771"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:47.772" starttime="20210121 14:45:44.583"></status>
</kw>
<msg timestamp="20210121 14:45:47.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:47.772" starttime="20210121 14:45:44.582"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:47.773" starttime="20210121 14:45:44.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:47.777" level="INFO">Running command 'ozone fs -cp o3fs://bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:53.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:53.138" level="INFO">${output} = 2021-01-21 14:45:51,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:51,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:45:53.138" starttime="20210121 14:45:47.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:53.139" level="INFO">2021-01-21 14:45:51,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:45:51,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:45:51,204 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:45:52,158 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:45:52,158 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-7E66E17CCD9B-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:45:52,159 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:45:53.139" starttime="20210121 14:45:53.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:53.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:53.140" starttime="20210121 14:45:53.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:53.140" starttime="20210121 14:45:47.774"></status>
</kw>
<msg timestamp="20210121 14:45:53.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:53.141" starttime="20210121 14:45:47.773"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:53.141" starttime="20210121 14:45:47.773"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:53.145" level="INFO">Running command 'ozone fs -rm -r o3fs://bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:45:56.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:45:56.747" level="INFO">${output} = 2021-01-21 14:45:56,314 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:56,448 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:45:56.747" starttime="20210121 14:45:53.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:45:56.750" level="INFO">2021-01-21 14:45:56,314 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:45:56,448 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://bucket3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/hadoop/Current/testdir3</msg>
<status status="PASS" endtime="20210121 14:45:56.750" starttime="20210121 14:45:56.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:45:56.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:45:56.751" starttime="20210121 14:45:56.750"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:56.752" starttime="20210121 14:45:53.142"></status>
</kw>
<msg timestamp="20210121 14:45:56.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:45:56.752" starttime="20210121 14:45:53.142"></status>
</kw>
<status status="PASS" endtime="20210121 14:45:56.752" starttime="20210121 14:45:53.141"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:45:56.752" critical="yes" starttime="20210121 14:45:44.575"></status>
</test>
<test id="s1-s8-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:45:56.759" level="INFO">Running command 'ozone sh key put fstest1/bucket1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:02.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:02.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:46:02.251" starttime="20210121 14:45:56.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:02.252" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:46:02.252" starttime="20210121 14:46:02.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:02.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:02.253" starttime="20210121 14:46:02.252"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:02.253" starttime="20210121 14:45:56.756"></status>
</kw>
<msg timestamp="20210121 14:46:02.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:02.253" starttime="20210121 14:45:56.756"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:02.254" starttime="20210121 14:45:56.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:02.258" level="INFO">Running command 'ozone fs -ls o3fs://bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:05.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:05.614" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:46 o3fs://bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:46:05.614" starttime="20210121 14:46:02.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:05.615" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:46 o3fs://bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:46:05.615" starttime="20210121 14:46:05.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:05.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:05.616" starttime="20210121 14:46:05.616"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:05.616" starttime="20210121 14:46:02.255"></status>
</kw>
<msg timestamp="20210121 14:46:05.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:05.617" starttime="20210121 14:46:02.254"></status>
</kw>
<msg timestamp="20210121 14:46:05.617" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:46 o3fs://bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" endtime="20210121 14:46:05.617" starttime="20210121 14:46:02.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:05.618" starttime="20210121 14:46:05.617"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:46:05.618" critical="yes" starttime="20210121 14:45:56.754"></status>
</test>
<test id="s1-s8-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:05.624" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:08.816" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:46:08.816" level="INFO">${output} = copyFromLocal: `o3fs://bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:46:08.816" starttime="20210121 14:46:05.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:08.817" level="INFO">copyFromLocal: `o3fs://bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:46:08.817" starttime="20210121 14:46:08.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:08.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:08.818" starttime="20210121 14:46:08.817"></status>
</kw>
<msg timestamp="20210121 14:46:08.818" level="INFO">${result} = copyFromLocal: `o3fs://bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:46:08.818" starttime="20210121 14:46:05.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:08.819" starttime="20210121 14:46:08.818"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:46:08.819" critical="yes" starttime="20210121 14:46:05.619"></status>
</test>
<test id="s1-s8-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:08.824" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:08.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:08.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:46:08.827" starttime="20210121 14:46:08.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:08.828" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:46:08.828" starttime="20210121 14:46:08.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:08.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:08.829" starttime="20210121 14:46:08.828"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:08.830" starttime="20210121 14:46:08.822"></status>
</kw>
<msg timestamp="20210121 14:46:08.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:08.830" starttime="20210121 14:46:08.822"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:08.830" starttime="20210121 14:46:08.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:08.834" level="INFO">Running command 'ozone fs -get o3fs://bucket1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:13.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:13.563" level="INFO">${output} = 2021-01-21 14:46:12,289 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:46:12,390 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:46:13.563" starttime="20210121 14:46:08.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:46:13.564" level="INFO">2021-01-21 14:46:12,289 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:46:12,390 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:46:12,390 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210121 14:46:13.564" starttime="20210121 14:46:13.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:46:13.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:46:13.565" starttime="20210121 14:46:13.564"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:13.565" starttime="20210121 14:46:08.832"></status>
</kw>
<msg timestamp="20210121 14:46:13.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:46:13.565" starttime="20210121 14:46:08.831"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:13.566" starttime="20210121 14:46:08.830"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210121 14:46:13.566" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210121 14:46:13.566" starttime="20210121 14:46:13.566"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:46:13.567" critical="yes" starttime="20210121 14:46:08.820"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" endtime="20210121 14:46:13.571" starttime="20210121 14:43:06.067"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s9" name="ozonefs-ofs-link">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:03.465" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:06.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:06.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:06.244" starttime="20210121 14:33:03.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:06.245" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:06.245" starttime="20210121 14:33:06.244"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:06.246" starttime="20210121 14:33:03.461"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:06.248" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:09.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:09.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:09.092" starttime="20210121 14:33:06.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:09.093" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:09.093" starttime="20210121 14:33:09.092"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:09.093" starttime="20210121 14:33:06.246"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:09.094" starttime="20210121 14:33:03.461"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:09.097" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:11.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:11.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:11.984" starttime="20210121 14:33:09.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:11.985" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:11.986" starttime="20210121 14:33:11.985"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:11.986" starttime="20210121 14:33:09.095"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:11.989" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:14.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:14.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:14.958" starttime="20210121 14:33:11.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:14.959" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:14.959" starttime="20210121 14:33:14.959"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:14.960" starttime="20210121 14:33:11.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:14.963" level="INFO">Running command 'ozone sh bucket create fstest1-src/link1-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:17.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:17.841" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:17.842" starttime="20210121 14:33:14.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:17.843" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:17.843" starttime="20210121 14:33:17.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:17.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:17.843" starttime="20210121 14:33:17.843"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:17.844" starttime="20210121 14:33:14.961"></status>
</kw>
<msg timestamp="20210121 14:33:17.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:17.844" starttime="20210121 14:33:14.960"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:17.844" starttime="20210121 14:33:14.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:17.848" level="INFO">Running command 'ozone sh bucket create fstest1-src/link2-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:20.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:20.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:20.736" starttime="20210121 14:33:17.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:20.737" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:20.737" starttime="20210121 14:33:20.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:20.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:20.738" starttime="20210121 14:33:20.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:20.738" starttime="20210121 14:33:17.845"></status>
</kw>
<msg timestamp="20210121 14:33:20.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:20.739" starttime="20210121 14:33:17.845"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:20.739" starttime="20210121 14:33:17.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:20.743" level="INFO">Running command 'ozone sh bucket create fstest2-src/link3-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:23.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:23.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:23.668" starttime="20210121 14:33:20.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:23.669" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:23.670" starttime="20210121 14:33:23.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:23.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:23.670" starttime="20210121 14:33:23.670"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:23.671" starttime="20210121 14:33:20.740"></status>
</kw>
<msg timestamp="20210121 14:33:23.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:23.671" starttime="20210121 14:33:20.740"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:23.671" starttime="20210121 14:33:20.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:23.675" level="INFO">Running command 'ozone sh bucket link fstest1-src/link1-ofs-src fstest1/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:26.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:26.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:26.576" starttime="20210121 14:33:23.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:26.577" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:26.577" starttime="20210121 14:33:26.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:26.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:26.578" starttime="20210121 14:33:26.578"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:26.578" starttime="20210121 14:33:23.672"></status>
</kw>
<msg timestamp="20210121 14:33:26.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:26.579" starttime="20210121 14:33:23.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:26.579" starttime="20210121 14:33:23.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:26.583" level="INFO">Running command 'ozone sh bucket link fstest1-src/link2-ofs-src fstest1/link2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:29.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:29.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:29.656" starttime="20210121 14:33:26.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:29.657" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:29.657" starttime="20210121 14:33:29.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:29.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:29.658" starttime="20210121 14:33:29.658"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:29.658" starttime="20210121 14:33:26.580"></status>
</kw>
<msg timestamp="20210121 14:33:29.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:29.659" starttime="20210121 14:33:26.580"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:29.659" starttime="20210121 14:33:26.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:29.663" level="INFO">Running command 'ozone sh bucket link fstest2-src/link3-ofs-src fstest2/link3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:32.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:32.764" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:32.764" starttime="20210121 14:33:29.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:32.765" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:32.765" starttime="20210121 14:33:32.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:32.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:32.765" starttime="20210121 14:33:32.765"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:32.766" starttime="20210121 14:33:29.661"></status>
</kw>
<msg timestamp="20210121 14:33:32.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:32.766" starttime="20210121 14:33:29.660"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:32.766" starttime="20210121 14:33:29.659"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:32.766" starttime="20210121 14:33:09.094"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:32.767" starttime="20210121 14:33:09.094"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:32.771" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:36.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:36.349" level="INFO">${output} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:33:36.349" starttime="20210121 14:33:32.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:36.350" level="INFO">{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:33:14.778Z",
  "modificationTime" : "2021-01-21T14:33:14.778Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-07344",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.235Z",
  "modificationTime" : "2021-01-21T14:16:05.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:15:06.850Z",
  "modificationTime" : "2021-01-21T14:15:06.850Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:17:18.631Z",
  "modificationTime" : "2021-01-21T14:17:18.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "24575-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:24:55.046Z",
  "modificationTime" : "2021-01-21T14:25:14.298Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "44492-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-21T14:17:21.709Z",
  "modificationTime" : "2021-01-21T14:17:21.709Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:11.911Z",
  "modificationTime" : "2021-01-21T14:33:11.911Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-75059",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.224Z",
  "modificationTime" : "2021-01-21T14:16:05.224Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:14:51.718Z",
  "modificationTime" : "2021-01-21T14:14:51.718Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-31715",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.191Z",
  "modificationTime" : "2021-01-21T14:16:05.191Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-21T14:33:09.035Z",
  "modificationTime" : "2021-01-21T14:33:09.035Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-21T14:33:06.196Z",
  "modificationTime" : "2021-01-21T14:33:06.196Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "xwndd",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-21T14:31:48.317Z",
  "modificationTime" : "2021-01-21T14:31:48.317Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-70281",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.246Z",
  "modificationTime" : "2021-01-21T14:16:05.246Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-23161",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-21T14:16:05.215Z",
  "modificationTime" : "2021-01-21T14:16:05.215Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210121 14:33:36.351" starttime="20210121 14:33:36.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:36.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:36.351" starttime="20210121 14:33:36.351"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:36.352" starttime="20210121 14:33:32.768"></status>
</kw>
<msg timestamp="20210121 14:33:36.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:36.352" starttime="20210121 14:33:32.767"></status>
</kw>
<msg timestamp="20210121 14:33:36.352" level="INFO">${result} = {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "20...</msg>
<status status="PASS" endtime="20210121 14:33:36.352" starttime="20210121 14:33:32.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:36.353" starttime="20210121 14:33:36.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:36.353" starttime="20210121 14:33:36.353"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:36.355" starttime="20210121 14:33:36.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:36.358" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:39.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:39.631" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:...</msg>
<status status="PASS" endtime="20210121 14:33:39.631" starttime="20210121 14:33:36.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:39.632" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:26.525Z",
  "modificationTime" : "2021-01-21T14:33:26.525Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:33:29.585Z",
  "modificationTime" : "2021-01-21T14:33:29.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210121 14:33:39.632" starttime="20210121 14:33:39.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:39.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:39.633" starttime="20210121 14:33:39.633"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.633" starttime="20210121 14:33:36.356"></status>
</kw>
<msg timestamp="20210121 14:33:39.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:39.634" starttime="20210121 14:33:36.355"></status>
</kw>
<msg timestamp="20210121 14:33:39.634" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:...</msg>
<status status="PASS" endtime="20210121 14:33:39.634" starttime="20210121 14:33:36.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:39.634" starttime="20210121 14:33:39.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:39.635" starttime="20210121 14:33:39.635"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.635" starttime="20210121 14:33:32.767"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:33:39.639" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:33:39.639" starttime="20210121 14:33:39.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:33:39.640" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:33:39.640" starttime="20210121 14:33:39.639"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.640" starttime="20210121 14:33:39.638"></status>
</kw>
<msg timestamp="20210121 14:33:39.640" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:33:39.640" starttime="20210121 14:33:39.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:33:39.642" level="INFO">${first} = /</msg>
<status status="PASS" endtime="20210121 14:33:39.642" starttime="20210121 14:33:39.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:33:39.643" level="INFO">${result} = /</msg>
<status status="PASS" endtime="20210121 14:33:39.643" starttime="20210121 14:33:39.642"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.643" starttime="20210121 14:33:39.641"></status>
</kw>
<msg timestamp="20210121 14:33:39.643" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" endtime="20210121 14:33:39.643" starttime="20210121 14:33:39.641"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.643" starttime="20210121 14:33:39.637"></status>
</kw>
<msg timestamp="20210121 14:33:39.643" level="INFO">${url} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210121 14:33:39.643" starttime="20210121 14:33:39.636"></status>
</kw>
<msg timestamp="20210121 14:33:39.644" level="INFO">${BASE_URL} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210121 14:33:39.644" starttime="20210121 14:33:39.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:33:39.644" level="INFO">${BASE_URL} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210121 14:33:39.645" starttime="20210121 14:33:39.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210121 14:33:39.646" level="INFO">${DEEP_URL} = ofs://om/fstest1/link1-ofs/test/ofs/dir</msg>
<status status="PASS" endtime="20210121 14:33:39.646" starttime="20210121 14:33:39.645"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.646" starttime="20210121 14:33:39.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210121 14:33:39.647" level="INFO">Completed setup for ofs tests with links in fstest1/link1-ofs using FS base URL: ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210121 14:33:39.647" starttime="20210121 14:33:39.646"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.647" starttime="20210121 14:33:03.461"></status>
</kw>
<test id="s1-s9-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:33:39.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:33:39.652" starttime="20210121 14:33:39.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:33:39.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:33:39.653" starttime="20210121 14:33:39.652"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.653" starttime="20210121 14:33:39.651"></status>
</kw>
<msg timestamp="20210121 14:33:39.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:33:39.653" starttime="20210121 14:33:39.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:39.654" starttime="20210121 14:33:39.654"></status>
</kw>
<msg timestamp="20210121 14:33:39.654" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:33:39.654" starttime="20210121 14:33:39.653"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:39.655" starttime="20210121 14:33:39.650"></status>
</kw>
<msg timestamp="20210121 14:33:39.655" level="INFO">${url} = ofs://om/fstest1/link1-ofs</msg>
<status status="PASS" endtime="20210121 14:33:39.655" starttime="20210121 14:33:39.649"></status>
</kw>
<msg timestamp="20210121 14:33:39.655" level="INFO">${root} = ofs://om/fstest1/link1-ofs</msg>
<status status="PASS" endtime="20210121 14:33:39.655" starttime="20210121 14:33:39.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:39.659" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:42.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:42.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:42.977" starttime="20210121 14:33:39.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:42.978" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:42.979" starttime="20210121 14:33:42.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:42.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:42.980" starttime="20210121 14:33:42.979"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:42.980" starttime="20210121 14:33:39.656"></status>
</kw>
<msg timestamp="20210121 14:33:42.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:42.980" starttime="20210121 14:33:39.656"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:42.980" starttime="20210121 14:33:39.655"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:33:42.981" critical="yes" starttime="20210121 14:33:39.647"></status>
</test>
<test id="s1-s9-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:33:42.988" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:33:42.988" starttime="20210121 14:33:42.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:33:42.989" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:33:42.989" starttime="20210121 14:33:42.988"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:42.989" starttime="20210121 14:33:42.987"></status>
</kw>
<msg timestamp="20210121 14:33:42.989" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:33:42.989" starttime="20210121 14:33:42.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:42.990" starttime="20210121 14:33:42.990"></status>
</kw>
<msg timestamp="20210121 14:33:42.991" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:33:42.991" starttime="20210121 14:33:42.990"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:42.991" starttime="20210121 14:33:42.985"></status>
</kw>
<msg timestamp="20210121 14:33:42.991" level="INFO">${url} = ofs://om/no-such-volume/link1-ofs</msg>
<status status="PASS" endtime="20210121 14:33:42.991" starttime="20210121 14:33:42.985"></status>
</kw>
<msg timestamp="20210121 14:33:42.992" level="INFO">${url} = ofs://om/no-such-volume/link1-ofs</msg>
<status status="PASS" endtime="20210121 14:33:42.992" starttime="20210121 14:33:42.984"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:42.994" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:46.286" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:33:46.286" level="INFO">${output} = ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:46.286" starttime="20210121 14:33:42.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:46.287" level="INFO">ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:46.287" starttime="20210121 14:33:46.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:46.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:46.288" starttime="20210121 14:33:46.287"></status>
</kw>
<msg timestamp="20210121 14:33:46.288" level="INFO">${result} = ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:46.288" starttime="20210121 14:33:42.992"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:46.289" starttime="20210121 14:33:46.289"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:33:46.290" critical="yes" starttime="20210121 14:33:42.983"></status>
</test>
<test id="s1-s9-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:33:46.295" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:33:46.295" starttime="20210121 14:33:46.294"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:33:46.296" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:33:46.296" starttime="20210121 14:33:46.295"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:46.296" starttime="20210121 14:33:46.294"></status>
</kw>
<msg timestamp="20210121 14:33:46.296" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:33:46.296" starttime="20210121 14:33:46.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:46.297" starttime="20210121 14:33:46.297"></status>
</kw>
<msg timestamp="20210121 14:33:46.297" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210121 14:33:46.297" starttime="20210121 14:33:46.296"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:46.298" starttime="20210121 14:33:46.293"></status>
</kw>
<msg timestamp="20210121 14:33:46.298" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210121 14:33:46.298" starttime="20210121 14:33:46.292"></status>
</kw>
<msg timestamp="20210121 14:33:46.298" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210121 14:33:46.298" starttime="20210121 14:33:46.291"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:46.302" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:49.449" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:33:49.449" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:49.450" starttime="20210121 14:33:46.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:49.451" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:49.451" starttime="20210121 14:33:49.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:49.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:49.451" starttime="20210121 14:33:49.451"></status>
</kw>
<msg timestamp="20210121 14:33:49.452" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210121 14:33:49.452" starttime="20210121 14:33:46.298"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:49.453" starttime="20210121 14:33:49.452"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:33:49.453" critical="yes" starttime="20210121 14:33:46.290"></status>
</test>
<test id="s1-s9-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:49.459" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:53.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:53.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:33:53.013" starttime="20210121 14:33:49.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:53.014" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:33:53.014" starttime="20210121 14:33:53.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:53.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:53.015" starttime="20210121 14:33:53.014"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:53.015" starttime="20210121 14:33:49.456"></status>
</kw>
<msg timestamp="20210121 14:33:53.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:53.016" starttime="20210121 14:33:49.456"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:53.016" starttime="20210121 14:33:49.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:53.021" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:33:56.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:33:56.238" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:33:56.238" starttime="20210121 14:33:53.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:33:56.240" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:33:56.240" starttime="20210121 14:33:56.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:33:56.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:33:56.241" starttime="20210121 14:33:56.241"></status>
</kw>
<status status="PASS" endtime="20210121 14:33:56.242" starttime="20210121 14:33:53.017"></status>
</kw>
<msg timestamp="20210121 14:33:56.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:33:56.242" starttime="20210121 14:33:53.017"></status>
</kw>
<msg timestamp="20210121 14:33:56.242" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210121 14:33:56.242" starttime="20210121 14:33:53.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:33:56.243" starttime="20210121 14:33:56.242"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:33:56.243" critical="yes" starttime="20210121 14:33:49.454"></status>
</test>
<test id="s1-s9-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:33:56.249" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:01.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:01.646" level="INFO">${output} = 2021-01-21 14:33:59,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:33:59,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:34:01.646" starttime="20210121 14:33:56.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:01.647" level="INFO">2021-01-21 14:33:59,752 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:33:59,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:33:59,924 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:34:00,330 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:34:00,331 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6112BAB72D3F-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:34:00,332 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:34:01.647" starttime="20210121 14:34:01.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:01.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:01.648" starttime="20210121 14:34:01.647"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:01.648" starttime="20210121 14:33:56.246"></status>
</kw>
<msg timestamp="20210121 14:34:01.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:01.648" starttime="20210121 14:33:56.246"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:01.649" starttime="20210121 14:33:56.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:01.652" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:04.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:04.840" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:04.840" starttime="20210121 14:34:01.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:04.842" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:04.842" starttime="20210121 14:34:04.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:04.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:04.843" starttime="20210121 14:34:04.842"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:04.843" starttime="20210121 14:34:01.650"></status>
</kw>
<msg timestamp="20210121 14:34:04.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:04.843" starttime="20210121 14:34:01.649"></status>
</kw>
<msg timestamp="20210121 14:34:04.843" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:04.843" starttime="20210121 14:34:01.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:04.844" starttime="20210121 14:34:04.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:04.848" level="INFO">Running command 'ozone sh key info fstest1/link1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:08.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:08.247" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210121 14:34:08.247" starttime="20210121 14:34:04.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:08.248" level="INFO">3</msg>
<status status="PASS" endtime="20210121 14:34:08.249" starttime="20210121 14:34:08.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:08.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:08.250" starttime="20210121 14:34:08.249"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:08.250" starttime="20210121 14:34:04.845"></status>
</kw>
<msg timestamp="20210121 14:34:08.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:08.251" starttime="20210121 14:34:04.845"></status>
</kw>
<msg timestamp="20210121 14:34:08.251" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210121 14:34:08.251" starttime="20210121 14:34:04.844"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:08.251" starttime="20210121 14:34:08.251"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:08.252" critical="yes" starttime="20210121 14:33:56.244"></status>
</test>
<test id="s1-s9-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:08.258" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:13.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:13.216" level="INFO">${output} = 2021-01-21 14:34:11,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:11,680 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:34:13.216" starttime="20210121 14:34:08.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:13.217" level="INFO">2021-01-21 14:34:11,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:11,680 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:34:11,681 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:34:12,028 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:34:12,029 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3467A3B29E32-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:34:12,031 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:34:13.217" starttime="20210121 14:34:13.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:13.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:13.218" starttime="20210121 14:34:13.217"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:13.218" starttime="20210121 14:34:08.255"></status>
</kw>
<msg timestamp="20210121 14:34:13.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:13.219" starttime="20210121 14:34:08.254"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:13.219" starttime="20210121 14:34:08.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:13.223" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:16.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:16.453" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:16.453" starttime="20210121 14:34:13.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:16.454" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:16.454" starttime="20210121 14:34:16.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:16.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:16.455" starttime="20210121 14:34:16.454"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:16.455" starttime="20210121 14:34:13.220"></status>
</kw>
<msg timestamp="20210121 14:34:16.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:16.455" starttime="20210121 14:34:13.220"></status>
</kw>
<msg timestamp="20210121 14:34:16.456" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:16.456" starttime="20210121 14:34:13.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:16.456" starttime="20210121 14:34:16.456"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:16.457" critical="yes" starttime="20210121 14:34:08.253"></status>
</test>
<test id="s1-s9-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:16.462" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:19.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:19.597" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link...</msg>
<status status="PASS" endtime="20210121 14:34:19.597" starttime="20210121 14:34:16.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:19.598" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:19.598" starttime="20210121 14:34:19.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:19.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:19.599" starttime="20210121 14:34:19.599"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:19.600" starttime="20210121 14:34:16.460"></status>
</kw>
<msg timestamp="20210121 14:34:19.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:19.600" starttime="20210121 14:34:16.459"></status>
</kw>
<msg timestamp="20210121 14:34:19.600" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link...</msg>
<status status="PASS" endtime="20210121 14:34:19.600" starttime="20210121 14:34:16.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:19.601" starttime="20210121 14:34:19.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:19.601" starttime="20210121 14:34:19.601"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:19.602" critical="yes" starttime="20210121 14:34:16.457"></status>
</test>
<test id="s1-s9-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:19.607" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:23.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:23.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:34:23.165" starttime="20210121 14:34:19.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:23.166" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:34:23.166" starttime="20210121 14:34:23.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:23.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:23.167" starttime="20210121 14:34:23.167"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:23.167" starttime="20210121 14:34:19.605"></status>
</kw>
<msg timestamp="20210121 14:34:23.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:23.168" starttime="20210121 14:34:19.604"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:23.168" starttime="20210121 14:34:19.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:23.172" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:26.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:26.344" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:26.345" starttime="20210121 14:34:23.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:26.346" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:26.346" starttime="20210121 14:34:26.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:26.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:26.347" starttime="20210121 14:34:26.346"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:26.347" starttime="20210121 14:34:23.169"></status>
</kw>
<msg timestamp="20210121 14:34:26.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:26.347" starttime="20210121 14:34:23.169"></status>
</kw>
<msg timestamp="20210121 14:34:26.348" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:26.348" starttime="20210121 14:34:23.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:26.349" starttime="20210121 14:34:26.348"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:26.349" starttime="20210121 14:34:26.349"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:26.350" critical="yes" starttime="20210121 14:34:19.603"></status>
</test>
<test id="s1-s9-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:26.355" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:29.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:29.638" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:34:29.638" starttime="20210121 14:34:26.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:29.639" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:34:29.639" starttime="20210121 14:34:29.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:29.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:29.640" starttime="20210121 14:34:29.639"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:29.640" starttime="20210121 14:34:26.352"></status>
</kw>
<msg timestamp="20210121 14:34:29.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:29.641" starttime="20210121 14:34:26.352"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:29.641" starttime="20210121 14:34:26.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:29.645" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:34.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:34.977" level="INFO">${output} = 2021-01-21 14:34:33,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:33,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:34:34.977" starttime="20210121 14:34:29.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:34.978" level="INFO">2021-01-21 14:34:33,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:33,250 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:34:33,250 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:34:34,188 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:34:34,189 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B630D8ED5E7B-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:34:34,190 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:34:34.978" starttime="20210121 14:34:34.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:34.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:34.979" starttime="20210121 14:34:34.978"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:34.979" starttime="20210121 14:34:29.642"></status>
</kw>
<msg timestamp="20210121 14:34:34.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:34.980" starttime="20210121 14:34:29.642"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:34.980" starttime="20210121 14:34:29.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:34.984" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:38.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:38.129" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:38.129" starttime="20210121 14:34:34.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:38.131" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:38.131" starttime="20210121 14:34:38.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:38.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:38.132" starttime="20210121 14:34:38.131"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:38.132" starttime="20210121 14:34:34.981"></status>
</kw>
<msg timestamp="20210121 14:34:38.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:38.132" starttime="20210121 14:34:34.981"></status>
</kw>
<msg timestamp="20210121 14:34:38.133" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:38.133" starttime="20210121 14:34:34.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:38.133" starttime="20210121 14:34:38.133"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:38.137" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:41.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:41.589" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:41.589" starttime="20210121 14:34:38.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:41.590" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:41.590" starttime="20210121 14:34:41.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:41.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:41.591" starttime="20210121 14:34:41.590"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:41.591" starttime="20210121 14:34:38.134"></status>
</kw>
<msg timestamp="20210121 14:34:41.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:41.591" starttime="20210121 14:34:38.134"></status>
</kw>
<msg timestamp="20210121 14:34:41.592" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:41.592" starttime="20210121 14:34:38.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:41.592" starttime="20210121 14:34:41.592"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:41.593" starttime="20210121 14:34:41.592"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:41.593" critical="yes" starttime="20210121 14:34:26.350"></status>
</test>
<test id="s1-s9-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:41.598" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:46.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:46.274" level="INFO">${output} = 2021-01-21 14:34:44,844 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:44,996 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:34:46.274" starttime="20210121 14:34:41.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:46.275" level="INFO">2021-01-21 14:34:44,844 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:34:44,996 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:34:44,997 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210121 14:34:46.275" starttime="20210121 14:34:46.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:46.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:46.276" starttime="20210121 14:34:46.275"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:46.276" starttime="20210121 14:34:41.596"></status>
</kw>
<msg timestamp="20210121 14:34:46.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:46.276" starttime="20210121 14:34:41.595"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:46.278" starttime="20210121 14:34:41.595"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:46.278" critical="yes" starttime="20210121 14:34:41.594"></status>
</test>
<test id="s1-s9-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:46.283" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:49.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:49.648" level="INFO">${output} = Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:49.648" starttime="20210121 14:34:46.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:49.649" level="INFO">Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210121 14:34:49.649" starttime="20210121 14:34:49.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:49.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:49.650" starttime="20210121 14:34:49.650"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:49.650" starttime="20210121 14:34:46.280"></status>
</kw>
<msg timestamp="20210121 14:34:49.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:49.651" starttime="20210121 14:34:46.280"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:49.651" starttime="20210121 14:34:46.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:49.655" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:52.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:52.805" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:34:52.805" starttime="20210121 14:34:49.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:52.806" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:34:52.806" starttime="20210121 14:34:52.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:52.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:52.807" starttime="20210121 14:34:52.806"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:52.807" starttime="20210121 14:34:49.652"></status>
</kw>
<msg timestamp="20210121 14:34:52.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:52.807" starttime="20210121 14:34:49.652"></status>
</kw>
<msg timestamp="20210121 14:34:52.808" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210121 14:34:52.808" starttime="20210121 14:34:49.651"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:52.808" starttime="20210121 14:34:52.808"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:52.808" critical="yes" starttime="20210121 14:34:46.279"></status>
</test>
<test id="s1-s9-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:52.815" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:56.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:56.185" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:34:56.185" starttime="20210121 14:34:52.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:56.186" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:34:56.186" starttime="20210121 14:34:56.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:56.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:56.187" starttime="20210121 14:34:56.186"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:56.187" starttime="20210121 14:34:52.811"></status>
</kw>
<msg timestamp="20210121 14:34:56.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:56.188" starttime="20210121 14:34:52.811"></status>
</kw>
<msg timestamp="20210121 14:34:56.188" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:34:56.188" starttime="20210121 14:34:52.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:56.194" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:34:59.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:34:59.540" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:59.540" starttime="20210121 14:34:56.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:34:59.541" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:59.541" starttime="20210121 14:34:59.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:34:59.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:34:59.542" starttime="20210121 14:34:59.541"></status>
</kw>
<status status="PASS" endtime="20210121 14:34:59.542" starttime="20210121 14:34:56.189"></status>
</kw>
<msg timestamp="20210121 14:34:59.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:34:59.542" starttime="20210121 14:34:56.189"></status>
</kw>
<msg timestamp="20210121 14:34:59.543" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210121 14:34:59.543" starttime="20210121 14:34:56.188"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:34:59.543" starttime="20210121 14:34:59.543"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:34:59.543" critical="yes" starttime="20210121 14:34:52.810"></status>
</test>
<test id="s1-s9-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:34:59.548" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:02.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:02.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:02.744" starttime="20210121 14:34:59.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:02.746" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:02.746" starttime="20210121 14:35:02.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:02.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:02.746" starttime="20210121 14:35:02.746"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:02.747" starttime="20210121 14:34:59.546"></status>
</kw>
<msg timestamp="20210121 14:35:02.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:02.747" starttime="20210121 14:34:59.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:02.747" starttime="20210121 14:34:59.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:02.751" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:05.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:05.982" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:35:05.982" starttime="20210121 14:35:02.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:05.983" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:35:05.983" starttime="20210121 14:35:05.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:05.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:05.984" starttime="20210121 14:35:05.983"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:05.984" starttime="20210121 14:35:02.748"></status>
</kw>
<msg timestamp="20210121 14:35:05.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:05.985" starttime="20210121 14:35:02.748"></status>
</kw>
<msg timestamp="20210121 14:35:05.985" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:35:05.985" starttime="20210121 14:35:02.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:05.986" starttime="20210121 14:35:05.985"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:35:05.986" critical="yes" starttime="20210121 14:34:59.544"></status>
</test>
<test id="s1-s9-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:05.994" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:09.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:09.404" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:09.404" starttime="20210121 14:35:05.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:09.405" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:09.405" starttime="20210121 14:35:09.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:09.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:09.406" starttime="20210121 14:35:09.406"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:09.406" starttime="20210121 14:35:05.991"></status>
</kw>
<msg timestamp="20210121 14:35:09.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:09.407" starttime="20210121 14:35:05.990"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:09.407" starttime="20210121 14:35:05.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:09.411" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:12.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:12.702" level="INFO">${output} = 2021-01-21 14:35:12,457 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:35:12,602 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:35:12.702" starttime="20210121 14:35:09.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:12.703" level="INFO">2021-01-21 14:35:12,457 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:35:12,602 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210121 14:35:12.703" starttime="20210121 14:35:12.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:12.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:12.704" starttime="20210121 14:35:12.703"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:12.704" starttime="20210121 14:35:09.408"></status>
</kw>
<msg timestamp="20210121 14:35:12.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:12.704" starttime="20210121 14:35:09.408"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:12.705" starttime="20210121 14:35:09.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:12.711" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/link1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:16.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:16.193" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx ...</msg>
<status status="PASS" endtime="20210121 14:35:16.193" starttime="20210121 14:35:12.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:16.194" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:33 ofs://om/fstest1/link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:33 ofs://om/fstest1/link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:33 ofs://om/fstest1/link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:34 ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:35:16.194" starttime="20210121 14:35:16.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:16.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:16.195" starttime="20210121 14:35:16.194"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:16.195" starttime="20210121 14:35:12.706"></status>
</kw>
<msg timestamp="20210121 14:35:16.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:16.196" starttime="20210121 14:35:12.705"></status>
</kw>
<msg timestamp="20210121 14:35:16.196" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx ...</msg>
<status status="PASS" endtime="20210121 14:35:16.196" starttime="20210121 14:35:12.705"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:16.197" starttime="20210121 14:35:16.196"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser/scm@EXAMPLE.COM</arg>
<arg>.Trash/root</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:16.197" starttime="20210121 14:35:16.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:16.198" starttime="20210121 14:35:16.197"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:35:16.198" critical="yes" starttime="20210121 14:35:05.989"></status>
</test>
<test id="s1-s9-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:16.203" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:19.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:19.646" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:19.646" starttime="20210121 14:35:16.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:19.648" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:19.649" starttime="20210121 14:35:19.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:19.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:19.649" starttime="20210121 14:35:19.649"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:19.650" starttime="20210121 14:35:16.200"></status>
</kw>
<msg timestamp="20210121 14:35:19.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:19.650" starttime="20210121 14:35:16.200"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:19.650" starttime="20210121 14:35:16.200"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:19.654" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:22.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:22.877" level="INFO">${output} = Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:35:22.877" starttime="20210121 14:35:19.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:22.878" level="INFO">Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210121 14:35:22.878" starttime="20210121 14:35:22.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:22.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:22.879" starttime="20210121 14:35:22.878"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:22.879" starttime="20210121 14:35:19.651"></status>
</kw>
<msg timestamp="20210121 14:35:22.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:22.880" starttime="20210121 14:35:19.651"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:22.880" starttime="20210121 14:35:19.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:22.885" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:26.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:26.117" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-...</msg>
<status status="PASS" endtime="20210121 14:35:26.118" starttime="20210121 14:35:22.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.119" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210121 14:35:26.119" starttime="20210121 14:35:26.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:26.120" starttime="20210121 14:35:26.119"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.120" starttime="20210121 14:35:22.882"></status>
</kw>
<msg timestamp="20210121 14:35:26.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:26.120" starttime="20210121 14:35:22.882"></status>
</kw>
<msg timestamp="20210121 14:35:26.121" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-...</msg>
<status status="PASS" endtime="20210121 14:35:26.121" starttime="20210121 14:35:22.880"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:26.121" starttime="20210121 14:35:26.121"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:35:26.122" critical="yes" starttime="20210121 14:35:16.199"></status>
</test>
<test id="s1-s9-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:26.127" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:26.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:26.130" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:26.130" starttime="20210121 14:35:26.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.131" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:26.131" starttime="20210121 14:35:26.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:26.132" starttime="20210121 14:35:26.131"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.132" starttime="20210121 14:35:26.124"></status>
</kw>
<msg timestamp="20210121 14:35:26.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:26.132" starttime="20210121 14:35:26.124"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.132" starttime="20210121 14:35:26.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:26.137" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:26.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:26.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:26.139" starttime="20210121 14:35:26.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.140" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:26.140" starttime="20210121 14:35:26.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:26.141" starttime="20210121 14:35:26.140"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.141" starttime="20210121 14:35:26.133"></status>
</kw>
<msg timestamp="20210121 14:35:26.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:26.142" starttime="20210121 14:35:26.133"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.142" starttime="20210121 14:35:26.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:26.145" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:26.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:26.148" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:26.148" starttime="20210121 14:35:26.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.149" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:26.149" starttime="20210121 14:35:26.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:26.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:26.150" starttime="20210121 14:35:26.149"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.150" starttime="20210121 14:35:26.143"></status>
</kw>
<msg timestamp="20210121 14:35:26.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:26.150" starttime="20210121 14:35:26.142"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:26.151" starttime="20210121 14:35:26.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:26.154" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:29.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:29.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:29.569" starttime="20210121 14:35:26.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:29.570" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:29.570" starttime="20210121 14:35:29.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:29.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:29.571" starttime="20210121 14:35:29.570"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:29.571" starttime="20210121 14:35:26.152"></status>
</kw>
<msg timestamp="20210121 14:35:29.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:29.571" starttime="20210121 14:35:26.151"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:29.572" starttime="20210121 14:35:26.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:29.577" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:34.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:34.645" level="INFO">${output} = 2021-01-21 14:35:33,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:33,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:35:34.645" starttime="20210121 14:35:29.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:34.646" level="INFO">2021-01-21 14:35:33,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:33,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:35:33,252 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:35:33,610 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:35:33,610 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F092A0F37317-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:35:33,611 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:35:34.646" starttime="20210121 14:35:34.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:34.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:34.647" starttime="20210121 14:35:34.646"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:34.647" starttime="20210121 14:35:29.573"></status>
</kw>
<msg timestamp="20210121 14:35:34.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:34.647" starttime="20210121 14:35:29.572"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:34.648" starttime="20210121 14:35:29.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:34.652" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:39.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:39.736" level="INFO">${output} = 2021-01-21 14:35:37,919 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:38,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:35:39.736" starttime="20210121 14:35:34.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:39.737" level="INFO">2021-01-21 14:35:37,919 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:38,104 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:35:38,104 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:35:38,492 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:35:38,493 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5F5C79C1F00B-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:35:38,494 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:35:39.737" starttime="20210121 14:35:39.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:39.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:39.738" starttime="20210121 14:35:39.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:39.739" starttime="20210121 14:35:34.649"></status>
</kw>
<msg timestamp="20210121 14:35:39.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:39.739" starttime="20210121 14:35:34.648"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:39.739" starttime="20210121 14:35:34.648"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:39.739" starttime="20210121 14:35:26.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:39.744" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:43.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:43.100" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/loc...</msg>
<status status="PASS" endtime="20210121 14:35:43.100" starttime="20210121 14:35:39.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:43.101" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210121 14:35:43.101" starttime="20210121 14:35:43.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:43.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:43.102" starttime="20210121 14:35:43.101"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:43.102" starttime="20210121 14:35:39.741"></status>
</kw>
<msg timestamp="20210121 14:35:43.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:43.102" starttime="20210121 14:35:39.741"></status>
</kw>
<msg timestamp="20210121 14:35:43.103" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-21 14:35 ofs://om/fstest1/link1-ofs/testdir1/loc...</msg>
<status status="PASS" endtime="20210121 14:35:43.103" starttime="20210121 14:35:39.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:43.103" starttime="20210121 14:35:43.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:35:43.104" starttime="20210121 14:35:43.103"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:35:43.104" critical="yes" starttime="20210121 14:35:26.122"></status>
</test>
<test id="s1-s9-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:35:43.110" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:35:43.110" starttime="20210121 14:35:43.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:35:43.110" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:35:43.110" starttime="20210121 14:35:43.110"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:43.111" starttime="20210121 14:35:43.108"></status>
</kw>
<msg timestamp="20210121 14:35:43.111" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:35:43.111" starttime="20210121 14:35:43.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:35:43.112" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210121 14:35:43.112" starttime="20210121 14:35:43.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:35:43.113" level="INFO">${result} = /testdir2</msg>
<status status="PASS" endtime="20210121 14:35:43.113" starttime="20210121 14:35:43.113"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:43.114" starttime="20210121 14:35:43.111"></status>
</kw>
<msg timestamp="20210121 14:35:43.114" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" endtime="20210121 14:35:43.114" starttime="20210121 14:35:43.111"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:43.114" starttime="20210121 14:35:43.107"></status>
</kw>
<msg timestamp="20210121 14:35:43.114" level="INFO">${url} = ofs://om/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:35:43.114" starttime="20210121 14:35:43.107"></status>
</kw>
<msg timestamp="20210121 14:35:43.118" level="INFO">${target} = ofs://om/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:35:43.118" starttime="20210121 14:35:43.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:43.122" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:46.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:46.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:46.220" starttime="20210121 14:35:43.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:46.221" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:46.221" starttime="20210121 14:35:46.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:46.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:46.222" starttime="20210121 14:35:46.222"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:46.223" starttime="20210121 14:35:43.119"></status>
</kw>
<msg timestamp="20210121 14:35:46.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:46.223" starttime="20210121 14:35:43.119"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:46.223" starttime="20210121 14:35:43.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:46.228" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs//testdir1/localdir1 ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:51.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:51.501" level="INFO">${output} = 2021-01-21 14:35:49,656 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:49,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:35:51.501" starttime="20210121 14:35:46.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:51.502" level="INFO">2021-01-21 14:35:49,656 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:35:49,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:35:49,836 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:35:50,734 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:35:50,734 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0DE48505E4F3-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:35:50,738 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:35:51.502" starttime="20210121 14:35:51.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:51.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:51.503" starttime="20210121 14:35:51.502"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:51.503" starttime="20210121 14:35:46.225"></status>
</kw>
<msg timestamp="20210121 14:35:51.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:51.504" starttime="20210121 14:35:46.224"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:51.504" starttime="20210121 14:35:46.224"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:51.509" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:55.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:55.114" level="INFO">${output} = 2021-01-21 14:35:54,694 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:35:54,814 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:35:55.114" starttime="20210121 14:35:51.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:55.116" level="INFO">2021-01-21 14:35:54,694 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:35:54,814 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/link2-ofs/testdir2' to trash at: ofs://om/fstest1/link2-ofs/.Trash/hadoop/Current/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210121 14:35:55.116" starttime="20210121 14:35:55.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:55.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:55.117" starttime="20210121 14:35:55.116"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:55.117" starttime="20210121 14:35:51.506"></status>
</kw>
<msg timestamp="20210121 14:35:55.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:55.117" starttime="20210121 14:35:51.505"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:55.117" starttime="20210121 14:35:51.504"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:35:55.117" critical="yes" starttime="20210121 14:35:43.105"></status>
</test>
<test id="s1-s9-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210121 14:35:55.123" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210121 14:35:55.123" starttime="20210121 14:35:55.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:35:55.123" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210121 14:35:55.124" starttime="20210121 14:35:55.123"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:55.124" starttime="20210121 14:35:55.122"></status>
</kw>
<msg timestamp="20210121 14:35:55.124" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210121 14:35:55.124" starttime="20210121 14:35:55.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210121 14:35:55.126" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210121 14:35:55.126" starttime="20210121 14:35:55.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210121 14:35:55.126" level="INFO">${result} = /testdir3</msg>
<status status="PASS" endtime="20210121 14:35:55.126" starttime="20210121 14:35:55.126"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:55.127" starttime="20210121 14:35:55.125"></status>
</kw>
<msg timestamp="20210121 14:35:55.127" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" endtime="20210121 14:35:55.127" starttime="20210121 14:35:55.124"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:55.127" starttime="20210121 14:35:55.120"></status>
</kw>
<msg timestamp="20210121 14:35:55.127" level="INFO">${url} = ofs://om/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:35:55.127" starttime="20210121 14:35:55.120"></status>
</kw>
<msg timestamp="20210121 14:35:55.128" level="INFO">${target} = ofs://om/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:35:55.128" starttime="20210121 14:35:55.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:55.131" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:35:58.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:35:58.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:35:58.240" starttime="20210121 14:35:55.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:35:58.242" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:35:58.242" starttime="20210121 14:35:58.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:35:58.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:35:58.242" starttime="20210121 14:35:58.242"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:58.243" starttime="20210121 14:35:55.129"></status>
</kw>
<msg timestamp="20210121 14:35:58.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:35:58.243" starttime="20210121 14:35:55.128"></status>
</kw>
<status status="PASS" endtime="20210121 14:35:58.243" starttime="20210121 14:35:55.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:35:58.247" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs//testdir1/localdir1 ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:03.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:03.321" level="INFO">${output} = 2021-01-21 14:36:01,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:36:01,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:36:03.321" starttime="20210121 14:35:58.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:03.322" level="INFO">2021-01-21 14:36:01,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:36:01,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:36:01,717 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-21 14:36:02,600 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:36:02,600 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-36346C4A93F0-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:36:02,610 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210121 14:36:03.323" starttime="20210121 14:36:03.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:03.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:03.323" starttime="20210121 14:36:03.323"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:03.324" starttime="20210121 14:35:58.245"></status>
</kw>
<msg timestamp="20210121 14:36:03.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:03.324" starttime="20210121 14:35:58.244"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:03.324" starttime="20210121 14:35:58.244"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:03.328" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:06.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:06.921" level="INFO">${output} = 2021-01-21 14:36:06,453 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:36:06,617 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210121 14:36:06.921" starttime="20210121 14:36:03.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:06.922" level="INFO">2021-01-21 14:36:06,453 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-21 14:36:06,617 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/link3-ofs/testdir3' to trash at: ofs://om/fstest2/link3-ofs/.Trash/hadoop/Current/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210121 14:36:06.922" starttime="20210121 14:36:06.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:06.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:06.923" starttime="20210121 14:36:06.922"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:06.923" starttime="20210121 14:36:03.326"></status>
</kw>
<msg timestamp="20210121 14:36:06.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:06.924" starttime="20210121 14:36:03.325"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:06.924" starttime="20210121 14:36:03.324"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:06.924" critical="yes" starttime="20210121 14:35:55.118"></status>
</test>
<test id="s1-s9-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:06.929" level="INFO">Running command 'ozone sh key put fstest1/link1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:12.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:12.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:12.107" starttime="20210121 14:36:06.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:12.108" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:12.108" starttime="20210121 14:36:12.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:12.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:12.109" starttime="20210121 14:36:12.108"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:12.109" starttime="20210121 14:36:06.926"></status>
</kw>
<msg timestamp="20210121 14:36:12.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:12.109" starttime="20210121 14:36:06.926"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:12.110" starttime="20210121 14:36:06.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:12.114" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:15.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:15.487" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:36 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:36:15.488" starttime="20210121 14:36:12.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:15.489" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:36 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:36:15.489" starttime="20210121 14:36:15.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:15.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:15.490" starttime="20210121 14:36:15.489"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:15.490" starttime="20210121 14:36:12.111"></status>
</kw>
<msg timestamp="20210121 14:36:15.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:15.490" starttime="20210121 14:36:12.111"></status>
</kw>
<msg timestamp="20210121 14:36:15.491" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-21 14:36 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210121 14:36:15.491" starttime="20210121 14:36:12.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:15.491" starttime="20210121 14:36:15.491"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:15.492" critical="yes" starttime="20210121 14:36:06.925"></status>
</test>
<test id="s1-s9-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:15.497" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:18.733" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:36:18.733" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:36:18.733" starttime="20210121 14:36:15.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:18.735" level="INFO">copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:36:18.735" starttime="20210121 14:36:18.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:18.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:18.735" starttime="20210121 14:36:18.735"></status>
</kw>
<msg timestamp="20210121 14:36:18.736" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210121 14:36:18.736" starttime="20210121 14:36:15.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210121 14:36:18.736" starttime="20210121 14:36:18.736"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:18.737" critical="yes" starttime="20210121 14:36:15.492"></status>
</test>
<test id="s1-s9-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:18.741" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:18.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:18.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:36:18.744" starttime="20210121 14:36:18.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:18.745" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:36:18.745" starttime="20210121 14:36:18.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:18.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:18.746" starttime="20210121 14:36:18.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:18.746" starttime="20210121 14:36:18.739"></status>
</kw>
<msg timestamp="20210121 14:36:18.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:18.746" starttime="20210121 14:36:18.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:18.746" starttime="20210121 14:36:18.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:36:18.750" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/link1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:36:23.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:36:23.523" level="INFO">${output} = 2021-01-21 14:36:22,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:36:22,184 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:36:23.523" starttime="20210121 14:36:18.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:36:23.524" level="INFO">2021-01-21 14:36:22,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:36:22,184 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:36:22,184 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210121 14:36:23.524" starttime="20210121 14:36:23.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:36:23.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:36:23.525" starttime="20210121 14:36:23.524"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:23.525" starttime="20210121 14:36:18.748"></status>
</kw>
<msg timestamp="20210121 14:36:23.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:36:23.526" starttime="20210121 14:36:18.747"></status>
</kw>
<status status="PASS" endtime="20210121 14:36:23.526" starttime="20210121 14:36:18.747"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210121 14:36:23.526" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210121 14:36:23.527" starttime="20210121 14:36:23.526"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:36:23.527" critical="yes" starttime="20210121 14:36:18.737"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" endtime="20210121 14:36:23.531" starttime="20210121 14:33:03.393"></status>
</suite>
<suite source="/opt/hadoop/smoketest/recon" id="s1-s10" name="Recon">
<suite source="/opt/hadoop/smoketest/recon/recon-api.robot" id="s1-s10-s1" name="Recon-Api">
<test id="s1-s10-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:07.136" starttime="20210121 14:52:07.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 10 --key-size 1025</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:07.142" level="INFO">Running command 'ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 10 --key-size 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:16.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:16.182" level="INFO">${output} = 2021-01-21 14:52:09,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:52:09,238 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210121 14:52:16.182" starttime="20210121 14:52:07.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:16.184" level="INFO">2021-01-21 14:52:09,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-21 14:52:09,238 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-21 14:52:09,238 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-21 14:52:10,565 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2021-01-21 14:52:10,567 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2021-01-21 14:52:10,567 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2021-01-21 14:52:10,568 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2021-01-21 14:52:10,568 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2021-01-21 14:52:10,568 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-21 14:52:10,568 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2021-01-21 14:52:10,606 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-21 14:52:10,627 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2021-01-21 14:52:10,681 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-96518, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-21 14:52:10,735 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-96518/bucket-0-48874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-21 14:52:11,548 [pool-2-thread-2] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-21 14:52:11,641 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2021-01-21 14:52:11,963 [pool-2-thread-10] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-21 14:52:11,964 [pool-2-thread-10] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3BC1155BD513-&gt;4d6cf8b4-13e3-4b28-8ee1-cfa8cdb77117
2021-01-21 14:52:11,964 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-AB1E69585191-&gt;fe966598-3917-4d0d-a9db-ecd27c1d9430
2021-01-21 14:52:11,964 [pool-2-thread-3] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-EFDBA89E903D-&gt;27506210-ea1c-4817-88f7-2ffaaaf56389
2021-01-21 14:52:11,965 [pool-2-thread-3] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-21 14:52:11,966 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-21 14:52:11,973 [pool-2-thread-10] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-21 14:52:12,643 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,010
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,161
Average Time spent in key write: 00:00:00,766
Total bytes written: 10250
Total Execution time: 00:00:06,329
***************************************************</msg>
<status status="PASS" endtime="20210121 14:52:16.184" starttime="20210121 14:52:16.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:16.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:16.185" starttime="20210121 14:52:16.184"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:16.185" starttime="20210121 14:52:07.137"></status>
</kw>
<msg timestamp="20210121 14:52:16.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:16.186" starttime="20210121 14:52:07.137"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:16.186" starttime="20210121 14:52:07.136"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:52:16.186" critical="yes" starttime="20210121 14:52:07.135"></status>
</test>
<test id="s1-s10-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:16.190" starttime="20210121 14:52:16.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:16.194" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:16.217" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:52:16.217" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:16.217" starttime="20210121 14:52:16.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:16.218" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:16.218" starttime="20210121 14:52:16.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:16.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:52:16.220" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:52:16.221" starttime="20210121 14:52:16.218"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:16.222" starttime="20210121 14:52:16.191"></status>
</kw>
<msg timestamp="20210121 14:52:16.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:52:16.222" starttime="20210121 14:52:16.191"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:16.223" starttime="20210121 14:52:16.190"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:16.223" starttime="20210121 14:52:16.189"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:26.225" starttime="20210121 14:52:26.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:26.229" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:26.249" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:52:26.250" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:26.250" starttime="20210121 14:52:26.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:26.251" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:26.251" starttime="20210121 14:52:26.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:52:26.253" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:52:26.253" starttime="20210121 14:52:26.252"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:26.253" starttime="20210121 14:52:26.226"></status>
</kw>
<msg timestamp="20210121 14:52:26.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:52:26.253" starttime="20210121 14:52:26.225"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:26.254" starttime="20210121 14:52:26.225"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:26.254" starttime="20210121 14:52:26.224"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:36.256" starttime="20210121 14:52:36.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:36.260" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:36.279" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:52:36.279" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:36.279" starttime="20210121 14:52:36.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:36.280" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:36.280" starttime="20210121 14:52:36.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:36.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:52:36.281" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:52:36.282" starttime="20210121 14:52:36.281"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:36.282" starttime="20210121 14:52:36.257"></status>
</kw>
<msg timestamp="20210121 14:52:36.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:52:36.282" starttime="20210121 14:52:36.256"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:36.282" starttime="20210121 14:52:36.256"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:36.283" starttime="20210121 14:52:36.254"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:46.284" starttime="20210121 14:52:46.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:46.288" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:46.355" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:52:46.355" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:46.355" starttime="20210121 14:52:46.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:46.356" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:46.356" starttime="20210121 14:52:46.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:46.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:52:46.357" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:52:46.357" starttime="20210121 14:52:46.356"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:46.358" starttime="20210121 14:52:46.285"></status>
</kw>
<msg timestamp="20210121 14:52:46.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:52:46.358" starttime="20210121 14:52:46.285"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:46.358" starttime="20210121 14:52:46.284"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:46.358" starttime="20210121 14:52:46.283"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:56.360" starttime="20210121 14:52:56.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:56.367" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:56.627" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:52:56.627" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:56.628" starttime="20210121 14:52:56.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:56.630" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:52:56.630" starttime="20210121 14:52:56.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:56.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:52:56.631" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:52:56.631" starttime="20210121 14:52:56.630"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:56.632" starttime="20210121 14:52:56.362"></status>
</kw>
<msg timestamp="20210121 14:52:56.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:52:56.632" starttime="20210121 14:52:56.361"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:56.632" starttime="20210121 14:52:56.360"></status>
</kw>
<status status="FAIL" endtime="20210121 14:52:56.632" starttime="20210121 14:52:56.359"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:06.634" starttime="20210121 14:53:06.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:06.638" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:06.769" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:06.769" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:06.769" starttime="20210121 14:53:06.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:06.771" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:06.771" starttime="20210121 14:53:06.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:06.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:06.772" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:06.772" starttime="20210121 14:53:06.771"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:06.773" starttime="20210121 14:53:06.635"></status>
</kw>
<msg timestamp="20210121 14:53:06.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:06.773" starttime="20210121 14:53:06.635"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:06.773" starttime="20210121 14:53:06.634"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:06.773" starttime="20210121 14:53:06.633"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:16.775" starttime="20210121 14:53:16.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:16.779" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:16.797" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:16.797" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:16.797" starttime="20210121 14:53:16.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:16.798" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:16.799" starttime="20210121 14:53:16.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:16.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:16.799" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:16.800" starttime="20210121 14:53:16.799"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:16.800" starttime="20210121 14:53:16.776"></status>
</kw>
<msg timestamp="20210121 14:53:16.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:16.800" starttime="20210121 14:53:16.776"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:16.800" starttime="20210121 14:53:16.775"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:16.800" starttime="20210121 14:53:16.774"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:26.803" starttime="20210121 14:53:26.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:26.808" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:26.940" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:26.940" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:26.941" starttime="20210121 14:53:26.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:26.942" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:26.942" starttime="20210121 14:53:26.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:26.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:26.943" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:26.943" starttime="20210121 14:53:26.942"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:26.943" starttime="20210121 14:53:26.804"></status>
</kw>
<msg timestamp="20210121 14:53:26.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:26.943" starttime="20210121 14:53:26.803"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:26.944" starttime="20210121 14:53:26.803"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:26.944" starttime="20210121 14:53:26.801"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:36.946" starttime="20210121 14:53:36.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:36.951" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:37.085" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:37.086" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:37.086" starttime="20210121 14:53:36.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:37.087" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:37.087" starttime="20210121 14:53:37.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:37.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:37.088" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:37.088" starttime="20210121 14:53:37.087"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:37.088" starttime="20210121 14:53:36.947"></status>
</kw>
<msg timestamp="20210121 14:53:37.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:37.089" starttime="20210121 14:53:36.946"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:37.089" starttime="20210121 14:53:36.946"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:37.089" starttime="20210121 14:53:36.944"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:47.091" starttime="20210121 14:53:47.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:47.095" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:47.230" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:47.230" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.230" starttime="20210121 14:53:47.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.231" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.231" starttime="20210121 14:53:47.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:47.232" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:47.232" starttime="20210121 14:53:47.231"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.232" starttime="20210121 14:53:47.092"></status>
</kw>
<msg timestamp="20210121 14:53:47.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:47.233" starttime="20210121 14:53:47.092"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.233" starttime="20210121 14:53:47.091"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.233" starttime="20210121 14:53:47.090"></status>
</kw>
<msg timestamp="20210121 14:53:47.233" level="FAIL">Keyword 'Check if Recon picks up container from OM' failed after retrying for 1 minute 30 seconds. The last error was: 6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:47.233" starttime="20210121 14:52:16.189"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210121 14:53:47.234" critical="yes" starttime="20210121 14:52:16.187">Keyword 'Check if Recon picks up container from OM' failed after retrying for 1 minute 30 seconds. The last error was: 6 != 0</status>
</test>
<test id="s1-s10-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:47.240" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:47.371" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:47.371" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.371" starttime="20210121 14:53:47.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.372" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.373" starttime="20210121 14:53:47.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:47.374" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:47.374" starttime="20210121 14:53:47.373"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.374" starttime="20210121 14:53:47.237"></status>
</kw>
<msg timestamp="20210121 14:53:47.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:47.374" starttime="20210121 14:53:47.236"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.374" starttime="20210121 14:53:47.235"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210121 14:53:47.375" critical="yes" starttime="20210121 14:53:47.234">6 != 0</status>
</test>
<test id="s1-s10-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:53:47.376" starttime="20210121 14:53:47.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:53:47.381" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:53:47.416" level="INFO">${rc} = 6</msg>
<msg timestamp="20210121 14:53:47.416" level="INFO">${output} = curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.416" starttime="20210121 14:53:47.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.417" level="INFO">curl: (6) Could not resolve host: recon; Unknown error</msg>
<status status="PASS" endtime="20210121 14:53:47.418" starttime="20210121 14:53:47.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:53:47.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210121 14:53:47.418" level="FAIL">6 != 0</msg>
<status status="FAIL" endtime="20210121 14:53:47.419" starttime="20210121 14:53:47.418"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.419" starttime="20210121 14:53:47.378"></status>
</kw>
<msg timestamp="20210121 14:53:47.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210121 14:53:47.419" starttime="20210121 14:53:47.378"></status>
</kw>
<status status="FAIL" endtime="20210121 14:53:47.419" starttime="20210121 14:53:47.377"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210121 14:53:47.419" critical="yes" starttime="20210121 14:53:47.375">6 != 0</status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="FAIL" endtime="20210121 14:53:47.421" starttime="20210121 14:52:07.103"></status>
</suite>
<status status="FAIL" endtime="20210121 14:53:47.425" starttime="20210121 14:52:07.070"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3" id="s1-s11" name="s3-generated">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:49:59.744" level="INFO">${random} = 69763</msg>
<status status="PASS" endtime="20210121 14:49:59.744" starttime="20210121 14:49:59.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:49:59.746" level="INFO">${PREFIX} = 69763</msg>
<status status="PASS" endtime="20210121 14:49:59.746" starttime="20210121 14:49:59.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:59.746" starttime="20210121 14:49:59.744"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:59.746" starttime="20210121 14:49:59.743"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:59.750" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:59.753" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:49:59.753" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:49:59.753" starttime="20210121 14:49:59.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:59.754" starttime="20210121 14:49:59.753"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:59.756" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:59.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:59.899" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:49:59.899" starttime="20210121 14:49:59.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:59.904" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:00.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:00.316" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:00.316" starttime="20210121 14:49:59.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:00.317" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:00.317" starttime="20210121 14:50:00.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:00.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:00.318" starttime="20210121 14:50:00.317"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.318" starttime="20210121 14:49:59.902"></status>
</kw>
<msg timestamp="20210121 14:50:00.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:00.318" starttime="20210121 14:49:59.901"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.319" starttime="20210121 14:49:59.901"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.319" starttime="20210121 14:49:59.901"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.319" starttime="20210121 14:49:59.900"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.319" starttime="20210121 14:49:59.747"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.319" starttime="20210121 14:49:59.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:00.321" starttime="20210121 14:50:00.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:00.321" starttime="20210121 14:50:00.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:00.327" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:00.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:00.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:00.670" starttime="20210121 14:50:00.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:00.671" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:00.672" starttime="20210121 14:50:00.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:00.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:00.672" starttime="20210121 14:50:00.672"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.673" starttime="20210121 14:50:00.324"></status>
</kw>
<msg timestamp="20210121 14:50:00.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:00.673" starttime="20210121 14:50:00.324"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:00.673" starttime="20210121 14:50:00.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:00.677" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:01.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:01.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:01.030" starttime="20210121 14:50:00.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.031" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:01.031" starttime="20210121 14:50:01.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:01.032" starttime="20210121 14:50:01.031"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.032" starttime="20210121 14:50:00.674"></status>
</kw>
<msg timestamp="20210121 14:50:01.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:01.032" starttime="20210121 14:50:00.674"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.032" starttime="20210121 14:50:00.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:01.036" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:01.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:01.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:01.401" starttime="20210121 14:50:01.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.402" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:01.402" starttime="20210121 14:50:01.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:01.403" starttime="20210121 14:50:01.402"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.403" starttime="20210121 14:50:01.034"></status>
</kw>
<msg timestamp="20210121 14:50:01.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:01.403" starttime="20210121 14:50:01.033"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.404" starttime="20210121 14:50:01.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:01.408" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:01.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:01.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:01.767" starttime="20210121 14:50:01.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.768" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:01.769" starttime="20210121 14:50:01.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:01.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:01.769" starttime="20210121 14:50:01.769"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.770" starttime="20210121 14:50:01.405"></status>
</kw>
<msg timestamp="20210121 14:50:01.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:01.770" starttime="20210121 14:50:01.404"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.770" starttime="20210121 14:50:01.404"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.770" starttime="20210121 14:50:00.322"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.770" starttime="20210121 14:50:00.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.771" starttime="20210121 14:50:00.320"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:01.771" starttime="20210121 14:50:00.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:01.772" level="INFO">${postfix} = 66675</msg>
<status status="PASS" endtime="20210121 14:50:01.772" starttime="20210121 14:50:01.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:01.773" level="INFO">${bucket} = bucket-66675</msg>
<status status="PASS" endtime="20210121 14:50:01.773" starttime="20210121 14:50:01.772"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:01.777" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-66675 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:02.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:02.371" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-66675"
}</msg>
<status status="PASS" endtime="20210121 14:50:02.371" starttime="20210121 14:50:01.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.372" level="INFO">{
    "Location": "http://s3g:9878/bucket-66675"
}</msg>
<status status="PASS" endtime="20210121 14:50:02.372" starttime="20210121 14:50:02.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:02.372" starttime="20210121 14:50:02.372"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.373" starttime="20210121 14:50:01.774"></status>
</kw>
<msg timestamp="20210121 14:50:02.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:02.373" starttime="20210121 14:50:01.774"></status>
</kw>
<msg timestamp="20210121 14:50:02.373" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-66675"
}</msg>
<status status="PASS" endtime="20210121 14:50:02.373" starttime="20210121 14:50:01.774"></status>
</kw>
<msg timestamp="20210121 14:50:02.374" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-66675"
}</msg>
<status status="PASS" endtime="20210121 14:50:02.374" starttime="20210121 14:50:01.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.374" starttime="20210121 14:50:02.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.375" starttime="20210121 14:50:02.375"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.376" starttime="20210121 14:50:01.773"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.376" starttime="20210121 14:50:01.771"></status>
</kw>
<msg timestamp="20210121 14:50:02.376" level="INFO">${BUCKET} = bucket-66675</msg>
<status status="PASS" endtime="20210121 14:50:02.376" starttime="20210121 14:50:01.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.377" level="INFO">${BUCKET} = bucket-66675</msg>
<status status="PASS" endtime="20210121 14:50:02.377" starttime="20210121 14:50:02.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.377" starttime="20210121 14:50:02.377"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.377" starttime="20210121 14:49:59.743"></status>
</kw>
<suite source="/opt/hadoop/smoketest/s3/awss3.robot" id="s1-s11-s1" name="Awss3">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:02.390" level="INFO">${random} = 35847</msg>
<status status="PASS" endtime="20210121 14:50:02.390" starttime="20210121 14:50:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.391" level="INFO">${PREFIX} = 35847</msg>
<status status="PASS" endtime="20210121 14:50:02.391" starttime="20210121 14:50:02.390"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.391" starttime="20210121 14:50:02.389"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.391" starttime="20210121 14:50:02.389"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:02.394" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:02.398" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:02.398" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:02.398" starttime="20210121 14:50:02.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.399" starttime="20210121 14:50:02.398"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:02.401" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:02.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:02.547" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:02.547" starttime="20210121 14:50:02.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:02.551" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:02.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:02.964" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:02.964" starttime="20210121 14:50:02.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.965" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:02.965" starttime="20210121 14:50:02.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:02.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:02.966" starttime="20210121 14:50:02.966"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.966" starttime="20210121 14:50:02.549"></status>
</kw>
<msg timestamp="20210121 14:50:02.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.549"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.548"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.548"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.547"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.392"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:02.967" starttime="20210121 14:50:02.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.970" starttime="20210121 14:50:02.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:02.970" starttime="20210121 14:50:02.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:02.974" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:03.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:03.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:03.340" starttime="20210121 14:50:02.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:03.341" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:03.341" starttime="20210121 14:50:03.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:03.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:03.343" starttime="20210121 14:50:03.342"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:03.343" starttime="20210121 14:50:02.972"></status>
</kw>
<msg timestamp="20210121 14:50:03.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:03.344" starttime="20210121 14:50:02.971"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:03.344" starttime="20210121 14:50:02.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:03.349" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:03.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:03.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:03.701" starttime="20210121 14:50:03.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:03.702" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:03.703" starttime="20210121 14:50:03.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:03.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:03.703" starttime="20210121 14:50:03.703"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:03.703" starttime="20210121 14:50:03.345"></status>
</kw>
<msg timestamp="20210121 14:50:03.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:03.704" starttime="20210121 14:50:03.345"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:03.704" starttime="20210121 14:50:03.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:03.707" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:04.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:04.054" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:04.054" starttime="20210121 14:50:03.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:04.055" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:04.055" starttime="20210121 14:50:04.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:04.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:04.056" starttime="20210121 14:50:04.055"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.056" starttime="20210121 14:50:03.705"></status>
</kw>
<msg timestamp="20210121 14:50:04.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:04.056" starttime="20210121 14:50:03.705"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.057" starttime="20210121 14:50:03.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:04.061" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:04.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:04.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:04.421" starttime="20210121 14:50:04.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:04.422" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:04.423" starttime="20210121 14:50:04.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:04.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:04.423" starttime="20210121 14:50:04.423"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:04.058"></status>
</kw>
<msg timestamp="20210121 14:50:04.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:04.057"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:04.057"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:02.971"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:02.970"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:02.969"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:04.424" starttime="20210121 14:50:02.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:04.426" level="INFO">${postfix} = 36444</msg>
<status status="PASS" endtime="20210121 14:50:04.426" starttime="20210121 14:50:04.426"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:04.427" level="INFO">${bucket} = bucket-36444</msg>
<status status="PASS" endtime="20210121 14:50:04.427" starttime="20210121 14:50:04.426"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:04.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-36444 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:05.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:05.048" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36444"
}</msg>
<status status="PASS" endtime="20210121 14:50:05.048" starttime="20210121 14:50:04.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.049" level="INFO">{
    "Location": "http://s3g:9878/bucket-36444"
}</msg>
<status status="PASS" endtime="20210121 14:50:05.049" starttime="20210121 14:50:05.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:05.050" starttime="20210121 14:50:05.050"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.050" starttime="20210121 14:50:04.429"></status>
</kw>
<msg timestamp="20210121 14:50:05.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:05.051" starttime="20210121 14:50:04.428"></status>
</kw>
<msg timestamp="20210121 14:50:05.051" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36444"
}</msg>
<status status="PASS" endtime="20210121 14:50:05.051" starttime="20210121 14:50:04.428"></status>
</kw>
<msg timestamp="20210121 14:50:05.051" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-36444"
}</msg>
<status status="PASS" endtime="20210121 14:50:05.051" starttime="20210121 14:50:04.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:05.052" starttime="20210121 14:50:05.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:05.052" starttime="20210121 14:50:05.052"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.052" starttime="20210121 14:50:04.427"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.053" starttime="20210121 14:50:04.425"></status>
</kw>
<msg timestamp="20210121 14:50:05.053" level="INFO">${BUCKET} = bucket-36444</msg>
<status status="PASS" endtime="20210121 14:50:05.053" starttime="20210121 14:50:04.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.053" level="INFO">${BUCKET} = bucket-36444</msg>
<status status="PASS" endtime="20210121 14:50:05.054" starttime="20210121 14:50:05.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:05.054" starttime="20210121 14:50:05.054"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.054" starttime="20210121 14:50:02.388"></status>
</kw>
<test id="s1-s11-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:05.059" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:50:05.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:05.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:05.063" starttime="20210121 14:50:05.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.064" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:05.064" starttime="20210121 14:50:05.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:05.065" starttime="20210121 14:50:05.064"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.065" starttime="20210121 14:50:05.056"></status>
</kw>
<msg timestamp="20210121 14:50:05.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:05.065" starttime="20210121 14:50:05.056"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.065" starttime="20210121 14:50:05.056"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:05.070" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-36444 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:05.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:05.754" level="INFO">${output} = Completed 29 Bytes/29 Bytes (155 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/testfile          </msg>
<status status="PASS" endtime="20210121 14:50:05.754" starttime="20210121 14:50:05.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.755" level="INFO">Completed 29 Bytes/29 Bytes (155 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/testfile          </msg>
<status status="PASS" endtime="20210121 14:50:05.755" starttime="20210121 14:50:05.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:05.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:05.756" starttime="20210121 14:50:05.755"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:05.756" starttime="20210121 14:50:05.067"></status>
</kw>
<msg timestamp="20210121 14:50:05.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:05.756" starttime="20210121 14:50:05.067"></status>
</kw>
<msg timestamp="20210121 14:50:05.757" level="INFO">${output} = Completed 29 Bytes/29 Bytes (155 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/testfile          </msg>
<status status="PASS" endtime="20210121 14:50:05.757" starttime="20210121 14:50:05.066"></status>
</kw>
<msg timestamp="20210121 14:50:05.757" level="INFO">${result} = Completed 29 Bytes/29 Bytes (155 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/testfile          </msg>
<status status="PASS" endtime="20210121 14:50:05.757" starttime="20210121 14:50:05.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:05.758" starttime="20210121 14:50:05.757"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:05.762" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-36444/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:06.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:06.423" level="INFO">${output} = Completed 29 Bytes/29 Bytes (142 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/dir1/dir2/file    </msg>
<status status="PASS" endtime="20210121 14:50:06.424" starttime="20210121 14:50:05.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:06.425" level="INFO">Completed 29 Bytes/29 Bytes (142 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/dir1/dir2/file    </msg>
<status status="PASS" endtime="20210121 14:50:06.425" starttime="20210121 14:50:06.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:06.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:06.426" starttime="20210121 14:50:06.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:06.426" starttime="20210121 14:50:05.759"></status>
</kw>
<msg timestamp="20210121 14:50:06.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:06.426" starttime="20210121 14:50:05.759"></status>
</kw>
<msg timestamp="20210121 14:50:06.427" level="INFO">${output} = Completed 29 Bytes/29 Bytes (142 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/dir1/dir2/file    </msg>
<status status="PASS" endtime="20210121 14:50:06.427" starttime="20210121 14:50:05.758"></status>
</kw>
<msg timestamp="20210121 14:50:06.427" level="INFO">${result} = Completed 29 Bytes/29 Bytes (142 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-36444/dir1/dir2/file    </msg>
<status status="PASS" endtime="20210121 14:50:06.427" starttime="20210121 14:50:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:06.428" starttime="20210121 14:50:06.427"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:06.432" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-36444 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:06.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:06.898" level="INFO">${output} =                            PRE dir1/
2021-01-21 14:50:05         29 testfile</msg>
<status status="PASS" endtime="20210121 14:50:06.898" starttime="20210121 14:50:06.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:06.899" level="INFO">                           PRE dir1/
2021-01-21 14:50:05         29 testfile</msg>
<status status="PASS" endtime="20210121 14:50:06.899" starttime="20210121 14:50:06.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:06.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:06.900" starttime="20210121 14:50:06.900"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:06.900" starttime="20210121 14:50:06.429"></status>
</kw>
<msg timestamp="20210121 14:50:06.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:06.901" starttime="20210121 14:50:06.429"></status>
</kw>
<msg timestamp="20210121 14:50:06.901" level="INFO">${output} =                            PRE dir1/
2021-01-21 14:50:05         29 testfile</msg>
<status status="PASS" endtime="20210121 14:50:06.901" starttime="20210121 14:50:06.428"></status>
</kw>
<msg timestamp="20210121 14:50:06.901" level="INFO">${result} =                            PRE dir1/
2021-01-21 14:50:05         29 testfile</msg>
<status status="PASS" endtime="20210121 14:50:06.901" starttime="20210121 14:50:06.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:06.902" starttime="20210121 14:50:06.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:06.902" starttime="20210121 14:50:06.902"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:06.903" starttime="20210121 14:50:06.903"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:06.908" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-36444/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:07.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:07.448" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:50:07.448" starttime="20210121 14:50:06.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:07.449" level="INFO">                           PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:50:07.450" starttime="20210121 14:50:07.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:07.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:07.450" starttime="20210121 14:50:07.450"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:07.451" starttime="20210121 14:50:06.905"></status>
</kw>
<msg timestamp="20210121 14:50:07.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:07.451" starttime="20210121 14:50:06.904"></status>
</kw>
<msg timestamp="20210121 14:50:07.451" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:50:07.451" starttime="20210121 14:50:06.904"></status>
</kw>
<msg timestamp="20210121 14:50:07.451" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:50:07.451" starttime="20210121 14:50:06.903"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.452" starttime="20210121 14:50:07.452"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.453" starttime="20210121 14:50:07.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.453" starttime="20210121 14:50:07.453"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:07.458" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-36444/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:07.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:07.950" level="INFO">${output} = 2021-01-21 14:50:06         29 file</msg>
<status status="PASS" endtime="20210121 14:50:07.950" starttime="20210121 14:50:07.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:07.951" level="INFO">2021-01-21 14:50:06         29 file</msg>
<status status="PASS" endtime="20210121 14:50:07.951" starttime="20210121 14:50:07.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:07.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:07.952" starttime="20210121 14:50:07.951"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:07.953" starttime="20210121 14:50:07.455"></status>
</kw>
<msg timestamp="20210121 14:50:07.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:07.953" starttime="20210121 14:50:07.455"></status>
</kw>
<msg timestamp="20210121 14:50:07.953" level="INFO">${output} = 2021-01-21 14:50:06         29 file</msg>
<status status="PASS" endtime="20210121 14:50:07.953" starttime="20210121 14:50:07.454"></status>
</kw>
<msg timestamp="20210121 14:50:07.953" level="INFO">${result} = 2021-01-21 14:50:06         29 file</msg>
<status status="PASS" endtime="20210121 14:50:07.954" starttime="20210121 14:50:07.453"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.954" starttime="20210121 14:50:07.954"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.955" starttime="20210121 14:50:07.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.955" starttime="20210121 14:50:07.955"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:07.956" critical="yes" starttime="20210121 14:50:05.054"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:50:07.957" starttime="20210121 14:50:02.378"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketcreate.robot" id="s1-s11-s2" name="Bucketcreate">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:07.970" level="INFO">${random} = 68432</msg>
<status status="PASS" endtime="20210121 14:50:07.970" starttime="20210121 14:50:07.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:07.972" level="INFO">${PREFIX} = 68432</msg>
<status status="PASS" endtime="20210121 14:50:07.972" starttime="20210121 14:50:07.971"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:07.972" starttime="20210121 14:50:07.970"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:07.972" starttime="20210121 14:50:07.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:07.975" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:07.977" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:07.977" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:07.977" starttime="20210121 14:50:07.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:07.978" starttime="20210121 14:50:07.977"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:07.980" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:08.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:08.123" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:08.123" starttime="20210121 14:50:07.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:08.128" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:08.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:08.522" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:08.522" starttime="20210121 14:50:08.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:08.524" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:08.524" starttime="20210121 14:50:08.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:08.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:08.526" starttime="20210121 14:50:08.525"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.526" starttime="20210121 14:50:08.126"></status>
</kw>
<msg timestamp="20210121 14:50:08.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:08.527" starttime="20210121 14:50:08.125"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.528" starttime="20210121 14:50:08.124"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.528" starttime="20210121 14:50:08.124"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.528" starttime="20210121 14:50:08.123"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.528" starttime="20210121 14:50:07.972"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.528" starttime="20210121 14:50:07.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:08.530" starttime="20210121 14:50:08.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:08.530" starttime="20210121 14:50:08.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:08.536" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:08.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:08.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:08.875" starttime="20210121 14:50:08.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:08.876" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:08.876" starttime="20210121 14:50:08.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:08.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:08.877" starttime="20210121 14:50:08.876"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.877" starttime="20210121 14:50:08.533"></status>
</kw>
<msg timestamp="20210121 14:50:08.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:08.877" starttime="20210121 14:50:08.533"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:08.878" starttime="20210121 14:50:08.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:08.881" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:09.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:09.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:09.249" starttime="20210121 14:50:08.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.250" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:09.250" starttime="20210121 14:50:09.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:09.251" starttime="20210121 14:50:09.251"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.252" starttime="20210121 14:50:08.879"></status>
</kw>
<msg timestamp="20210121 14:50:09.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:09.252" starttime="20210121 14:50:08.879"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.252" starttime="20210121 14:50:08.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:09.256" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:09.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:09.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:09.598" starttime="20210121 14:50:09.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.599" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:09.599" starttime="20210121 14:50:09.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:09.600" starttime="20210121 14:50:09.599"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.600" starttime="20210121 14:50:09.253"></status>
</kw>
<msg timestamp="20210121 14:50:09.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:09.600" starttime="20210121 14:50:09.253"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.601" starttime="20210121 14:50:09.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:09.604" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:09.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:09.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:09.967" starttime="20210121 14:50:09.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.969" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:09.969" starttime="20210121 14:50:09.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:09.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:09.970" starttime="20210121 14:50:09.970"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.970" starttime="20210121 14:50:09.602"></status>
</kw>
<msg timestamp="20210121 14:50:09.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:09.601"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:09.601"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:08.532"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:08.531"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:08.529"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:09.971" starttime="20210121 14:50:08.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:09.973" level="INFO">${postfix} = 13281</msg>
<status status="PASS" endtime="20210121 14:50:09.973" starttime="20210121 14:50:09.972"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:09.973" level="INFO">${bucket} = bucket-13281</msg>
<status status="PASS" endtime="20210121 14:50:09.973" starttime="20210121 14:50:09.973"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:09.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-13281 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:10.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:10.575" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:10.576" starttime="20210121 14:50:09.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:10.577" level="INFO">{
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:10.577" starttime="20210121 14:50:10.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:10.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:10.577" starttime="20210121 14:50:10.577"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:10.578" starttime="20210121 14:50:09.975"></status>
</kw>
<msg timestamp="20210121 14:50:10.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:10.578" starttime="20210121 14:50:09.975"></status>
</kw>
<msg timestamp="20210121 14:50:10.578" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:10.578" starttime="20210121 14:50:09.974"></status>
</kw>
<msg timestamp="20210121 14:50:10.579" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:10.579" starttime="20210121 14:50:09.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:10.579" starttime="20210121 14:50:10.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:10.580" starttime="20210121 14:50:10.579"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:10.580" starttime="20210121 14:50:09.974"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:10.580" starttime="20210121 14:50:09.972"></status>
</kw>
<msg timestamp="20210121 14:50:10.580" level="INFO">${BUCKET} = bucket-13281</msg>
<status status="PASS" endtime="20210121 14:50:10.580" starttime="20210121 14:50:09.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:10.581" level="INFO">${BUCKET} = bucket-13281</msg>
<status status="PASS" endtime="20210121 14:50:10.581" starttime="20210121 14:50:10.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:10.582" starttime="20210121 14:50:10.581"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:10.582" starttime="20210121 14:50:07.969"></status>
</kw>
<test id="s1-s11-s2-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:10.584" level="INFO">${postfix} = 55517</msg>
<status status="PASS" endtime="20210121 14:50:10.584" starttime="20210121 14:50:10.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:10.585" level="INFO">${bucket} = bucket-55517</msg>
<status status="PASS" endtime="20210121 14:50:10.585" starttime="20210121 14:50:10.584"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:10.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-55517 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:11.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:11.153" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-55517"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.153" starttime="20210121 14:50:10.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:11.154" level="INFO">{
    "Location": "http://s3g:9878/bucket-55517"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.154" starttime="20210121 14:50:11.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:11.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:11.155" starttime="20210121 14:50:11.154"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:11.155" starttime="20210121 14:50:10.587"></status>
</kw>
<msg timestamp="20210121 14:50:11.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:11.156" starttime="20210121 14:50:10.586"></status>
</kw>
<msg timestamp="20210121 14:50:11.157" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-55517"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.157" starttime="20210121 14:50:10.586"></status>
</kw>
<msg timestamp="20210121 14:50:11.157" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-55517"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.157" starttime="20210121 14:50:10.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:11.158" starttime="20210121 14:50:11.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:11.159" starttime="20210121 14:50:11.158"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:11.159" starttime="20210121 14:50:10.585"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:11.159" starttime="20210121 14:50:10.583"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:11.159" critical="yes" starttime="20210121 14:50:10.582"></status>
</test>
<test id="s1-s11-s2-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:11.167" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-13281 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:11.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:11.743" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.743" starttime="20210121 14:50:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:11.745" level="INFO">{
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.745" starttime="20210121 14:50:11.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:11.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:11.745" starttime="20210121 14:50:11.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:11.746" starttime="20210121 14:50:11.164"></status>
</kw>
<msg timestamp="20210121 14:50:11.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:11.746" starttime="20210121 14:50:11.164"></status>
</kw>
<msg timestamp="20210121 14:50:11.746" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.746" starttime="20210121 14:50:11.163"></status>
</kw>
<msg timestamp="20210121 14:50:11.747" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-13281"
}</msg>
<status status="PASS" endtime="20210121 14:50:11.747" starttime="20210121 14:50:11.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:11.747" starttime="20210121 14:50:11.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:11.748" starttime="20210121 14:50:11.747"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:11.748" starttime="20210121 14:50:11.161"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:11.748" critical="yes" starttime="20210121 14:50:11.160"></status>
</test>
<test id="s1-s11-s2-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:11.753" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:12.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:12.227" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:50:12.227" starttime="20210121 14:50:11.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:12.229" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:50:12.229" starttime="20210121 14:50:12.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:12.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:12.229" starttime="20210121 14:50:12.229"></status>
</kw>
<msg timestamp="20210121 14:50:12.230" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:50:12.230" starttime="20210121 14:50:11.751"></status>
</kw>
<msg timestamp="20210121 14:50:12.230" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:50:12.230" starttime="20210121 14:50:11.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:12.231" starttime="20210121 14:50:12.230"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:12.231" critical="yes" starttime="20210121 14:50:11.749"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:50:12.232" starttime="20210121 14:50:07.959"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketdelete.robot" id="s1-s11-s3" name="Bucketdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:12.247" level="INFO">${random} = 35276</msg>
<status status="PASS" endtime="20210121 14:50:12.247" starttime="20210121 14:50:12.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:12.248" level="INFO">${PREFIX} = 35276</msg>
<status status="PASS" endtime="20210121 14:50:12.248" starttime="20210121 14:50:12.247"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.248" starttime="20210121 14:50:12.246"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.248" starttime="20210121 14:50:12.246"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:12.252" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:12.255" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:12.255" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:12.256" starttime="20210121 14:50:12.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:12.257" starttime="20210121 14:50:12.256"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:12.259" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:12.403" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:12.403" starttime="20210121 14:50:12.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:12.409" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:12.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:12.829" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:12.829" starttime="20210121 14:50:12.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:12.830" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:12.831" starttime="20210121 14:50:12.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:12.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:12.831" starttime="20210121 14:50:12.831"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.406"></status>
</kw>
<msg timestamp="20210121 14:50:12.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.405"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.405"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.404"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.403"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.832" starttime="20210121 14:50:12.249"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:12.833" starttime="20210121 14:50:12.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:12.834" starttime="20210121 14:50:12.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:12.834" starttime="20210121 14:50:12.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:12.839" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:13.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:13.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:13.177" starttime="20210121 14:50:12.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.178" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:13.178" starttime="20210121 14:50:13.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:13.179" starttime="20210121 14:50:13.178"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.179" starttime="20210121 14:50:12.836"></status>
</kw>
<msg timestamp="20210121 14:50:13.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:13.180" starttime="20210121 14:50:12.836"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.180" starttime="20210121 14:50:12.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:13.183" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:13.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:13.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:13.539" starttime="20210121 14:50:13.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.540" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:13.540" starttime="20210121 14:50:13.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:13.541" starttime="20210121 14:50:13.540"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.542" starttime="20210121 14:50:13.181"></status>
</kw>
<msg timestamp="20210121 14:50:13.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:13.542" starttime="20210121 14:50:13.180"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.542" starttime="20210121 14:50:13.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:13.546" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:13.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:13.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:13.890" starttime="20210121 14:50:13.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.892" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:13.892" starttime="20210121 14:50:13.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:13.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:13.893" starttime="20210121 14:50:13.892"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.893" starttime="20210121 14:50:13.543"></status>
</kw>
<msg timestamp="20210121 14:50:13.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:13.893" starttime="20210121 14:50:13.543"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:13.893" starttime="20210121 14:50:13.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:13.897" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:14.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:14.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:14.251" starttime="20210121 14:50:13.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:14.252" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:14.253" starttime="20210121 14:50:14.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:14.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:14.253" starttime="20210121 14:50:14.253"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.254" starttime="20210121 14:50:13.894"></status>
</kw>
<msg timestamp="20210121 14:50:14.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:14.254" starttime="20210121 14:50:13.894"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.254" starttime="20210121 14:50:13.894"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.254" starttime="20210121 14:50:12.835"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.255" starttime="20210121 14:50:12.835"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.255" starttime="20210121 14:50:12.833"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.255" starttime="20210121 14:50:12.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:14.256" level="INFO">${postfix} = 61440</msg>
<status status="PASS" endtime="20210121 14:50:14.256" starttime="20210121 14:50:14.256"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:14.257" level="INFO">${bucket} = bucket-61440</msg>
<status status="PASS" endtime="20210121 14:50:14.257" starttime="20210121 14:50:14.256"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:14.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-61440 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:14.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:14.853" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61440"
}</msg>
<status status="PASS" endtime="20210121 14:50:14.853" starttime="20210121 14:50:14.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:14.854" level="INFO">{
    "Location": "http://s3g:9878/bucket-61440"
}</msg>
<status status="PASS" endtime="20210121 14:50:14.854" starttime="20210121 14:50:14.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:14.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:14.855" starttime="20210121 14:50:14.855"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.855" starttime="20210121 14:50:14.259"></status>
</kw>
<msg timestamp="20210121 14:50:14.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:14.856" starttime="20210121 14:50:14.258"></status>
</kw>
<msg timestamp="20210121 14:50:14.856" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-61440"
}</msg>
<status status="PASS" endtime="20210121 14:50:14.856" starttime="20210121 14:50:14.258"></status>
</kw>
<msg timestamp="20210121 14:50:14.856" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-61440"
}</msg>
<status status="PASS" endtime="20210121 14:50:14.856" starttime="20210121 14:50:14.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:14.857" starttime="20210121 14:50:14.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:14.857" starttime="20210121 14:50:14.857"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.858" starttime="20210121 14:50:14.257"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.858" starttime="20210121 14:50:14.255"></status>
</kw>
<msg timestamp="20210121 14:50:14.858" level="INFO">${BUCKET} = bucket-61440</msg>
<status status="PASS" endtime="20210121 14:50:14.858" starttime="20210121 14:50:14.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:14.859" level="INFO">${BUCKET} = bucket-61440</msg>
<status status="PASS" endtime="20210121 14:50:14.859" starttime="20210121 14:50:14.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:14.859" starttime="20210121 14:50:14.859"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:14.859" starttime="20210121 14:50:12.245"></status>
</kw>
<test id="s1-s11-s3-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:14.863" level="INFO">${postfix} = 12062</msg>
<status status="PASS" endtime="20210121 14:50:14.863" starttime="20210121 14:50:14.862"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:14.864" level="INFO">${bucket} = bucket-12062</msg>
<status status="PASS" endtime="20210121 14:50:14.864" starttime="20210121 14:50:14.863"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:14.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-12062 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:15.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:15.457" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-12062"
}</msg>
<status status="PASS" endtime="20210121 14:50:15.457" starttime="20210121 14:50:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:15.458" level="INFO">{
    "Location": "http://s3g:9878/bucket-12062"
}</msg>
<status status="PASS" endtime="20210121 14:50:15.458" starttime="20210121 14:50:15.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:15.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:15.459" starttime="20210121 14:50:15.458"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:15.459" starttime="20210121 14:50:14.866"></status>
</kw>
<msg timestamp="20210121 14:50:15.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:15.459" starttime="20210121 14:50:14.865"></status>
</kw>
<msg timestamp="20210121 14:50:15.460" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-12062"
}</msg>
<status status="PASS" endtime="20210121 14:50:15.460" starttime="20210121 14:50:14.865"></status>
</kw>
<msg timestamp="20210121 14:50:15.460" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-12062"
}</msg>
<status status="PASS" endtime="20210121 14:50:15.460" starttime="20210121 14:50:14.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:15.461" starttime="20210121 14:50:15.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:15.461" starttime="20210121 14:50:15.461"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:15.462" starttime="20210121 14:50:14.864"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:15.462" starttime="20210121 14:50:14.862"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:15.462" starttime="20210121 14:50:14.862"></status>
</kw>
<msg timestamp="20210121 14:50:15.462" level="INFO">${bucket} = bucket-12062</msg>
<status status="PASS" endtime="20210121 14:50:15.462" starttime="20210121 14:50:14.861"></status>
</kw>
<msg timestamp="20210121 14:50:15.462" level="INFO">${bucket} = bucket-12062</msg>
<status status="PASS" endtime="20210121 14:50:15.462" starttime="20210121 14:50:14.861"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket ${bucket}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:15.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-12062 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:16.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:16.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:16.045" starttime="20210121 14:50:15.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:16.046" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:16.046" starttime="20210121 14:50:16.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:16.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:16.047" starttime="20210121 14:50:16.047"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:16.048" starttime="20210121 14:50:15.464"></status>
</kw>
<msg timestamp="20210121 14:50:16.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:16.048" starttime="20210121 14:50:15.464"></status>
</kw>
<msg timestamp="20210121 14:50:16.048" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:16.048" starttime="20210121 14:50:15.463"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:16.048" starttime="20210121 14:50:15.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:16.049" critical="yes" starttime="20210121 14:50:14.860"></status>
</test>
<test id="s1-s11-s3-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:16.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:16.530" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:16.530" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:50:16.530" starttime="20210121 14:50:16.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:16.532" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:50:16.532" starttime="20210121 14:50:16.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:16.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:16.532" starttime="20210121 14:50:16.532"></status>
</kw>
<msg timestamp="20210121 14:50:16.533" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:50:16.533" starttime="20210121 14:50:16.051"></status>
</kw>
<msg timestamp="20210121 14:50:16.533" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:50:16.533" starttime="20210121 14:50:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:16.534" starttime="20210121 14:50:16.533"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:16.534" critical="yes" starttime="20210121 14:50:16.050"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:50:16.535" starttime="20210121 14:50:12.235"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/buckethead.robot" id="s1-s11-s4" name="Buckethead">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:16.548" level="INFO">${random} = 71764</msg>
<status status="PASS" endtime="20210121 14:50:16.548" starttime="20210121 14:50:16.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:16.549" level="INFO">${PREFIX} = 71764</msg>
<status status="PASS" endtime="20210121 14:50:16.549" starttime="20210121 14:50:16.548"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:16.549" starttime="20210121 14:50:16.547"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:16.550" starttime="20210121 14:50:16.547"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:16.552" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:16.554" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:16.554" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:16.554" starttime="20210121 14:50:16.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:16.555" starttime="20210121 14:50:16.555"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:16.557" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:16.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:16.708" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:16.708" starttime="20210121 14:50:16.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:16.713" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:17.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:17.119" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:17.119" starttime="20210121 14:50:16.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.120" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:17.120" starttime="20210121 14:50:17.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:17.121" starttime="20210121 14:50:17.120"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.122" starttime="20210121 14:50:16.710"></status>
</kw>
<msg timestamp="20210121 14:50:17.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:17.122" starttime="20210121 14:50:16.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.122" starttime="20210121 14:50:16.709"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.122" starttime="20210121 14:50:16.709"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.122" starttime="20210121 14:50:16.708"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.123" starttime="20210121 14:50:16.550"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.123" starttime="20210121 14:50:16.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:17.124" starttime="20210121 14:50:17.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:17.125" starttime="20210121 14:50:17.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:17.129" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:17.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:17.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:17.476" starttime="20210121 14:50:17.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.477" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:17.477" starttime="20210121 14:50:17.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:17.478" starttime="20210121 14:50:17.477"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.478" starttime="20210121 14:50:17.127"></status>
</kw>
<msg timestamp="20210121 14:50:17.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:17.478" starttime="20210121 14:50:17.127"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.479" starttime="20210121 14:50:17.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:17.483" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:17.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:17.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:17.822" starttime="20210121 14:50:17.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.823" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:17.823" starttime="20210121 14:50:17.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:17.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:17.824" starttime="20210121 14:50:17.823"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.824" starttime="20210121 14:50:17.480"></status>
</kw>
<msg timestamp="20210121 14:50:17.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:17.825" starttime="20210121 14:50:17.479"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:17.825" starttime="20210121 14:50:17.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:17.830" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:18.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:18.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:18.171" starttime="20210121 14:50:17.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:18.173" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:18.173" starttime="20210121 14:50:18.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:18.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:18.174" starttime="20210121 14:50:18.173"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.174" starttime="20210121 14:50:17.826"></status>
</kw>
<msg timestamp="20210121 14:50:18.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:18.174" starttime="20210121 14:50:17.825"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.174" starttime="20210121 14:50:17.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:18.178" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:18.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:18.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:18.519" starttime="20210121 14:50:18.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:18.520" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:18.520" starttime="20210121 14:50:18.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:18.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:18.520" starttime="20210121 14:50:18.520"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.521" starttime="20210121 14:50:18.175"></status>
</kw>
<msg timestamp="20210121 14:50:18.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:18.521" starttime="20210121 14:50:18.175"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.521" starttime="20210121 14:50:18.175"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.521" starttime="20210121 14:50:17.126"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.521" starttime="20210121 14:50:17.126"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.522" starttime="20210121 14:50:17.123"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:18.522" starttime="20210121 14:50:17.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:18.523" level="INFO">${postfix} = 25278</msg>
<status status="PASS" endtime="20210121 14:50:18.523" starttime="20210121 14:50:18.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:18.524" level="INFO">${bucket} = bucket-25278</msg>
<status status="PASS" endtime="20210121 14:50:18.524" starttime="20210121 14:50:18.523"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:18.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-25278 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:19.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:19.005" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-25278"
}</msg>
<status status="PASS" endtime="20210121 14:50:19.005" starttime="20210121 14:50:18.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:19.006" level="INFO">{
    "Location": "http://s3g:9878/bucket-25278"
}</msg>
<status status="PASS" endtime="20210121 14:50:19.006" starttime="20210121 14:50:19.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:19.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:19.007" starttime="20210121 14:50:19.006"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:19.007" starttime="20210121 14:50:18.526"></status>
</kw>
<msg timestamp="20210121 14:50:19.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:19.007" starttime="20210121 14:50:18.525"></status>
</kw>
<msg timestamp="20210121 14:50:19.008" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-25278"
}</msg>
<status status="PASS" endtime="20210121 14:50:19.008" starttime="20210121 14:50:18.525"></status>
</kw>
<msg timestamp="20210121 14:50:19.008" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-25278"
}</msg>
<status status="PASS" endtime="20210121 14:50:19.008" starttime="20210121 14:50:18.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:19.009" starttime="20210121 14:50:19.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:19.009" starttime="20210121 14:50:19.009"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:19.009" starttime="20210121 14:50:18.524"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:19.010" starttime="20210121 14:50:18.522"></status>
</kw>
<msg timestamp="20210121 14:50:19.010" level="INFO">${BUCKET} = bucket-25278</msg>
<status status="PASS" endtime="20210121 14:50:19.010" starttime="20210121 14:50:18.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:19.010" level="INFO">${BUCKET} = bucket-25278</msg>
<status status="PASS" endtime="20210121 14:50:19.011" starttime="20210121 14:50:19.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:19.011" starttime="20210121 14:50:19.011"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:19.011" starttime="20210121 14:50:16.547"></status>
</kw>
<test id="s1-s11-s4-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:19.018" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-25278 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:19.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:19.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:19.506" starttime="20210121 14:50:19.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:19.507" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:19.507" starttime="20210121 14:50:19.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:19.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:19.508" starttime="20210121 14:50:19.507"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:19.508" starttime="20210121 14:50:19.014"></status>
</kw>
<msg timestamp="20210121 14:50:19.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:19.508" starttime="20210121 14:50:19.014"></status>
</kw>
<msg timestamp="20210121 14:50:19.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:19.509" starttime="20210121 14:50:19.013"></status>
</kw>
<msg timestamp="20210121 14:50:19.509" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:50:19.509" starttime="20210121 14:50:19.013"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:19.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:20.100" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:20.100" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:50:20.100" starttime="20210121 14:50:19.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:20.101" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:50:20.101" starttime="20210121 14:50:20.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:20.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:20.102" starttime="20210121 14:50:20.101"></status>
</kw>
<msg timestamp="20210121 14:50:20.102" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:50:20.102" starttime="20210121 14:50:19.510"></status>
</kw>
<msg timestamp="20210121 14:50:20.103" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:50:20.103" starttime="20210121 14:50:19.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:20.103" starttime="20210121 14:50:20.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Not Found</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:20.104" starttime="20210121 14:50:20.103"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:20.104" critical="yes" starttime="20210121 14:50:19.011"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:50:20.105" starttime="20210121 14:50:16.537"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketlist.robot" id="s1-s11-s5" name="Bucketlist">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:20.118" level="INFO">${random} = 58026</msg>
<status status="PASS" endtime="20210121 14:50:20.118" starttime="20210121 14:50:20.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:20.119" level="INFO">${PREFIX} = 58026</msg>
<status status="PASS" endtime="20210121 14:50:20.119" starttime="20210121 14:50:20.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.119" starttime="20210121 14:50:20.117"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.119" starttime="20210121 14:50:20.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:20.122" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:20.124" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:20.124" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:20.124" starttime="20210121 14:50:20.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:20.127" starttime="20210121 14:50:20.126"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:20.130" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:20.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:20.276" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:20.276" starttime="20210121 14:50:20.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:20.282" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:20.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:20.690" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:20.690" starttime="20210121 14:50:20.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:20.691" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:20.691" starttime="20210121 14:50:20.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:20.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:20.691" starttime="20210121 14:50:20.691"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.692" starttime="20210121 14:50:20.279"></status>
</kw>
<msg timestamp="20210121 14:50:20.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:20.692" starttime="20210121 14:50:20.279"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.692" starttime="20210121 14:50:20.278"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.692" starttime="20210121 14:50:20.278"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.692" starttime="20210121 14:50:20.277"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.693" starttime="20210121 14:50:20.120"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:20.693" starttime="20210121 14:50:20.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:20.694" starttime="20210121 14:50:20.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:20.695" starttime="20210121 14:50:20.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:20.699" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:21.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:21.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:21.045" starttime="20210121 14:50:20.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.046" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:21.046" starttime="20210121 14:50:21.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:21.047" starttime="20210121 14:50:21.046"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.047" starttime="20210121 14:50:20.696"></status>
</kw>
<msg timestamp="20210121 14:50:21.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:21.047" starttime="20210121 14:50:20.696"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.048" starttime="20210121 14:50:20.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:21.051" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:21.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:21.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:21.430" starttime="20210121 14:50:21.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.431" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:21.432" starttime="20210121 14:50:21.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:21.432" starttime="20210121 14:50:21.432"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.433" starttime="20210121 14:50:21.049"></status>
</kw>
<msg timestamp="20210121 14:50:21.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:21.433" starttime="20210121 14:50:21.048"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.433" starttime="20210121 14:50:21.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:21.442" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:21.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:21.785" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:21.785" starttime="20210121 14:50:21.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.786" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:21.786" starttime="20210121 14:50:21.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:21.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:21.787" starttime="20210121 14:50:21.787"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.787" starttime="20210121 14:50:21.437"></status>
</kw>
<msg timestamp="20210121 14:50:21.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:21.788" starttime="20210121 14:50:21.436"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:21.788" starttime="20210121 14:50:21.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:21.791" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:22.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:22.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:22.151" starttime="20210121 14:50:21.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:22.152" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:22.152" starttime="20210121 14:50:22.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:22.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:22.152" starttime="20210121 14:50:22.152"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.153" starttime="20210121 14:50:21.789"></status>
</kw>
<msg timestamp="20210121 14:50:22.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:22.153" starttime="20210121 14:50:21.788"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.153" starttime="20210121 14:50:21.788"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.154" starttime="20210121 14:50:20.695"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.154" starttime="20210121 14:50:20.695"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.154" starttime="20210121 14:50:20.693"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.154" starttime="20210121 14:50:20.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:22.156" level="INFO">${postfix} = 11917</msg>
<status status="PASS" endtime="20210121 14:50:22.156" starttime="20210121 14:50:22.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:22.156" level="INFO">${bucket} = bucket-11917</msg>
<status status="PASS" endtime="20210121 14:50:22.157" starttime="20210121 14:50:22.156"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:22.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-11917 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:22.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:22.754" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-11917"
}</msg>
<status status="PASS" endtime="20210121 14:50:22.754" starttime="20210121 14:50:22.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:22.755" level="INFO">{
    "Location": "http://s3g:9878/bucket-11917"
}</msg>
<status status="PASS" endtime="20210121 14:50:22.756" starttime="20210121 14:50:22.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:22.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:22.756" starttime="20210121 14:50:22.756"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.757" starttime="20210121 14:50:22.158"></status>
</kw>
<msg timestamp="20210121 14:50:22.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:22.757" starttime="20210121 14:50:22.158"></status>
</kw>
<msg timestamp="20210121 14:50:22.757" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-11917"
}</msg>
<status status="PASS" endtime="20210121 14:50:22.757" starttime="20210121 14:50:22.158"></status>
</kw>
<msg timestamp="20210121 14:50:22.758" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-11917"
}</msg>
<status status="PASS" endtime="20210121 14:50:22.758" starttime="20210121 14:50:22.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:22.758" starttime="20210121 14:50:22.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:22.759" starttime="20210121 14:50:22.758"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.759" starttime="20210121 14:50:22.157"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.759" starttime="20210121 14:50:22.155"></status>
</kw>
<msg timestamp="20210121 14:50:22.760" level="INFO">${BUCKET} = bucket-11917</msg>
<status status="PASS" endtime="20210121 14:50:22.760" starttime="20210121 14:50:22.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:22.760" level="INFO">${BUCKET} = bucket-11917</msg>
<status status="PASS" endtime="20210121 14:50:22.760" starttime="20210121 14:50:22.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:22.761" starttime="20210121 14:50:22.761"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:22.761" starttime="20210121 14:50:20.116"></status>
</kw>
<test id="s1-s11-s5-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:22.767" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:23.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:23.259" level="INFO">${output} = bucket-11917
bucket-13281
bucket-25278
bucket-36444
bucket-55517
bucket-61440
bucket-66675
bucket-85638
destbucket-41047
link</msg>
<status status="PASS" endtime="20210121 14:50:23.259" starttime="20210121 14:50:22.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:23.261" level="INFO">bucket-11917
bucket-13281
bucket-25278
bucket-36444
bucket-55517
bucket-61440
bucket-66675
bucket-85638
destbucket-41047
link</msg>
<status status="PASS" endtime="20210121 14:50:23.261" starttime="20210121 14:50:23.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:23.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:23.261" starttime="20210121 14:50:23.261"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.262" starttime="20210121 14:50:22.764"></status>
</kw>
<msg timestamp="20210121 14:50:23.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:23.262" starttime="20210121 14:50:22.763"></status>
</kw>
<msg timestamp="20210121 14:50:23.262" level="INFO">${output} = bucket-11917
bucket-13281
bucket-25278
bucket-36444
bucket-55517
bucket-61440
bucket-66675
bucket-85638
destbucket-41047
link</msg>
<status status="PASS" endtime="20210121 14:50:23.262" starttime="20210121 14:50:22.763"></status>
</kw>
<msg timestamp="20210121 14:50:23.263" level="INFO">${result} = bucket-11917
bucket-13281
bucket-25278
bucket-36444
bucket-55517
bucket-61440
bucket-66675
bucket-85638
destbucket-41047
link</msg>
<status status="PASS" endtime="20210121 14:50:23.263" starttime="20210121 14:50:22.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:23.264" starttime="20210121 14:50:23.263"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:23.264" critical="yes" starttime="20210121 14:50:22.761"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:50:23.266" starttime="20210121 14:50:20.107"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/MultipartUpload.robot" id="s1-s11-s6" name="MultipartUpload">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:23.279" level="INFO">${random} = 62438</msg>
<status status="PASS" endtime="20210121 14:50:23.279" starttime="20210121 14:50:23.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:23.280" level="INFO">${PREFIX} = 62438</msg>
<status status="PASS" endtime="20210121 14:50:23.280" starttime="20210121 14:50:23.279"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.280" starttime="20210121 14:50:23.278"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.281" starttime="20210121 14:50:23.278"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:23.283" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:23.286" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:50:23.286" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:50:23.286" starttime="20210121 14:50:23.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:23.287" starttime="20210121 14:50:23.286"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:23.289" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:23.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:23.437" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:50:23.437" starttime="20210121 14:50:23.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:23.442" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:23.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:23.851" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:50:23.852" starttime="20210121 14:50:23.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:23.853" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:50:23.853" starttime="20210121 14:50:23.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:23.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:23.853" starttime="20210121 14:50:23.853"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.854" starttime="20210121 14:50:23.439"></status>
</kw>
<msg timestamp="20210121 14:50:23.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:23.854" starttime="20210121 14:50:23.439"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.854" starttime="20210121 14:50:23.439"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.854" starttime="20210121 14:50:23.438"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.854" starttime="20210121 14:50:23.438"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.855" starttime="20210121 14:50:23.281"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:23.855" starttime="20210121 14:50:23.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:23.856" starttime="20210121 14:50:23.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:23.857" starttime="20210121 14:50:23.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:23.861" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:24.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:24.224" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:24.224" starttime="20210121 14:50:23.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.225" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:24.225" starttime="20210121 14:50:24.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:24.226" starttime="20210121 14:50:24.226"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.227" starttime="20210121 14:50:23.858"></status>
</kw>
<msg timestamp="20210121 14:50:24.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:24.227" starttime="20210121 14:50:23.858"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.227" starttime="20210121 14:50:23.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:24.231" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:24.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:24.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:24.596" starttime="20210121 14:50:24.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.597" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:24.597" starttime="20210121 14:50:24.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:24.598" starttime="20210121 14:50:24.597"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.598" starttime="20210121 14:50:24.228"></status>
</kw>
<msg timestamp="20210121 14:50:24.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:24.598" starttime="20210121 14:50:24.228"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.599" starttime="20210121 14:50:24.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:24.602" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:24.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:24.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:24.960" starttime="20210121 14:50:24.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.963" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:24.963" starttime="20210121 14:50:24.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:24.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:24.963" starttime="20210121 14:50:24.963"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.964" starttime="20210121 14:50:24.599"></status>
</kw>
<msg timestamp="20210121 14:50:24.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:24.964" starttime="20210121 14:50:24.599"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:24.964" starttime="20210121 14:50:24.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:24.968" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:25.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:25.314" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:25.314" starttime="20210121 14:50:24.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.315" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:25.315" starttime="20210121 14:50:25.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:25.316" starttime="20210121 14:50:25.315"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.316" starttime="20210121 14:50:24.965"></status>
</kw>
<msg timestamp="20210121 14:50:25.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:25.316" starttime="20210121 14:50:24.965"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.317" starttime="20210121 14:50:24.964"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.317" starttime="20210121 14:50:23.857"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.317" starttime="20210121 14:50:23.857"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.318" starttime="20210121 14:50:23.855"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.318" starttime="20210121 14:50:23.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:50:25.320" level="INFO">${postfix} = 96159</msg>
<status status="PASS" endtime="20210121 14:50:25.321" starttime="20210121 14:50:25.319"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:50:25.323" level="INFO">${bucket} = bucket-96159</msg>
<status status="PASS" endtime="20210121 14:50:25.323" starttime="20210121 14:50:25.322"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:25.328" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-96159 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:25.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:25.948" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-96159"
}</msg>
<status status="PASS" endtime="20210121 14:50:25.949" starttime="20210121 14:50:25.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.950" level="INFO">{
    "Location": "http://s3g:9878/bucket-96159"
}</msg>
<status status="PASS" endtime="20210121 14:50:25.950" starttime="20210121 14:50:25.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:25.951" starttime="20210121 14:50:25.950"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.951" starttime="20210121 14:50:25.325"></status>
</kw>
<msg timestamp="20210121 14:50:25.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:25.952" starttime="20210121 14:50:25.325"></status>
</kw>
<msg timestamp="20210121 14:50:25.952" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-96159"
}</msg>
<status status="PASS" endtime="20210121 14:50:25.952" starttime="20210121 14:50:25.324"></status>
</kw>
<msg timestamp="20210121 14:50:25.952" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-96159"
}</msg>
<status status="PASS" endtime="20210121 14:50:25.952" starttime="20210121 14:50:25.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:25.953" starttime="20210121 14:50:25.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:25.953" starttime="20210121 14:50:25.953"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.954" starttime="20210121 14:50:25.323"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.954" starttime="20210121 14:50:25.319"></status>
</kw>
<msg timestamp="20210121 14:50:25.954" level="INFO">${BUCKET} = bucket-96159</msg>
<status status="PASS" endtime="20210121 14:50:25.954" starttime="20210121 14:50:25.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.955" level="INFO">${BUCKET} = bucket-96159</msg>
<status status="PASS" endtime="20210121 14:50:25.955" starttime="20210121 14:50:25.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:25.955" starttime="20210121 14:50:25.955"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.955" starttime="20210121 14:50:23.277"></status>
</kw>
<test id="s1-s11-s6-t1" name="Test Multipart Upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:25.958" level="INFO">${random} = 52052</msg>
<status status="PASS" endtime="20210121 14:50:25.958" starttime="20210121 14:50:25.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:25.958" level="INFO">${PREFIX} = 52052</msg>
<status status="PASS" endtime="20210121 14:50:25.958" starttime="20210121 14:50:25.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:25.959" starttime="20210121 14:50:25.957"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:25.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 52052/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:26.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:26.484" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:26.484" starttime="20210121 14:50:25.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:26.485" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:26.485" starttime="20210121 14:50:26.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:26.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:26.486" starttime="20210121 14:50:26.485"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:26.486" starttime="20210121 14:50:25.961"></status>
</kw>
<msg timestamp="20210121 14:50:26.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:26.487" starttime="20210121 14:50:25.960"></status>
</kw>
<msg timestamp="20210121 14:50:26.487" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:26.487" starttime="20210121 14:50:25.959"></status>
</kw>
<msg timestamp="20210121 14:50:26.487" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:26.487" starttime="20210121 14:50:25.959"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:26.491" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001", 
    "Key": "52052/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:26.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:26.540" level="INFO">${output} = a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001</msg>
<status status="PASS" endtime="20210121 14:50:26.540" starttime="20210121 14:50:26.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:26.542" level="INFO">a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001</msg>
<status status="PASS" endtime="20210121 14:50:26.542" starttime="20210121 14:50:26.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:26.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:26.543" starttime="20210121 14:50:26.542"></status>
</kw>
<msg timestamp="20210121 14:50:26.543" level="INFO">${uploadID} = a455b573-bb15-4354-8dae-f88ffafef966-105594265694241001</msg>
<status status="PASS" endtime="20210121 14:50:26.543" starttime="20210121 14:50:26.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:26.544" starttime="20210121 14:50:26.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:26.544" starttime="20210121 14:50:26.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:26.545" starttime="20210121 14:50:26.544"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:26.550" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 52052/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:27.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:27.027" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:27.027" starttime="20210121 14:50:26.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.029" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:27.029" starttime="20210121 14:50:27.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:27.029" starttime="20210121 14:50:27.029"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:27.030" starttime="20210121 14:50:26.547"></status>
</kw>
<msg timestamp="20210121 14:50:27.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:27.030" starttime="20210121 14:50:26.546"></status>
</kw>
<msg timestamp="20210121 14:50:27.030" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:27.030" starttime="20210121 14:50:26.546"></status>
</kw>
<msg timestamp="20210121 14:50:27.031" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050", 
    "Key": "52052/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:50:27.031" starttime="20210121 14:50:26.545"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${nextUploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:27.034" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050", 
    "Key": "52052/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:27.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:27.080" level="INFO">${output} = 42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050</msg>
<status status="PASS" endtime="20210121 14:50:27.080" starttime="20210121 14:50:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.081" level="INFO">42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050</msg>
<status status="PASS" endtime="20210121 14:50:27.081" starttime="20210121 14:50:27.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:27.082" starttime="20210121 14:50:27.081"></status>
</kw>
<msg timestamp="20210121 14:50:27.082" level="INFO">${nextUploadID} = 42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050</msg>
<status status="PASS" endtime="20210121 14:50:27.082" starttime="20210121 14:50:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:27.083" starttime="20210121 14:50:27.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:27.083" starttime="20210121 14:50:27.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:27.084" starttime="20210121 14:50:27.084"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:27.085" starttime="20210121 14:50:27.084"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:27.090" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:27.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:27.131" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0365459 s, 143 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:27.131" starttime="20210121 14:50:27.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.132" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0365459 s, 143 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:27.132" starttime="20210121 14:50:27.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:27.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:27.133" starttime="20210121 14:50:27.133"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:27.134" starttime="20210121 14:50:27.087"></status>
</kw>
<msg timestamp="20210121 14:50:27.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:27.134" starttime="20210121 14:50:27.087"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:27.134" starttime="20210121 14:50:27.086"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:27.134" starttime="20210121 14:50:27.085"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:27.135" starttime="20210121 14:50:27.085"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:27.139" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 52052/multipartKey --part-number 1 --body /tmp/part1 --upload-id 42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:28.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:28.015" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265771180267"
}</msg>
<status status="PASS" endtime="20210121 14:50:28.015" starttime="20210121 14:50:27.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:28.020" level="INFO">{
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265771180267"
}</msg>
<status status="PASS" endtime="20210121 14:50:28.021" starttime="20210121 14:50:28.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:28.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:28.021" starttime="20210121 14:50:28.021"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:28.022" starttime="20210121 14:50:27.136"></status>
</kw>
<msg timestamp="20210121 14:50:28.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:28.022" starttime="20210121 14:50:27.136"></status>
</kw>
<msg timestamp="20210121 14:50:28.022" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265771180267"
}</msg>
<status status="PASS" endtime="20210121 14:50:28.022" starttime="20210121 14:50:27.135"></status>
</kw>
<msg timestamp="20210121 14:50:28.023" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265771180267"
}</msg>
<status status="PASS" endtime="20210121 14:50:28.023" starttime="20210121 14:50:27.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:28.023" starttime="20210121 14:50:28.023"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:28.033" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:28.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:28.068" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0357435 s, 147 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:28.068" starttime="20210121 14:50:28.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:28.070" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0357435 s, 147 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:28.070" starttime="20210121 14:50:28.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:28.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:28.072" starttime="20210121 14:50:28.070"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:28.072" starttime="20210121 14:50:28.025"></status>
</kw>
<msg timestamp="20210121 14:50:28.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:28.072" starttime="20210121 14:50:28.025"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:28.072" starttime="20210121 14:50:28.024"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:28.073" starttime="20210121 14:50:28.024"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:28.073" starttime="20210121 14:50:28.024"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:28.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 52052/multipartKey --part-number 1 --body /tmp/part1 --upload-id 42a670d4-8917-453d-b478-6f31d706e1af-105594265729827050 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:31.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:31.349" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265834029292"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.349" starttime="20210121 14:50:28.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.350" level="INFO">{
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265834029292"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.350" starttime="20210121 14:50:31.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:31.351" starttime="20210121 14:50:31.350"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.351" starttime="20210121 14:50:28.075"></status>
</kw>
<msg timestamp="20210121 14:50:31.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:31.351" starttime="20210121 14:50:28.074"></status>
</kw>
<msg timestamp="20210121 14:50:31.352" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265834029292"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.352" starttime="20210121 14:50:28.074"></status>
</kw>
<msg timestamp="20210121 14:50:31.352" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/52052/multipartKey105594265834029292"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.352" starttime="20210121 14:50:28.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:31.352" starttime="20210121 14:50:31.352"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:31.353" critical="yes" starttime="20210121 14:50:25.956"></status>
</test>
<test id="s1-s11-s6-t2" name="Test Multipart Upload Complete">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:31.356" level="INFO">${random} = 05485</msg>
<status status="PASS" endtime="20210121 14:50:31.356" starttime="20210121 14:50:31.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.356" level="INFO">${PREFIX} = 05485</msg>
<status status="PASS" endtime="20210121 14:50:31.356" starttime="20210121 14:50:31.356"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.356" starttime="20210121 14:50:31.355"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:31.364" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 05485/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:31.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:31.848" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.848" starttime="20210121 14:50:31.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.850" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.850" starttime="20210121 14:50:31.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:31.850" starttime="20210121 14:50:31.850"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.851" starttime="20210121 14:50:31.358"></status>
</kw>
<msg timestamp="20210121 14:50:31.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:31.851" starttime="20210121 14:50:31.358"></status>
</kw>
<msg timestamp="20210121 14:50:31.851" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.851" starttime="20210121 14:50:31.357"></status>
</kw>
<msg timestamp="20210121 14:50:31.852" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:31.852" starttime="20210121 14:50:31.357"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:31.855" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253", 
    "Key": "05485/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:31.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:31.899" level="INFO">${output} = 4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253</msg>
<status status="PASS" endtime="20210121 14:50:31.899" starttime="20210121 14:50:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.900" level="INFO">4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253</msg>
<status status="PASS" endtime="20210121 14:50:31.900" starttime="20210121 14:50:31.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:31.901" starttime="20210121 14:50:31.901"></status>
</kw>
<msg timestamp="20210121 14:50:31.901" level="INFO">${uploadID} = 4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253</msg>
<status status="PASS" endtime="20210121 14:50:31.902" starttime="20210121 14:50:31.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:31.902" starttime="20210121 14:50:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:31.903" starttime="20210121 14:50:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:31.903" starttime="20210121 14:50:31.903"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:31.908" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:31.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:31.945" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0333929 s, 157 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:31.945" starttime="20210121 14:50:31.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.947" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0333929 s, 157 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:31.947" starttime="20210121 14:50:31.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:31.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:31.948" starttime="20210121 14:50:31.947"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.948" starttime="20210121 14:50:31.906"></status>
</kw>
<msg timestamp="20210121 14:50:31.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:31.948" starttime="20210121 14:50:31.905"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.948" starttime="20210121 14:50:31.905"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.949" starttime="20210121 14:50:31.904"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:31.949" starttime="20210121 14:50:31.903"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:31.953" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 05485/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:32.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:32.772" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266087457006"
}</msg>
<status status="PASS" endtime="20210121 14:50:32.772" starttime="20210121 14:50:31.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.773" level="INFO">{
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266087457006"
}</msg>
<status status="PASS" endtime="20210121 14:50:32.773" starttime="20210121 14:50:32.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:32.774" starttime="20210121 14:50:32.773"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:32.774" starttime="20210121 14:50:31.950"></status>
</kw>
<msg timestamp="20210121 14:50:32.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:32.774" starttime="20210121 14:50:31.950"></status>
</kw>
<msg timestamp="20210121 14:50:32.775" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266087457006"
}</msg>
<status status="PASS" endtime="20210121 14:50:32.775" starttime="20210121 14:50:31.949"></status>
</kw>
<msg timestamp="20210121 14:50:32.775" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266087457006"
}</msg>
<status status="PASS" endtime="20210121 14:50:32.775" starttime="20210121 14:50:31.949"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:32.778" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266087457006"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:32.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:32.824" level="INFO">${output} = /s3v/bucket-96159/05485/multipartKey1105594266087457006</msg>
<status status="PASS" endtime="20210121 14:50:32.824" starttime="20210121 14:50:32.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.825" level="INFO">/s3v/bucket-96159/05485/multipartKey1105594266087457006</msg>
<status status="PASS" endtime="20210121 14:50:32.826" starttime="20210121 14:50:32.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:32.826" starttime="20210121 14:50:32.826"></status>
</kw>
<msg timestamp="20210121 14:50:32.827" level="INFO">${eTag1} = /s3v/bucket-96159/05485/multipartKey1105594266087457006</msg>
<status status="PASS" endtime="20210121 14:50:32.827" starttime="20210121 14:50:32.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:32.827" starttime="20210121 14:50:32.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:32.831" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:50:32.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:32.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:32.833" starttime="20210121 14:50:32.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.834" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:32.834" starttime="20210121 14:50:32.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:32.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:32.835" starttime="20210121 14:50:32.834"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:32.835" starttime="20210121 14:50:32.828"></status>
</kw>
<msg timestamp="20210121 14:50:32.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:32.836" starttime="20210121 14:50:32.828"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:32.836" starttime="20210121 14:50:32.827"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:32.840" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 05485/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:33.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:33.512" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266142638319"
}</msg>
<status status="PASS" endtime="20210121 14:50:33.512" starttime="20210121 14:50:32.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:33.513" level="INFO">{
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266142638319"
}</msg>
<status status="PASS" endtime="20210121 14:50:33.513" starttime="20210121 14:50:33.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:33.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:33.514" starttime="20210121 14:50:33.514"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:33.515" starttime="20210121 14:50:32.838"></status>
</kw>
<msg timestamp="20210121 14:50:33.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:33.515" starttime="20210121 14:50:32.837"></status>
</kw>
<msg timestamp="20210121 14:50:33.516" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266142638319"
}</msg>
<status status="PASS" endtime="20210121 14:50:33.516" starttime="20210121 14:50:32.837"></status>
</kw>
<msg timestamp="20210121 14:50:33.517" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266142638319"
}</msg>
<status status="PASS" endtime="20210121 14:50:33.517" starttime="20210121 14:50:32.836"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:33.521" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/05485/multipartKey1105594266142638319"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:33.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:33.567" level="INFO">${output} = /s3v/bucket-96159/05485/multipartKey1105594266142638319</msg>
<status status="PASS" endtime="20210121 14:50:33.567" starttime="20210121 14:50:33.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:33.568" level="INFO">/s3v/bucket-96159/05485/multipartKey1105594266142638319</msg>
<status status="PASS" endtime="20210121 14:50:33.568" starttime="20210121 14:50:33.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:33.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:33.569" starttime="20210121 14:50:33.568"></status>
</kw>
<msg timestamp="20210121 14:50:33.569" level="INFO">${eTag2} = /s3v/bucket-96159/05485/multipartKey1105594266142638319</msg>
<status status="PASS" endtime="20210121 14:50:33.569" starttime="20210121 14:50:33.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:33.570" starttime="20210121 14:50:33.570"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:33.575" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4bd8c732-f4c9-4bbb-af66-163af7feb30b-105594266046038253 --bucket bucket-96159 --key 05485/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/05485/multipartKey1105594266087457006,PartNumber=1},{ETag=/s3v/bucket-96159/05485/multipartKey1105594266142638319,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:34.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:34.081" level="INFO">${output} = {
    "ETag": "15ade9a5ca12d4ed65fac6d0ef594306a3dd9eeb3573e923e89aac7640005d55", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:34.081" starttime="20210121 14:50:33.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.083" level="INFO">{
    "ETag": "15ade9a5ca12d4ed65fac6d0ef594306a3dd9eeb3573e923e89aac7640005d55", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:34.083" starttime="20210121 14:50:34.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:34.084" starttime="20210121 14:50:34.083"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.085" starttime="20210121 14:50:33.572"></status>
</kw>
<msg timestamp="20210121 14:50:34.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:34.085" starttime="20210121 14:50:33.572"></status>
</kw>
<msg timestamp="20210121 14:50:34.085" level="INFO">${output} = {
    "ETag": "15ade9a5ca12d4ed65fac6d0ef594306a3dd9eeb3573e923e89aac7640005d55", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:34.085" starttime="20210121 14:50:33.571"></status>
</kw>
<msg timestamp="20210121 14:50:34.086" level="INFO">${result} = {
    "ETag": "15ade9a5ca12d4ed65fac6d0ef594306a3dd9eeb3573e923e89aac7640005d55", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "05485/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:50:34.086" starttime="20210121 14:50:33.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:34.086" starttime="20210121 14:50:34.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:34.087" starttime="20210121 14:50:34.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:34.087" starttime="20210121 14:50:34.087"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:34.092" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-96159 --key 05485/multipartKey1 /tmp/05485-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:34.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:34.714" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:34.714" starttime="20210121 14:50:34.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.715" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14:50:34 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:50:34.716" starttime="20210121 14:50:34.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:34.716" starttime="20210121 14:50:34.716"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.717" starttime="20210121 14:50:34.090"></status>
</kw>
<msg timestamp="20210121 14:50:34.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:34.717" starttime="20210121 14:50:34.089"></status>
</kw>
<msg timestamp="20210121 14:50:34.717" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:34.717" starttime="20210121 14:50:34.088"></status>
</kw>
<msg timestamp="20210121 14:50:34.718" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:34 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:34.718" starttime="20210121 14:50:34.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:34.722" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/05485-multipartKey1'.</msg>
<msg timestamp="20210121 14:50:34.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:34.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:34.730" starttime="20210121 14:50:34.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.731" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:34.731" starttime="20210121 14:50:34.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:34.732" starttime="20210121 14:50:34.731"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.732" starttime="20210121 14:50:34.719"></status>
</kw>
<msg timestamp="20210121 14:50:34.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:34.732" starttime="20210121 14:50:34.719"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.733" starttime="20210121 14:50:34.718"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:34.738" level="INFO">Running command 'md5sum /tmp/05485-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:34.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:34.752" level="INFO">${output} = 3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.752" starttime="20210121 14:50:34.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.753" level="INFO">3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.754" starttime="20210121 14:50:34.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:34.754" starttime="20210121 14:50:34.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.755" starttime="20210121 14:50:34.734"></status>
</kw>
<msg timestamp="20210121 14:50:34.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:34.755" starttime="20210121 14:50:34.734"></status>
</kw>
<msg timestamp="20210121 14:50:34.755" level="INFO">${checksumbefore} = 3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.755" starttime="20210121 14:50:34.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:34.759" level="INFO">Running command 'md5sum /tmp/05485-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:34.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:34.775" level="INFO">${output} = 3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.775" starttime="20210121 14:50:34.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.777" level="INFO">3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.777" starttime="20210121 14:50:34.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:34.778" starttime="20210121 14:50:34.777"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.778" starttime="20210121 14:50:34.756"></status>
</kw>
<msg timestamp="20210121 14:50:34.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:34.778" starttime="20210121 14:50:34.756"></status>
</kw>
<msg timestamp="20210121 14:50:34.778" level="INFO">${checksumafter} = 3caf3646afefec75b57dc8214dc7b6f2</msg>
<status status="PASS" endtime="20210121 14:50:34.778" starttime="20210121 14:50:34.755"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:34.780" starttime="20210121 14:50:34.779"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.780" starttime="20210121 14:50:34.733"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:34.784" critical="yes" starttime="20210121 14:50:31.354"></status>
</test>
<test id="s1-s11-s6-t3" name="Test Multipart Upload Complete Entity too small">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:34.790" level="INFO">${random} = 30291</msg>
<status status="PASS" endtime="20210121 14:50:34.790" starttime="20210121 14:50:34.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:34.791" level="INFO">${PREFIX} = 30291</msg>
<status status="PASS" endtime="20210121 14:50:34.791" starttime="20210121 14:50:34.790"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:34.791" starttime="20210121 14:50:34.788"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:34.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 30291/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:35.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:35.271" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984", 
    "Key": "30291/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:50:35.271" starttime="20210121 14:50:34.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.272" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984", 
    "Key": "30291/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:50:35.272" starttime="20210121 14:50:35.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:35.273" starttime="20210121 14:50:35.272"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:35.273" starttime="20210121 14:50:34.793"></status>
</kw>
<msg timestamp="20210121 14:50:35.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:35.274" starttime="20210121 14:50:34.793"></status>
</kw>
<msg timestamp="20210121 14:50:35.274" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984", 
    "Key": "30291/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:50:35.274" starttime="20210121 14:50:34.792"></status>
</kw>
<msg timestamp="20210121 14:50:35.274" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984", 
    "Key": "30291/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:50:35.274" starttime="20210121 14:50:34.791"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:35.277" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984", 
    "Key": "30291/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:35.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:35.322" level="INFO">${output} = a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984</msg>
<status status="PASS" endtime="20210121 14:50:35.322" starttime="20210121 14:50:35.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.323" level="INFO">a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984</msg>
<status status="PASS" endtime="20210121 14:50:35.324" starttime="20210121 14:50:35.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:35.324" starttime="20210121 14:50:35.324"></status>
</kw>
<msg timestamp="20210121 14:50:35.325" level="INFO">${uploadID} = a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984</msg>
<status status="PASS" endtime="20210121 14:50:35.325" starttime="20210121 14:50:35.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:35.325" starttime="20210121 14:50:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:35.326" starttime="20210121 14:50:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:35.326" starttime="20210121 14:50:35.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part1" &gt; /tmp/part1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:35.331" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210121 14:50:35.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:35.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:35.335" starttime="20210121 14:50:35.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.337" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:35.337" starttime="20210121 14:50:35.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:35.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:35.338" starttime="20210121 14:50:35.337"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:35.338" starttime="20210121 14:50:35.328"></status>
</kw>
<msg timestamp="20210121 14:50:35.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:35.339" starttime="20210121 14:50:35.327"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:35.339" starttime="20210121 14:50:35.327"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:35.344" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 30291/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:36.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:36.014" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266307395825"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.014" starttime="20210121 14:50:35.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.016" level="INFO">{
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266307395825"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.016" starttime="20210121 14:50:36.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:36.017" starttime="20210121 14:50:36.017"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:36.018" starttime="20210121 14:50:35.341"></status>
</kw>
<msg timestamp="20210121 14:50:36.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:36.018" starttime="20210121 14:50:35.340"></status>
</kw>
<msg timestamp="20210121 14:50:36.018" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266307395825"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.018" starttime="20210121 14:50:35.340"></status>
</kw>
<msg timestamp="20210121 14:50:36.019" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266307395825"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.019" starttime="20210121 14:50:35.339"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:36.022" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266307395825"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:36.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:36.069" level="INFO">${output} = /s3v/bucket-96159/30291/multipartKey2105594266307395825</msg>
<status status="PASS" endtime="20210121 14:50:36.069" starttime="20210121 14:50:36.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.070" level="INFO">/s3v/bucket-96159/30291/multipartKey2105594266307395825</msg>
<status status="PASS" endtime="20210121 14:50:36.070" starttime="20210121 14:50:36.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:36.071" starttime="20210121 14:50:36.070"></status>
</kw>
<msg timestamp="20210121 14:50:36.071" level="INFO">${eTag1} = /s3v/bucket-96159/30291/multipartKey2105594266307395825</msg>
<status status="PASS" endtime="20210121 14:50:36.071" starttime="20210121 14:50:36.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:36.072" starttime="20210121 14:50:36.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:36.076" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:50:36.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:36.077" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:36.077" starttime="20210121 14:50:36.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.078" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:36.079" starttime="20210121 14:50:36.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:36.079" starttime="20210121 14:50:36.079"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:36.080" starttime="20210121 14:50:36.073"></status>
</kw>
<msg timestamp="20210121 14:50:36.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:36.080" starttime="20210121 14:50:36.073"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:36.080" starttime="20210121 14:50:36.072"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:36.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 30291/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:36.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:36.762" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266357137650"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.762" starttime="20210121 14:50:36.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.763" level="INFO">{
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266357137650"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.763" starttime="20210121 14:50:36.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:36.764" starttime="20210121 14:50:36.763"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:36.764" starttime="20210121 14:50:36.082"></status>
</kw>
<msg timestamp="20210121 14:50:36.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:36.765" starttime="20210121 14:50:36.082"></status>
</kw>
<msg timestamp="20210121 14:50:36.765" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266357137650"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.765" starttime="20210121 14:50:36.081"></status>
</kw>
<msg timestamp="20210121 14:50:36.766" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266357137650"
}</msg>
<status status="PASS" endtime="20210121 14:50:36.766" starttime="20210121 14:50:36.080"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:36.769" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/30291/multipartKey2105594266357137650"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:36.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:36.813" level="INFO">${output} = /s3v/bucket-96159/30291/multipartKey2105594266357137650</msg>
<status status="PASS" endtime="20210121 14:50:36.814" starttime="20210121 14:50:36.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.815" level="INFO">/s3v/bucket-96159/30291/multipartKey2105594266357137650</msg>
<status status="PASS" endtime="20210121 14:50:36.815" starttime="20210121 14:50:36.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:36.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:36.816" starttime="20210121 14:50:36.815"></status>
</kw>
<msg timestamp="20210121 14:50:36.816" level="INFO">${eTag2} = /s3v/bucket-96159/30291/multipartKey2105594266357137650</msg>
<status status="PASS" endtime="20210121 14:50:36.816" starttime="20210121 14:50:36.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:36.817" starttime="20210121 14:50:36.816"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:36.830" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id a6e2bc33-364a-4acf-bbc3-d7891cfc2fa2-105594266270367984 --bucket bucket-96159 --key 30291/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/30291/multipartKey2105594266307395825,PartNumber=1},{ETag=/s3v/bucket-96159/30291/multipartKey2105594266357137650,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:37.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:37.340" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:50:37.340" starttime="20210121 14:50:36.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.342" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" endtime="20210121 14:50:37.342" starttime="20210121 14:50:37.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:37.343" starttime="20210121 14:50:37.342"></status>
</kw>
<msg timestamp="20210121 14:50:37.343" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:50:37.343" starttime="20210121 14:50:36.818"></status>
</kw>
<msg timestamp="20210121 14:50:37.343" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:50:37.344" starttime="20210121 14:50:36.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:37.344" starttime="20210121 14:50:37.344"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:37.344" critical="yes" starttime="20210121 14:50:34.787"></status>
</test>
<test id="s1-s11-s6-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:37.347" level="INFO">${random} = 73137</msg>
<status status="PASS" endtime="20210121 14:50:37.347" starttime="20210121 14:50:37.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.348" level="INFO">${PREFIX} = 73137</msg>
<status status="PASS" endtime="20210121 14:50:37.348" starttime="20210121 14:50:37.347"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:37.348" starttime="20210121 14:50:37.346"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:37.353" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 73137/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:37.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:37.848" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:37.849" starttime="20210121 14:50:37.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.850" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:37.850" starttime="20210121 14:50:37.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:37.851" starttime="20210121 14:50:37.850"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:37.851" starttime="20210121 14:50:37.350"></status>
</kw>
<msg timestamp="20210121 14:50:37.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:37.851" starttime="20210121 14:50:37.350"></status>
</kw>
<msg timestamp="20210121 14:50:37.851" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:37.851" starttime="20210121 14:50:37.349"></status>
</kw>
<msg timestamp="20210121 14:50:37.852" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:37.852" starttime="20210121 14:50:37.348"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:37.855" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651", 
    "Key": "73137/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:37.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:37.899" level="INFO">${output} = d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651</msg>
<status status="PASS" endtime="20210121 14:50:37.900" starttime="20210121 14:50:37.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.901" level="INFO">d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651</msg>
<status status="PASS" endtime="20210121 14:50:37.901" starttime="20210121 14:50:37.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:37.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:37.901" starttime="20210121 14:50:37.901"></status>
</kw>
<msg timestamp="20210121 14:50:37.902" level="INFO">${uploadID} = d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651</msg>
<status status="PASS" endtime="20210121 14:50:37.902" starttime="20210121 14:50:37.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:37.902" starttime="20210121 14:50:37.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:37.903" starttime="20210121 14:50:37.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:37.904" starttime="20210121 14:50:37.904"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:37.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:38.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:38.424" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.424" starttime="20210121 14:50:37.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.425" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:50:38.425" starttime="20210121 14:50:38.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:38.426" starttime="20210121 14:50:38.426"></status>
</kw>
<msg timestamp="20210121 14:50:38.426" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.427" starttime="20210121 14:50:37.905"></status>
</kw>
<msg timestamp="20210121 14:50:38.427" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.427" starttime="20210121 14:50:37.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:38.427" starttime="20210121 14:50:38.427"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:38.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:38.929" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:38.929" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.929" starttime="20210121 14:50:38.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.930" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:50:38.930" starttime="20210121 14:50:38.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:38.931" starttime="20210121 14:50:38.930"></status>
</kw>
<msg timestamp="20210121 14:50:38.931" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.931" starttime="20210121 14:50:38.429"></status>
</kw>
<msg timestamp="20210121 14:50:38.932" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:38.932" starttime="20210121 14:50:38.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:38.932" starttime="20210121 14:50:38.932"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:38.938" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:38.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:38.975" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0332769 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:38.975" starttime="20210121 14:50:38.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.976" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0332769 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:38.976" starttime="20210121 14:50:38.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:38.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:38.977" starttime="20210121 14:50:38.976"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:38.977" starttime="20210121 14:50:38.935"></status>
</kw>
<msg timestamp="20210121 14:50:38.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:38.978" starttime="20210121 14:50:38.934"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:38.978" starttime="20210121 14:50:38.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:38.978" starttime="20210121 14:50:38.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:38.978" starttime="20210121 14:50:38.933"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:38.986" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 73137/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:39.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:39.803" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266547912948"
}</msg>
<status status="PASS" endtime="20210121 14:50:39.803" starttime="20210121 14:50:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:39.805" level="INFO">{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266547912948"
}</msg>
<status status="PASS" endtime="20210121 14:50:39.805" starttime="20210121 14:50:39.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:39.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:39.806" starttime="20210121 14:50:39.805"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:39.806" starttime="20210121 14:50:38.980"></status>
</kw>
<msg timestamp="20210121 14:50:39.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:39.806" starttime="20210121 14:50:38.980"></status>
</kw>
<msg timestamp="20210121 14:50:39.807" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266547912948"
}</msg>
<status status="PASS" endtime="20210121 14:50:39.807" starttime="20210121 14:50:38.979"></status>
</kw>
<msg timestamp="20210121 14:50:39.807" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266547912948"
}</msg>
<status status="PASS" endtime="20210121 14:50:39.807" starttime="20210121 14:50:38.978"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:39.811" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266547912948"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:39.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:39.856" level="INFO">${output} = /s3v/bucket-96159/73137/multipartKey3105594266547912948</msg>
<status status="PASS" endtime="20210121 14:50:39.856" starttime="20210121 14:50:39.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:39.857" level="INFO">/s3v/bucket-96159/73137/multipartKey3105594266547912948</msg>
<status status="PASS" endtime="20210121 14:50:39.857" starttime="20210121 14:50:39.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:39.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:39.858" starttime="20210121 14:50:39.858"></status>
</kw>
<msg timestamp="20210121 14:50:39.858" level="INFO">${eTag1} = /s3v/bucket-96159/73137/multipartKey3105594266547912948</msg>
<status status="PASS" endtime="20210121 14:50:39.859" starttime="20210121 14:50:39.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:39.859" starttime="20210121 14:50:39.859"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:39.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 73137/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:43.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:43.104" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266604011765"
}</msg>
<status status="PASS" endtime="20210121 14:50:43.104" starttime="20210121 14:50:39.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.105" level="INFO">{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266604011765"
}</msg>
<status status="PASS" endtime="20210121 14:50:43.105" starttime="20210121 14:50:43.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:43.106" starttime="20210121 14:50:43.105"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:43.106" starttime="20210121 14:50:39.861"></status>
</kw>
<msg timestamp="20210121 14:50:43.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:43.106" starttime="20210121 14:50:39.861"></status>
</kw>
<msg timestamp="20210121 14:50:43.107" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266604011765"
}</msg>
<status status="PASS" endtime="20210121 14:50:43.107" starttime="20210121 14:50:39.860"></status>
</kw>
<msg timestamp="20210121 14:50:43.107" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266604011765"
}</msg>
<status status="PASS" endtime="20210121 14:50:43.107" starttime="20210121 14:50:39.859"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:43.111" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266604011765"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:43.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:43.155" level="INFO">${output} = /s3v/bucket-96159/73137/multipartKey3105594266604011765</msg>
<status status="PASS" endtime="20210121 14:50:43.156" starttime="20210121 14:50:43.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.157" level="INFO">/s3v/bucket-96159/73137/multipartKey3105594266604011765</msg>
<status status="PASS" endtime="20210121 14:50:43.157" starttime="20210121 14:50:43.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:43.158" starttime="20210121 14:50:43.158"></status>
</kw>
<msg timestamp="20210121 14:50:43.159" level="INFO">${eTag2} = /s3v/bucket-96159/73137/multipartKey3105594266604011765</msg>
<status status="PASS" endtime="20210121 14:50:43.159" starttime="20210121 14:50:43.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:43.159" starttime="20210121 14:50:43.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part3" &gt; /tmp/part3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:43.163" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20210121 14:50:43.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:43.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:43.165" starttime="20210121 14:50:43.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.166" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:43.166" starttime="20210121 14:50:43.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:43.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:43.167" starttime="20210121 14:50:43.166"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:43.167" starttime="20210121 14:50:43.160"></status>
</kw>
<msg timestamp="20210121 14:50:43.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:43.168" starttime="20210121 14:50:43.160"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:43.168" starttime="20210121 14:50:43.159"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:43.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 73137/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:46.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:46.195" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266818511094"
}</msg>
<status status="PASS" endtime="20210121 14:50:46.195" starttime="20210121 14:50:43.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.196" level="INFO">{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266818511094"
}</msg>
<status status="PASS" endtime="20210121 14:50:46.196" starttime="20210121 14:50:46.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:46.197" starttime="20210121 14:50:46.196"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:46.197" starttime="20210121 14:50:43.170"></status>
</kw>
<msg timestamp="20210121 14:50:46.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:46.198" starttime="20210121 14:50:43.169"></status>
</kw>
<msg timestamp="20210121 14:50:46.198" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266818511094"
}</msg>
<status status="PASS" endtime="20210121 14:50:46.198" starttime="20210121 14:50:43.169"></status>
</kw>
<msg timestamp="20210121 14:50:46.198" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266818511094"
}</msg>
<status status="PASS" endtime="20210121 14:50:46.198" starttime="20210121 14:50:43.168"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag3}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:46.201" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/73137/multipartKey3105594266818511094"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:46.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:46.256" level="INFO">${output} = /s3v/bucket-96159/73137/multipartKey3105594266818511094</msg>
<status status="PASS" endtime="20210121 14:50:46.256" starttime="20210121 14:50:46.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.257" level="INFO">/s3v/bucket-96159/73137/multipartKey3105594266818511094</msg>
<status status="PASS" endtime="20210121 14:50:46.257" starttime="20210121 14:50:46.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:46.258" starttime="20210121 14:50:46.257"></status>
</kw>
<msg timestamp="20210121 14:50:46.258" level="INFO">${eTag3} = /s3v/bucket-96159/73137/multipartKey3105594266818511094</msg>
<status status="PASS" endtime="20210121 14:50:46.258" starttime="20210121 14:50:46.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:46.259" starttime="20210121 14:50:46.258"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:46.263" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:46.763" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:46.764" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:46.764" starttime="20210121 14:50:46.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.765" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:50:46.765" starttime="20210121 14:50:46.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:46.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:46.766" starttime="20210121 14:50:46.765"></status>
</kw>
<msg timestamp="20210121 14:50:46.767" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:46.767" starttime="20210121 14:50:46.260"></status>
</kw>
<msg timestamp="20210121 14:50:46.767" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:46.767" starttime="20210121 14:50:46.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:46.768" starttime="20210121 14:50:46.767"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:46.772" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/73137/multipartKey3105594266547912948,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:47.276" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:47.276" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:47.276" starttime="20210121 14:50:46.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:47.277" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:50:47.277" starttime="20210121 14:50:47.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:47.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:47.278" starttime="20210121 14:50:47.278"></status>
</kw>
<msg timestamp="20210121 14:50:47.279" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:47.279" starttime="20210121 14:50:46.769"></status>
</kw>
<msg timestamp="20210121 14:50:47.279" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:50:47.279" starttime="20210121 14:50:46.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:47.280" starttime="20210121 14:50:47.279"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:47.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/73137/multipartKey3105594266547912948,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:47.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:47.843" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:50:47.843" starttime="20210121 14:50:47.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:47.844" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:50:47.844" starttime="20210121 14:50:47.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:47.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:47.845" starttime="20210121 14:50:47.844"></status>
</kw>
<msg timestamp="20210121 14:50:47.845" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:50:47.845" starttime="20210121 14:50:47.281"></status>
</kw>
<msg timestamp="20210121 14:50:47.846" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:50:47.846" starttime="20210121 14:50:47.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:47.846" starttime="20210121 14:50:47.846"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:47.851" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id d7c64ba0-7488-4cb9-be8a-a78e903abe2d-105594266439057651 --bucket bucket-96159 --key 73137/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/73137/multipartKey3105594266547912948,PartNumber=1},{ETag=/s3v/bucket-96159/73137/multipartKey3105594266818511094,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:48.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:48.321" level="INFO">${output} = {
    "ETag": "968f70b9000e1387caf91279bf7015a16d69f8a08a988d894606cf51feaf1229", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:48.321" starttime="20210121 14:50:47.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.323" level="INFO">{
    "ETag": "968f70b9000e1387caf91279bf7015a16d69f8a08a988d894606cf51feaf1229", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:48.323" starttime="20210121 14:50:48.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:48.323" starttime="20210121 14:50:48.323"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.324" starttime="20210121 14:50:47.848"></status>
</kw>
<msg timestamp="20210121 14:50:48.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:48.324" starttime="20210121 14:50:47.848"></status>
</kw>
<msg timestamp="20210121 14:50:48.324" level="INFO">${output} = {
    "ETag": "968f70b9000e1387caf91279bf7015a16d69f8a08a988d894606cf51feaf1229", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:48.324" starttime="20210121 14:50:47.848"></status>
</kw>
<msg timestamp="20210121 14:50:48.325" level="INFO">${result} = {
    "ETag": "968f70b9000e1387caf91279bf7015a16d69f8a08a988d894606cf51feaf1229", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "73137/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:50:48.325" starttime="20210121 14:50:47.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:48.325" starttime="20210121 14:50:48.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:48.326" starttime="20210121 14:50:48.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:48.326" starttime="20210121 14:50:48.326"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:48.333" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-96159 --key 73137/multipartKey3 /tmp/73137-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:48.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:48.921" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:48 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:48.921" starttime="20210121 14:50:48.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.923" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:48 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14:50:48 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:50:48.923" starttime="20210121 14:50:48.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:48.924" starttime="20210121 14:50:48.923"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.924" starttime="20210121 14:50:48.328"></status>
</kw>
<msg timestamp="20210121 14:50:48.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:48.924" starttime="20210121 14:50:48.328"></status>
</kw>
<msg timestamp="20210121 14:50:48.924" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:48 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:48.924" starttime="20210121 14:50:48.327"></status>
</kw>
<msg timestamp="20210121 14:50:48.925" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:50:48 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:50:48.925" starttime="20210121 14:50:48.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:48.929" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/73137-multipartKey3'.</msg>
<msg timestamp="20210121 14:50:48.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:48.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:48.937" starttime="20210121 14:50:48.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.939" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:48.939" starttime="20210121 14:50:48.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:48.940" starttime="20210121 14:50:48.939"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.940" starttime="20210121 14:50:48.926"></status>
</kw>
<msg timestamp="20210121 14:50:48.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:48.940" starttime="20210121 14:50:48.926"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.941" starttime="20210121 14:50:48.925"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:48.945" level="INFO">Running command 'md5sum /tmp/73137-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:48.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:48.960" level="INFO">${output} = ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.960" starttime="20210121 14:50:48.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.962" level="INFO">ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.962" starttime="20210121 14:50:48.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:48.963" starttime="20210121 14:50:48.962"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.963" starttime="20210121 14:50:48.943"></status>
</kw>
<msg timestamp="20210121 14:50:48.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:48.963" starttime="20210121 14:50:48.942"></status>
</kw>
<msg timestamp="20210121 14:50:48.964" level="INFO">${checksumbefore} = ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.964" starttime="20210121 14:50:48.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:48.968" level="INFO">Running command 'md5sum /tmp/73137-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:48.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:48.992" level="INFO">${output} = ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.992" starttime="20210121 14:50:48.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.994" level="INFO">ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.994" starttime="20210121 14:50:48.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:48.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:48.995" starttime="20210121 14:50:48.994"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:48.998" starttime="20210121 14:50:48.965"></status>
</kw>
<msg timestamp="20210121 14:50:48.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:48.998" starttime="20210121 14:50:48.964"></status>
</kw>
<msg timestamp="20210121 14:50:48.999" level="INFO">${checksumafter} = ba73ed1c46cf7041b453c6443c0f7ea1</msg>
<status status="PASS" endtime="20210121 14:50:48.999" starttime="20210121 14:50:48.964"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:49.001" starttime="20210121 14:50:48.999"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:49.001" starttime="20210121 14:50:48.941"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:49.002" critical="yes" starttime="20210121 14:50:37.345"></status>
</test>
<test id="s1-s11-s6-t5" name="Test abort Multipart upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:49.006" level="INFO">${random} = 53023</msg>
<status status="PASS" endtime="20210121 14:50:49.006" starttime="20210121 14:50:49.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:49.006" level="INFO">${PREFIX} = 53023</msg>
<status status="PASS" endtime="20210121 14:50:49.006" starttime="20210121 14:50:49.006"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:49.007" starttime="20210121 14:50:49.004"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:49.012" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 53023/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:49.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:49.504" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879", 
    "Key": "53023/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:50:49.504" starttime="20210121 14:50:49.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:49.506" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879", 
    "Key": "53023/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:50:49.506" starttime="20210121 14:50:49.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:49.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:49.507" starttime="20210121 14:50:49.506"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:49.507" starttime="20210121 14:50:49.008"></status>
</kw>
<msg timestamp="20210121 14:50:49.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:49.507" starttime="20210121 14:50:49.008"></status>
</kw>
<msg timestamp="20210121 14:50:49.507" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879", 
    "Key": "53023/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:50:49.508" starttime="20210121 14:50:49.007"></status>
</kw>
<msg timestamp="20210121 14:50:49.508" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879", 
    "Key": "53023/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:50:49.508" starttime="20210121 14:50:49.007"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:49.511" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879", 
    "Key": "53023/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:49.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:49.559" level="INFO">${output} = d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879</msg>
<status status="PASS" endtime="20210121 14:50:49.559" starttime="20210121 14:50:49.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:49.561" level="INFO">d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879</msg>
<status status="PASS" endtime="20210121 14:50:49.561" starttime="20210121 14:50:49.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:49.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:49.561" starttime="20210121 14:50:49.561"></status>
</kw>
<msg timestamp="20210121 14:50:49.562" level="INFO">${uploadID} = d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879</msg>
<status status="PASS" endtime="20210121 14:50:49.562" starttime="20210121 14:50:49.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:49.563" starttime="20210121 14:50:49.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:49.564" starttime="20210121 14:50:49.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:49.564" starttime="20210121 14:50:49.564"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:49.568" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-96159 --key 53023/multipartKey4 --upload-id d6c52a34-125b-41d3-b62a-325963a2dc31-105594267203141879 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:50.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:50.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:50.168" starttime="20210121 14:50:49.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.169" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:50.170" starttime="20210121 14:50:50.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:50.170" starttime="20210121 14:50:50.170"></status>
</kw>
<msg timestamp="20210121 14:50:50.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:50.171" starttime="20210121 14:50:49.565"></status>
</kw>
<msg timestamp="20210121 14:50:50.171" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:50:50.171" starttime="20210121 14:50:49.565"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:50.171" critical="yes" starttime="20210121 14:50:49.003"></status>
</test>
<test id="s1-s11-s6-t6" name="Test abort Multipart upload with invalid uploadId">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:50.175" level="INFO">${random} = 68826</msg>
<status status="PASS" endtime="20210121 14:50:50.175" starttime="20210121 14:50:50.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.176" level="INFO">${PREFIX} = 68826</msg>
<status status="PASS" endtime="20210121 14:50:50.176" starttime="20210121 14:50:50.175"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:50.176" starttime="20210121 14:50:50.174"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:50.180" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-96159 --key 68826/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:50.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:50.668" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:50:50.668" starttime="20210121 14:50:50.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.670" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20210121 14:50:50.670" starttime="20210121 14:50:50.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:50.671" starttime="20210121 14:50:50.670"></status>
</kw>
<msg timestamp="20210121 14:50:50.671" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:50:50.671" starttime="20210121 14:50:50.177"></status>
</kw>
<msg timestamp="20210121 14:50:50.671" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:50:50.671" starttime="20210121 14:50:50.176"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:50.672" critical="yes" starttime="20210121 14:50:50.173"></status>
</test>
<test id="s1-s11-s6-t7" name="Upload part with Incorrect uploadID">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:50.675" level="INFO">${random} = 80026</msg>
<status status="PASS" endtime="20210121 14:50:50.675" starttime="20210121 14:50:50.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.676" level="INFO">${PREFIX} = 80026</msg>
<status status="PASS" endtime="20210121 14:50:50.676" starttime="20210121 14:50:50.675"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:50.676" starttime="20210121 14:50:50.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:50.680" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:50:50.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:50.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:50.682" starttime="20210121 14:50:50.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.683" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:50.683" starttime="20210121 14:50:50.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:50.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:50.684" starttime="20210121 14:50:50.684"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:50.684" starttime="20210121 14:50:50.677"></status>
</kw>
<msg timestamp="20210121 14:50:50.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:50.685" starttime="20210121 14:50:50.677"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:50.685" starttime="20210121 14:50:50.676"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:50.688" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 80026/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:51.161" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:50:51.161" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:50:51.161" starttime="20210121 14:50:50.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.163" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20210121 14:50:51.163" starttime="20210121 14:50:51.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:51.164" starttime="20210121 14:50:51.163"></status>
</kw>
<msg timestamp="20210121 14:50:51.164" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:50:51.164" starttime="20210121 14:50:50.686"></status>
</kw>
<msg timestamp="20210121 14:50:51.164" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:50:51.164" starttime="20210121 14:50:50.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:51.165" starttime="20210121 14:50:51.165"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:51.165" critical="yes" starttime="20210121 14:50:50.673"></status>
</test>
<test id="s1-s11-s6-t8" name="Test list parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:51.169" level="INFO">${random} = 83036</msg>
<status status="PASS" endtime="20210121 14:50:51.169" starttime="20210121 14:50:51.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.169" level="INFO">${PREFIX} = 83036</msg>
<status status="PASS" endtime="20210121 14:50:51.169" starttime="20210121 14:50:51.169"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.170" starttime="20210121 14:50:51.167"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:51.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 83036/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:51.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:51.669" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393", 
    "Key": "83036/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:50:51.669" starttime="20210121 14:50:51.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.670" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393", 
    "Key": "83036/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:50:51.670" starttime="20210121 14:50:51.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:51.671" starttime="20210121 14:50:51.670"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.671" starttime="20210121 14:50:51.171"></status>
</kw>
<msg timestamp="20210121 14:50:51.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:51.671" starttime="20210121 14:50:51.171"></status>
</kw>
<msg timestamp="20210121 14:50:51.672" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393", 
    "Key": "83036/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:50:51.672" starttime="20210121 14:50:51.170"></status>
</kw>
<msg timestamp="20210121 14:50:51.673" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393", 
    "Key": "83036/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:50:51.673" starttime="20210121 14:50:51.170"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:51.676" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393", 
    "Key": "83036/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:51.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:51.721" level="INFO">${output} = 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393</msg>
<status status="PASS" endtime="20210121 14:50:51.721" starttime="20210121 14:50:51.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.722" level="INFO">95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393</msg>
<status status="PASS" endtime="20210121 14:50:51.722" starttime="20210121 14:50:51.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:51.723" starttime="20210121 14:50:51.722"></status>
</kw>
<msg timestamp="20210121 14:50:51.723" level="INFO">${uploadID} = 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393</msg>
<status status="PASS" endtime="20210121 14:50:51.723" starttime="20210121 14:50:51.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:51.724" starttime="20210121 14:50:51.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:51.725" starttime="20210121 14:50:51.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:51.725" starttime="20210121 14:50:51.725"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:51.731" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:51.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:51.767" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.032349 s, 162 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:51.767" starttime="20210121 14:50:51.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.769" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.032349 s, 162 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:51.769" starttime="20210121 14:50:51.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:51.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:51.770" starttime="20210121 14:50:51.769"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.770" starttime="20210121 14:50:51.728"></status>
</kw>
<msg timestamp="20210121 14:50:51.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:51.770" starttime="20210121 14:50:51.727"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.770" starttime="20210121 14:50:51.726"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.771" starttime="20210121 14:50:51.726"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:51.771" starttime="20210121 14:50:51.725"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:51.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 83036/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:52.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:52.552" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890"
}</msg>
<status status="PASS" endtime="20210121 14:50:52.552" starttime="20210121 14:50:51.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.554" level="INFO">{
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890"
}</msg>
<status status="PASS" endtime="20210121 14:50:52.554" starttime="20210121 14:50:52.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:52.554" starttime="20210121 14:50:52.554"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:52.555" starttime="20210121 14:50:51.772"></status>
</kw>
<msg timestamp="20210121 14:50:52.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:52.555" starttime="20210121 14:50:51.772"></status>
</kw>
<msg timestamp="20210121 14:50:52.555" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890"
}</msg>
<status status="PASS" endtime="20210121 14:50:52.556" starttime="20210121 14:50:51.772"></status>
</kw>
<msg timestamp="20210121 14:50:52.556" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890"
}</msg>
<status status="PASS" endtime="20210121 14:50:52.556" starttime="20210121 14:50:51.771"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:52.569" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:52.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:52.620" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:52.620" starttime="20210121 14:50:52.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.621" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:52.621" starttime="20210121 14:50:52.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:52.622" starttime="20210121 14:50:52.621"></status>
</kw>
<msg timestamp="20210121 14:50:52.622" level="INFO">${eTag1} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:52.622" starttime="20210121 14:50:52.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:52.623" starttime="20210121 14:50:52.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:52.627" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:50:52.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:52.629" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:52.629" starttime="20210121 14:50:52.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.631" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:52.631" starttime="20210121 14:50:52.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:52.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:52.632" starttime="20210121 14:50:52.631"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:52.632" starttime="20210121 14:50:52.624"></status>
</kw>
<msg timestamp="20210121 14:50:52.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:52.632" starttime="20210121 14:50:52.624"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:52.632" starttime="20210121 14:50:52.623"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:52.637" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-96159 --key 83036/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:53.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:53.152" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195"
}</msg>
<status status="PASS" endtime="20210121 14:50:53.152" starttime="20210121 14:50:52.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.154" level="INFO">{
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195"
}</msg>
<status status="PASS" endtime="20210121 14:50:53.154" starttime="20210121 14:50:53.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:53.155" starttime="20210121 14:50:53.154"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:53.155" starttime="20210121 14:50:52.634"></status>
</kw>
<msg timestamp="20210121 14:50:53.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:53.155" starttime="20210121 14:50:52.634"></status>
</kw>
<msg timestamp="20210121 14:50:53.155" level="INFO">${output} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195"
}</msg>
<status status="PASS" endtime="20210121 14:50:53.155" starttime="20210121 14:50:52.633"></status>
</kw>
<msg timestamp="20210121 14:50:53.156" level="INFO">${result} = {
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195"
}</msg>
<status status="PASS" endtime="20210121 14:50:53.156" starttime="20210121 14:50:52.633"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:53.160" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:53.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:53.206" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.206" starttime="20210121 14:50:53.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.207" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.207" starttime="20210121 14:50:53.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:53.208" starttime="20210121 14:50:53.207"></status>
</kw>
<msg timestamp="20210121 14:50:53.208" level="INFO">${eTag2} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.208" starttime="20210121 14:50:53.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:53.209" starttime="20210121 14:50:53.208"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:53.213" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-96159 --key 83036/multipartKey5 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:53.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:53.705" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:53.705" starttime="20210121 14:50:53.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.707" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:50:53.707" starttime="20210121 14:50:53.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:53.707" starttime="20210121 14:50:53.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:53.708" starttime="20210121 14:50:53.211"></status>
</kw>
<msg timestamp="20210121 14:50:53.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:53.708" starttime="20210121 14:50:53.210"></status>
</kw>
<msg timestamp="20210121 14:50:53.708" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:53.708" starttime="20210121 14:50:53.209"></status>
</kw>
<msg timestamp="20210121 14:50:53.709" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:53.709" starttime="20210121 14:50:53.209"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:53.712" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:53.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:53.758" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:53.758" starttime="20210121 14:50:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.759" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:53.759" starttime="20210121 14:50:53.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:53.760" starttime="20210121 14:50:53.759"></status>
</kw>
<msg timestamp="20210121 14:50:53.760" level="INFO">${part1} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:53.760" starttime="20210121 14:50:53.709"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:53.763" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:53.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:53.809" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.809" starttime="20210121 14:50:53.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.810" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.810" starttime="20210121 14:50:53.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:53.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:53.811" starttime="20210121 14:50:53.810"></status>
</kw>
<msg timestamp="20210121 14:50:53.811" level="INFO">${part2} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:53.811" starttime="20210121 14:50:53.760"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:53.812" starttime="20210121 14:50:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:53.814" starttime="20210121 14:50:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:53.815" starttime="20210121 14:50:53.814"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:53.819" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-96159 --key 83036/multipartKey5 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:54.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:54.305" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.305" starttime="20210121 14:50:53.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.306" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:50:54.306" starttime="20210121 14:50:54.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:54.307" starttime="20210121 14:50:54.306"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:54.307" starttime="20210121 14:50:53.817"></status>
</kw>
<msg timestamp="20210121 14:50:54.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:54.308" starttime="20210121 14:50:53.816"></status>
</kw>
<msg timestamp="20210121 14:50:54.308" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.308" starttime="20210121 14:50:53.816"></status>
</kw>
<msg timestamp="20210121 14:50:54.309" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.309" starttime="20210121 14:50:53.815"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:54.312" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:54.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:54.362" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:54.362" starttime="20210121 14:50:54.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.363" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:54.364" starttime="20210121 14:50:54.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:54.364" starttime="20210121 14:50:54.364"></status>
</kw>
<msg timestamp="20210121 14:50:54.365" level="INFO">${part1} = /s3v/bucket-96159/83036/multipartKey5105594267385200890</msg>
<status status="PASS" endtime="20210121 14:50:54.365" starttime="20210121 14:50:54.309"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:54.368" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:52.396Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267385200890", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:54.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:54.413" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:50:54.413" starttime="20210121 14:50:54.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.414" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:50:54.414" starttime="20210121 14:50:54.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:54.415" starttime="20210121 14:50:54.415"></status>
</kw>
<msg timestamp="20210121 14:50:54.416" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:50:54.416" starttime="20210121 14:50:54.365"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:54.416" starttime="20210121 14:50:54.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:54.417" starttime="20210121 14:50:54.417"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:54.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-96159 --key 83036/multipartKey5 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:54.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:54.893" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.893" starttime="20210121 14:50:54.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.894" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:50:54.894" starttime="20210121 14:50:54.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:54.895" starttime="20210121 14:50:54.895"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:54.895" starttime="20210121 14:50:54.419"></status>
</kw>
<msg timestamp="20210121 14:50:54.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:54.896" starttime="20210121 14:50:54.419"></status>
</kw>
<msg timestamp="20210121 14:50:54.896" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.896" starttime="20210121 14:50:54.418"></status>
</kw>
<msg timestamp="20210121 14:50:54.896" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/830...</msg>
<status status="PASS" endtime="20210121 14:50:54.896" starttime="20210121 14:50:54.417"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:54.900" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:50:53.110Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-96159/83036/multipartKey5105594267438547195", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:54.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:54.947" level="INFO">${output} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:54.947" starttime="20210121 14:50:54.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.948" level="INFO">/s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:54.948" starttime="20210121 14:50:54.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:54.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:54.949" starttime="20210121 14:50:54.948"></status>
</kw>
<msg timestamp="20210121 14:50:54.949" level="INFO">${part2} = /s3v/bucket-96159/83036/multipartKey5105594267438547195</msg>
<status status="PASS" endtime="20210121 14:50:54.950" starttime="20210121 14:50:54.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:54.950" starttime="20210121 14:50:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:50:54.951" starttime="20210121 14:50:54.950"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:54.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-96159 --key 83036/multipartKey5 --upload-id 95fe684c-b3e7-4151-bc6d-bbf2c9dd71f7-105594267345158393 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:55.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:55.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:55.536" starttime="20210121 14:50:54.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:55.537" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:50:55.537" starttime="20210121 14:50:55.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:55.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:55.538" starttime="20210121 14:50:55.537"></status>
</kw>
<msg timestamp="20210121 14:50:55.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:50:55.538" starttime="20210121 14:50:54.952"></status>
</kw>
<msg timestamp="20210121 14:50:55.538" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:50:55.539" starttime="20210121 14:50:54.951"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:50:55.539" critical="yes" starttime="20210121 14:50:51.167"></status>
</test>
<test id="s1-s11-s6-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:50:55.541" level="INFO">${random} = 01816</msg>
<status status="PASS" endtime="20210121 14:50:55.541" starttime="20210121 14:50:55.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:50:55.542" level="INFO">${PREFIX} = 01816</msg>
<status status="PASS" endtime="20210121 14:50:55.542" starttime="20210121 14:50:55.541"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:55.542" starttime="20210121 14:50:55.540"></status>
</kw>
<kw name="Create Random file">
<arguments>
<arg>22</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:55.546" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:55.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:55.689" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.138261 s, 167 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:55.689" starttime="20210121 14:50:55.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:55.690" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.138261 s, 167 MB/s</msg>
<status status="PASS" endtime="20210121 14:50:55.690" starttime="20210121 14:50:55.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:55.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:55.691" starttime="20210121 14:50:55.690"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:55.691" starttime="20210121 14:50:55.544"></status>
</kw>
<msg timestamp="20210121 14:50:55.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:55.691" starttime="20210121 14:50:55.543"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:55.691" starttime="20210121 14:50:55.543"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:55.692" starttime="20210121 14:50:55.542"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:55.697" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://bucket-96159/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:50:59.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:50:59.718" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:50:59.718" starttime="20210121 14:50:55.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:50:59.720" level="INFO">Completed 256.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (10.7 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (12.1 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (13.5 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (15.7 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (20.8 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (22.1 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (23.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (24.6 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (28.2 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (30.6 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (31.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (33.9 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (40.3 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (41.3 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (42.3 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (43.4 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (44.0 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (45.1 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (45.9 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (47.0 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (48.0 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (49.0 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (50.0 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (50.9 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (51.8 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (52.6 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (53.2 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (55.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (57.7 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (58.6 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (57.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (57.0 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (57.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (58.1 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (58.9 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (59.6 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (59.4 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (60.3 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (60.9 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (61.6 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (62.4 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (62.5 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (63.3 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (64.1 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (63.2 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (63.8 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (64.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (64.2 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (63.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (63.7 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (61.7 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (62.3 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (63.0 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (61.5 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (63.2 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (63.8 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (64.6 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://bucket-96159/mpyawscli           </msg>
<status status="PASS" endtime="20210121 14:50:59.721" starttime="20210121 14:50:59.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:50:59.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:50:59.722" starttime="20210121 14:50:59.721"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:59.722" starttime="20210121 14:50:55.693"></status>
</kw>
<msg timestamp="20210121 14:50:59.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:50:59.722" starttime="20210121 14:50:55.693"></status>
</kw>
<msg timestamp="20210121 14:50:59.722" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:50:59.723" starttime="20210121 14:50:55.692"></status>
</kw>
<status status="PASS" endtime="20210121 14:50:59.723" starttime="20210121 14:50:55.692"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:50:59.728" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-96159/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:00.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:00.737" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:51:00.737" starttime="20210121 14:50:59.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:00.738" level="INFO">Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (10.8 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (12.0 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (22.3 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (23.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (24.3 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (27.1 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (28.2 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (29.9 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (32.2 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (33.3 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (34.3 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (38.0 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (37.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (38.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (39.1 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (39.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (40.6 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (41.2 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (42.1 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (42.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (43.7 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (44.0 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (43.0 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (43.3 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (44.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (44.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (44.7 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (45.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (47.6 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (48.3 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (47.9 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (49.3 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (50.0 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (50.6 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (50.7 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (51.0 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (51.7 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (51.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (53.1 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (53.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (53.2 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (53.9 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (54.4 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (52.9 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (53.6 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (55.1 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (56.4 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (55.4 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (56.0 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (55.9 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (55.3 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (55.6 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
download: s3://bucket-96159/mpyawscli to ../../tmp/part1.result  </msg>
<status status="PASS" endtime="20210121 14:51:00.738" starttime="20210121 14:51:00.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:00.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:00.739" starttime="20210121 14:51:00.738"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:00.739" starttime="20210121 14:50:59.724"></status>
</kw>
<msg timestamp="20210121 14:51:00.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:00.740" starttime="20210121 14:50:59.724"></status>
</kw>
<msg timestamp="20210121 14:51:00.740" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:51:00.740" starttime="20210121 14:50:59.724"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:00.740" starttime="20210121 14:50:59.723"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>rm s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:00.745" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-96159/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:01.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:01.359" level="INFO">${output} = delete: s3://bucket-96159/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:51:01.359" starttime="20210121 14:51:00.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.363" level="INFO">delete: s3://bucket-96159/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:51:01.363" starttime="20210121 14:51:01.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:01.364" starttime="20210121 14:51:01.363"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.364" starttime="20210121 14:51:00.742"></status>
</kw>
<msg timestamp="20210121 14:51:01.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:01.364" starttime="20210121 14:51:00.742"></status>
</kw>
<msg timestamp="20210121 14:51:01.364" level="INFO">${output} = delete: s3://bucket-96159/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:51:01.364" starttime="20210121 14:51:00.741"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.365" starttime="20210121 14:51:00.740"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:01.369" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:01.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:01.425" level="INFO">${output} = 2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.425" starttime="20210121 14:51:01.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.426" level="INFO">2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.427" starttime="20210121 14:51:01.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:01.427" starttime="20210121 14:51:01.427"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.428" starttime="20210121 14:51:01.366"></status>
</kw>
<msg timestamp="20210121 14:51:01.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:01.428" starttime="20210121 14:51:01.366"></status>
</kw>
<msg timestamp="20210121 14:51:01.428" level="INFO">${checksumbefore} = 2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.428" starttime="20210121 14:51:01.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:01.432" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:01.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:01.488" level="INFO">${output} = 2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.488" starttime="20210121 14:51:01.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.490" level="INFO">2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.490" starttime="20210121 14:51:01.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:01.491" starttime="20210121 14:51:01.490"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.491" starttime="20210121 14:51:01.429"></status>
</kw>
<msg timestamp="20210121 14:51:01.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:01.491" starttime="20210121 14:51:01.429"></status>
</kw>
<msg timestamp="20210121 14:51:01.491" level="INFO">${checksumafter} = 2573f69e3fbd93966066d4c136f9f22b</msg>
<status status="PASS" endtime="20210121 14:51:01.491" starttime="20210121 14:51:01.428"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:01.492" starttime="20210121 14:51:01.492"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.492" starttime="20210121 14:51:01.365"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:01.493" critical="yes" starttime="20210121 14:50:55.539"></status>
</test>
<test id="s1-s11-s6-t10" name="Test Multipart Upload Put With Copy">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:01.495" level="INFO">${random} = 70332</msg>
<status status="PASS" endtime="20210121 14:51:01.495" starttime="20210121 14:51:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.496" level="INFO">${PREFIX} = 70332</msg>
<status status="PASS" endtime="20210121 14:51:01.496" starttime="20210121 14:51:01.495"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.496" starttime="20210121 14:51:01.494"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:01.502" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:01.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:01.543" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0348503 s, 150 MB/s</msg>
<status status="PASS" endtime="20210121 14:51:01.543" starttime="20210121 14:51:01.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.545" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0348503 s, 150 MB/s</msg>
<status status="PASS" endtime="20210121 14:51:01.546" starttime="20210121 14:51:01.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:01.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:01.546" starttime="20210121 14:51:01.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.547" starttime="20210121 14:51:01.498"></status>
</kw>
<msg timestamp="20210121 14:51:01.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:01.547" starttime="20210121 14:51:01.498"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.548" starttime="20210121 14:51:01.497"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.549" starttime="20210121 14:51:01.497"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:01.549" starttime="20210121 14:51:01.496"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:01.555" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-96159 --key 70332/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:02.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:02.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:02.401" starttime="20210121 14:51:01.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.402" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:02.402" starttime="20210121 14:51:02.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:02.403" starttime="20210121 14:51:02.402"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:02.403" starttime="20210121 14:51:01.552"></status>
</kw>
<msg timestamp="20210121 14:51:02.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:02.403" starttime="20210121 14:51:01.551"></status>
</kw>
<msg timestamp="20210121 14:51:02.404" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:02.404" starttime="20210121 14:51:01.551"></status>
</kw>
<msg timestamp="20210121 14:51:02.404" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:02.404" starttime="20210121 14:51:01.550"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:02.409" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 70332/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:02.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:02.886" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:02.886" starttime="20210121 14:51:02.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.887" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:02.887" starttime="20210121 14:51:02.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:02.888" starttime="20210121 14:51:02.888"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:02.888" starttime="20210121 14:51:02.406"></status>
</kw>
<msg timestamp="20210121 14:51:02.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:02.889" starttime="20210121 14:51:02.405"></status>
</kw>
<msg timestamp="20210121 14:51:02.889" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:02.889" starttime="20210121 14:51:02.405"></status>
</kw>
<msg timestamp="20210121 14:51:02.889" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:02.889" starttime="20210121 14:51:02.404"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:02.893" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641", 
    "Key": "70332/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:02.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:02.938" level="INFO">${output} = 87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641</msg>
<status status="PASS" endtime="20210121 14:51:02.938" starttime="20210121 14:51:02.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.939" level="INFO">87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641</msg>
<status status="PASS" endtime="20210121 14:51:02.939" starttime="20210121 14:51:02.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:02.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:02.940" starttime="20210121 14:51:02.939"></status>
</kw>
<msg timestamp="20210121 14:51:02.940" level="INFO">${uploadID} = 87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641</msg>
<status status="PASS" endtime="20210121 14:51:02.940" starttime="20210121 14:51:02.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:02.941" starttime="20210121 14:51:02.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:02.941" starttime="20210121 14:51:02.941"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:02.946" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-96159 --key 70332/copytest/destination --upload-id 87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641 --part-number 1 --copy-source bucket-96159/70332/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:06.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:06.100" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:06.056Z", 
        "ETag": "/s3v/bucket-96159/70332/copytest/destination105594268116058370"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:06.100" starttime="20210121 14:51:02.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.101" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:06.056Z", 
        "ETag": "/s3v/bucket-96159/70332/copytest/destination105594268116058370"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:06.101" starttime="20210121 14:51:06.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:06.102" starttime="20210121 14:51:06.102"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:06.103" starttime="20210121 14:51:02.943"></status>
</kw>
<msg timestamp="20210121 14:51:06.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:06.103" starttime="20210121 14:51:02.943"></status>
</kw>
<msg timestamp="20210121 14:51:06.103" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:06.056Z", 
        "ETag": "/s3v/bucket-96159/70332/copytest/destination105594268116058370"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:06.103" starttime="20210121 14:51:02.942"></status>
</kw>
<msg timestamp="20210121 14:51:06.104" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:06.056Z", 
        "ETag": "/s3v/bucket-96159/70332/copytest/destination105594268116058370"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:06.104" starttime="20210121 14:51:02.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:06.104" starttime="20210121 14:51:06.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:06.105" starttime="20210121 14:51:06.104"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:06.108" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:06.056Z", 
        "ETag": "/s3v/bucket-96159/70332/copytest/destination105594268116058370"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:06.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:06.152" level="INFO">${output} = /s3v/bucket-96159/70332/copytest/destination105594268116058370</msg>
<status status="PASS" endtime="20210121 14:51:06.153" starttime="20210121 14:51:06.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.154" level="INFO">/s3v/bucket-96159/70332/copytest/destination105594268116058370</msg>
<status status="PASS" endtime="20210121 14:51:06.154" starttime="20210121 14:51:06.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:06.155" starttime="20210121 14:51:06.154"></status>
</kw>
<msg timestamp="20210121 14:51:06.155" level="INFO">${eTag1} = /s3v/bucket-96159/70332/copytest/destination105594268116058370</msg>
<status status="PASS" endtime="20210121 14:51:06.155" starttime="20210121 14:51:06.105"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:06.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 87be339f-21bd-4d98-90a8-235fa5824931-105594268080144641 --bucket bucket-96159 --key 70332/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/70332/copytest/destination105594268116058370,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:06.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:06.639" level="INFO">${output} = {
    "ETag": "0cebdde52faa0a6461c7ead013ebcf6abab6587028a5b08b5bca78692fa5f2ab", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:06.639" starttime="20210121 14:51:06.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.640" level="INFO">{
    "ETag": "0cebdde52faa0a6461c7ead013ebcf6abab6587028a5b08b5bca78692fa5f2ab", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:06.640" starttime="20210121 14:51:06.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:06.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:06.641" starttime="20210121 14:51:06.640"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:06.641" starttime="20210121 14:51:06.158"></status>
</kw>
<msg timestamp="20210121 14:51:06.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:06.641" starttime="20210121 14:51:06.157"></status>
</kw>
<msg timestamp="20210121 14:51:06.642" level="INFO">${output} = {
    "ETag": "0cebdde52faa0a6461c7ead013ebcf6abab6587028a5b08b5bca78692fa5f2ab", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "70332/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:06.642" starttime="20210121 14:51:06.157"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:06.642" starttime="20210121 14:51:06.156"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:06.646" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-96159 --key 70332/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:07.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:07.283" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:06 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:51:07.284" starttime="20210121 14:51:06.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.285" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:06 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14:51:07 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:07.285" starttime="20210121 14:51:07.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:07.286" starttime="20210121 14:51:07.285"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.286" starttime="20210121 14:51:06.644"></status>
</kw>
<msg timestamp="20210121 14:51:07.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:07.286" starttime="20210121 14:51:06.643"></status>
</kw>
<msg timestamp="20210121 14:51:07.287" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:06 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:51:07.287" starttime="20210121 14:51:06.643"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.287" starttime="20210121 14:51:06.642"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:07.292" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:07.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:07.311" level="INFO">${output} = ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.311" starttime="20210121 14:51:07.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.312" level="INFO">ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.313" starttime="20210121 14:51:07.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:07.314" starttime="20210121 14:51:07.313"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.315" starttime="20210121 14:51:07.289"></status>
</kw>
<msg timestamp="20210121 14:51:07.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:07.315" starttime="20210121 14:51:07.289"></status>
</kw>
<msg timestamp="20210121 14:51:07.316" level="INFO">${checksumbefore} = ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.316" starttime="20210121 14:51:07.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:07.320" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:07.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:07.335" level="INFO">${output} = ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.335" starttime="20210121 14:51:07.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.336" level="INFO">ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.337" starttime="20210121 14:51:07.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:07.337" starttime="20210121 14:51:07.337"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.338" starttime="20210121 14:51:07.317"></status>
</kw>
<msg timestamp="20210121 14:51:07.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:07.338" starttime="20210121 14:51:07.316"></status>
</kw>
<msg timestamp="20210121 14:51:07.338" level="INFO">${checksumafter} = ee8b36850d2dc7fb5b5fbe153c733670</msg>
<status status="PASS" endtime="20210121 14:51:07.338" starttime="20210121 14:51:07.316"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:07.339" starttime="20210121 14:51:07.338"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.339" starttime="20210121 14:51:07.287"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:07.339" critical="yes" starttime="20210121 14:51:01.493"></status>
</test>
<test id="s1-s11-s6-t11" name="Test Multipart Upload Put With Copy and range">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:07.342" level="INFO">${random} = 46896</msg>
<status status="PASS" endtime="20210121 14:51:07.342" starttime="20210121 14:51:07.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.343" level="INFO">${PREFIX} = 46896</msg>
<status status="PASS" endtime="20210121 14:51:07.343" starttime="20210121 14:51:07.342"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.343" starttime="20210121 14:51:07.341"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>10</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>10</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:07.348" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:07.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:07.418" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0662704 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:51:07.418" starttime="20210121 14:51:07.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.419" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0662704 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:51:07.419" starttime="20210121 14:51:07.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:07.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:07.420" starttime="20210121 14:51:07.419"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.420" starttime="20210121 14:51:07.345"></status>
</kw>
<msg timestamp="20210121 14:51:07.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:07.420" starttime="20210121 14:51:07.345"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.421" starttime="20210121 14:51:07.344"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.421" starttime="20210121 14:51:07.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:07.421" starttime="20210121 14:51:07.343"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:07.426" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-96159 --key 46896/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:10.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:10.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:10.829" starttime="20210121 14:51:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:10.831" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:10.831" starttime="20210121 14:51:10.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:10.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:10.832" starttime="20210121 14:51:10.832"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:10.833" starttime="20210121 14:51:07.423"></status>
</kw>
<msg timestamp="20210121 14:51:10.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:10.833" starttime="20210121 14:51:07.423"></status>
</kw>
<msg timestamp="20210121 14:51:10.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:10.833" starttime="20210121 14:51:07.422"></status>
</kw>
<msg timestamp="20210121 14:51:10.833" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:10.834" starttime="20210121 14:51:07.421"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:10.839" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 46896/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:11.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:11.384" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:11.384" starttime="20210121 14:51:10.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:11.386" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:11.386" starttime="20210121 14:51:11.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:11.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:11.387" starttime="20210121 14:51:11.386"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:11.387" starttime="20210121 14:51:10.836"></status>
</kw>
<msg timestamp="20210121 14:51:11.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:11.387" starttime="20210121 14:51:10.836"></status>
</kw>
<msg timestamp="20210121 14:51:11.387" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:11.387" starttime="20210121 14:51:10.835"></status>
</kw>
<msg timestamp="20210121 14:51:11.388" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:11.388" starttime="20210121 14:51:10.834"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:11.391" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388", 
    "Key": "46896/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:11.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:11.439" level="INFO">${output} = cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388</msg>
<status status="PASS" endtime="20210121 14:51:11.439" starttime="20210121 14:51:11.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:11.440" level="INFO">cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388</msg>
<status status="PASS" endtime="20210121 14:51:11.440" starttime="20210121 14:51:11.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:11.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:11.441" starttime="20210121 14:51:11.440"></status>
</kw>
<msg timestamp="20210121 14:51:11.441" level="INFO">${uploadID} = cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388</msg>
<status status="PASS" endtime="20210121 14:51:11.441" starttime="20210121 14:51:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:11.442" starttime="20210121 14:51:11.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:11.443" starttime="20210121 14:51:11.442"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:11.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-96159 --key 46896/copyrange/destination --upload-id cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388 --part-number 1 --copy-source bucket-96159/46896/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:12.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:12.287" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.244Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268673179909"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.287" starttime="20210121 14:51:11.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.288" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.244Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268673179909"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.288" starttime="20210121 14:51:12.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:12.289" starttime="20210121 14:51:12.288"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:12.289" starttime="20210121 14:51:11.445"></status>
</kw>
<msg timestamp="20210121 14:51:12.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:12.290" starttime="20210121 14:51:11.444"></status>
</kw>
<msg timestamp="20210121 14:51:12.290" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.244Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268673179909"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.290" starttime="20210121 14:51:11.444"></status>
</kw>
<msg timestamp="20210121 14:51:12.290" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.244Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268673179909"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.290" starttime="20210121 14:51:11.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:12.291" starttime="20210121 14:51:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:12.292" starttime="20210121 14:51:12.291"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:12.294" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.244Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268673179909"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:12.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:12.339" level="INFO">${output} = /s3v/bucket-96159/46896/copyrange/destination105594268673179909</msg>
<status status="PASS" endtime="20210121 14:51:12.339" starttime="20210121 14:51:12.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.340" level="INFO">/s3v/bucket-96159/46896/copyrange/destination105594268673179909</msg>
<status status="PASS" endtime="20210121 14:51:12.340" starttime="20210121 14:51:12.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:12.341" starttime="20210121 14:51:12.341"></status>
</kw>
<msg timestamp="20210121 14:51:12.341" level="INFO">${eTag1} = /s3v/bucket-96159/46896/copyrange/destination105594268673179909</msg>
<status status="PASS" endtime="20210121 14:51:12.342" starttime="20210121 14:51:12.292"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:12.347" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-96159 --key 46896/copyrange/destination --upload-id cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388 --part-number 2 --copy-source bucket-96159/46896/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:12.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:12.947" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.902Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268733538566"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.947" starttime="20210121 14:51:12.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.948" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.902Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268733538566"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.948" starttime="20210121 14:51:12.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:12.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:12.949" starttime="20210121 14:51:12.948"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:12.949" starttime="20210121 14:51:12.344"></status>
</kw>
<msg timestamp="20210121 14:51:12.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:12.949" starttime="20210121 14:51:12.344"></status>
</kw>
<msg timestamp="20210121 14:51:12.950" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.902Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268733538566"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.950" starttime="20210121 14:51:12.343"></status>
</kw>
<msg timestamp="20210121 14:51:12.950" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.902Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268733538566"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:12.950" starttime="20210121 14:51:12.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:12.951" starttime="20210121 14:51:12.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:12.951" starttime="20210121 14:51:12.951"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:12.957" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:51:12.902Z", 
        "ETag": "/s3v/bucket-96159/46896/copyrange/destination105594268733538566"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:13.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:13.008" level="INFO">${output} = /s3v/bucket-96159/46896/copyrange/destination105594268733538566</msg>
<status status="PASS" endtime="20210121 14:51:13.008" starttime="20210121 14:51:12.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:13.010" level="INFO">/s3v/bucket-96159/46896/copyrange/destination105594268733538566</msg>
<status status="PASS" endtime="20210121 14:51:13.010" starttime="20210121 14:51:13.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:13.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:13.011" starttime="20210121 14:51:13.010"></status>
</kw>
<msg timestamp="20210121 14:51:13.011" level="INFO">${eTag2} = /s3v/bucket-96159/46896/copyrange/destination105594268733538566</msg>
<status status="PASS" endtime="20210121 14:51:13.011" starttime="20210121 14:51:12.951"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:13.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id cb41c7c1-94f8-4d5f-8dcf-da3de737423e-105594268635824388 --bucket bucket-96159 --key 46896/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-96159/46896/copyrange/destination105594268673179909,PartNumber=1},{ETag=/s3v/bucket-96159/46896/copyrange/destination105594268733538566,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:13.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:13.510" level="INFO">${output} = {
    "ETag": "2d7b95632050eb921d72a090c57163d26cb816048b71a8f5b3a7e3c6388c2923", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:13.510" starttime="20210121 14:51:13.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:13.511" level="INFO">{
    "ETag": "2d7b95632050eb921d72a090c57163d26cb816048b71a8f5b3a7e3c6388c2923", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:13.511" starttime="20210121 14:51:13.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:13.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:13.512" starttime="20210121 14:51:13.512"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:13.512" starttime="20210121 14:51:13.013"></status>
</kw>
<msg timestamp="20210121 14:51:13.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:13.513" starttime="20210121 14:51:13.013"></status>
</kw>
<msg timestamp="20210121 14:51:13.513" level="INFO">${output} = {
    "ETag": "2d7b95632050eb921d72a090c57163d26cb816048b71a8f5b3a7e3c6388c2923", 
    "Bucket": "bucket-96159", 
    "Location": "bucket-96159", 
    "Key": "46896/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:51:13.513" starttime="20210121 14:51:13.012"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:13.513" starttime="20210121 14:51:13.011"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:13.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-96159 --key 46896/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:14.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:14.193" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:13 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 1...</msg>
<status status="PASS" endtime="20210121 14:51:14.193" starttime="20210121 14:51:13.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.194" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:13 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 14:51:13 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:14.194" starttime="20210121 14:51:14.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:14.195" starttime="20210121 14:51:14.194"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.195" starttime="20210121 14:51:13.515"></status>
</kw>
<msg timestamp="20210121 14:51:14.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:14.196" starttime="20210121 14:51:13.515"></status>
</kw>
<msg timestamp="20210121 14:51:14.196" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:13 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 1...</msg>
<status status="PASS" endtime="20210121 14:51:14.196" starttime="20210121 14:51:13.514"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.196" starttime="20210121 14:51:13.514"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:14.201" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:14.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:14.228" level="INFO">${output} = c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.228" starttime="20210121 14:51:14.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.229" level="INFO">c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.229" starttime="20210121 14:51:14.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:14.230" starttime="20210121 14:51:14.230"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.231" starttime="20210121 14:51:14.198"></status>
</kw>
<msg timestamp="20210121 14:51:14.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:14.231" starttime="20210121 14:51:14.198"></status>
</kw>
<msg timestamp="20210121 14:51:14.231" level="INFO">${checksumbefore} = c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.231" starttime="20210121 14:51:14.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:14.235" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:14.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:14.261" level="INFO">${output} = c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.261" starttime="20210121 14:51:14.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.263" level="INFO">c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.263" starttime="20210121 14:51:14.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:14.264" starttime="20210121 14:51:14.263"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.264" starttime="20210121 14:51:14.232"></status>
</kw>
<msg timestamp="20210121 14:51:14.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:14.264" starttime="20210121 14:51:14.232"></status>
</kw>
<msg timestamp="20210121 14:51:14.264" level="INFO">${checksumafter} = c52e847004eb2e9b254cadf67bcbace5</msg>
<status status="PASS" endtime="20210121 14:51:14.264" starttime="20210121 14:51:14.231"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:14.265" starttime="20210121 14:51:14.265"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.265" starttime="20210121 14:51:14.197"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:14.266" critical="yes" starttime="20210121 14:51:07.340"></status>
</test>
<test id="s1-s11-s6-t12" name="Test Multipart Upload list">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:14.269" level="INFO">${random} = 34342</msg>
<status status="PASS" endtime="20210121 14:51:14.269" starttime="20210121 14:51:14.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.270" level="INFO">${PREFIX} = 34342</msg>
<status status="PASS" endtime="20210121 14:51:14.270" starttime="20210121 14:51:14.269"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.270" starttime="20210121 14:51:14.268"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:14.275" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 34342/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:14.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:14.906" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
    "Key": "34342/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:51:14.906" starttime="20210121 14:51:14.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.908" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
    "Key": "34342/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:51:14.908" starttime="20210121 14:51:14.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:14.909" starttime="20210121 14:51:14.908"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:14.909" starttime="20210121 14:51:14.272"></status>
</kw>
<msg timestamp="20210121 14:51:14.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:14.909" starttime="20210121 14:51:14.271"></status>
</kw>
<msg timestamp="20210121 14:51:14.910" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
    "Key": "34342/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:51:14.910" starttime="20210121 14:51:14.271"></status>
</kw>
<msg timestamp="20210121 14:51:14.910" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
    "Key": "34342/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:51:14.910" starttime="20210121 14:51:14.270"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:14.913" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
    "Key": "34342/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:14.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:14.959" level="INFO">${output} = 8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895</msg>
<status status="PASS" endtime="20210121 14:51:14.959" starttime="20210121 14:51:14.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.960" level="INFO">8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895</msg>
<status status="PASS" endtime="20210121 14:51:14.960" starttime="20210121 14:51:14.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:14.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:14.961" starttime="20210121 14:51:14.961"></status>
</kw>
<msg timestamp="20210121 14:51:14.962" level="INFO">${uploadID1} = 8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895</msg>
<status status="PASS" endtime="20210121 14:51:14.962" starttime="20210121 14:51:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:14.962" starttime="20210121 14:51:14.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:14.963" starttime="20210121 14:51:14.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:14.963" starttime="20210121 14:51:14.963"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:14.968" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-96159 --key 34342/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:15.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:15.468" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
    "Key": "34342/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:51:15.468" starttime="20210121 14:51:14.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:15.473" level="INFO">{
    "Bucket": "bucket-96159", 
    "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
    "Key": "34342/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:51:15.473" starttime="20210121 14:51:15.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:15.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:15.474" starttime="20210121 14:51:15.473"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:15.474" starttime="20210121 14:51:14.965"></status>
</kw>
<msg timestamp="20210121 14:51:15.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:15.475" starttime="20210121 14:51:14.965"></status>
</kw>
<msg timestamp="20210121 14:51:15.475" level="INFO">${output} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
    "Key": "34342/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:51:15.475" starttime="20210121 14:51:14.964"></status>
</kw>
<msg timestamp="20210121 14:51:15.475" level="INFO">${result} = {
    "Bucket": "bucket-96159", 
    "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
    "Key": "34342/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:51:15.475" starttime="20210121 14:51:14.964"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:15.479" level="INFO">Running command 'echo '{
    "Bucket": "bucket-96159", 
    "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
    "Key": "34342/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:15.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:15.524" level="INFO">${output} = 8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600</msg>
<status status="PASS" endtime="20210121 14:51:15.524" starttime="20210121 14:51:15.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:15.525" level="INFO">8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600</msg>
<status status="PASS" endtime="20210121 14:51:15.526" starttime="20210121 14:51:15.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:15.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:15.526" starttime="20210121 14:51:15.526"></status>
</kw>
<msg timestamp="20210121 14:51:15.527" level="INFO">${uploadID2} = 8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600</msg>
<status status="PASS" endtime="20210121 14:51:15.527" starttime="20210121 14:51:15.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:15.527" starttime="20210121 14:51:15.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:15.528" starttime="20210121 14:51:15.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:15.529" starttime="20210121 14:51:15.528"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:15.534" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-96159 --prefix 34342/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:16.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:16.023" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:5...</msg>
<status status="PASS" endtime="20210121 14:51:16.023" starttime="20210121 14:51:15.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.025" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:51:14.712Z", 
            "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
            "StorageClass": "STANDARD", 
            "Key": "34342/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:51:15.426Z", 
            "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
            "StorageClass": "STANDARD", 
            "Key": "34342/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:16.025" starttime="20210121 14:51:16.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:16.025" starttime="20210121 14:51:16.025"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.026" starttime="20210121 14:51:15.531"></status>
</kw>
<msg timestamp="20210121 14:51:16.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:16.026" starttime="20210121 14:51:15.530"></status>
</kw>
<msg timestamp="20210121 14:51:16.026" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:5...</msg>
<status status="PASS" endtime="20210121 14:51:16.026" starttime="20210121 14:51:15.529"></status>
</kw>
<msg timestamp="20210121 14:51:16.027" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:5...</msg>
<status status="PASS" endtime="20210121 14:51:16.027" starttime="20210121 14:51:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.028" starttime="20210121 14:51:16.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.029" starttime="20210121 14:51:16.028"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:16.032" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:51:14.712Z", 
            "UploadId": "8f7043ee-fcd6-4dba-92dc-15d6f1709b69-105594268857925895", 
            "StorageClass": "STANDARD", 
            "Key": "34342/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:51:15.426Z", 
            "UploadId": "8a4ed559-19ef-4a51-bd43-8506f0d5e3bb-105594268904718600", 
            "StorageClass": "STANDARD", 
            "Key": "34342/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:16.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:16.077" level="INFO">${output} = 2</msg>
<status status="PASS" endtime="20210121 14:51:16.078" starttime="20210121 14:51:16.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.079" level="INFO">2</msg>
<status status="PASS" endtime="20210121 14:51:16.079" starttime="20210121 14:51:16.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:16.080" starttime="20210121 14:51:16.079"></status>
</kw>
<msg timestamp="20210121 14:51:16.080" level="INFO">${count} = 2</msg>
<status status="PASS" endtime="20210121 14:51:16.080" starttime="20210121 14:51:16.029"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.081" starttime="20210121 14:51:16.080"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:16.081" critical="yes" starttime="20210121 14:51:14.267"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:51:16.083" starttime="20210121 14:50:23.267"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectcopy.robot" id="s1-s11-s7" name="Objectcopy">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:16.100" level="INFO">${random} = 45403</msg>
<status status="PASS" endtime="20210121 14:51:16.100" starttime="20210121 14:51:16.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.102" level="INFO">${PREFIX} = 45403</msg>
<status status="PASS" endtime="20210121 14:51:16.102" starttime="20210121 14:51:16.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.102" starttime="20210121 14:51:16.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.102" starttime="20210121 14:51:16.099"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:16.105" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:16.107" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:51:16.107" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:51:16.107" starttime="20210121 14:51:16.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.108" starttime="20210121 14:51:16.108"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:16.110" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:16.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:16.259" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:51:16.259" starttime="20210121 14:51:16.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:16.264" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:16.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:16.703" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:51:16.703" starttime="20210121 14:51:16.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.704" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:51:16.704" starttime="20210121 14:51:16.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:16.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:16.705" starttime="20210121 14:51:16.704"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.705" starttime="20210121 14:51:16.261"></status>
</kw>
<msg timestamp="20210121 14:51:16.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:16.706" starttime="20210121 14:51:16.261"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.706" starttime="20210121 14:51:16.261"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.706" starttime="20210121 14:51:16.260"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.706" starttime="20210121 14:51:16.259"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.707" starttime="20210121 14:51:16.102"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:16.707" starttime="20210121 14:51:16.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.708" starttime="20210121 14:51:16.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:16.709" starttime="20210121 14:51:16.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:16.714" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:17.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:17.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:17.064" starttime="20210121 14:51:16.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.065" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:17.065" starttime="20210121 14:51:17.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:17.066" starttime="20210121 14:51:17.066"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.067" starttime="20210121 14:51:16.711"></status>
</kw>
<msg timestamp="20210121 14:51:17.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:17.067" starttime="20210121 14:51:16.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.067" starttime="20210121 14:51:16.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:17.071" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:17.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:17.445" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:17.445" starttime="20210121 14:51:17.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.446" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:17.446" starttime="20210121 14:51:17.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:17.447" starttime="20210121 14:51:17.446"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.447" starttime="20210121 14:51:17.068"></status>
</kw>
<msg timestamp="20210121 14:51:17.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:17.447" starttime="20210121 14:51:17.068"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.447" starttime="20210121 14:51:17.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:17.452" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:17.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:17.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:17.827" starttime="20210121 14:51:17.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.828" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:17.829" starttime="20210121 14:51:17.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:17.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:17.829" starttime="20210121 14:51:17.829"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.830" starttime="20210121 14:51:17.448"></status>
</kw>
<msg timestamp="20210121 14:51:17.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:17.830" starttime="20210121 14:51:17.448"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:17.831" starttime="20210121 14:51:17.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:17.836" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:18.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:18.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:18.201" starttime="20210121 14:51:17.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.202" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:18.202" starttime="20210121 14:51:18.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:18.203" starttime="20210121 14:51:18.203"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.204" starttime="20210121 14:51:17.832"></status>
</kw>
<msg timestamp="20210121 14:51:18.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:18.204" starttime="20210121 14:51:17.832"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.204" starttime="20210121 14:51:17.831"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.205" starttime="20210121 14:51:16.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.205" starttime="20210121 14:51:16.709"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.205" starttime="20210121 14:51:16.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.205" starttime="20210121 14:51:16.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:51:18.206" level="INFO">${postfix} = 82984</msg>
<status status="PASS" endtime="20210121 14:51:18.207" starttime="20210121 14:51:18.206"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:51:18.207" level="INFO">${bucket} = bucket-82984</msg>
<status status="PASS" endtime="20210121 14:51:18.207" starttime="20210121 14:51:18.207"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:18.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-82984 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:18.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:18.735" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82984"
}</msg>
<status status="PASS" endtime="20210121 14:51:18.735" starttime="20210121 14:51:18.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.736" level="INFO">{
    "Location": "http://s3g:9878/bucket-82984"
}</msg>
<status status="PASS" endtime="20210121 14:51:18.736" starttime="20210121 14:51:18.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:18.737" starttime="20210121 14:51:18.737"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.737" starttime="20210121 14:51:18.209"></status>
</kw>
<msg timestamp="20210121 14:51:18.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:18.738" starttime="20210121 14:51:18.209"></status>
</kw>
<msg timestamp="20210121 14:51:18.738" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-82984"
}</msg>
<status status="PASS" endtime="20210121 14:51:18.738" starttime="20210121 14:51:18.208"></status>
</kw>
<msg timestamp="20210121 14:51:18.738" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-82984"
}</msg>
<status status="PASS" endtime="20210121 14:51:18.738" starttime="20210121 14:51:18.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:18.739" starttime="20210121 14:51:18.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:18.739" starttime="20210121 14:51:18.739"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.739" starttime="20210121 14:51:18.207"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.740" starttime="20210121 14:51:18.206"></status>
</kw>
<msg timestamp="20210121 14:51:18.740" level="INFO">${BUCKET} = bucket-82984</msg>
<status status="PASS" endtime="20210121 14:51:18.740" starttime="20210121 14:51:18.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.740" level="INFO">${BUCKET} = bucket-82984</msg>
<status status="PASS" endtime="20210121 14:51:18.741" starttime="20210121 14:51:18.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:18.741" starttime="20210121 14:51:18.741"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:18.741" starttime="20210121 14:51:16.099"></status>
</kw>
<test id="s1-s11-s7-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
</arguments>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:51:18.744" level="INFO">${postfix} = 41631</msg>
<status status="PASS" endtime="20210121 14:51:18.744" starttime="20210121 14:51:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
</arguments>
<msg timestamp="20210121 14:51:18.745" level="INFO">${DESTBUCKET} = destbucket-41631</msg>
<status status="PASS" endtime="20210121 14:51:18.745" starttime="20210121 14:51:18.745"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:18.749" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-41631 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:19.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:19.338" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-41631"
}</msg>
<status status="PASS" endtime="20210121 14:51:19.338" starttime="20210121 14:51:18.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:19.340" level="INFO">{
    "Location": "http://s3g:9878/destbucket-41631"
}</msg>
<status status="PASS" endtime="20210121 14:51:19.340" starttime="20210121 14:51:19.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:19.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:19.340" starttime="20210121 14:51:19.340"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.341" starttime="20210121 14:51:18.747"></status>
</kw>
<msg timestamp="20210121 14:51:19.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:19.341" starttime="20210121 14:51:18.746"></status>
</kw>
<msg timestamp="20210121 14:51:19.341" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-41631"
}</msg>
<status status="PASS" endtime="20210121 14:51:19.341" starttime="20210121 14:51:18.746"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.342" starttime="20210121 14:51:18.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.342" starttime="20210121 14:51:18.743"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.342" starttime="20210121 14:51:18.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/copyfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:19.346" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210121 14:51:19.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:19.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:19.349" starttime="20210121 14:51:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:19.350" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:19.350" starttime="20210121 14:51:19.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:19.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:19.351" starttime="20210121 14:51:19.350"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.351" starttime="20210121 14:51:19.343"></status>
</kw>
<msg timestamp="20210121 14:51:19.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:19.351" starttime="20210121 14:51:19.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:19.351" starttime="20210121 14:51:19.342"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:19.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-82984 --key 45403/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:22.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:22.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:22.505" starttime="20210121 14:51:19.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:22.506" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:22.507" starttime="20210121 14:51:22.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:22.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:22.507" starttime="20210121 14:51:22.507"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:22.508" starttime="20210121 14:51:19.353"></status>
</kw>
<msg timestamp="20210121 14:51:22.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:22.508" starttime="20210121 14:51:19.353"></status>
</kw>
<msg timestamp="20210121 14:51:22.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:22.508" starttime="20210121 14:51:19.352"></status>
</kw>
<msg timestamp="20210121 14:51:22.508" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:22.509" starttime="20210121 14:51:19.351"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:22.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-82984 --prefix 45403/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:23.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:23.048" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:22.344Z", 
            "ETag": "2021-01-21T14:51:22.344Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:23.048" starttime="20210121 14:51:22.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:23.049" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:22.344Z", 
            "ETag": "2021-01-21T14:51:22.344Z", 
            "StorageClass": "STANDARD", 
            "Key": "45403/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:23.049" starttime="20210121 14:51:23.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:23.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:23.052" starttime="20210121 14:51:23.050"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:23.052" starttime="20210121 14:51:22.511"></status>
</kw>
<msg timestamp="20210121 14:51:23.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:23.052" starttime="20210121 14:51:22.510"></status>
</kw>
<msg timestamp="20210121 14:51:23.053" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:22.344Z", 
            "ETag": "2021-01-21T14:51:22.344Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:23.053" starttime="20210121 14:51:22.509"></status>
</kw>
<msg timestamp="20210121 14:51:23.053" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:22.344Z", 
            "ETag": "2021-01-21T14:51:22.344Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:23.053" starttime="20210121 14:51:22.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:23.054" starttime="20210121 14:51:23.053"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:23.059" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41631 --key 45403/copyobject/f1 --copy-source bucket-82984/45403/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:23.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:23.657" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:23.607Z", 
        "ETag": "504a6e33-ca7f-40f7-a9ba-f10c7775c9f4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:23.657" starttime="20210121 14:51:23.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:23.658" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:23.607Z", 
        "ETag": "504a6e33-ca7f-40f7-a9ba-f10c7775c9f4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:23.658" starttime="20210121 14:51:23.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:23.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:23.659" starttime="20210121 14:51:23.658"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:23.659" starttime="20210121 14:51:23.056"></status>
</kw>
<msg timestamp="20210121 14:51:23.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:23.659" starttime="20210121 14:51:23.055"></status>
</kw>
<msg timestamp="20210121 14:51:23.660" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:23.607Z", 
        "ETag": "504a6e33-ca7f-40f7-a9ba-f10c7775c9f4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:23.660" starttime="20210121 14:51:23.055"></status>
</kw>
<msg timestamp="20210121 14:51:23.660" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:23.607Z", 
        "ETag": "504a6e33-ca7f-40f7-a9ba-f10c7775c9f4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:23.660" starttime="20210121 14:51:23.054"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:23.665" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-41631 --prefix 45403/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:24.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:24.165" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:23.607Z", 
            "ETag": "2021-01-21T14:51:23.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:24.166" starttime="20210121 14:51:23.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:24.167" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:23.607Z", 
            "ETag": "2021-01-21T14:51:23.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "45403/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:24.167" starttime="20210121 14:51:24.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:24.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:24.168" starttime="20210121 14:51:24.167"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:24.168" starttime="20210121 14:51:23.662"></status>
</kw>
<msg timestamp="20210121 14:51:24.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:24.168" starttime="20210121 14:51:23.662"></status>
</kw>
<msg timestamp="20210121 14:51:24.168" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:23.607Z", 
            "ETag": "2021-01-21T14:51:23.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:24.168" starttime="20210121 14:51:23.661"></status>
</kw>
<msg timestamp="20210121 14:51:24.169" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:23.607Z", 
            "ETag": "2021-01-21T14:51:23.607Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:24.169" starttime="20210121 14:51:23.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:24.169" starttime="20210121 14:51:24.169"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:24.175" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41631 --key 45403/copyobject/f1 --copy-source bucket-82984/45403/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:24.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:24.757" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:24.702Z", 
        "ETag": "ade37e73-f360-4ca9-8a76-1155dbc383d4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:24.758" starttime="20210121 14:51:24.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:24.759" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:24.702Z", 
        "ETag": "ade37e73-f360-4ca9-8a76-1155dbc383d4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:24.759" starttime="20210121 14:51:24.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:24.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:24.760" starttime="20210121 14:51:24.759"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:24.760" starttime="20210121 14:51:24.171"></status>
</kw>
<msg timestamp="20210121 14:51:24.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:24.760" starttime="20210121 14:51:24.171"></status>
</kw>
<msg timestamp="20210121 14:51:24.760" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:24.702Z", 
        "ETag": "ade37e73-f360-4ca9-8a76-1155dbc383d4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:24.761" starttime="20210121 14:51:24.170"></status>
</kw>
<msg timestamp="20210121 14:51:24.761" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:24.702Z", 
        "ETag": "ade37e73-f360-4ca9-8a76-1155dbc383d4"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:24.761" starttime="20210121 14:51:24.170"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:24.766" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-41631 --prefix 45403/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:25.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:25.276" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:24.702Z", 
            "ETag": "2021-01-21T14:51:24.702Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:25.276" starttime="20210121 14:51:24.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:25.277" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:24.702Z", 
            "ETag": "2021-01-21T14:51:24.702Z", 
            "StorageClass": "STANDARD", 
            "Key": "45403/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:25.277" starttime="20210121 14:51:25.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:25.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:25.278" starttime="20210121 14:51:25.278"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:25.278" starttime="20210121 14:51:24.763"></status>
</kw>
<msg timestamp="20210121 14:51:25.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:25.279" starttime="20210121 14:51:24.762"></status>
</kw>
<msg timestamp="20210121 14:51:25.279" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:24.702Z", 
            "ETag": "2021-01-21T14:51:24.702Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:25.279" starttime="20210121 14:51:24.762"></status>
</kw>
<msg timestamp="20210121 14:51:25.279" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:24.702Z", 
            "ETag": "2021-01-21T14:51:24.702Z", 
            "StorageClass": "STANDARD", 
            "Key": "454...</msg>
<status status="PASS" endtime="20210121 14:51:25.279" starttime="20210121 14:51:24.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:25.280" starttime="20210121 14:51:25.280"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:25.280" critical="yes" starttime="20210121 14:51:18.742"></status>
</test>
<test id="s1-s11-s7-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:25.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 45403/copyobject/f1 --copy-source bucket-82984/45403/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:25.775" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:25.775" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:25.775" starttime="20210121 14:51:25.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:25.777" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:25.777" starttime="20210121 14:51:25.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:25.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:25.778" starttime="20210121 14:51:25.777"></status>
</kw>
<msg timestamp="20210121 14:51:25.778" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:25.778" starttime="20210121 14:51:25.283"></status>
</kw>
<msg timestamp="20210121 14:51:25.778" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:25.778" starttime="20210121 14:51:25.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:25.779" starttime="20210121 14:51:25.778"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:25.783" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41631 --key 45403/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/45403/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:26.254" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:26.254" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:26.254" starttime="20210121 14:51:25.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:26.256" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:26.256" starttime="20210121 14:51:26.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:26.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:26.257" starttime="20210121 14:51:26.256"></status>
</kw>
<msg timestamp="20210121 14:51:26.257" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:26.257" starttime="20210121 14:51:25.780"></status>
</kw>
<msg timestamp="20210121 14:51:26.257" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:26.257" starttime="20210121 14:51:25.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:26.258" starttime="20210121 14:51:26.258"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:26.258" critical="yes" starttime="20210121 14:51:25.281"></status>
</test>
<test id="s1-s11-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:26.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-41631 --key 45403/copyobject/f1 --copy-source destbucket-41631/45403/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:26.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:26.734" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:26.689Z", 
        "ETag": "d9b6fb76-8b6b-41ef-b08b-0c1509887b59"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:26.734" starttime="20210121 14:51:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:26.736" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:26.689Z", 
        "ETag": "d9b6fb76-8b6b-41ef-b08b-0c1509887b59"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:26.736" starttime="20210121 14:51:26.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:26.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:26.737" starttime="20210121 14:51:26.736"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:26.737" starttime="20210121 14:51:26.262"></status>
</kw>
<msg timestamp="20210121 14:51:26.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:26.738" starttime="20210121 14:51:26.261"></status>
</kw>
<msg timestamp="20210121 14:51:26.738" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:26.689Z", 
        "ETag": "d9b6fb76-8b6b-41ef-b08b-0c1509887b59"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:26.738" starttime="20210121 14:51:26.261"></status>
</kw>
<msg timestamp="20210121 14:51:26.738" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:51:26.689Z", 
        "ETag": "d9b6fb76-8b6b-41ef-b08b-0c1509887b59"
    }
}</msg>
<status status="PASS" endtime="20210121 14:51:26.738" starttime="20210121 14:51:26.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:26.739" starttime="20210121 14:51:26.738"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:26.739" critical="yes" starttime="20210121 14:51:26.259"></status>
</test>
<test id="s1-s11-s7-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:26.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41631 --key 45403/copyobject/f1 --copy-source bucket-82984/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:27.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:27.226" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:51:27.227" starttime="20210121 14:51:26.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:27.228" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:51:27.228" starttime="20210121 14:51:27.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:27.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:27.229" starttime="20210121 14:51:27.228"></status>
</kw>
<msg timestamp="20210121 14:51:27.229" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:51:27.229" starttime="20210121 14:51:26.741"></status>
</kw>
<msg timestamp="20210121 14:51:27.229" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:51:27.229" starttime="20210121 14:51:26.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:27.230" starttime="20210121 14:51:27.230"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:27.230" critical="yes" starttime="20210121 14:51:26.740"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:51:27.233" starttime="20210121 14:51:16.089"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectdelete.robot" id="s1-s11-s8" name="Objectdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:27.257" level="INFO">${random} = 40039</msg>
<status status="PASS" endtime="20210121 14:51:27.257" starttime="20210121 14:51:27.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:27.258" level="INFO">${PREFIX} = 40039</msg>
<status status="PASS" endtime="20210121 14:51:27.258" starttime="20210121 14:51:27.257"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.258" starttime="20210121 14:51:27.256"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.258" starttime="20210121 14:51:27.256"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:27.261" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:27.264" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:51:27.264" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:51:27.264" starttime="20210121 14:51:27.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:27.265" starttime="20210121 14:51:27.264"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:27.267" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:27.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:27.413" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:51:27.413" starttime="20210121 14:51:27.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:27.418" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:27.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:27.832" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:51:27.832" starttime="20210121 14:51:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:27.833" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:51:27.833" starttime="20210121 14:51:27.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:27.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:27.834" starttime="20210121 14:51:27.833"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.834" starttime="20210121 14:51:27.415"></status>
</kw>
<msg timestamp="20210121 14:51:27.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:27.834" starttime="20210121 14:51:27.415"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.835" starttime="20210121 14:51:27.415"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.835" starttime="20210121 14:51:27.414"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.835" starttime="20210121 14:51:27.413"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.835" starttime="20210121 14:51:27.259"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:27.835" starttime="20210121 14:51:27.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:27.837" starttime="20210121 14:51:27.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:27.837" starttime="20210121 14:51:27.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:27.842" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:28.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:28.206" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:28.206" starttime="20210121 14:51:27.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.207" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:28.207" starttime="20210121 14:51:28.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:28.208" starttime="20210121 14:51:28.207"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.208" starttime="20210121 14:51:27.839"></status>
</kw>
<msg timestamp="20210121 14:51:28.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:28.208" starttime="20210121 14:51:27.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.209" starttime="20210121 14:51:27.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:28.212" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:28.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:28.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:28.561" starttime="20210121 14:51:28.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.562" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:28.562" starttime="20210121 14:51:28.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:28.563" starttime="20210121 14:51:28.562"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.564" starttime="20210121 14:51:28.210"></status>
</kw>
<msg timestamp="20210121 14:51:28.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:28.564" starttime="20210121 14:51:28.209"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.564" starttime="20210121 14:51:28.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:28.568" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:28.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:28.911" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:28.911" starttime="20210121 14:51:28.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.912" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:28.912" starttime="20210121 14:51:28.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:28.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:28.912" starttime="20210121 14:51:28.912"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.913" starttime="20210121 14:51:28.565"></status>
</kw>
<msg timestamp="20210121 14:51:28.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:28.913" starttime="20210121 14:51:28.565"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:28.913" starttime="20210121 14:51:28.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:28.917" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:29.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:29.276" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:29.276" starttime="20210121 14:51:28.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.277" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:29.277" starttime="20210121 14:51:29.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:29.278" starttime="20210121 14:51:29.277"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.278" starttime="20210121 14:51:28.914"></status>
</kw>
<msg timestamp="20210121 14:51:29.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:29.278" starttime="20210121 14:51:28.914"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.279" starttime="20210121 14:51:28.913"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.279" starttime="20210121 14:51:27.838"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.279" starttime="20210121 14:51:27.838"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.279" starttime="20210121 14:51:27.836"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.279" starttime="20210121 14:51:27.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:51:29.281" level="INFO">${postfix} = 79436</msg>
<status status="PASS" endtime="20210121 14:51:29.281" starttime="20210121 14:51:29.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:51:29.281" level="INFO">${bucket} = bucket-79436</msg>
<status status="PASS" endtime="20210121 14:51:29.281" starttime="20210121 14:51:29.281"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:29.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-79436 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:29.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:29.864" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79436"
}</msg>
<status status="PASS" endtime="20210121 14:51:29.864" starttime="20210121 14:51:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.865" level="INFO">{
    "Location": "http://s3g:9878/bucket-79436"
}</msg>
<status status="PASS" endtime="20210121 14:51:29.865" starttime="20210121 14:51:29.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:29.866" starttime="20210121 14:51:29.866"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.866" starttime="20210121 14:51:29.283"></status>
</kw>
<msg timestamp="20210121 14:51:29.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:29.867" starttime="20210121 14:51:29.283"></status>
</kw>
<msg timestamp="20210121 14:51:29.867" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-79436"
}</msg>
<status status="PASS" endtime="20210121 14:51:29.867" starttime="20210121 14:51:29.282"></status>
</kw>
<msg timestamp="20210121 14:51:29.867" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-79436"
}</msg>
<status status="PASS" endtime="20210121 14:51:29.867" starttime="20210121 14:51:29.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:29.868" starttime="20210121 14:51:29.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:29.868" starttime="20210121 14:51:29.868"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.868" starttime="20210121 14:51:29.281"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.869" starttime="20210121 14:51:29.280"></status>
</kw>
<msg timestamp="20210121 14:51:29.869" level="INFO">${BUCKET} = bucket-79436</msg>
<status status="PASS" endtime="20210121 14:51:29.869" starttime="20210121 14:51:29.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.870" level="INFO">${BUCKET} = bucket-79436</msg>
<status status="PASS" endtime="20210121 14:51:29.870" starttime="20210121 14:51:29.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:29.870" starttime="20210121 14:51:29.870"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.870" starttime="20210121 14:51:27.255"></status>
</kw>
<test id="s1-s11-s8-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:29.876" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:51:29.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:29.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:29.879" starttime="20210121 14:51:29.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.880" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:29.880" starttime="20210121 14:51:29.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:29.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:29.881" starttime="20210121 14:51:29.880"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.881" starttime="20210121 14:51:29.872"></status>
</kw>
<msg timestamp="20210121 14:51:29.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:29.881" starttime="20210121 14:51:29.872"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:29.881" starttime="20210121 14:51:29.872"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:29.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-79436 --key 40039/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:31.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:31.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:31.165" starttime="20210121 14:51:29.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:31.166" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:31.167" starttime="20210121 14:51:31.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:31.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:31.167" starttime="20210121 14:51:31.167"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:31.168" starttime="20210121 14:51:29.883"></status>
</kw>
<msg timestamp="20210121 14:51:31.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:31.168" starttime="20210121 14:51:29.883"></status>
</kw>
<msg timestamp="20210121 14:51:31.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:31.168" starttime="20210121 14:51:29.882"></status>
</kw>
<msg timestamp="20210121 14:51:31.168" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:31.168" starttime="20210121 14:51:29.882"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:31.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-79436 --prefix 40039/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:31.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:31.642" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:31.024Z", 
            "ETag": "2021-01-21T14:51:31.024Z", 
            "StorageClass": "STANDARD", 
            "Key": "400...</msg>
<status status="PASS" endtime="20210121 14:51:31.642" starttime="20210121 14:51:31.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:31.643" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:31.024Z", 
            "ETag": "2021-01-21T14:51:31.024Z", 
            "StorageClass": "STANDARD", 
            "Key": "40039/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:31.643" starttime="20210121 14:51:31.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:31.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:31.644" starttime="20210121 14:51:31.643"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:31.644" starttime="20210121 14:51:31.170"></status>
</kw>
<msg timestamp="20210121 14:51:31.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:31.644" starttime="20210121 14:51:31.170"></status>
</kw>
<msg timestamp="20210121 14:51:31.645" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:31.024Z", 
            "ETag": "2021-01-21T14:51:31.024Z", 
            "StorageClass": "STANDARD", 
            "Key": "400...</msg>
<status status="PASS" endtime="20210121 14:51:31.645" starttime="20210121 14:51:31.169"></status>
</kw>
<msg timestamp="20210121 14:51:31.645" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:31.024Z", 
            "ETag": "2021-01-21T14:51:31.024Z", 
            "StorageClass": "STANDARD", 
            "Key": "400...</msg>
<status status="PASS" endtime="20210121 14:51:31.645" starttime="20210121 14:51:31.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:31.646" starttime="20210121 14:51:31.646"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:31.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key 40039/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:32.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:32.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:32.237" starttime="20210121 14:51:31.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:32.238" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:32.238" starttime="20210121 14:51:32.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:32.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:32.239" starttime="20210121 14:51:32.239"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:32.239" starttime="20210121 14:51:31.648"></status>
</kw>
<msg timestamp="20210121 14:51:32.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:32.240" starttime="20210121 14:51:31.647"></status>
</kw>
<msg timestamp="20210121 14:51:32.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:32.240" starttime="20210121 14:51:31.647"></status>
</kw>
<msg timestamp="20210121 14:51:32.240" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:32.240" starttime="20210121 14:51:31.646"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:32.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-79436 --prefix 40039/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:32.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:32.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:32.726" starttime="20210121 14:51:32.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:32.728" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:32.728" starttime="20210121 14:51:32.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:32.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:32.730" starttime="20210121 14:51:32.728"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:32.730" starttime="20210121 14:51:32.242"></status>
</kw>
<msg timestamp="20210121 14:51:32.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:32.731" starttime="20210121 14:51:32.242"></status>
</kw>
<msg timestamp="20210121 14:51:32.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:32.731" starttime="20210121 14:51:32.241"></status>
</kw>
<msg timestamp="20210121 14:51:32.732" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:32.732" starttime="20210121 14:51:32.240"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:32.733" starttime="20210121 14:51:32.732"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>500</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:32.733" starttime="20210121 14:51:32.733"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:32.733" critical="yes" starttime="20210121 14:51:29.871"></status>
</test>
<test id="s1-s11-s8-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:32.740" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:33.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:33.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:33.207" starttime="20210121 14:51:32.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:33.210" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:33.211" starttime="20210121 14:51:33.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:33.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:33.211" starttime="20210121 14:51:33.211"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:33.212" starttime="20210121 14:51:32.737"></status>
</kw>
<msg timestamp="20210121 14:51:33.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:33.212" starttime="20210121 14:51:32.737"></status>
</kw>
<msg timestamp="20210121 14:51:33.212" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:33.212" starttime="20210121 14:51:32.736"></status>
</kw>
<msg timestamp="20210121 14:51:33.213" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:33.213" starttime="20210121 14:51:32.736"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:33.213" starttime="20210121 14:51:33.213"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:33.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:33.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:33.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:33.804" starttime="20210121 14:51:33.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:33.805" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:33.806" starttime="20210121 14:51:33.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:33.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:33.807" starttime="20210121 14:51:33.806"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:33.807" starttime="20210121 14:51:33.215"></status>
</kw>
<msg timestamp="20210121 14:51:33.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:33.807" starttime="20210121 14:51:33.215"></status>
</kw>
<msg timestamp="20210121 14:51:33.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:33.808" starttime="20210121 14:51:33.214"></status>
</kw>
<msg timestamp="20210121 14:51:33.808" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:33.808" starttime="20210121 14:51:33.213"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:33.813" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:34.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:34.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:34.279" starttime="20210121 14:51:33.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.280" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:34.281" starttime="20210121 14:51:34.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:34.281" starttime="20210121 14:51:34.281"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:34.283" starttime="20210121 14:51:33.810"></status>
</kw>
<msg timestamp="20210121 14:51:34.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:34.283" starttime="20210121 14:51:33.809"></status>
</kw>
<msg timestamp="20210121 14:51:34.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:34.283" starttime="20210121 14:51:33.809"></status>
</kw>
<msg timestamp="20210121 14:51:34.284" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:34.284" starttime="20210121 14:51:33.808"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:34.284" starttime="20210121 14:51:34.284"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:34.284" critical="yes" starttime="20210121 14:51:32.735"></status>
</test>
<test id="s1-s11-s8-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:34.290" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:51:34.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:34.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:34.293" starttime="20210121 14:51:34.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.294" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:34.294" starttime="20210121 14:51:34.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:34.295" starttime="20210121 14:51:34.294"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:34.295" starttime="20210121 14:51:34.287"></status>
</kw>
<msg timestamp="20210121 14:51:34.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:34.295" starttime="20210121 14:51:34.287"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:34.295" starttime="20210121 14:51:34.286"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:34.300" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-79436/40039/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:34.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:34.871" level="INFO">${output} = Completed 29 Bytes/29 Bytes (340 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapidir/f1</msg>
<status status="PASS" endtime="20210121 14:51:34.871" starttime="20210121 14:51:34.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.872" level="INFO">Completed 29 Bytes/29 Bytes (340 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapidir/f1</msg>
<status status="PASS" endtime="20210121 14:51:34.873" starttime="20210121 14:51:34.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:34.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:34.874" starttime="20210121 14:51:34.873"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:34.874" starttime="20210121 14:51:34.297"></status>
</kw>
<msg timestamp="20210121 14:51:34.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:34.874" starttime="20210121 14:51:34.297"></status>
</kw>
<msg timestamp="20210121 14:51:34.874" level="INFO">${output} = Completed 29 Bytes/29 Bytes (340 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapidir/f1</msg>
<status status="PASS" endtime="20210121 14:51:34.874" starttime="20210121 14:51:34.296"></status>
</kw>
<msg timestamp="20210121 14:51:34.875" level="INFO">${result} = Completed 29 Bytes/29 Bytes (340 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapidir/f1</msg>
<status status="PASS" endtime="20210121 14:51:34.875" starttime="20210121 14:51:34.296"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:34.880" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/40039/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:35.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:35.342" level="INFO">${output} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:35.342" starttime="20210121 14:51:34.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:35.343" level="INFO">2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:35.343" starttime="20210121 14:51:35.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:35.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:35.344" starttime="20210121 14:51:35.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:35.344" starttime="20210121 14:51:34.877"></status>
</kw>
<msg timestamp="20210121 14:51:35.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:35.344" starttime="20210121 14:51:34.877"></status>
</kw>
<msg timestamp="20210121 14:51:35.345" level="INFO">${output} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:35.345" starttime="20210121 14:51:34.876"></status>
</kw>
<msg timestamp="20210121 14:51:35.345" level="INFO">${result} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:35.345" starttime="20210121 14:51:34.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:35.346" starttime="20210121 14:51:35.345"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:35.351" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key 40039/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:35.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:35.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:35.995" starttime="20210121 14:51:35.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:35.996" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:35.996" starttime="20210121 14:51:35.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:35.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:35.997" starttime="20210121 14:51:35.996"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:35.997" starttime="20210121 14:51:35.348"></status>
</kw>
<msg timestamp="20210121 14:51:35.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:35.997" starttime="20210121 14:51:35.347"></status>
</kw>
<msg timestamp="20210121 14:51:35.998" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:35.998" starttime="20210121 14:51:35.347"></status>
</kw>
<msg timestamp="20210121 14:51:35.998" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:35.998" starttime="20210121 14:51:35.346"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:36.006" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/40039/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:36.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:36.472" level="INFO">${output} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:36.472" starttime="20210121 14:51:36.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:36.475" level="INFO">2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:36.475" starttime="20210121 14:51:36.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:36.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:36.475" starttime="20210121 14:51:36.475"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:36.476" starttime="20210121 14:51:36.002"></status>
</kw>
<msg timestamp="20210121 14:51:36.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:36.476" starttime="20210121 14:51:36.002"></status>
</kw>
<msg timestamp="20210121 14:51:36.476" level="INFO">${output} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:36.476" starttime="20210121 14:51:36.000"></status>
</kw>
<msg timestamp="20210121 14:51:36.476" level="INFO">${result} = 2021-01-21 14:51:34         29 f1</msg>
<status status="PASS" endtime="20210121 14:51:36.476" starttime="20210121 14:51:35.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:36.477" starttime="20210121 14:51:36.477"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:36.482" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key 40039/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:37.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:37.104" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:37.104" starttime="20210121 14:51:36.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.106" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:37.106" starttime="20210121 14:51:37.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:37.106" starttime="20210121 14:51:37.106"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:37.107" starttime="20210121 14:51:36.479"></status>
</kw>
<msg timestamp="20210121 14:51:37.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:37.107" starttime="20210121 14:51:36.478"></status>
</kw>
<msg timestamp="20210121 14:51:37.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:37.107" starttime="20210121 14:51:36.478"></status>
</kw>
<msg timestamp="20210121 14:51:37.108" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:37.108" starttime="20210121 14:51:36.477"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:37.108" critical="yes" starttime="20210121 14:51:34.285"></status>
</test>
<test id="s1-s11-s8-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:37.113" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:51:37.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:37.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:37.116" starttime="20210121 14:51:37.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.117" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:37.117" starttime="20210121 14:51:37.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:37.118" starttime="20210121 14:51:37.117"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:37.118" starttime="20210121 14:51:37.111"></status>
</kw>
<msg timestamp="20210121 14:51:37.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:37.118" starttime="20210121 14:51:37.110"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:37.119" starttime="20210121 14:51:37.110"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:37.123" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-79436/40039/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:37.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:37.695" level="INFO">${output} = Completed 29 Bytes/29 Bytes (381 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:51:37.695" starttime="20210121 14:51:37.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.697" level="INFO">Completed 29 Bytes/29 Bytes (381 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:51:37.697" starttime="20210121 14:51:37.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:37.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:37.697" starttime="20210121 14:51:37.697"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:37.698" starttime="20210121 14:51:37.120"></status>
</kw>
<msg timestamp="20210121 14:51:37.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:37.698" starttime="20210121 14:51:37.120"></status>
</kw>
<msg timestamp="20210121 14:51:37.698" level="INFO">${output} = Completed 29 Bytes/29 Bytes (381 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:51:37.698" starttime="20210121 14:51:37.119"></status>
</kw>
<msg timestamp="20210121 14:51:37.699" level="INFO">${result} = Completed 29 Bytes/29 Bytes (381 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-79436/40039/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:51:37.699" starttime="20210121 14:51:37.119"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:37.706" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/40039/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:38.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:38.158" level="INFO">${output} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:38.158" starttime="20210121 14:51:37.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:38.159" level="INFO">2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:38.159" starttime="20210121 14:51:38.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:38.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:38.160" starttime="20210121 14:51:38.159"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:38.160" starttime="20210121 14:51:37.701"></status>
</kw>
<msg timestamp="20210121 14:51:38.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:38.161" starttime="20210121 14:51:37.700"></status>
</kw>
<msg timestamp="20210121 14:51:38.161" level="INFO">${output} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:38.161" starttime="20210121 14:51:37.700"></status>
</kw>
<msg timestamp="20210121 14:51:38.161" level="INFO">${result} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:38.161" starttime="20210121 14:51:37.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:38.162" starttime="20210121 14:51:38.162"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:38.166" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key 40039/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:38.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:38.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:38.781" starttime="20210121 14:51:38.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:38.782" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:38.782" starttime="20210121 14:51:38.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:38.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:38.783" starttime="20210121 14:51:38.782"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:38.783" starttime="20210121 14:51:38.164"></status>
</kw>
<msg timestamp="20210121 14:51:38.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:38.783" starttime="20210121 14:51:38.163"></status>
</kw>
<msg timestamp="20210121 14:51:38.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:38.784" starttime="20210121 14:51:38.163"></status>
</kw>
<msg timestamp="20210121 14:51:38.784" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:38.784" starttime="20210121 14:51:38.162"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:38.789" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-79436/40039/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:39.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:39.258" level="INFO">${output} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:39.258" starttime="20210121 14:51:38.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:39.259" level="INFO">2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:39.259" starttime="20210121 14:51:39.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:39.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:39.260" starttime="20210121 14:51:39.259"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:39.260" starttime="20210121 14:51:38.786"></status>
</kw>
<msg timestamp="20210121 14:51:39.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:39.260" starttime="20210121 14:51:38.786"></status>
</kw>
<msg timestamp="20210121 14:51:39.260" level="INFO">${output} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:39.260" starttime="20210121 14:51:38.785"></status>
</kw>
<msg timestamp="20210121 14:51:39.261" level="INFO">${result} = 2021-01-21 14:51:37         29 filefile</msg>
<status status="PASS" endtime="20210121 14:51:39.261" starttime="20210121 14:51:38.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:39.261" starttime="20210121 14:51:39.261"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:39.267" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436 --key 40039/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:39.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:39.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:39.864" starttime="20210121 14:51:39.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:39.865" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:39.865" starttime="20210121 14:51:39.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:39.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:39.866" starttime="20210121 14:51:39.866"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:39.867" starttime="20210121 14:51:39.264"></status>
</kw>
<msg timestamp="20210121 14:51:39.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:39.867" starttime="20210121 14:51:39.263"></status>
</kw>
<msg timestamp="20210121 14:51:39.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:39.867" starttime="20210121 14:51:39.262"></status>
</kw>
<msg timestamp="20210121 14:51:39.867" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:39.867" starttime="20210121 14:51:39.262"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:39.868" critical="yes" starttime="20210121 14:51:37.109"></status>
</test>
<test id="s1-s11-s8-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:39.873" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-79436-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:40.388" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:40.388" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:40.388" starttime="20210121 14:51:39.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:40.390" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:40.390" starttime="20210121 14:51:40.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:40.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:40.391" starttime="20210121 14:51:40.390"></status>
</kw>
<msg timestamp="20210121 14:51:40.391" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:40.391" starttime="20210121 14:51:39.870"></status>
</kw>
<msg timestamp="20210121 14:51:40.391" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:51:40.391" starttime="20210121 14:51:39.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:40.392" starttime="20210121 14:51:40.391"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:40.392" critical="yes" starttime="20210121 14:51:39.869"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:51:40.394" starttime="20210121 14:51:27.238"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectmultidelete.robot" id="s1-s11-s9" name="Objectmultidelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:40.409" level="INFO">${random} = 65931</msg>
<status status="PASS" endtime="20210121 14:51:40.409" starttime="20210121 14:51:40.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:40.410" level="INFO">${PREFIX} = 65931</msg>
<status status="PASS" endtime="20210121 14:51:40.410" starttime="20210121 14:51:40.409"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:40.410" starttime="20210121 14:51:40.408"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:40.411" starttime="20210121 14:51:40.408"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:40.414" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:40.416" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:51:40.417" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:51:40.417" starttime="20210121 14:51:40.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:40.418" starttime="20210121 14:51:40.417"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:40.420" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:40.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:40.585" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:51:40.585" starttime="20210121 14:51:40.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:40.591" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:41.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:41.003" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:51:41.003" starttime="20210121 14:51:40.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.004" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:51:41.004" starttime="20210121 14:51:41.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:41.004" starttime="20210121 14:51:41.004"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.005" starttime="20210121 14:51:40.588"></status>
</kw>
<msg timestamp="20210121 14:51:41.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:41.005" starttime="20210121 14:51:40.587"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.005" starttime="20210121 14:51:40.587"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.005" starttime="20210121 14:51:40.587"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.006" starttime="20210121 14:51:40.586"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.006" starttime="20210121 14:51:40.411"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.006" starttime="20210121 14:51:40.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:41.007" starttime="20210121 14:51:41.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:41.008" starttime="20210121 14:51:41.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:41.012" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:41.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:41.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:41.401" starttime="20210121 14:51:41.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.402" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:41.402" starttime="20210121 14:51:41.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:41.402" starttime="20210121 14:51:41.402"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.403" starttime="20210121 14:51:41.010"></status>
</kw>
<msg timestamp="20210121 14:51:41.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:41.403" starttime="20210121 14:51:41.009"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.403" starttime="20210121 14:51:41.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:41.407" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:41.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:41.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:41.750" starttime="20210121 14:51:41.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.751" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:41.751" starttime="20210121 14:51:41.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:41.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:41.752" starttime="20210121 14:51:41.751"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.752" starttime="20210121 14:51:41.404"></status>
</kw>
<msg timestamp="20210121 14:51:41.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:41.752" starttime="20210121 14:51:41.404"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:41.753" starttime="20210121 14:51:41.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:41.756" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:42.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:42.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:42.111" starttime="20210121 14:51:41.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:42.112" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:42.112" starttime="20210121 14:51:42.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:42.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:42.113" starttime="20210121 14:51:42.112"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.113" starttime="20210121 14:51:41.754"></status>
</kw>
<msg timestamp="20210121 14:51:42.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:42.113" starttime="20210121 14:51:41.753"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.113" starttime="20210121 14:51:41.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:42.118" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:42.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:42.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:42.476" starttime="20210121 14:51:42.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:42.477" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:42.477" starttime="20210121 14:51:42.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:42.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:42.478" starttime="20210121 14:51:42.477"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.478" starttime="20210121 14:51:42.114"></status>
</kw>
<msg timestamp="20210121 14:51:42.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:42.114"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:42.114"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:41.009"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:41.008"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:41.007"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:42.479" starttime="20210121 14:51:41.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:51:42.481" level="INFO">${postfix} = 14817</msg>
<status status="PASS" endtime="20210121 14:51:42.481" starttime="20210121 14:51:42.480"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:51:42.482" level="INFO">${bucket} = bucket-14817</msg>
<status status="PASS" endtime="20210121 14:51:42.482" starttime="20210121 14:51:42.481"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:42.487" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-14817 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:43.013" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-14817"
}</msg>
<status status="PASS" endtime="20210121 14:51:43.013" starttime="20210121 14:51:42.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.014" level="INFO">{
    "Location": "http://s3g:9878/bucket-14817"
}</msg>
<status status="PASS" endtime="20210121 14:51:43.014" starttime="20210121 14:51:43.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:43.015" starttime="20210121 14:51:43.014"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.015" starttime="20210121 14:51:42.484"></status>
</kw>
<msg timestamp="20210121 14:51:43.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:43.015" starttime="20210121 14:51:42.483"></status>
</kw>
<msg timestamp="20210121 14:51:43.016" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-14817"
}</msg>
<status status="PASS" endtime="20210121 14:51:43.016" starttime="20210121 14:51:42.483"></status>
</kw>
<msg timestamp="20210121 14:51:43.016" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-14817"
}</msg>
<status status="PASS" endtime="20210121 14:51:43.017" starttime="20210121 14:51:42.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:43.017" starttime="20210121 14:51:43.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:43.018" starttime="20210121 14:51:43.017"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.018" starttime="20210121 14:51:42.482"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.018" starttime="20210121 14:51:42.480"></status>
</kw>
<msg timestamp="20210121 14:51:43.018" level="INFO">${BUCKET} = bucket-14817</msg>
<status status="PASS" endtime="20210121 14:51:43.018" starttime="20210121 14:51:42.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.019" level="INFO">${BUCKET} = bucket-14817</msg>
<status status="PASS" endtime="20210121 14:51:43.019" starttime="20210121 14:51:43.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:43.019" starttime="20210121 14:51:43.019"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.020" starttime="20210121 14:51:40.407"></status>
</kw>
<test id="s1-s11-s9-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:43.025" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:51:43.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:43.028" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:43.028" starttime="20210121 14:51:43.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.029" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:43.029" starttime="20210121 14:51:43.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:43.030" starttime="20210121 14:51:43.029"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.030" starttime="20210121 14:51:43.022"></status>
</kw>
<msg timestamp="20210121 14:51:43.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:43.030" starttime="20210121 14:51:43.022"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.031" starttime="20210121 14:51:43.021"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:43.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-14817 --key 65931/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:43.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:43.740" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:43.740" starttime="20210121 14:51:43.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.741" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:43.741" starttime="20210121 14:51:43.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:43.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:43.742" starttime="20210121 14:51:43.741"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:43.742" starttime="20210121 14:51:43.034"></status>
</kw>
<msg timestamp="20210121 14:51:43.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:43.742" starttime="20210121 14:51:43.034"></status>
</kw>
<msg timestamp="20210121 14:51:43.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:43.743" starttime="20210121 14:51:43.031"></status>
</kw>
<msg timestamp="20210121 14:51:43.743" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:43.743" starttime="20210121 14:51:43.031"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:43.748" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-14817 --key 65931/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:44.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:44.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:44.422" starttime="20210121 14:51:43.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:44.423" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:44.423" starttime="20210121 14:51:44.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:44.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:44.424" starttime="20210121 14:51:44.424"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:44.425" starttime="20210121 14:51:43.745"></status>
</kw>
<msg timestamp="20210121 14:51:44.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:44.425" starttime="20210121 14:51:43.745"></status>
</kw>
<msg timestamp="20210121 14:51:44.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:44.425" starttime="20210121 14:51:43.744"></status>
</kw>
<msg timestamp="20210121 14:51:44.426" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:44.426" starttime="20210121 14:51:43.743"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:44.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-14817 --key 65931/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:44.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:44.987" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:44.987" starttime="20210121 14:51:44.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:44.988" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:44.989" starttime="20210121 14:51:44.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:44.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:44.989" starttime="20210121 14:51:44.989"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:44.990" starttime="20210121 14:51:44.427"></status>
</kw>
<msg timestamp="20210121 14:51:44.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:44.990" starttime="20210121 14:51:44.427"></status>
</kw>
<msg timestamp="20210121 14:51:44.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:44.990" starttime="20210121 14:51:44.426"></status>
</kw>
<msg timestamp="20210121 14:51:44.991" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:44.991" starttime="20210121 14:51:44.426"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:44.995" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-14817 --prefix 65931/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:45.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:45.496" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:43.570Z", 
            "ETag": "2021-01-21T14:51:43.570Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:45.496" starttime="20210121 14:51:44.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:45.498" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:43.570Z", 
            "ETag": "2021-01-21T14:51:43.570Z", 
            "StorageClass": "STANDARD", 
            "Key": "65931/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-01-21T14:51:44.259Z", 
            "ETag": "2021-01-21T14:51:44.259Z", 
            "StorageClass": "STANDARD", 
            "Key": "65931/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-01-21T14:51:44.938Z", 
            "ETag": "2021-01-21T14:51:44.938Z", 
            "StorageClass": "STANDARD", 
            "Key": "65931/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:45.498" starttime="20210121 14:51:45.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:45.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:45.499" starttime="20210121 14:51:45.498"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:45.499" starttime="20210121 14:51:44.992"></status>
</kw>
<msg timestamp="20210121 14:51:45.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:45.499" starttime="20210121 14:51:44.992"></status>
</kw>
<msg timestamp="20210121 14:51:45.500" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:43.570Z", 
            "ETag": "2021-01-21T14:51:43.570Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:45.500" starttime="20210121 14:51:44.991"></status>
</kw>
<msg timestamp="20210121 14:51:45.500" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:43.570Z", 
            "ETag": "2021-01-21T14:51:43.570Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:45.500" starttime="20210121 14:51:44.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:45.501" starttime="20210121 14:51:45.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:45.501" starttime="20210121 14:51:45.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:45.502" starttime="20210121 14:51:45.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:45.503" starttime="20210121 14:51:45.502"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:45.503" starttime="20210121 14:51:45.503"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:45.508" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-14817 --delete 'Objects=[{Key=65931/multidelete/f1},{Key=65931/multidelete/f2},{Key=65931/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:46.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:46.163" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "65931/multidelete/f1"
        }, 
        {
            "Key": "65931/multidelete/f2"
        }, 
        {
            "Key": "65931/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:51:46.163" starttime="20210121 14:51:45.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:46.164" level="INFO">{
    "Deleted": [
        {
            "Key": "65931/multidelete/f1"
        }, 
        {
            "Key": "65931/multidelete/f2"
        }, 
        {
            "Key": "65931/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:46.164" starttime="20210121 14:51:46.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:46.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:46.165" starttime="20210121 14:51:46.164"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:46.165" starttime="20210121 14:51:45.505"></status>
</kw>
<msg timestamp="20210121 14:51:46.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:46.166" starttime="20210121 14:51:45.505"></status>
</kw>
<msg timestamp="20210121 14:51:46.166" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "65931/multidelete/f1"
        }, 
        {
            "Key": "65931/multidelete/f2"
        }, 
        {
            "Key": "65931/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:51:46.166" starttime="20210121 14:51:45.504"></status>
</kw>
<msg timestamp="20210121 14:51:46.166" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "65931/multidelete/f1"
        }, 
        {
            "Key": "65931/multidelete/f2"
        }, 
        {
            "Key": "65931/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:51:46.166" starttime="20210121 14:51:45.503"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Error</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.167" starttime="20210121 14:51:46.166"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:46.172" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-14817 --prefix 65931/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:46.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:46.633" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:44.938Z", 
            "ETag": "2021-01-21T14:51:44.938Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:46.633" starttime="20210121 14:51:46.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:46.634" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:44.938Z", 
            "ETag": "2021-01-21T14:51:44.938Z", 
            "StorageClass": "STANDARD", 
            "Key": "65931/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:46.634" starttime="20210121 14:51:46.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:46.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:46.635" starttime="20210121 14:51:46.634"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:46.635" starttime="20210121 14:51:46.169"></status>
</kw>
<msg timestamp="20210121 14:51:46.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:46.635" starttime="20210121 14:51:46.168"></status>
</kw>
<msg timestamp="20210121 14:51:46.636" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:44.938Z", 
            "ETag": "2021-01-21T14:51:44.938Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:46.636" starttime="20210121 14:51:46.168"></status>
</kw>
<msg timestamp="20210121 14:51:46.636" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:44.938Z", 
            "ETag": "2021-01-21T14:51:44.938Z", 
            "StorageClass": "STANDARD", 
            "Key": "659...</msg>
<status status="PASS" endtime="20210121 14:51:46.636" starttime="20210121 14:51:46.167"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.637" starttime="20210121 14:51:46.636"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.637" starttime="20210121 14:51:46.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.638" starttime="20210121 14:51:46.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.638" starttime="20210121 14:51:46.638"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.639" starttime="20210121 14:51:46.639"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:46.639" critical="yes" starttime="20210121 14:51:43.020"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:51:46.640" starttime="20210121 14:51:40.397"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectputget.robot" id="s1-s11-s10" name="Objectputget">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:51:46.655" level="INFO">${random} = 93153</msg>
<status status="PASS" endtime="20210121 14:51:46.655" starttime="20210121 14:51:46.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:51:46.656" level="INFO">${PREFIX} = 93153</msg>
<status status="PASS" endtime="20210121 14:51:46.656" starttime="20210121 14:51:46.655"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:46.656" starttime="20210121 14:51:46.654"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:46.656" starttime="20210121 14:51:46.654"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:46.659" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:46.661" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:51:46.661" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:51:46.661" starttime="20210121 14:51:46.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:46.662" starttime="20210121 14:51:46.662"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:46.664" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:46.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:46.807" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:51:46.807" starttime="20210121 14:51:46.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:46.812" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:47.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:47.213" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:51:47.213" starttime="20210121 14:51:46.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.214" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:51:47.214" starttime="20210121 14:51:47.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:47.215" starttime="20210121 14:51:47.215"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.216" starttime="20210121 14:51:46.809"></status>
</kw>
<msg timestamp="20210121 14:51:47.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:47.216" starttime="20210121 14:51:46.809"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.216" starttime="20210121 14:51:46.808"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.216" starttime="20210121 14:51:46.808"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.216" starttime="20210121 14:51:46.807"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.217" starttime="20210121 14:51:46.656"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.217" starttime="20210121 14:51:46.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:47.218" starttime="20210121 14:51:47.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:47.219" starttime="20210121 14:51:47.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:47.224" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:47.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:47.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:47.582" starttime="20210121 14:51:47.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.583" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:47.583" starttime="20210121 14:51:47.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:47.584" starttime="20210121 14:51:47.584"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.584" starttime="20210121 14:51:47.221"></status>
</kw>
<msg timestamp="20210121 14:51:47.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:47.585" starttime="20210121 14:51:47.221"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.585" starttime="20210121 14:51:47.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:47.589" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:47.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:47.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:47.931" starttime="20210121 14:51:47.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.932" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:47.932" starttime="20210121 14:51:47.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:47.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:47.933" starttime="20210121 14:51:47.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.934" starttime="20210121 14:51:47.586"></status>
</kw>
<msg timestamp="20210121 14:51:47.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:47.934" starttime="20210121 14:51:47.586"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:47.934" starttime="20210121 14:51:47.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:47.938" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:48.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:48.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:48.293" starttime="20210121 14:51:47.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:48.294" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:48.294" starttime="20210121 14:51:48.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:48.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:48.295" starttime="20210121 14:51:48.294"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.295" starttime="20210121 14:51:47.935"></status>
</kw>
<msg timestamp="20210121 14:51:48.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:48.295" starttime="20210121 14:51:47.935"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.296" starttime="20210121 14:51:47.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:48.300" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:48.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:48.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:48.649" starttime="20210121 14:51:48.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:48.650" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:48.650" starttime="20210121 14:51:48.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:48.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:48.651" starttime="20210121 14:51:48.650"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.651" starttime="20210121 14:51:48.297"></status>
</kw>
<msg timestamp="20210121 14:51:48.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:48.651" starttime="20210121 14:51:48.297"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.651" starttime="20210121 14:51:48.296"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.652" starttime="20210121 14:51:47.220"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.652" starttime="20210121 14:51:47.220"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.652" starttime="20210121 14:51:47.217"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:48.652" starttime="20210121 14:51:47.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:51:48.654" level="INFO">${postfix} = 22809</msg>
<status status="PASS" endtime="20210121 14:51:48.654" starttime="20210121 14:51:48.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:51:48.654" level="INFO">${bucket} = bucket-22809</msg>
<status status="PASS" endtime="20210121 14:51:48.654" starttime="20210121 14:51:48.654"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:48.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-22809 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:49.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:49.269" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-22809"
}</msg>
<status status="PASS" endtime="20210121 14:51:49.269" starttime="20210121 14:51:48.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.270" level="INFO">{
    "Location": "http://s3g:9878/bucket-22809"
}</msg>
<status status="PASS" endtime="20210121 14:51:49.270" starttime="20210121 14:51:49.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:49.271" starttime="20210121 14:51:49.270"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.271" starttime="20210121 14:51:48.656"></status>
</kw>
<msg timestamp="20210121 14:51:49.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:49.271" starttime="20210121 14:51:48.656"></status>
</kw>
<msg timestamp="20210121 14:51:49.271" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-22809"
}</msg>
<status status="PASS" endtime="20210121 14:51:49.272" starttime="20210121 14:51:48.655"></status>
</kw>
<msg timestamp="20210121 14:51:49.272" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-22809"
}</msg>
<status status="PASS" endtime="20210121 14:51:49.272" starttime="20210121 14:51:48.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:49.272" starttime="20210121 14:51:49.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:49.273" starttime="20210121 14:51:49.272"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.273" starttime="20210121 14:51:48.654"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.273" starttime="20210121 14:51:48.653"></status>
</kw>
<msg timestamp="20210121 14:51:49.273" level="INFO">${BUCKET} = bucket-22809</msg>
<status status="PASS" endtime="20210121 14:51:49.274" starttime="20210121 14:51:48.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.274" level="INFO">${BUCKET} = bucket-22809</msg>
<status status="PASS" endtime="20210121 14:51:49.274" starttime="20210121 14:51:49.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:49.275" starttime="20210121 14:51:49.274"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.275" starttime="20210121 14:51:46.653"></status>
</kw>
<test id="s1-s11-s10-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arguments>
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:49.283" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:51:49.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:49.286" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:49.286" starttime="20210121 14:51:49.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.287" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:49.287" starttime="20210121 14:51:49.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:49.288" starttime="20210121 14:51:49.288"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.289" starttime="20210121 14:51:49.278"></status>
</kw>
<msg timestamp="20210121 14:51:49.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:49.289" starttime="20210121 14:51:49.277"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.290" starttime="20210121 14:51:49.276"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:49.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-22809 --key 93153/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:49.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:49.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:49.922" starttime="20210121 14:51:49.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.924" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:49.924" starttime="20210121 14:51:49.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:49.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:49.925" starttime="20210121 14:51:49.924"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:49.925" starttime="20210121 14:51:49.292"></status>
</kw>
<msg timestamp="20210121 14:51:49.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:49.925" starttime="20210121 14:51:49.292"></status>
</kw>
<msg timestamp="20210121 14:51:49.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:49.926" starttime="20210121 14:51:49.291"></status>
</kw>
<msg timestamp="20210121 14:51:49.926" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:49.926" starttime="20210121 14:51:49.290"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:49.931" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-22809 --prefix 93153/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:50.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:50.424" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:50.424" starttime="20210121 14:51:49.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.425" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "93153/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:50.425" starttime="20210121 14:51:50.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:50.426" starttime="20210121 14:51:50.425"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:50.426" starttime="20210121 14:51:49.928"></status>
</kw>
<msg timestamp="20210121 14:51:50.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:50.426" starttime="20210121 14:51:49.928"></status>
</kw>
<msg timestamp="20210121 14:51:50.427" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:50.427" starttime="20210121 14:51:49.927"></status>
</kw>
<msg timestamp="20210121 14:51:50.427" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:50.427" starttime="20210121 14:51:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:50.428" starttime="20210121 14:51:50.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>touch -f /tmp/zerobyte</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:50.432" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:50.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:50.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:50.435" starttime="20210121 14:51:50.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.437" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:50.437" starttime="20210121 14:51:50.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:50.438" starttime="20210121 14:51:50.437"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:50.438" starttime="20210121 14:51:50.429"></status>
</kw>
<msg timestamp="20210121 14:51:50.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:50.438" starttime="20210121 14:51:50.428"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:50.439" starttime="20210121 14:51:50.428"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:50.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-22809 --key 93153/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:50.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:50.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:50.942" starttime="20210121 14:51:50.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.943" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:51:50.943" starttime="20210121 14:51:50.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:50.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:50.944" starttime="20210121 14:51:50.943"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:50.944" starttime="20210121 14:51:50.441"></status>
</kw>
<msg timestamp="20210121 14:51:50.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:50.944" starttime="20210121 14:51:50.441"></status>
</kw>
<msg timestamp="20210121 14:51:50.945" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:51:50.945" starttime="20210121 14:51:50.440"></status>
</kw>
<msg timestamp="20210121 14:51:50.945" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:51:50.945" starttime="20210121 14:51:50.439"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:50.949" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-22809 --prefix 93153/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:51.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:51.431" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:51.432" starttime="20210121 14:51:50.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.433" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "93153/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-01-21T14:51:50.897Z", 
            "ETag": "2021-01-21T14:51:50.897Z", 
            "StorageClass": "STANDARD", 
            "Key": "93153/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:51:51.433" starttime="20210121 14:51:51.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:51.434" starttime="20210121 14:51:51.433"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:51.434" starttime="20210121 14:51:50.947"></status>
</kw>
<msg timestamp="20210121 14:51:51.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:51.434" starttime="20210121 14:51:50.946"></status>
</kw>
<msg timestamp="20210121 14:51:51.434" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:51.435" starttime="20210121 14:51:50.946"></status>
</kw>
<msg timestamp="20210121 14:51:51.435" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:51:49.773Z", 
            "ETag": "2021-01-21T14:51:49.773Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:51:51.435" starttime="20210121 14:51:50.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>zerobyte</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:51.435" starttime="20210121 14:51:51.435"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:51.436" critical="yes" starttime="20210121 14:51:49.275"></status>
</test>
<test id="s1-s11-s10-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:51.442" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:51.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:51.934" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:51.934" starttime="20210121 14:51:51.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.935" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:51 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:51.935" starttime="20210121 14:51:51.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:51.936" starttime="20210121 14:51:51.936"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:51.936" starttime="20210121 14:51:51.439"></status>
</kw>
<msg timestamp="20210121 14:51:51.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:51.937" starttime="20210121 14:51:51.439"></status>
</kw>
<msg timestamp="20210121 14:51:51.937" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:51.937" starttime="20210121 14:51:51.438"></status>
</kw>
<msg timestamp="20210121 14:51:51.938" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:51.938" starttime="20210121 14:51:51.438"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:51.942" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:51.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:51.946" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.946" starttime="20210121 14:51:51.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.947" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.947" starttime="20210121 14:51:51.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:51.948" starttime="20210121 14:51:51.947"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:51.948" starttime="20210121 14:51:51.940"></status>
</kw>
<msg timestamp="20210121 14:51:51.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:51.948" starttime="20210121 14:51:51.939"></status>
</kw>
<msg timestamp="20210121 14:51:51.949" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.949" starttime="20210121 14:51:51.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:51.952" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:51.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:51.955" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.955" starttime="20210121 14:51:51.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.956" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.956" starttime="20210121 14:51:51.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:51.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:51.957" starttime="20210121 14:51:51.956"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:51.957" starttime="20210121 14:51:51.950"></status>
</kw>
<msg timestamp="20210121 14:51:51.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:51.958" starttime="20210121 14:51:51.950"></status>
</kw>
<msg timestamp="20210121 14:51:51.958" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:51:51.958" starttime="20210121 14:51:51.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:51.959" starttime="20210121 14:51:51.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:51.959" starttime="20210121 14:51:51.938"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:51.959" critical="yes" starttime="20210121 14:51:51.437"></status>
</test>
<test id="s1-s11-s10-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:51.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:52.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:52.496" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:52.496" starttime="20210121 14:51:51.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.497" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:52 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:52.497" starttime="20210121 14:51:52.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:52.498" starttime="20210121 14:51:52.498"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:52.499" starttime="20210121 14:51:51.963"></status>
</kw>
<msg timestamp="20210121 14:51:52.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:52.499" starttime="20210121 14:51:51.962"></status>
</kw>
<msg timestamp="20210121 14:51:52.499" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:52.499" starttime="20210121 14:51:51.962"></status>
</kw>
<msg timestamp="20210121 14:51:52.500" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:52.500" starttime="20210121 14:51:51.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:52.500" starttime="20210121 14:51:52.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:52.501" starttime="20210121 14:51:52.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:52.502" starttime="20210121 14:51:52.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:52.506" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:52.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:52.509" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.509" starttime="20210121 14:51:52.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.510" level="INFO">Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.510" starttime="20210121 14:51:52.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:52.511" starttime="20210121 14:51:52.510"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:52.511" starttime="20210121 14:51:52.503"></status>
</kw>
<msg timestamp="20210121 14:51:52.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:52.511" starttime="20210121 14:51:52.502"></status>
</kw>
<msg timestamp="20210121 14:51:52.511" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.511" starttime="20210121 14:51:52.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:52.515" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:52.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:52.518" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.518" starttime="20210121 14:51:52.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.522" level="INFO">Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.522" starttime="20210121 14:51:52.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:52.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:52.523" starttime="20210121 14:51:52.522"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:52.523" starttime="20210121 14:51:52.513"></status>
</kw>
<msg timestamp="20210121 14:51:52.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:52.523" starttime="20210121 14:51:52.512"></status>
</kw>
<msg timestamp="20210121 14:51:52.524" level="INFO">${actualData} = Rando</msg>
<status status="PASS" endtime="20210121 14:51:52.524" starttime="20210121 14:51:52.512"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:52.524" starttime="20210121 14:51:52.524"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:52.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:53.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.040" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:53.040" starttime="20210121 14:51:52.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.041" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:52 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:53.041" starttime="20210121 14:51:53.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.042" starttime="20210121 14:51:53.041"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.042" starttime="20210121 14:51:52.527"></status>
</kw>
<msg timestamp="20210121 14:51:53.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.042" starttime="20210121 14:51:52.526"></status>
</kw>
<msg timestamp="20210121 14:51:53.043" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:53.043" starttime="20210121 14:51:52.526"></status>
</kw>
<msg timestamp="20210121 14:51:53.043" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:53.043" starttime="20210121 14:51:52.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.044" starttime="20210121 14:51:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.044" starttime="20210121 14:51:53.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.045" starttime="20210121 14:51:53.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.049" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:53.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.052" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.052" starttime="20210121 14:51:53.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.053" level="INFO">ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.053" starttime="20210121 14:51:53.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.054" starttime="20210121 14:51:53.053"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.054" starttime="20210121 14:51:53.046"></status>
</kw>
<msg timestamp="20210121 14:51:53.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.055" starttime="20210121 14:51:53.046"></status>
</kw>
<msg timestamp="20210121 14:51:53.055" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.055" starttime="20210121 14:51:53.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.060" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:53.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.063" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.063" starttime="20210121 14:51:53.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.065" level="INFO">ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.065" starttime="20210121 14:51:53.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.066" starttime="20210121 14:51:53.065"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.066" starttime="20210121 14:51:53.057"></status>
</kw>
<msg timestamp="20210121 14:51:53.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.066" starttime="20210121 14:51:53.056"></status>
</kw>
<msg timestamp="20210121 14:51:53.067" level="INFO">${actualData} = ndo</msg>
<status status="PASS" endtime="20210121 14:51:53.067" starttime="20210121 14:51:53.055"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.067" starttime="20210121 14:51:53.067"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:53.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.580" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:53.580" starttime="20210121 14:51:53.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.581" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:53 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:53.581" starttime="20210121 14:51:53.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.582" starttime="20210121 14:51:53.582"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.583" starttime="20210121 14:51:53.069"></status>
</kw>
<msg timestamp="20210121 14:51:53.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.583" starttime="20210121 14:51:53.069"></status>
</kw>
<msg timestamp="20210121 14:51:53.583" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:53.583" starttime="20210121 14:51:53.068"></status>
</kw>
<msg timestamp="20210121 14:51:53.583" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:53.583" starttime="20210121 14:51:53.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.584" starttime="20210121 14:51:53.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.585" starttime="20210121 14:51:53.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.585" starttime="20210121 14:51:53.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.589" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:53.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.592" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.592" starttime="20210121 14:51:53.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.593" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.593" starttime="20210121 14:51:53.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.593" starttime="20210121 14:51:53.593"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.594" starttime="20210121 14:51:53.586"></status>
</kw>
<msg timestamp="20210121 14:51:53.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.594" starttime="20210121 14:51:53.586"></status>
</kw>
<msg timestamp="20210121 14:51:53.594" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.594" starttime="20210121 14:51:53.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.599" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:53.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:53.602" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.602" starttime="20210121 14:51:53.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.603" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.603" starttime="20210121 14:51:53.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:53.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:53.603" starttime="20210121 14:51:53.603"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:53.604" starttime="20210121 14:51:53.596"></status>
</kw>
<msg timestamp="20210121 14:51:53.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:53.604" starttime="20210121 14:51:53.595"></status>
</kw>
<msg timestamp="20210121 14:51:53.604" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:51:53.604" starttime="20210121 14:51:53.595"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:53.605" starttime="20210121 14:51:53.604"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:53.605" critical="yes" starttime="20210121 14:51:51.960"></status>
</test>
<test id="s1-s11-s10-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:53.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:54.075" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:54.075" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:54.076" starttime="20210121 14:51:53.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.077" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:54.077" starttime="20210121 14:51:54.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:54.078" starttime="20210121 14:51:54.077"></status>
</kw>
<msg timestamp="20210121 14:51:54.078" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:54.078" starttime="20210121 14:51:53.608"></status>
</kw>
<msg timestamp="20210121 14:51:54.078" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:54.078" starttime="20210121 14:51:53.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:54.080" starttime="20210121 14:51:54.079"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:54.080" critical="yes" starttime="20210121 14:51:53.606"></status>
</test>
<test id="s1-s11-s10-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:54.087" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:54.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:54.600" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:54.600" starttime="20210121 14:51:54.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.602" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:54 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:54.602" starttime="20210121 14:51:54.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:54.602" starttime="20210121 14:51:54.602"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:54.603" starttime="20210121 14:51:54.084"></status>
</kw>
<msg timestamp="20210121 14:51:54.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:54.603" starttime="20210121 14:51:54.083"></status>
</kw>
<msg timestamp="20210121 14:51:54.604" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:54.604" starttime="20210121 14:51:54.083"></status>
</kw>
<msg timestamp="20210121 14:51:54.604" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:54.604" starttime="20210121 14:51:54.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:54.604" starttime="20210121 14:51:54.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:54.605" starttime="20210121 14:51:54.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:54.606" starttime="20210121 14:51:54.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:54.610" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:54.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:54.612" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.612" starttime="20210121 14:51:54.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.613" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.614" starttime="20210121 14:51:54.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:54.615" starttime="20210121 14:51:54.614"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:54.615" starttime="20210121 14:51:54.607"></status>
</kw>
<msg timestamp="20210121 14:51:54.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:54.615" starttime="20210121 14:51:54.606"></status>
</kw>
<msg timestamp="20210121 14:51:54.616" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.616" starttime="20210121 14:51:54.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:54.619" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:54.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:54.621" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.621" starttime="20210121 14:51:54.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.622" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.622" starttime="20210121 14:51:54.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:54.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:54.623" starttime="20210121 14:51:54.623"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:54.623" starttime="20210121 14:51:54.617"></status>
</kw>
<msg timestamp="20210121 14:51:54.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:54.624" starttime="20210121 14:51:54.616"></status>
</kw>
<msg timestamp="20210121 14:51:54.624" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:54.624" starttime="20210121 14:51:54.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:54.625" starttime="20210121 14:51:54.624"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:54.625" critical="yes" starttime="20210121 14:51:54.081"></status>
</test>
<test id="s1-s11-s10-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:54.633" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:55.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.120" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:55.120" starttime="20210121 14:51:54.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.121" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:55 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:55.121" starttime="20210121 14:51:55.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.122" starttime="20210121 14:51:55.121"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.122" starttime="20210121 14:51:54.630"></status>
</kw>
<msg timestamp="20210121 14:51:55.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.122" starttime="20210121 14:51:54.630"></status>
</kw>
<msg timestamp="20210121 14:51:55.123" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:55.123" starttime="20210121 14:51:54.629"></status>
</kw>
<msg timestamp="20210121 14:51:55.123" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:55.123" starttime="20210121 14:51:54.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.123" starttime="20210121 14:51:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.124" starttime="20210121 14:51:55.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.125" starttime="20210121 14:51:55.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.130" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:55.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.132" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.132" starttime="20210121 14:51:55.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.133" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.133" starttime="20210121 14:51:55.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.134" starttime="20210121 14:51:55.133"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.134" starttime="20210121 14:51:55.126"></status>
</kw>
<msg timestamp="20210121 14:51:55.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.135" starttime="20210121 14:51:55.125"></status>
</kw>
<msg timestamp="20210121 14:51:55.135" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.135" starttime="20210121 14:51:55.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.139" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:55.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.141" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.141" starttime="20210121 14:51:55.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.143" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.143" starttime="20210121 14:51:55.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.144" starttime="20210121 14:51:55.143"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.144" starttime="20210121 14:51:55.136"></status>
</kw>
<msg timestamp="20210121 14:51:55.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.144" starttime="20210121 14:51:55.136"></status>
</kw>
<msg timestamp="20210121 14:51:55.145" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:55.145" starttime="20210121 14:51:55.135"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.146" starttime="20210121 14:51:55.145"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:55.146" critical="yes" starttime="20210121 14:51:54.628"></status>
</test>
<test id="s1-s11-s10-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:55.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.685" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:55.685" starttime="20210121 14:51:55.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.686" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:55 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:55.686" starttime="20210121 14:51:55.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.687" starttime="20210121 14:51:55.687"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.687" starttime="20210121 14:51:55.149"></status>
</kw>
<msg timestamp="20210121 14:51:55.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.688" starttime="20210121 14:51:55.149"></status>
</kw>
<msg timestamp="20210121 14:51:55.688" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:55.688" starttime="20210121 14:51:55.148"></status>
</kw>
<msg timestamp="20210121 14:51:55.689" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:55.689" starttime="20210121 14:51:55.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.689" starttime="20210121 14:51:55.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.690" starttime="20210121 14:51:55.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.690" starttime="20210121 14:51:55.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.694" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:55.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.697" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20210121 14:51:55.697" starttime="20210121 14:51:55.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.698" level="INFO">R</msg>
<status status="PASS" endtime="20210121 14:51:55.698" starttime="20210121 14:51:55.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.699" starttime="20210121 14:51:55.698"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.699" starttime="20210121 14:51:55.691"></status>
</kw>
<msg timestamp="20210121 14:51:55.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.699" starttime="20210121 14:51:55.691"></status>
</kw>
<msg timestamp="20210121 14:51:55.700" level="INFO">${expectedData} = R</msg>
<status status="PASS" endtime="20210121 14:51:55.700" starttime="20210121 14:51:55.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.703" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:55.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:55.706" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20210121 14:51:55.706" starttime="20210121 14:51:55.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.707" level="INFO">R</msg>
<status status="PASS" endtime="20210121 14:51:55.707" starttime="20210121 14:51:55.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:55.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:55.708" starttime="20210121 14:51:55.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:55.708" starttime="20210121 14:51:55.701"></status>
</kw>
<msg timestamp="20210121 14:51:55.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:55.708" starttime="20210121 14:51:55.700"></status>
</kw>
<msg timestamp="20210121 14:51:55.709" level="INFO">${actualData} = R</msg>
<status status="PASS" endtime="20210121 14:51:55.709" starttime="20210121 14:51:55.700"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:55.709" starttime="20210121 14:51:55.709"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:55.714" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:56.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.260" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:56.260" starttime="20210121 14:51:55.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.261" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:56 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:56.261" starttime="20210121 14:51:56.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.262" starttime="20210121 14:51:56.261"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.262" starttime="20210121 14:51:55.711"></status>
</kw>
<msg timestamp="20210121 14:51:56.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.262" starttime="20210121 14:51:55.711"></status>
</kw>
<msg timestamp="20210121 14:51:56.263" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:56.263" starttime="20210121 14:51:55.710"></status>
</kw>
<msg timestamp="20210121 14:51:56.263" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:51:56.263" starttime="20210121 14:51:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.264" starttime="20210121 14:51:56.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.264" starttime="20210121 14:51:56.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.265" starttime="20210121 14:51:56.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.270" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:56.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.273" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20210121 14:51:56.273" starttime="20210121 14:51:56.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.275" level="INFO">o</msg>
<status status="PASS" endtime="20210121 14:51:56.275" starttime="20210121 14:51:56.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.276" starttime="20210121 14:51:56.275"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.276" starttime="20210121 14:51:56.266"></status>
</kw>
<msg timestamp="20210121 14:51:56.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.277" starttime="20210121 14:51:56.266"></status>
</kw>
<msg timestamp="20210121 14:51:56.277" level="INFO">${expectedData} = o</msg>
<status status="PASS" endtime="20210121 14:51:56.277" starttime="20210121 14:51:56.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.281" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:56.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.286" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20210121 14:51:56.286" starttime="20210121 14:51:56.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.287" level="INFO">o</msg>
<status status="PASS" endtime="20210121 14:51:56.288" starttime="20210121 14:51:56.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.288" starttime="20210121 14:51:56.288"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.289" starttime="20210121 14:51:56.279"></status>
</kw>
<msg timestamp="20210121 14:51:56.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.289" starttime="20210121 14:51:56.278"></status>
</kw>
<msg timestamp="20210121 14:51:56.289" level="INFO">${actualData} = o</msg>
<status status="PASS" endtime="20210121 14:51:56.289" starttime="20210121 14:51:56.277"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.290" starttime="20210121 14:51:56.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:56.290" critical="yes" starttime="20210121 14:51:55.147"></status>
</test>
<test id="s1-s11-s10-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.297" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:56.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.797" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:56.797" starttime="20210121 14:51:56.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.798" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:56 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:56.798" starttime="20210121 14:51:56.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.799" starttime="20210121 14:51:56.798"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.799" starttime="20210121 14:51:56.294"></status>
</kw>
<msg timestamp="20210121 14:51:56.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.799" starttime="20210121 14:51:56.294"></status>
</kw>
<msg timestamp="20210121 14:51:56.800" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:56.800" starttime="20210121 14:51:56.293"></status>
</kw>
<msg timestamp="20210121 14:51:56.800" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:56.800" starttime="20210121 14:51:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.801" starttime="20210121 14:51:56.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.801" starttime="20210121 14:51:56.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.802" starttime="20210121 14:51:56.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.806" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:51:56.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.809" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20210121 14:51:56.809" starttime="20210121 14:51:56.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.810" level="INFO">ext</msg>
<status status="PASS" endtime="20210121 14:51:56.810" starttime="20210121 14:51:56.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.811" starttime="20210121 14:51:56.810"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.811" starttime="20210121 14:51:56.803"></status>
</kw>
<msg timestamp="20210121 14:51:56.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.812" starttime="20210121 14:51:56.803"></status>
</kw>
<msg timestamp="20210121 14:51:56.812" level="INFO">${expectedData} = ext</msg>
<status status="PASS" endtime="20210121 14:51:56.812" starttime="20210121 14:51:56.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.817" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:56.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:56.820" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20210121 14:51:56.820" starttime="20210121 14:51:56.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.821" level="INFO">ext</msg>
<status status="PASS" endtime="20210121 14:51:56.821" starttime="20210121 14:51:56.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:56.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:56.822" starttime="20210121 14:51:56.821"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:56.822" starttime="20210121 14:51:56.814"></status>
</kw>
<msg timestamp="20210121 14:51:56.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:56.822" starttime="20210121 14:51:56.813"></status>
</kw>
<msg timestamp="20210121 14:51:56.822" level="INFO">${actualData} = ext</msg>
<status status="PASS" endtime="20210121 14:51:56.822" starttime="20210121 14:51:56.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:56.823" starttime="20210121 14:51:56.823"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:56.828" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.334" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:57.334" starttime="20210121 14:51:56.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.335" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:51:57 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:57.335" starttime="20210121 14:51:57.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.336" starttime="20210121 14:51:57.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.336" starttime="20210121 14:51:56.825"></status>
</kw>
<msg timestamp="20210121 14:51:57.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.337" starttime="20210121 14:51:56.825"></status>
</kw>
<msg timestamp="20210121 14:51:57.337" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:57.337" starttime="20210121 14:51:56.824"></status>
</kw>
<msg timestamp="20210121 14:51:57.337" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:51:57.337" starttime="20210121 14:51:56.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.338" starttime="20210121 14:51:57.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.339" starttime="20210121 14:51:57.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.339" starttime="20210121 14:51:57.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.344" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.346" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.346" starttime="20210121 14:51:57.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.347" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.347" starttime="20210121 14:51:57.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.348" starttime="20210121 14:51:57.347"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.348" starttime="20210121 14:51:57.340"></status>
</kw>
<msg timestamp="20210121 14:51:57.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.348" starttime="20210121 14:51:57.340"></status>
</kw>
<msg timestamp="20210121 14:51:57.349" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.349" starttime="20210121 14:51:57.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.354" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.357" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.357" starttime="20210121 14:51:57.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.358" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.358" starttime="20210121 14:51:57.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.359" starttime="20210121 14:51:57.358"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.359" starttime="20210121 14:51:57.350"></status>
</kw>
<msg timestamp="20210121 14:51:57.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.359" starttime="20210121 14:51:57.350"></status>
</kw>
<msg timestamp="20210121 14:51:57.360" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.360" starttime="20210121 14:51:57.349"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.360" starttime="20210121 14:51:57.360"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:57.361" critical="yes" starttime="20210121 14:51:56.291"></status>
</test>
<test id="s1-s11-s10-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.372" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.895" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:57.895" starttime="20210121 14:51:57.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.896" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:57 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:57.896" starttime="20210121 14:51:57.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.897" starttime="20210121 14:51:57.896"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.897" starttime="20210121 14:51:57.365"></status>
</kw>
<msg timestamp="20210121 14:51:57.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.898" starttime="20210121 14:51:57.364"></status>
</kw>
<msg timestamp="20210121 14:51:57.898" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:57.898" starttime="20210121 14:51:57.364"></status>
</kw>
<msg timestamp="20210121 14:51:57.898" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:57.898" starttime="20210121 14:51:57.363"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.899" starttime="20210121 14:51:57.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.900" starttime="20210121 14:51:57.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.903" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.906" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.906" starttime="20210121 14:51:57.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.908" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.908" starttime="20210121 14:51:57.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.909" starttime="20210121 14:51:57.908"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.909" starttime="20210121 14:51:57.901"></status>
</kw>
<msg timestamp="20210121 14:51:57.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.909" starttime="20210121 14:51:57.900"></status>
</kw>
<msg timestamp="20210121 14:51:57.910" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.910" starttime="20210121 14:51:57.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.913" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:57.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:57.916" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.916" starttime="20210121 14:51:57.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.917" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.917" starttime="20210121 14:51:57.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:57.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:57.918" starttime="20210121 14:51:57.917"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:57.918" starttime="20210121 14:51:57.911"></status>
</kw>
<msg timestamp="20210121 14:51:57.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:57.918" starttime="20210121 14:51:57.910"></status>
</kw>
<msg timestamp="20210121 14:51:57.918" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:57.918" starttime="20210121 14:51:57.910"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:57.919" starttime="20210121 14:51:57.919"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:57.925" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:58.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:58.453" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:58.453" starttime="20210121 14:51:57.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.456" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:58 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:51:58.457" starttime="20210121 14:51:58.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:58.458" starttime="20210121 14:51:58.457"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:58.458" starttime="20210121 14:51:57.922"></status>
</kw>
<msg timestamp="20210121 14:51:58.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:58.458" starttime="20210121 14:51:57.921"></status>
</kw>
<msg timestamp="20210121 14:51:58.458" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:58.458" starttime="20210121 14:51:57.920"></status>
</kw>
<msg timestamp="20210121 14:51:58.459" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:51:49 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:51:5...</msg>
<status status="PASS" endtime="20210121 14:51:58.459" starttime="20210121 14:51:57.919"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:58.459" starttime="20210121 14:51:58.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:58.460" starttime="20210121 14:51:58.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:58.465" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:58.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:58.467" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.467" starttime="20210121 14:51:58.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.468" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.468" starttime="20210121 14:51:58.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:58.469" starttime="20210121 14:51:58.468"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:58.469" starttime="20210121 14:51:58.461"></status>
</kw>
<msg timestamp="20210121 14:51:58.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:58.470" starttime="20210121 14:51:58.461"></status>
</kw>
<msg timestamp="20210121 14:51:58.470" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.470" starttime="20210121 14:51:58.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:58.474" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:58.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:51:58.476" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.476" starttime="20210121 14:51:58.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.477" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.477" starttime="20210121 14:51:58.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:58.478" starttime="20210121 14:51:58.478"></status>
</kw>
<status status="PASS" endtime="20210121 14:51:58.479" starttime="20210121 14:51:58.471"></status>
</kw>
<msg timestamp="20210121 14:51:58.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:51:58.479" starttime="20210121 14:51:58.471"></status>
</kw>
<msg timestamp="20210121 14:51:58.479" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:51:58.479" starttime="20210121 14:51:58.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:58.480" starttime="20210121 14:51:58.479"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:51:58.480" critical="yes" starttime="20210121 14:51:57.361"></status>
</test>
<test id="s1-s11-s10-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:58.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:58.967" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:58.967" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:58.967" starttime="20210121 14:51:58.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.968" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:58.968" starttime="20210121 14:51:58.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:58.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:58.970" starttime="20210121 14:51:58.969"></status>
</kw>
<msg timestamp="20210121 14:51:58.971" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:58.971" starttime="20210121 14:51:58.482"></status>
</kw>
<msg timestamp="20210121 14:51:58.971" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:58.971" starttime="20210121 14:51:58.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:58.972" starttime="20210121 14:51:58.971"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:58.976" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:51:59.482" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:51:59.482" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:59.482" starttime="20210121 14:51:58.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:51:59.483" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:59.483" starttime="20210121 14:51:59.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:51:59.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:51:59.484" starttime="20210121 14:51:59.483"></status>
</kw>
<msg timestamp="20210121 14:51:59.484" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:59.484" starttime="20210121 14:51:58.972"></status>
</kw>
<msg timestamp="20210121 14:51:59.485" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:51:59.485" starttime="20210121 14:51:58.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:51:59.486" starttime="20210121 14:51:59.485"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:51:59.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-22809 --key 93153/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:00.005" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:52:00.005" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:52:00.005" starttime="20210121 14:51:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.007" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:52:00.007" starttime="20210121 14:52:00.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:00.008" starttime="20210121 14:52:00.007"></status>
</kw>
<msg timestamp="20210121 14:52:00.010" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:52:00.010" starttime="20210121 14:51:59.487"></status>
</kw>
<msg timestamp="20210121 14:52:00.010" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:52:00.010" starttime="20210121 14:51:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:00.011" starttime="20210121 14:52:00.011"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:52:00.013" critical="yes" starttime="20210121 14:51:58.481"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:52:00.016" starttime="20210121 14:51:46.643"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/webui.robot" id="s1-s11-s11" name="Webui">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:52:00.035" level="INFO">${random} = 71334</msg>
<status status="PASS" endtime="20210121 14:52:00.035" starttime="20210121 14:52:00.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.036" level="INFO">${PREFIX} = 71334</msg>
<status status="PASS" endtime="20210121 14:52:00.036" starttime="20210121 14:52:00.035"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.036" starttime="20210121 14:52:00.034"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.036" starttime="20210121 14:52:00.034"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:00.039" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:00.042" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:52:00.042" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:52:00.042" starttime="20210121 14:52:00.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:00.043" starttime="20210121 14:52:00.042"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:00.045" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:00.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:00.193" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:52:00.193" starttime="20210121 14:52:00.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:00.201" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:00.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:00.633" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:52:00.633" starttime="20210121 14:52:00.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.634" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:52:00.634" starttime="20210121 14:52:00.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:00.635" starttime="20210121 14:52:00.634"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.635" starttime="20210121 14:52:00.198"></status>
</kw>
<msg timestamp="20210121 14:52:00.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:00.635" starttime="20210121 14:52:00.197"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.636" starttime="20210121 14:52:00.197"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.636" starttime="20210121 14:52:00.195"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.636" starttime="20210121 14:52:00.193"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.636" starttime="20210121 14:52:00.037"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.636" starttime="20210121 14:52:00.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:00.638" starttime="20210121 14:52:00.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:00.638" starttime="20210121 14:52:00.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:00.644" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:00.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:00.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:52:00.981" starttime="20210121 14:52:00.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.982" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:52:00.982" starttime="20210121 14:52:00.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:00.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:00.983" starttime="20210121 14:52:00.982"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.983" starttime="20210121 14:52:00.640"></status>
</kw>
<msg timestamp="20210121 14:52:00.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:00.983" starttime="20210121 14:52:00.640"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:00.983" starttime="20210121 14:52:00.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:00.987" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:01.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:01.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:52:01.333" starttime="20210121 14:52:00.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:01.334" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:52:01.334" starttime="20210121 14:52:01.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:01.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:01.335" starttime="20210121 14:52:01.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:01.335" starttime="20210121 14:52:00.984"></status>
</kw>
<msg timestamp="20210121 14:52:01.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:01.336" starttime="20210121 14:52:00.984"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:01.336" starttime="20210121 14:52:00.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:01.340" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:01.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:01.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:52:01.694" starttime="20210121 14:52:01.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:01.695" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:52:01.695" starttime="20210121 14:52:01.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:01.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:01.696" starttime="20210121 14:52:01.695"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:01.696" starttime="20210121 14:52:01.337"></status>
</kw>
<msg timestamp="20210121 14:52:01.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:01.696" starttime="20210121 14:52:01.337"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:01.697" starttime="20210121 14:52:01.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:01.700" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:02.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:02.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:52:02.039" starttime="20210121 14:52:01.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.040" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:52:02.040" starttime="20210121 14:52:02.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:02.041" starttime="20210121 14:52:02.040"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.041" starttime="20210121 14:52:01.698"></status>
</kw>
<msg timestamp="20210121 14:52:02.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:02.041" starttime="20210121 14:52:01.697"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.042" starttime="20210121 14:52:01.697"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.042" starttime="20210121 14:52:00.639"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.042" starttime="20210121 14:52:00.638"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.042" starttime="20210121 14:52:00.637"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.042" starttime="20210121 14:52:00.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:52:02.044" level="INFO">${postfix} = 88477</msg>
<status status="PASS" endtime="20210121 14:52:02.044" starttime="20210121 14:52:02.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:52:02.044" level="INFO">${bucket} = bucket-88477</msg>
<status status="PASS" endtime="20210121 14:52:02.044" starttime="20210121 14:52:02.044"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:02.049" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-88477 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:02.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:02.531" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88477"
}</msg>
<status status="PASS" endtime="20210121 14:52:02.531" starttime="20210121 14:52:02.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.532" level="INFO">{
    "Location": "http://s3g:9878/bucket-88477"
}</msg>
<status status="PASS" endtime="20210121 14:52:02.532" starttime="20210121 14:52:02.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:02.533" starttime="20210121 14:52:02.533"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.534" starttime="20210121 14:52:02.046"></status>
</kw>
<msg timestamp="20210121 14:52:02.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:02.534" starttime="20210121 14:52:02.046"></status>
</kw>
<msg timestamp="20210121 14:52:02.534" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88477"
}</msg>
<status status="PASS" endtime="20210121 14:52:02.534" starttime="20210121 14:52:02.045"></status>
</kw>
<msg timestamp="20210121 14:52:02.535" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-88477"
}</msg>
<status status="PASS" endtime="20210121 14:52:02.535" starttime="20210121 14:52:02.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.535" starttime="20210121 14:52:02.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.536" starttime="20210121 14:52:02.535"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.536" starttime="20210121 14:52:02.044"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.536" starttime="20210121 14:52:02.043"></status>
</kw>
<msg timestamp="20210121 14:52:02.536" level="INFO">${BUCKET} = bucket-88477</msg>
<status status="PASS" endtime="20210121 14:52:02.536" starttime="20210121 14:52:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.537" level="INFO">${BUCKET} = bucket-88477</msg>
<status status="PASS" endtime="20210121 14:52:02.537" starttime="20210121 14:52:02.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.538" starttime="20210121 14:52:02.537"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.538" starttime="20210121 14:52:00.033"></status>
</kw>
<test id="s1-s11-s11-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.540" starttime="20210121 14:52:02.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:02.545" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:02.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:02.556" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:52:02.556" starttime="20210121 14:52:02.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.557" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Thu, 21 Jan 2021 14:52:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 21 Jan 2021 14:52:02 GMT
&lt; Date: Thu, 21 Jan 2021 14:52:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" endtime="20210121 14:52:02.557" starttime="20210121 14:52:02.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:02.557" starttime="20210121 14:52:02.557"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.558" starttime="20210121 14:52:02.541"></status>
</kw>
<msg timestamp="20210121 14:52:02.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:02.558" starttime="20210121 14:52:02.540"></status>
</kw>
<msg timestamp="20210121 14:52:02.558" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:52:02.558" starttime="20210121 14:52:02.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.559" starttime="20210121 14:52:02.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>/static/</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.560" starttime="20210121 14:52:02.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:52:02.563" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:52:02.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:52:02.575" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:52:02.575" starttime="20210121 14:52:02.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.576" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 21 Jan 2021 14:52:02 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Thu, 21 Jan 2021 13:47:54 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3127
&lt; 
{ [data not shown]

100  3127  100  3127    0     0   534k      0 --:--:-- --:--:-- --:--:--  610k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Hadoop Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Hadoop Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Hadoop Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" endtime="20210121 14:52:02.576" starttime="20210121 14:52:02.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:52:02.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:52:02.577" starttime="20210121 14:52:02.576"></status>
</kw>
<status status="PASS" endtime="20210121 14:52:02.577" starttime="20210121 14:52:02.561"></status>
</kw>
<msg timestamp="20210121 14:52:02.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:52:02.578" starttime="20210121 14:52:02.560"></status>
</kw>
<msg timestamp="20210121 14:52:02.578" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:52:02.578" starttime="20210121 14:52:02.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Apache Hadoop Ozone S3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:52:02.579" starttime="20210121 14:52:02.579"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:52:02.579" critical="yes" starttime="20210121 14:52:02.538"></status>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" endtime="20210121 14:52:02.580" starttime="20210121 14:52:00.023"></status>
</suite>
<status status="PASS" endtime="20210121 14:52:02.587" starttime="20210121 14:49:59.671"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3" id="s1-s12" name="s3-link">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:46:29.940" level="INFO">${random} = 01020</msg>
<status status="PASS" endtime="20210121 14:46:29.940" starttime="20210121 14:46:29.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:46:29.941" level="INFO">${PREFIX} = 01020</msg>
<status status="PASS" endtime="20210121 14:46:29.941" starttime="20210121 14:46:29.940"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:29.942" starttime="20210121 14:46:29.939"></status>
</kw>
<status status="PASS" endtime="20210121 14:46:29.942" starttime="20210121 14:46:29.939"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:29.947" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:29.949" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:46:29.949" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:46:29.949" starttime="20210121 14:46:29.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:46:29.950" starttime="20210121 14:46:29.950"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:29.953" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:46:30.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:46:30.139" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:46:30.139" starttime="20210121 14:46:29.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:46:30.144" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:16.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:16.234" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
http:/...</msg>
<status status="PASS" endtime="20210121 14:47:16.234" starttime="20210121 14:46:30.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.236" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
http://mirror.vcu.edu/pub/gnu_linux/centos/7.9.2009/os/x86_64/repodata/repomd.xml: [Errno 12] Timeout on http://mirror.vcu.edu/pub/gnu_linux/centos/7.9.2009/os/x86_64/repodata/repomd.xml: (28, 'Connection timed out after 30000 milliseconds')
Trying other mirror.
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7.0.1 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7.0.1.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-21.el7_9 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-21.el7_9 for package: 1:openssl-1.0.2k-21.el7_9.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-21.el7_9.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-21.gitd1c6db8.el7 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-21.gitd1c6db8.el7.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-21.gitd1c6db8.el7.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-21.gitd1c6db8.el7.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-35.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-35.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-7.el7 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-16.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-21.el7_9 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                      Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                       noarch 1.14.28-5.el7_5.1            base    1.0 M
Installing for dependencies:
 PyYAML                       x86_64 3.10-11.el7                  base    153 k
 jbigkit-libs                 x86_64 2.0-11.el7                   base     46 k
 libtiff                      x86_64 4.0.3-35.el7                 base    172 k
 libwebp                      x86_64 0.3.0-7.el7                  base    170 k
 libyaml                      x86_64 0.1.4-11.el7_0               base     55 k
 make                         x86_64 1:3.82-24.el7                base    421 k
 openssl                      x86_64 1:1.0.2k-21.el7_9            updates 493 k
 python-backports             x86_64 1.0-8.el7                    base    5.8 k
 python-backports-ssl_match_hostname
                              noarch 3.5.0.1-1.el7                base     13 k
 python-cffi                  x86_64 1.6.0-5.el7                  base    218 k
 python-dateutil              noarch 1.5-7.el7                    base     85 k
 python-docutils              noarch 0.11-0.3.20130715svn7687.el7 base    1.5 M
 python-enum34                noarch 1.0.4-1.el7                  base     52 k
 python-idna                  noarch 2.4-1.el7                    base     94 k
 python-ipaddress             noarch 1.0.16-2.el7                 base     34 k
 python-pillow                x86_64 2.0.0-21.gitd1c6db8.el7      base    439 k
 python-ply                   noarch 3.4-11.el7                   base    123 k
 python-pycparser             noarch 2.14-1.el7                   base    104 k
 python-s3transfer            noarch 0.1.13-1.el7.0.1             base    2.9 M
 python-setuptools            noarch 0.9.8-7.el7                  base    397 k
 python-six                   noarch 1.9.0-2.el7                  base     29 k
 python2-cryptography         x86_64 1.7.2-2.el7                  base    502 k
 python2-pyasn1               noarch 0.1.9-7.el7                  base    100 k
Updating for dependencies:
 openssl-libs                 x86_64 1:1.0.2k-21.el7_9            updates 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 10 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               19 MB/s |  10 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-21.el7_9.x86_64                       2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                              6/26 
  Installing : libtiff-4.0.3-35.el7.x86_64                                 7/26 
  Installing : python-backports-1.0-8.el7.x86_64                           8/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    9/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                       10/26 
  Installing : python-ply-3.4-11.el7.noarch                               11/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         12/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             13/26 
  Installing : python-idna-2.4-1.el7.noarch                               14/26 
  Installing : python-six-1.9.0-2.el7.noarch                              15/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  16/26 
  Installing : 1:openssl-1.0.2k-21.el7_9.x86_64                           17/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           18/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           19/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    20/26 
  Installing : libwebp-0.3.0-7.el7.x86_64                                 21/26 
  Installing : python-pillow-2.0.0-21.gitd1c6db8.el7.x86_64               22/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        23/26 
  Installing : python-s3transfer-0.1.13-1.el7.0.1.noarch                  24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : libwebp-0.3.0-7.el7.x86_64                                  2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        4/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         5/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            6/26 
  Verifying  : libtiff-4.0.3-35.el7.x86_64                                 7/26 
  Verifying  : python-pillow-2.0.0-21.gitd1c6db8.el7.x86_64                8/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                   9/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                              10/26 
  Verifying  : python-s3transfer-0.1.13-1.el7.0.1.noarch                  11/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          14/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             15/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            16/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Verifying  : 1:openssl-libs-1.0.2k-21.el7_9.x86_64                      18/26 
  Verifying  : 1:openssl-1.0.2k-21.el7_9.x86_64                           19/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         20/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              21/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       22/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          23/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-35.el7                                                 
  libwebp.x86_64 0:0.3.0-7.el7                                                  
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-21.el7_9                                              
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-21.gitd1c6db8.el7                                
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7.0.1                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-21.el7_9                                         

Complete!</msg>
<status status="PASS" endtime="20210121 14:47:16.236" starttime="20210121 14:47:16.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:16.237" starttime="20210121 14:47:16.236"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.238" starttime="20210121 14:46:30.142"></status>
</kw>
<msg timestamp="20210121 14:47:16.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:16.238" starttime="20210121 14:46:30.141"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.239" starttime="20210121 14:46:30.141"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.239" starttime="20210121 14:46:30.140"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.239" starttime="20210121 14:46:30.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.239" starttime="20210121 14:46:29.942"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.239" starttime="20210121 14:46:29.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:16.241" starttime="20210121 14:47:16.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:16.241" starttime="20210121 14:47:16.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:16.246" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:16.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:16.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:16.601" starttime="20210121 14:47:16.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.602" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:16.602" starttime="20210121 14:47:16.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:16.603" starttime="20210121 14:47:16.602"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.603" starttime="20210121 14:47:16.243"></status>
</kw>
<msg timestamp="20210121 14:47:16.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:16.603" starttime="20210121 14:47:16.243"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.603" starttime="20210121 14:47:16.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:16.607" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:16.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:16.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:16.957" starttime="20210121 14:47:16.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.958" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:16.958" starttime="20210121 14:47:16.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:16.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:16.959" starttime="20210121 14:47:16.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.959" starttime="20210121 14:47:16.604"></status>
</kw>
<msg timestamp="20210121 14:47:16.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:16.960" starttime="20210121 14:47:16.604"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:16.960" starttime="20210121 14:47:16.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:16.963" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:17.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:17.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:17.317" starttime="20210121 14:47:16.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:17.319" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:17.319" starttime="20210121 14:47:17.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:17.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:17.320" starttime="20210121 14:47:17.319"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.320" starttime="20210121 14:47:16.961"></status>
</kw>
<msg timestamp="20210121 14:47:17.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:17.320" starttime="20210121 14:47:16.960"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.320" starttime="20210121 14:47:16.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:17.324" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:17.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:17.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:17.697" starttime="20210121 14:47:17.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:17.698" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:17.698" starttime="20210121 14:47:17.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:17.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:17.699" starttime="20210121 14:47:17.698"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.699" starttime="20210121 14:47:17.321"></status>
</kw>
<msg timestamp="20210121 14:47:17.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:17.699" starttime="20210121 14:47:17.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.699" starttime="20210121 14:47:17.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.700" starttime="20210121 14:47:16.242"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.700" starttime="20210121 14:47:16.241"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.700" starttime="20210121 14:47:16.240"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:17.700" starttime="20210121 14:47:16.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:17.701" starttime="20210121 14:47:17.701"></status>
</kw>
<msg timestamp="20210121 14:47:17.701" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:17.701" starttime="20210121 14:47:17.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:47:17.702" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:17.702" starttime="20210121 14:47:17.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:17.705" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:20.864" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:47:20.864" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210121 14:47:20.865" starttime="20210121 14:47:17.703"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210121 14:47:20.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:20.866" starttime="20210121 14:47:20.865"></status>
</kw>
<msg timestamp="20210121 14:47:20.866" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210121 14:47:20.866" starttime="20210121 14:47:17.703"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:20.867" starttime="20210121 14:47:20.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:20.871" level="INFO">Running command 'ozone sh volume create o3://om/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:23.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:23.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:23.835" starttime="20210121 14:47:20.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:23.836" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:23.836" starttime="20210121 14:47:23.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:23.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:23.837" starttime="20210121 14:47:23.837"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:23.838" starttime="20210121 14:47:20.868"></status>
</kw>
<msg timestamp="20210121 14:47:23.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:23.838" starttime="20210121 14:47:20.868"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:23.838" starttime="20210121 14:47:20.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:23.841" level="INFO">Running command 'ozone sh bucket create o3://om/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:26.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:27.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:27.000" starttime="20210121 14:47:23.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:27.001" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:27.001" starttime="20210121 14:47:27.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:27.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:27.003" starttime="20210121 14:47:27.001"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:27.004" starttime="20210121 14:47:23.839"></status>
</kw>
<msg timestamp="20210121 14:47:27.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:27.004" starttime="20210121 14:47:23.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:27.004" starttime="20210121 14:47:23.838"></status>
</kw>
<kw name="Create link" library="commonawslib">
<arguments>
<arg>link</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:27.008" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:30.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:30.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:30.288" starttime="20210121 14:47:27.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:30.289" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:30.289" starttime="20210121 14:47:30.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:30.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:30.289" starttime="20210121 14:47:30.289"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.290" starttime="20210121 14:47:27.006"></status>
</kw>
<msg timestamp="20210121 14:47:30.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:30.290" starttime="20210121 14:47:27.006"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.290" starttime="20210121 14:47:27.005"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.291" starttime="20210121 14:47:27.004"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.291" starttime="20210121 14:47:17.702"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.291" starttime="20210121 14:47:17.702"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.291" starttime="20210121 14:46:29.938"></status>
</kw>
<suite source="/opt/hadoop/smoketest/s3/awss3.robot" id="s1-s12-s1" name="Awss3">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:47:30.303" level="INFO">${random} = 84064</msg>
<status status="PASS" endtime="20210121 14:47:30.303" starttime="20210121 14:47:30.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:47:30.304" level="INFO">${PREFIX} = 84064</msg>
<status status="PASS" endtime="20210121 14:47:30.305" starttime="20210121 14:47:30.303"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.305" starttime="20210121 14:47:30.302"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.305" starttime="20210121 14:47:30.302"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:30.308" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:30.310" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:47:30.310" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:47:30.310" starttime="20210121 14:47:30.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:30.312" starttime="20210121 14:47:30.311"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:30.313" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:30.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:30.461" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:47:30.461" starttime="20210121 14:47:30.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:30.466" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:30.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:30.875" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:47:30.875" starttime="20210121 14:47:30.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:30.876" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:47:30.876" starttime="20210121 14:47:30.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:30.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:30.877" starttime="20210121 14:47:30.877"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.878" starttime="20210121 14:47:30.463"></status>
</kw>
<msg timestamp="20210121 14:47:30.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:30.878" starttime="20210121 14:47:30.463"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.878" starttime="20210121 14:47:30.463"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.878" starttime="20210121 14:47:30.462"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.878" starttime="20210121 14:47:30.462"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.879" starttime="20210121 14:47:30.305"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:30.879" starttime="20210121 14:47:30.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:30.880" starttime="20210121 14:47:30.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:30.881" starttime="20210121 14:47:30.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:30.885" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:31.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:31.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:31.236" starttime="20210121 14:47:30.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.237" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:31.237" starttime="20210121 14:47:31.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:31.238" starttime="20210121 14:47:31.238"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.238" starttime="20210121 14:47:30.882"></status>
</kw>
<msg timestamp="20210121 14:47:31.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:31.239" starttime="20210121 14:47:30.882"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.239" starttime="20210121 14:47:30.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:31.242" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:31.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:31.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:31.592" starttime="20210121 14:47:31.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.593" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:31.593" starttime="20210121 14:47:31.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:31.594" starttime="20210121 14:47:31.593"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.594" starttime="20210121 14:47:31.240"></status>
</kw>
<msg timestamp="20210121 14:47:31.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:31.595" starttime="20210121 14:47:31.239"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.595" starttime="20210121 14:47:31.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:31.599" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:31.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:31.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:31.947" starttime="20210121 14:47:31.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.948" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:31.948" starttime="20210121 14:47:31.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:31.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:31.949" starttime="20210121 14:47:31.948"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.949" starttime="20210121 14:47:31.596"></status>
</kw>
<msg timestamp="20210121 14:47:31.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:31.949" starttime="20210121 14:47:31.595"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:31.949" starttime="20210121 14:47:31.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:31.955" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:32.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:32.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:32.318" starttime="20210121 14:47:31.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:32.319" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:32.319" starttime="20210121 14:47:32.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:32.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:32.319" starttime="20210121 14:47:32.319"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.320" starttime="20210121 14:47:31.950"></status>
</kw>
<msg timestamp="20210121 14:47:32.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:32.320" starttime="20210121 14:47:31.950"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.320" starttime="20210121 14:47:31.950"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.320" starttime="20210121 14:47:30.881"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.320" starttime="20210121 14:47:30.881"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.321" starttime="20210121 14:47:30.879"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:32.321" starttime="20210121 14:47:30.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:32.322" starttime="20210121 14:47:32.321"></status>
</kw>
<msg timestamp="20210121 14:47:32.322" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:32.322" starttime="20210121 14:47:32.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:47:32.322" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:32.323" starttime="20210121 14:47:32.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:32.329" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:35.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:35.535" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:47:35.535" starttime="20210121 14:47:32.324"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:35.536" starttime="20210121 14:47:35.536"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:35.537" starttime="20210121 14:47:35.536"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:35.537" starttime="20210121 14:47:35.537"></status>
</kw>
<msg timestamp="20210121 14:47:35.538" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:47:35.538" starttime="20210121 14:47:32.324"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:47:35.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:35.538" starttime="20210121 14:47:35.538"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:35.539" starttime="20210121 14:47:32.323"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:35.539" starttime="20210121 14:47:32.323"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:35.539" starttime="20210121 14:47:30.302"></status>
</kw>
<test id="s1-s12-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:35.544" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:47:35.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:35.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:35.548" starttime="20210121 14:47:35.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:35.549" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:35.549" starttime="20210121 14:47:35.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:35.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:35.550" starttime="20210121 14:47:35.550"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:35.550" starttime="20210121 14:47:35.541"></status>
</kw>
<msg timestamp="20210121 14:47:35.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:35.551" starttime="20210121 14:47:35.541"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:35.551" starttime="20210121 14:47:35.540"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:35.555" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:39.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:39.054" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                </msg>
<status status="PASS" endtime="20210121 14:47:39.055" starttime="20210121 14:47:35.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:39.056" level="INFO">Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                </msg>
<status status="PASS" endtime="20210121 14:47:39.056" starttime="20210121 14:47:39.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:39.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:39.057" starttime="20210121 14:47:39.056"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:39.057" starttime="20210121 14:47:35.553"></status>
</kw>
<msg timestamp="20210121 14:47:39.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:39.057" starttime="20210121 14:47:35.552"></status>
</kw>
<msg timestamp="20210121 14:47:39.058" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                </msg>
<status status="PASS" endtime="20210121 14:47:39.058" starttime="20210121 14:47:35.552"></status>
</kw>
<msg timestamp="20210121 14:47:39.058" level="INFO">${result} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                </msg>
<status status="PASS" endtime="20210121 14:47:39.058" starttime="20210121 14:47:35.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:39.059" starttime="20210121 14:47:39.058"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:39.068" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:39.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:39.797" level="INFO">${output} = Completed 29 Bytes/29 Bytes (114 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" endtime="20210121 14:47:39.797" starttime="20210121 14:47:39.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:39.799" level="INFO">Completed 29 Bytes/29 Bytes (114 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" endtime="20210121 14:47:39.799" starttime="20210121 14:47:39.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:39.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:39.800" starttime="20210121 14:47:39.799"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:39.800" starttime="20210121 14:47:39.061"></status>
</kw>
<msg timestamp="20210121 14:47:39.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:39.800" starttime="20210121 14:47:39.061"></status>
</kw>
<msg timestamp="20210121 14:47:39.801" level="INFO">${output} = Completed 29 Bytes/29 Bytes (114 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" endtime="20210121 14:47:39.801" starttime="20210121 14:47:39.060"></status>
</kw>
<msg timestamp="20210121 14:47:39.801" level="INFO">${result} = Completed 29 Bytes/29 Bytes (114 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" endtime="20210121 14:47:39.801" starttime="20210121 14:47:39.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>upload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:39.802" starttime="20210121 14:47:39.801"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:39.808" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:40.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:40.358" level="INFO">${output} =                            PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:47:40.358" starttime="20210121 14:47:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:40.359" level="INFO">                           PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:47:40.359" starttime="20210121 14:47:40.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:40.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:40.360" starttime="20210121 14:47:40.360"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:40.361" starttime="20210121 14:47:39.805"></status>
</kw>
<msg timestamp="20210121 14:47:40.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:40.361" starttime="20210121 14:47:39.804"></status>
</kw>
<msg timestamp="20210121 14:47:40.361" level="INFO">${output} =                            PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:47:40.361" starttime="20210121 14:47:39.804"></status>
</kw>
<msg timestamp="20210121 14:47:40.361" level="INFO">${result} =                            PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:47:40.361" starttime="20210121 14:47:39.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.362" starttime="20210121 14:47:40.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.363" starttime="20210121 14:47:40.362"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.363" starttime="20210121 14:47:40.363"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:40.368" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:40.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:40.869" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:47:40.869" starttime="20210121 14:47:40.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:40.870" level="INFO">                           PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:47:40.870" starttime="20210121 14:47:40.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:40.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:40.871" starttime="20210121 14:47:40.870"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:40.871" starttime="20210121 14:47:40.365"></status>
</kw>
<msg timestamp="20210121 14:47:40.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:40.871" starttime="20210121 14:47:40.364"></status>
</kw>
<msg timestamp="20210121 14:47:40.872" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:47:40.872" starttime="20210121 14:47:40.364"></status>
</kw>
<msg timestamp="20210121 14:47:40.872" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" endtime="20210121 14:47:40.872" starttime="20210121 14:47:40.363"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.874" starttime="20210121 14:47:40.872"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.874" starttime="20210121 14:47:40.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:40.875" starttime="20210121 14:47:40.874"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:40.879" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:41.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:41.370" level="INFO">${output} = 2021-01-21 14:47:39         29 file</msg>
<status status="PASS" endtime="20210121 14:47:41.370" starttime="20210121 14:47:40.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:41.371" level="INFO">2021-01-21 14:47:39         29 file</msg>
<status status="PASS" endtime="20210121 14:47:41.371" starttime="20210121 14:47:41.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:41.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:41.372" starttime="20210121 14:47:41.371"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.372" starttime="20210121 14:47:40.876"></status>
</kw>
<msg timestamp="20210121 14:47:41.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:41.372" starttime="20210121 14:47:40.876"></status>
</kw>
<msg timestamp="20210121 14:47:41.372" level="INFO">${output} = 2021-01-21 14:47:39         29 file</msg>
<status status="PASS" endtime="20210121 14:47:41.372" starttime="20210121 14:47:40.876"></status>
</kw>
<msg timestamp="20210121 14:47:41.373" level="INFO">${result} = 2021-01-21 14:47:39         29 file</msg>
<status status="PASS" endtime="20210121 14:47:41.374" starttime="20210121 14:47:40.875"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.374" starttime="20210121 14:47:41.374"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dir1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.375" starttime="20210121 14:47:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>file</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.375" starttime="20210121 14:47:41.375"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:41.375" critical="yes" starttime="20210121 14:47:35.539"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:47:41.376" starttime="20210121 14:47:30.291"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketcreate.robot" id="s1-s12-s2" name="Bucketcreate">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:47:41.390" level="INFO">${random} = 12523</msg>
<status status="PASS" endtime="20210121 14:47:41.390" starttime="20210121 14:47:41.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:47:41.391" level="INFO">${PREFIX} = 12523</msg>
<status status="PASS" endtime="20210121 14:47:41.391" starttime="20210121 14:47:41.390"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.391" starttime="20210121 14:47:41.389"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.391" starttime="20210121 14:47:41.389"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:41.394" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:41.396" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:47:41.396" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:47:41.396" starttime="20210121 14:47:41.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.397" starttime="20210121 14:47:41.397"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:41.399" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:41.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:41.544" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:47:41.544" starttime="20210121 14:47:41.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:41.549" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:41.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:41.949" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:47:41.949" starttime="20210121 14:47:41.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:41.950" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:47:41.951" starttime="20210121 14:47:41.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:41.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:41.953" starttime="20210121 14:47:41.951"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.953" starttime="20210121 14:47:41.546"></status>
</kw>
<msg timestamp="20210121 14:47:41.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.546"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.545"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.544"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.392"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:41.954" starttime="20210121 14:47:41.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.956" starttime="20210121 14:47:41.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:41.956" starttime="20210121 14:47:41.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:41.961" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:42.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:42.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:42.306" starttime="20210121 14:47:41.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:42.307" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:42.307" starttime="20210121 14:47:42.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:42.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:42.308" starttime="20210121 14:47:42.308"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:42.308" starttime="20210121 14:47:41.958"></status>
</kw>
<msg timestamp="20210121 14:47:42.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:42.309" starttime="20210121 14:47:41.958"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:42.309" starttime="20210121 14:47:41.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:42.314" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:42.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:42.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:42.664" starttime="20210121 14:47:42.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:42.665" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:42.665" starttime="20210121 14:47:42.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:42.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:42.665" starttime="20210121 14:47:42.665"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:42.666" starttime="20210121 14:47:42.310"></status>
</kw>
<msg timestamp="20210121 14:47:42.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:42.666" starttime="20210121 14:47:42.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:42.666" starttime="20210121 14:47:42.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:42.671" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:43.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:43.021" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:43.021" starttime="20210121 14:47:42.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:43.023" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:43.024" starttime="20210121 14:47:43.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:43.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:43.025" starttime="20210121 14:47:43.024"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.025" starttime="20210121 14:47:42.667"></status>
</kw>
<msg timestamp="20210121 14:47:43.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:43.025" starttime="20210121 14:47:42.667"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.025" starttime="20210121 14:47:42.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:43.029" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:43.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:43.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:43.410" starttime="20210121 14:47:43.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:43.411" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:43.411" starttime="20210121 14:47:43.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:43.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:43.412" starttime="20210121 14:47:43.411"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.412" starttime="20210121 14:47:43.026"></status>
</kw>
<msg timestamp="20210121 14:47:43.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:43.412" starttime="20210121 14:47:43.026"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.413" starttime="20210121 14:47:43.026"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.413" starttime="20210121 14:47:41.957"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.413" starttime="20210121 14:47:41.957"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.413" starttime="20210121 14:47:41.955"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:43.413" starttime="20210121 14:47:41.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:43.414" starttime="20210121 14:47:43.414"></status>
</kw>
<msg timestamp="20210121 14:47:43.414" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:43.414" starttime="20210121 14:47:43.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:47:43.415" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:43.415" starttime="20210121 14:47:43.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:43.419" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:46.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:46.756" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:47:46.756" starttime="20210121 14:47:43.416"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:46.757" starttime="20210121 14:47:46.756"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:46.757" starttime="20210121 14:47:46.757"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:46.758" starttime="20210121 14:47:46.758"></status>
</kw>
<msg timestamp="20210121 14:47:46.758" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:47:46.758" starttime="20210121 14:47:43.416"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:47:46.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:46.759" starttime="20210121 14:47:46.758"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:46.759" starttime="20210121 14:47:43.416"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:46.759" starttime="20210121 14:47:43.415"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:46.759" starttime="20210121 14:47:41.388"></status>
</kw>
<test id="s1-s12-s2-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:47:46.762" level="INFO">${postfix} = 85638</msg>
<status status="PASS" endtime="20210121 14:47:46.762" starttime="20210121 14:47:46.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bucket-${postfix}</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<msg timestamp="20210121 14:47:46.762" level="INFO">${bucket} = bucket-85638</msg>
<status status="PASS" endtime="20210121 14:47:46.762" starttime="20210121 14:47:46.762"></status>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${bucket}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:46.770" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-85638 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:47.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:47.254" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-85638"
}</msg>
<status status="PASS" endtime="20210121 14:47:47.254" starttime="20210121 14:47:46.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:47.256" level="INFO">{
    "Location": "http://s3g:9878/bucket-85638"
}</msg>
<status status="PASS" endtime="20210121 14:47:47.256" starttime="20210121 14:47:47.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:47.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:47.256" starttime="20210121 14:47:47.256"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:47.257" starttime="20210121 14:47:46.767"></status>
</kw>
<msg timestamp="20210121 14:47:47.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:47.257" starttime="20210121 14:47:46.766"></status>
</kw>
<msg timestamp="20210121 14:47:47.257" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-85638"
}</msg>
<status status="PASS" endtime="20210121 14:47:47.257" starttime="20210121 14:47:46.766"></status>
</kw>
<msg timestamp="20210121 14:47:47.258" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-85638"
}</msg>
<status status="PASS" endtime="20210121 14:47:47.258" starttime="20210121 14:47:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:47.258" starttime="20210121 14:47:47.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:47.261" starttime="20210121 14:47:47.259"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:47.261" starttime="20210121 14:47:46.762"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:47.261" starttime="20210121 14:47:46.760"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:47.261" critical="yes" starttime="20210121 14:47:46.760"></status>
</test>
<test id="s1-s12-s2-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:47.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:48.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:48.194" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" endtime="20210121 14:47:48.194" starttime="20210121 14:47:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:48.195" level="INFO">{
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" endtime="20210121 14:47:48.195" starttime="20210121 14:47:48.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:48.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:48.196" starttime="20210121 14:47:48.195"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:48.196" starttime="20210121 14:47:47.267"></status>
</kw>
<msg timestamp="20210121 14:47:48.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:48.197" starttime="20210121 14:47:47.266"></status>
</kw>
<msg timestamp="20210121 14:47:48.197" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" endtime="20210121 14:47:48.197" starttime="20210121 14:47:47.266"></status>
</kw>
<msg timestamp="20210121 14:47:48.197" level="INFO">${result} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" endtime="20210121 14:47:48.197" starttime="20210121 14:47:47.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:48.198" starttime="20210121 14:47:48.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:48.198" starttime="20210121 14:47:48.198"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:48.199" starttime="20210121 14:47:47.265"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:48.199" critical="yes" starttime="20210121 14:47:47.263"></status>
</test>
<test id="s1-s12-s2-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:48.204" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:48.940" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:47:48.940" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:47:48.940" starttime="20210121 14:47:48.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:48.942" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:47:48.942" starttime="20210121 14:47:48.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:48.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:48.943" starttime="20210121 14:47:48.943"></status>
</kw>
<msg timestamp="20210121 14:47:48.944" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:47:48.944" starttime="20210121 14:47:48.201"></status>
</kw>
<msg timestamp="20210121 14:47:48.944" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" endtime="20210121 14:47:48.944" starttime="20210121 14:47:48.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:48.945" starttime="20210121 14:47:48.944"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:48.945" critical="yes" starttime="20210121 14:47:48.200"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:47:48.947" starttime="20210121 14:47:41.378"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketdelete.robot" id="s1-s12-s3" name="Bucketdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:47:48.964" level="INFO">${random} = 21429</msg>
<status status="PASS" endtime="20210121 14:47:48.964" starttime="20210121 14:47:48.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:47:48.966" level="INFO">${PREFIX} = 21429</msg>
<status status="PASS" endtime="20210121 14:47:48.966" starttime="20210121 14:47:48.965"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:48.971" starttime="20210121 14:47:48.963"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:48.971" starttime="20210121 14:47:48.963"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:48.975" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:48.979" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:47:48.979" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:47:48.979" starttime="20210121 14:47:48.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:48.980" starttime="20210121 14:47:48.979"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:48.983" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:49.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:49.137" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:47:49.137" starttime="20210121 14:47:48.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:49.142" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:49.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:49.551" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:47:49.551" starttime="20210121 14:47:49.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:49.552" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:47:49.552" starttime="20210121 14:47:49.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:49.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:49.553" starttime="20210121 14:47:49.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.553" starttime="20210121 14:47:49.139"></status>
</kw>
<msg timestamp="20210121 14:47:49.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:49.553" starttime="20210121 14:47:49.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.553" starttime="20210121 14:47:49.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.554" starttime="20210121 14:47:49.138"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.554" starttime="20210121 14:47:49.138"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.554" starttime="20210121 14:47:48.972"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.554" starttime="20210121 14:47:48.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:49.555" starttime="20210121 14:47:49.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:49.556" starttime="20210121 14:47:49.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:49.561" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:49.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:49.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:49.898" starttime="20210121 14:47:49.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:49.899" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:49.899" starttime="20210121 14:47:49.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:49.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:49.900" starttime="20210121 14:47:49.899"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.900" starttime="20210121 14:47:49.558"></status>
</kw>
<msg timestamp="20210121 14:47:49.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:49.900" starttime="20210121 14:47:49.557"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:49.901" starttime="20210121 14:47:49.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:49.905" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:50.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:50.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:50.249" starttime="20210121 14:47:49.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.250" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:50.250" starttime="20210121 14:47:50.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:50.251" starttime="20210121 14:47:50.250"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.251" starttime="20210121 14:47:49.902"></status>
</kw>
<msg timestamp="20210121 14:47:50.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:50.251" starttime="20210121 14:47:49.901"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.252" starttime="20210121 14:47:49.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:50.255" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:50.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:50.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:50.627" starttime="20210121 14:47:50.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.628" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:50.628" starttime="20210121 14:47:50.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:50.629" starttime="20210121 14:47:50.629"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.630" starttime="20210121 14:47:50.253"></status>
</kw>
<msg timestamp="20210121 14:47:50.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:50.630" starttime="20210121 14:47:50.252"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.630" starttime="20210121 14:47:50.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:50.633" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:50.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:50.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:50.979" starttime="20210121 14:47:50.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.980" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:50.980" starttime="20210121 14:47:50.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:50.981" starttime="20210121 14:47:50.980"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.982" starttime="20210121 14:47:50.631"></status>
</kw>
<msg timestamp="20210121 14:47:50.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:50.982" starttime="20210121 14:47:50.631"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.982" starttime="20210121 14:47:50.630"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.982" starttime="20210121 14:47:49.556"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.982" starttime="20210121 14:47:49.556"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.983" starttime="20210121 14:47:49.555"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:50.983" starttime="20210121 14:47:49.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:50.984" starttime="20210121 14:47:50.983"></status>
</kw>
<msg timestamp="20210121 14:47:50.984" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:50.984" starttime="20210121 14:47:50.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:47:50.984" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:47:50.985" starttime="20210121 14:47:50.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:50.988" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:54.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:54.340" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:47:54.340" starttime="20210121 14:47:50.986"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:54.341" starttime="20210121 14:47:54.340"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:54.341" starttime="20210121 14:47:54.341"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:54.342" starttime="20210121 14:47:54.341"></status>
</kw>
<msg timestamp="20210121 14:47:54.343" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:47:54.343" starttime="20210121 14:47:50.986"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:47:54.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:54.343" starttime="20210121 14:47:54.343"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:54.343" starttime="20210121 14:47:50.985"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:54.343" starttime="20210121 14:47:50.985"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:54.344" starttime="20210121 14:47:48.963"></status>
</kw>
<test id="s1-s12-s3-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<assign>
<var>${bucket}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
</arguments>
<assign>
<var>${bucket}</var>
</assign>
<kw name="Create link" library="commonawslib">
<arguments>
<arg>to-be-deleted</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:54.350" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:57.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:57.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:57.210" starttime="20210121 14:47:54.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:57.211" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:57.211" starttime="20210121 14:47:57.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:57.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:57.212" starttime="20210121 14:47:57.211"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:57.212" starttime="20210121 14:47:54.347"></status>
</kw>
<msg timestamp="20210121 14:47:57.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:57.213" starttime="20210121 14:47:54.347"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:57.213" starttime="20210121 14:47:54.346"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:57.213" starttime="20210121 14:47:54.346"></status>
</kw>
<msg timestamp="20210121 14:47:57.213" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" endtime="20210121 14:47:57.213" starttime="20210121 14:47:54.346"></status>
</kw>
<msg timestamp="20210121 14:47:57.214" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" endtime="20210121 14:47:57.214" starttime="20210121 14:47:54.345"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket ${bucket}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:57.219" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:57.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:57.799" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:57.799" starttime="20210121 14:47:57.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:57.800" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:57.800" starttime="20210121 14:47:57.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:57.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:57.801" starttime="20210121 14:47:57.800"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:57.801" starttime="20210121 14:47:57.216"></status>
</kw>
<msg timestamp="20210121 14:47:57.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:57.802" starttime="20210121 14:47:57.215"></status>
</kw>
<msg timestamp="20210121 14:47:57.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:57.802" starttime="20210121 14:47:57.215"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:57.802" starttime="20210121 14:47:57.214"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:57.803" critical="yes" starttime="20210121 14:47:54.344"></status>
</test>
<test id="s1-s12-s3-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:57.809" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:58.290" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:47:58.290" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:47:58.290" starttime="20210121 14:47:57.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:58.291" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:47:58.291" starttime="20210121 14:47:58.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:58.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:58.292" starttime="20210121 14:47:58.292"></status>
</kw>
<msg timestamp="20210121 14:47:58.293" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:47:58.293" starttime="20210121 14:47:57.805"></status>
</kw>
<msg timestamp="20210121 14:47:58.293" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:47:58.293" starttime="20210121 14:47:57.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:58.294" starttime="20210121 14:47:58.293"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:47:58.294" critical="yes" starttime="20210121 14:47:57.803"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:47:58.296" starttime="20210121 14:47:48.949"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/buckethead.robot" id="s1-s12-s4" name="Buckethead">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:47:58.310" level="INFO">${random} = 70725</msg>
<status status="PASS" endtime="20210121 14:47:58.310" starttime="20210121 14:47:58.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:47:58.312" level="INFO">${PREFIX} = 70725</msg>
<status status="PASS" endtime="20210121 14:47:58.312" starttime="20210121 14:47:58.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.312" starttime="20210121 14:47:58.309"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.312" starttime="20210121 14:47:58.309"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:58.315" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:58.318" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:47:58.318" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:47:58.318" starttime="20210121 14:47:58.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:58.319" starttime="20210121 14:47:58.318"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:58.321" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:58.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:58.464" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:47:58.464" starttime="20210121 14:47:58.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:58.470" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:58.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:58.881" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:47:58.881" starttime="20210121 14:47:58.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:58.882" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:47:58.882" starttime="20210121 14:47:58.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:58.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:58.883" starttime="20210121 14:47:58.882"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.883" starttime="20210121 14:47:58.466"></status>
</kw>
<msg timestamp="20210121 14:47:58.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:58.883" starttime="20210121 14:47:58.466"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.884" starttime="20210121 14:47:58.465"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.884" starttime="20210121 14:47:58.465"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.884" starttime="20210121 14:47:58.464"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.884" starttime="20210121 14:47:58.313"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:58.884" starttime="20210121 14:47:58.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:58.885" starttime="20210121 14:47:58.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:47:58.886" starttime="20210121 14:47:58.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:58.890" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:59.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:59.245" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:59.245" starttime="20210121 14:47:58.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.246" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:59.246" starttime="20210121 14:47:59.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:59.247" starttime="20210121 14:47:59.246"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.247" starttime="20210121 14:47:58.888"></status>
</kw>
<msg timestamp="20210121 14:47:59.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:59.247" starttime="20210121 14:47:58.888"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.248" starttime="20210121 14:47:58.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:59.251" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:59.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:59.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:59.608" starttime="20210121 14:47:59.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.609" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:59.609" starttime="20210121 14:47:59.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:59.610" starttime="20210121 14:47:59.609"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.610" starttime="20210121 14:47:59.249"></status>
</kw>
<msg timestamp="20210121 14:47:59.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:59.611" starttime="20210121 14:47:59.248"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.611" starttime="20210121 14:47:59.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:59.614" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:47:59.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:47:59.951" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:47:59.951" starttime="20210121 14:47:59.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.952" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:47:59.952" starttime="20210121 14:47:59.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:47:59.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:47:59.953" starttime="20210121 14:47:59.952"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.953" starttime="20210121 14:47:59.612"></status>
</kw>
<msg timestamp="20210121 14:47:59.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:47:59.953" starttime="20210121 14:47:59.611"></status>
</kw>
<status status="PASS" endtime="20210121 14:47:59.954" starttime="20210121 14:47:59.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:47:59.957" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:00.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:00.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:00.319" starttime="20210121 14:47:59.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:00.320" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:00.320" starttime="20210121 14:48:00.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:00.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:00.321" starttime="20210121 14:48:00.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:59.955"></status>
</kw>
<msg timestamp="20210121 14:48:00.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:59.954"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:59.954"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:58.887"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:58.886"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.322" starttime="20210121 14:47:58.885"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:00.323" starttime="20210121 14:47:58.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:00.324" starttime="20210121 14:48:00.323"></status>
</kw>
<msg timestamp="20210121 14:48:00.324" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:00.324" starttime="20210121 14:48:00.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:48:00.325" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:00.325" starttime="20210121 14:48:00.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:00.330" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:03.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:03.628" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:48:03.628" starttime="20210121 14:48:00.328"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:03.629" starttime="20210121 14:48:03.629"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:03.630" starttime="20210121 14:48:03.629"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:03.630" starttime="20210121 14:48:03.630"></status>
</kw>
<msg timestamp="20210121 14:48:03.631" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:48:03.631" starttime="20210121 14:48:00.327"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:48:03.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:03.631" starttime="20210121 14:48:03.631"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:03.631" starttime="20210121 14:48:00.325"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:03.632" starttime="20210121 14:48:00.325"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:03.632" starttime="20210121 14:47:58.308"></status>
</kw>
<test id="s1-s12-s4-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ${BUCKET}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:03.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:04.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:04.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:04.266" starttime="20210121 14:48:03.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:04.267" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:04.267" starttime="20210121 14:48:04.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:04.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:04.268" starttime="20210121 14:48:04.268"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:04.269" starttime="20210121 14:48:03.635"></status>
</kw>
<msg timestamp="20210121 14:48:04.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:04.269" starttime="20210121 14:48:03.634"></status>
</kw>
<msg timestamp="20210121 14:48:04.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:04.269" starttime="20210121 14:48:03.634"></status>
</kw>
<msg timestamp="20210121 14:48:04.269" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:48:04.270" starttime="20210121 14:48:03.633"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:04.273" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:04.895" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:04.895" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:48:04.895" starttime="20210121 14:48:04.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:04.896" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:48:04.896" starttime="20210121 14:48:04.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:04.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:04.898" starttime="20210121 14:48:04.897"></status>
</kw>
<msg timestamp="20210121 14:48:04.899" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:48:04.900" starttime="20210121 14:48:04.270"></status>
</kw>
<msg timestamp="20210121 14:48:04.900" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" endtime="20210121 14:48:04.900" starttime="20210121 14:48:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:04.901" starttime="20210121 14:48:04.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Not Found</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:04.905" starttime="20210121 14:48:04.903"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:04.905" critical="yes" starttime="20210121 14:48:03.632"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:48:04.907" starttime="20210121 14:47:58.298"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/bucketlist.robot" id="s1-s12-s5" name="Bucketlist">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:04.927" level="INFO">${random} = 48740</msg>
<status status="PASS" endtime="20210121 14:48:04.927" starttime="20210121 14:48:04.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:04.928" level="INFO">${PREFIX} = 48740</msg>
<status status="PASS" endtime="20210121 14:48:04.928" starttime="20210121 14:48:04.927"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:04.928" starttime="20210121 14:48:04.926"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:04.928" starttime="20210121 14:48:04.926"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:04.932" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:04.941" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:48:04.941" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:48:04.941" starttime="20210121 14:48:04.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:04.943" starttime="20210121 14:48:04.942"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:04.945" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:05.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:05.094" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:48:05.094" starttime="20210121 14:48:04.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:05.102" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:05.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:05.528" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:48:05.528" starttime="20210121 14:48:05.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:05.529" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:48:05.530" starttime="20210121 14:48:05.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:05.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:05.530" starttime="20210121 14:48:05.530"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.531" starttime="20210121 14:48:05.097"></status>
</kw>
<msg timestamp="20210121 14:48:05.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:05.531" starttime="20210121 14:48:05.096"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.531" starttime="20210121 14:48:05.096"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.531" starttime="20210121 14:48:05.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.531" starttime="20210121 14:48:05.095"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.532" starttime="20210121 14:48:04.929"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.532" starttime="20210121 14:48:04.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:05.533" starttime="20210121 14:48:05.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:05.534" starttime="20210121 14:48:05.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:05.538" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:05.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:05.916" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:05.916" starttime="20210121 14:48:05.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:05.917" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:05.917" starttime="20210121 14:48:05.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:05.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:05.918" starttime="20210121 14:48:05.917"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.918" starttime="20210121 14:48:05.535"></status>
</kw>
<msg timestamp="20210121 14:48:05.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:05.918" starttime="20210121 14:48:05.535"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:05.919" starttime="20210121 14:48:05.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:05.923" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:06.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:06.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:06.318" starttime="20210121 14:48:05.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:06.319" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:06.319" starttime="20210121 14:48:06.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:06.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:06.320" starttime="20210121 14:48:06.319"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:06.320" starttime="20210121 14:48:05.920"></status>
</kw>
<msg timestamp="20210121 14:48:06.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:06.320" starttime="20210121 14:48:05.919"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:06.320" starttime="20210121 14:48:05.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:06.324" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:06.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:06.700" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:06.700" starttime="20210121 14:48:06.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:06.701" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:06.701" starttime="20210121 14:48:06.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:06.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:06.706" starttime="20210121 14:48:06.704"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:06.707" starttime="20210121 14:48:06.321"></status>
</kw>
<msg timestamp="20210121 14:48:06.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:06.707" starttime="20210121 14:48:06.321"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:06.707" starttime="20210121 14:48:06.321"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:06.711" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:07.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:07.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:07.087" starttime="20210121 14:48:06.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:07.088" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:07.088" starttime="20210121 14:48:07.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:07.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:07.089" starttime="20210121 14:48:07.089"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.089" starttime="20210121 14:48:06.708"></status>
</kw>
<msg timestamp="20210121 14:48:07.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:06.708"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:06.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:05.534"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:05.534"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:05.533"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:07.090" starttime="20210121 14:48:05.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:07.091" starttime="20210121 14:48:07.091"></status>
</kw>
<msg timestamp="20210121 14:48:07.092" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:07.092" starttime="20210121 14:48:07.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:48:07.093" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:07.093" starttime="20210121 14:48:07.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:07.098" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:10.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:10.648" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:48:10.648" starttime="20210121 14:48:07.095"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:10.649" starttime="20210121 14:48:10.648"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:10.650" starttime="20210121 14:48:10.649"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:10.650" starttime="20210121 14:48:10.650"></status>
</kw>
<msg timestamp="20210121 14:48:10.650" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:48:10.650" starttime="20210121 14:48:07.094"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:48:10.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:10.651" starttime="20210121 14:48:10.651"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:10.651" starttime="20210121 14:48:07.094"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:10.651" starttime="20210121 14:48:07.093"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:10.651" starttime="20210121 14:48:04.925"></status>
</kw>
<test id="s1-s12-s5-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:10.660" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:11.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:11.192" level="INFO">${output} = bucket-85638
link</msg>
<status status="PASS" endtime="20210121 14:48:11.192" starttime="20210121 14:48:10.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:11.193" level="INFO">bucket-85638
link</msg>
<status status="PASS" endtime="20210121 14:48:11.193" starttime="20210121 14:48:11.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:11.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:11.194" starttime="20210121 14:48:11.193"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.194" starttime="20210121 14:48:10.655"></status>
</kw>
<msg timestamp="20210121 14:48:11.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:11.195" starttime="20210121 14:48:10.654"></status>
</kw>
<msg timestamp="20210121 14:48:11.195" level="INFO">${output} = bucket-85638
link</msg>
<status status="PASS" endtime="20210121 14:48:11.195" starttime="20210121 14:48:10.653"></status>
</kw>
<msg timestamp="20210121 14:48:11.195" level="INFO">${result} = bucket-85638
link</msg>
<status status="PASS" endtime="20210121 14:48:11.195" starttime="20210121 14:48:10.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:11.196" starttime="20210121 14:48:11.195"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:11.196" critical="yes" starttime="20210121 14:48:10.652"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:48:11.197" starttime="20210121 14:48:04.910"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/MultipartUpload.robot" id="s1-s12-s6" name="MultipartUpload">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:11.211" level="INFO">${random} = 05190</msg>
<status status="PASS" endtime="20210121 14:48:11.211" starttime="20210121 14:48:11.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:11.212" level="INFO">${PREFIX} = 05190</msg>
<status status="PASS" endtime="20210121 14:48:11.212" starttime="20210121 14:48:11.211"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.213" starttime="20210121 14:48:11.210"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.213" starttime="20210121 14:48:11.210"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:11.216" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:11.219" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:48:11.219" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:48:11.219" starttime="20210121 14:48:11.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:11.220" starttime="20210121 14:48:11.219"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:11.222" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:11.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:11.365" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:48:11.365" starttime="20210121 14:48:11.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:11.379" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:11.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:11.788" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:48:11.788" starttime="20210121 14:48:11.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:11.789" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:48:11.790" starttime="20210121 14:48:11.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:11.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:11.790" starttime="20210121 14:48:11.790"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.791" starttime="20210121 14:48:11.368"></status>
</kw>
<msg timestamp="20210121 14:48:11.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:11.791" starttime="20210121 14:48:11.367"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.791" starttime="20210121 14:48:11.367"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.791" starttime="20210121 14:48:11.366"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.792" starttime="20210121 14:48:11.365"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.792" starttime="20210121 14:48:11.213"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:11.792" starttime="20210121 14:48:11.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:11.793" starttime="20210121 14:48:11.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:11.794" starttime="20210121 14:48:11.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:11.798" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:12.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:12.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:12.187" starttime="20210121 14:48:11.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.188" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:12.188" starttime="20210121 14:48:12.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:12.189" starttime="20210121 14:48:12.189"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.189" starttime="20210121 14:48:11.796"></status>
</kw>
<msg timestamp="20210121 14:48:12.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:12.190" starttime="20210121 14:48:11.795"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.190" starttime="20210121 14:48:11.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:12.194" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:12.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:12.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:12.558" starttime="20210121 14:48:12.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.559" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:12.559" starttime="20210121 14:48:12.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:12.560" starttime="20210121 14:48:12.559"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.560" starttime="20210121 14:48:12.191"></status>
</kw>
<msg timestamp="20210121 14:48:12.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:12.560" starttime="20210121 14:48:12.191"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.561" starttime="20210121 14:48:12.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:12.566" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:12.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:12.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:12.926" starttime="20210121 14:48:12.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.927" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:12.927" starttime="20210121 14:48:12.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:12.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:12.928" starttime="20210121 14:48:12.927"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.928" starttime="20210121 14:48:12.562"></status>
</kw>
<msg timestamp="20210121 14:48:12.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:12.928" starttime="20210121 14:48:12.562"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:12.929" starttime="20210121 14:48:12.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:12.932" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:13.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:13.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:13.302" starttime="20210121 14:48:12.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:13.305" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:13.305" starttime="20210121 14:48:13.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:13.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:13.306" starttime="20210121 14:48:13.305"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.306" starttime="20210121 14:48:12.930"></status>
</kw>
<msg timestamp="20210121 14:48:13.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:12.929"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:12.929"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:11.794"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:11.794"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:11.793"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:13.307" starttime="20210121 14:48:11.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:13.309" starttime="20210121 14:48:13.308"></status>
</kw>
<msg timestamp="20210121 14:48:13.309" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:13.309" starttime="20210121 14:48:13.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:48:13.309" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:13.309" starttime="20210121 14:48:13.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:13.315" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:16.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:16.517" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:48:16.517" starttime="20210121 14:48:13.311"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:16.518" starttime="20210121 14:48:16.518"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:16.519" starttime="20210121 14:48:16.518"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:16.519" starttime="20210121 14:48:16.519"></status>
</kw>
<msg timestamp="20210121 14:48:16.520" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:48:16.520" starttime="20210121 14:48:13.310"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:48:16.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:16.520" starttime="20210121 14:48:16.520"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:16.520" starttime="20210121 14:48:13.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:16.520" starttime="20210121 14:48:13.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:16.521" starttime="20210121 14:48:11.210"></status>
</kw>
<test id="s1-s12-s6-t1" name="Test Multipart Upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:16.523" level="INFO">${random} = 11080</msg>
<status status="PASS" endtime="20210121 14:48:16.523" starttime="20210121 14:48:16.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:16.524" level="INFO">${PREFIX} = 11080</msg>
<status status="PASS" endtime="20210121 14:48:16.524" starttime="20210121 14:48:16.523"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:16.524" starttime="20210121 14:48:16.522"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:16.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 11080/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:17.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:17.040" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.040" starttime="20210121 14:48:16.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.041" level="INFO">{
    "Bucket": "link", 
    "UploadId": "c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.041" starttime="20210121 14:48:17.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:17.042" starttime="20210121 14:48:17.042"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.042" starttime="20210121 14:48:16.526"></status>
</kw>
<msg timestamp="20210121 14:48:17.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:17.043" starttime="20210121 14:48:16.525"></status>
</kw>
<msg timestamp="20210121 14:48:17.043" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.043" starttime="20210121 14:48:16.525"></status>
</kw>
<msg timestamp="20210121 14:48:17.043" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.043" starttime="20210121 14:48:16.524"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:17.046" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716", 
    "Key": "11080/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:17.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:17.093" level="INFO">${output} = c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716</msg>
<status status="PASS" endtime="20210121 14:48:17.093" starttime="20210121 14:48:17.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.094" level="INFO">c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716</msg>
<status status="PASS" endtime="20210121 14:48:17.094" starttime="20210121 14:48:17.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:17.095" starttime="20210121 14:48:17.094"></status>
</kw>
<msg timestamp="20210121 14:48:17.095" level="INFO">${uploadID} = c426a05b-6000-41fb-aae2-244c047b18d9-105594257209622716</msg>
<status status="PASS" endtime="20210121 14:48:17.095" starttime="20210121 14:48:17.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.096" starttime="20210121 14:48:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.097" starttime="20210121 14:48:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.097" starttime="20210121 14:48:17.097"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:17.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 11080/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:17.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:17.580" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0b232923-6ada-4713-95c1-869554887648-105594257246781629", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.580" starttime="20210121 14:48:17.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.581" level="INFO">{
    "Bucket": "link", 
    "UploadId": "0b232923-6ada-4713-95c1-869554887648-105594257246781629", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.581" starttime="20210121 14:48:17.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:17.582" starttime="20210121 14:48:17.582"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.583" starttime="20210121 14:48:17.099"></status>
</kw>
<msg timestamp="20210121 14:48:17.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:17.583" starttime="20210121 14:48:17.099"></status>
</kw>
<msg timestamp="20210121 14:48:17.583" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0b232923-6ada-4713-95c1-869554887648-105594257246781629", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.583" starttime="20210121 14:48:17.098"></status>
</kw>
<msg timestamp="20210121 14:48:17.584" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "0b232923-6ada-4713-95c1-869554887648-105594257246781629", 
    "Key": "11080/multipartKey"
}</msg>
<status status="PASS" endtime="20210121 14:48:17.584" starttime="20210121 14:48:17.097"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${nextUploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:17.587" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "0b232923-6ada-4713-95c1-869554887648-105594257246781629", 
    "Key": "11080/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:17.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:17.632" level="INFO">${output} = 0b232923-6ada-4713-95c1-869554887648-105594257246781629</msg>
<status status="PASS" endtime="20210121 14:48:17.632" starttime="20210121 14:48:17.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.633" level="INFO">0b232923-6ada-4713-95c1-869554887648-105594257246781629</msg>
<status status="PASS" endtime="20210121 14:48:17.633" starttime="20210121 14:48:17.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:17.634" starttime="20210121 14:48:17.633"></status>
</kw>
<msg timestamp="20210121 14:48:17.634" level="INFO">${nextUploadID} = 0b232923-6ada-4713-95c1-869554887648-105594257246781629</msg>
<status status="PASS" endtime="20210121 14:48:17.634" starttime="20210121 14:48:17.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.635" starttime="20210121 14:48:17.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.636" starttime="20210121 14:48:17.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.636" starttime="20210121 14:48:17.636"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:17.637" starttime="20210121 14:48:17.636"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:17.642" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:17.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:17.676" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0308986 s, 170 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:17.677" starttime="20210121 14:48:17.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.678" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0308986 s, 170 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:17.678" starttime="20210121 14:48:17.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:17.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:17.679" starttime="20210121 14:48:17.678"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.679" starttime="20210121 14:48:17.639"></status>
</kw>
<msg timestamp="20210121 14:48:17.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:17.679" starttime="20210121 14:48:17.639"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.679" starttime="20210121 14:48:17.638"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.680" starttime="20210121 14:48:17.637"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:17.680" starttime="20210121 14:48:17.637"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:17.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 11080/multipartKey --part-number 1 --body /tmp/part1 --upload-id 0b232923-6ada-4713-95c1-869554887648-105594257246781629 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:18.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:18.655" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257287807166"
}</msg>
<status status="PASS" endtime="20210121 14:48:18.655" starttime="20210121 14:48:17.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:18.657" level="INFO">{
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257287807166"
}</msg>
<status status="PASS" endtime="20210121 14:48:18.657" starttime="20210121 14:48:18.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:18.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:18.658" starttime="20210121 14:48:18.657"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:18.658" starttime="20210121 14:48:17.681"></status>
</kw>
<msg timestamp="20210121 14:48:18.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:18.658" starttime="20210121 14:48:17.681"></status>
</kw>
<msg timestamp="20210121 14:48:18.659" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257287807166"
}</msg>
<status status="PASS" endtime="20210121 14:48:18.659" starttime="20210121 14:48:17.681"></status>
</kw>
<msg timestamp="20210121 14:48:18.659" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257287807166"
}</msg>
<status status="PASS" endtime="20210121 14:48:18.659" starttime="20210121 14:48:17.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:18.659" starttime="20210121 14:48:18.659"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:18.664" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:18.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:18.703" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0331108 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:18.703" starttime="20210121 14:48:18.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:18.705" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0331108 s, 158 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:18.705" starttime="20210121 14:48:18.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:18.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:18.706" starttime="20210121 14:48:18.705"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:18.706" starttime="20210121 14:48:18.661"></status>
</kw>
<msg timestamp="20210121 14:48:18.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:18.706" starttime="20210121 14:48:18.661"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:18.707" starttime="20210121 14:48:18.660"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:18.707" starttime="20210121 14:48:18.660"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:18.707" starttime="20210121 14:48:18.660"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:18.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 11080/multipartKey --part-number 1 --body /tmp/part1 --upload-id 0b232923-6ada-4713-95c1-869554887648-105594257246781629 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:19.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:19.645" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257354391743"
}</msg>
<status status="PASS" endtime="20210121 14:48:19.645" starttime="20210121 14:48:18.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:19.646" level="INFO">{
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257354391743"
}</msg>
<status status="PASS" endtime="20210121 14:48:19.646" starttime="20210121 14:48:19.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:19.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:19.647" starttime="20210121 14:48:19.646"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:19.647" starttime="20210121 14:48:18.709"></status>
</kw>
<msg timestamp="20210121 14:48:19.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:19.647" starttime="20210121 14:48:18.709"></status>
</kw>
<msg timestamp="20210121 14:48:19.648" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257354391743"
}</msg>
<status status="PASS" endtime="20210121 14:48:19.648" starttime="20210121 14:48:18.708"></status>
</kw>
<msg timestamp="20210121 14:48:19.648" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/11080/multipartKey105594257354391743"
}</msg>
<status status="PASS" endtime="20210121 14:48:19.648" starttime="20210121 14:48:18.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:19.649" starttime="20210121 14:48:19.648"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:19.649" critical="yes" starttime="20210121 14:48:16.521"></status>
</test>
<test id="s1-s12-s6-t2" name="Test Multipart Upload Complete">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:19.652" level="INFO">${random} = 17435</msg>
<status status="PASS" endtime="20210121 14:48:19.652" starttime="20210121 14:48:19.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:19.652" level="INFO">${PREFIX} = 17435</msg>
<status status="PASS" endtime="20210121 14:48:19.652" starttime="20210121 14:48:19.652"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:19.653" starttime="20210121 14:48:19.651"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:19.657" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 17435/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:20.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:20.143" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:20.143" starttime="20210121 14:48:19.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.144" level="INFO">{
    "Bucket": "link", 
    "UploadId": "4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:20.144" starttime="20210121 14:48:20.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:20.145" starttime="20210121 14:48:20.144"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:20.145" starttime="20210121 14:48:19.654"></status>
</kw>
<msg timestamp="20210121 14:48:20.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:20.145" starttime="20210121 14:48:19.654"></status>
</kw>
<msg timestamp="20210121 14:48:20.146" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:20.146" starttime="20210121 14:48:19.653"></status>
</kw>
<msg timestamp="20210121 14:48:20.146" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:20.146" starttime="20210121 14:48:19.653"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:20.149" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968", 
    "Key": "17435/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:20.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:20.195" level="INFO">${output} = 4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968</msg>
<status status="PASS" endtime="20210121 14:48:20.195" starttime="20210121 14:48:20.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.196" level="INFO">4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968</msg>
<status status="PASS" endtime="20210121 14:48:20.197" starttime="20210121 14:48:20.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:20.197" starttime="20210121 14:48:20.197"></status>
</kw>
<msg timestamp="20210121 14:48:20.198" level="INFO">${uploadID} = 4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968</msg>
<status status="PASS" endtime="20210121 14:48:20.198" starttime="20210121 14:48:20.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:20.198" starttime="20210121 14:48:20.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:20.199" starttime="20210121 14:48:20.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:20.200" starttime="20210121 14:48:20.199"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:20.205" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:20.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:20.248" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393952 s, 133 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:20.248" starttime="20210121 14:48:20.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.250" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393952 s, 133 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:20.250" starttime="20210121 14:48:20.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:20.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:20.251" starttime="20210121 14:48:20.250"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:20.251" starttime="20210121 14:48:20.202"></status>
</kw>
<msg timestamp="20210121 14:48:20.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:20.251" starttime="20210121 14:48:20.201"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:20.252" starttime="20210121 14:48:20.201"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:20.252" starttime="20210121 14:48:20.200"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:20.252" starttime="20210121 14:48:20.200"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:20.257" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 17435/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:21.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:21.119" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257456365761"
}</msg>
<status status="PASS" endtime="20210121 14:48:21.119" starttime="20210121 14:48:20.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.120" level="INFO">{
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257456365761"
}</msg>
<status status="PASS" endtime="20210121 14:48:21.120" starttime="20210121 14:48:21.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:21.121" starttime="20210121 14:48:21.121"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:21.121" starttime="20210121 14:48:20.254"></status>
</kw>
<msg timestamp="20210121 14:48:21.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:21.122" starttime="20210121 14:48:20.253"></status>
</kw>
<msg timestamp="20210121 14:48:21.122" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257456365761"
}</msg>
<status status="PASS" endtime="20210121 14:48:21.122" starttime="20210121 14:48:20.253"></status>
</kw>
<msg timestamp="20210121 14:48:21.122" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257456365761"
}</msg>
<status status="PASS" endtime="20210121 14:48:21.122" starttime="20210121 14:48:20.252"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:21.126" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257456365761"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:21.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:21.171" level="INFO">${output} = /legacy/source-bucket/17435/multipartKey1105594257456365761</msg>
<status status="PASS" endtime="20210121 14:48:21.171" starttime="20210121 14:48:21.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.172" level="INFO">/legacy/source-bucket/17435/multipartKey1105594257456365761</msg>
<status status="PASS" endtime="20210121 14:48:21.173" starttime="20210121 14:48:21.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:21.173" starttime="20210121 14:48:21.173"></status>
</kw>
<msg timestamp="20210121 14:48:21.174" level="INFO">${eTag1} = /legacy/source-bucket/17435/multipartKey1105594257456365761</msg>
<status status="PASS" endtime="20210121 14:48:21.174" starttime="20210121 14:48:21.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:21.174" starttime="20210121 14:48:21.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:21.178" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:48:21.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:21.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:21.180" starttime="20210121 14:48:21.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.181" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:21.181" starttime="20210121 14:48:21.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:21.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:21.182" starttime="20210121 14:48:21.181"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:21.182" starttime="20210121 14:48:21.176"></status>
</kw>
<msg timestamp="20210121 14:48:21.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:21.182" starttime="20210121 14:48:21.175"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:21.183" starttime="20210121 14:48:21.175"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:21.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 17435/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:24.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:24.369" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257516921026"
}</msg>
<status status="PASS" endtime="20210121 14:48:24.369" starttime="20210121 14:48:21.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:24.371" level="INFO">{
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257516921026"
}</msg>
<status status="PASS" endtime="20210121 14:48:24.371" starttime="20210121 14:48:24.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:24.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:24.371" starttime="20210121 14:48:24.371"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:24.372" starttime="20210121 14:48:21.184"></status>
</kw>
<msg timestamp="20210121 14:48:24.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:24.372" starttime="20210121 14:48:21.184"></status>
</kw>
<msg timestamp="20210121 14:48:24.372" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257516921026"
}</msg>
<status status="PASS" endtime="20210121 14:48:24.372" starttime="20210121 14:48:21.183"></status>
</kw>
<msg timestamp="20210121 14:48:24.373" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257516921026"
}</msg>
<status status="PASS" endtime="20210121 14:48:24.373" starttime="20210121 14:48:21.183"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:24.376" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/17435/multipartKey1105594257516921026"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:24.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:24.422" level="INFO">${output} = /legacy/source-bucket/17435/multipartKey1105594257516921026</msg>
<status status="PASS" endtime="20210121 14:48:24.422" starttime="20210121 14:48:24.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:24.423" level="INFO">/legacy/source-bucket/17435/multipartKey1105594257516921026</msg>
<status status="PASS" endtime="20210121 14:48:24.423" starttime="20210121 14:48:24.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:24.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:24.424" starttime="20210121 14:48:24.423"></status>
</kw>
<msg timestamp="20210121 14:48:24.424" level="INFO">${eTag2} = /legacy/source-bucket/17435/multipartKey1105594257516921026</msg>
<status status="PASS" endtime="20210121 14:48:24.424" starttime="20210121 14:48:24.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:24.425" starttime="20210121 14:48:24.424"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:24.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4659e157-3cdc-43f6-a82d-ed2c8327f291-105594257413963968 --bucket link --key 17435/multipartKey1 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/17435/multipartKey1105594257456365761,PartNumber=1},{ETag=/legacy/source-bucket/17435/multipartKey1105594257516921026,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:25.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:25.003" level="INFO">${output} = {
    "ETag": "6d30de4eb2b2cbf2368563e17d79301204a894ae62c342d05707582dcfd7e3cf", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:25.003" starttime="20210121 14:48:24.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.004" level="INFO">{
    "ETag": "6d30de4eb2b2cbf2368563e17d79301204a894ae62c342d05707582dcfd7e3cf", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:25.004" starttime="20210121 14:48:25.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:25.005" starttime="20210121 14:48:25.004"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:25.005" starttime="20210121 14:48:24.427"></status>
</kw>
<msg timestamp="20210121 14:48:25.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:25.005" starttime="20210121 14:48:24.427"></status>
</kw>
<msg timestamp="20210121 14:48:25.006" level="INFO">${output} = {
    "ETag": "6d30de4eb2b2cbf2368563e17d79301204a894ae62c342d05707582dcfd7e3cf", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:25.006" starttime="20210121 14:48:24.426"></status>
</kw>
<msg timestamp="20210121 14:48:25.006" level="INFO">${result} = {
    "ETag": "6d30de4eb2b2cbf2368563e17d79301204a894ae62c342d05707582dcfd7e3cf", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "17435/multipartKey1"
}</msg>
<status status="PASS" endtime="20210121 14:48:25.006" starttime="20210121 14:48:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:25.007" starttime="20210121 14:48:25.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:25.007" starttime="20210121 14:48:25.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:25.008" starttime="20210121 14:48:25.008"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:25.013" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 17435/multipartKey1 /tmp/17435-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:25.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:25.939" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:24 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:25.939" starttime="20210121 14:48:25.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.940" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:24 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14:48:25 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:48:25.940" starttime="20210121 14:48:25.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:25.941" starttime="20210121 14:48:25.941"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:25.942" starttime="20210121 14:48:25.010"></status>
</kw>
<msg timestamp="20210121 14:48:25.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:25.942" starttime="20210121 14:48:25.009"></status>
</kw>
<msg timestamp="20210121 14:48:25.942" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:24 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:25.942" starttime="20210121 14:48:25.009"></status>
</kw>
<msg timestamp="20210121 14:48:25.943" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:24 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:25.943" starttime="20210121 14:48:25.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:25.947" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/17435-multipartKey1'.</msg>
<msg timestamp="20210121 14:48:25.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:25.955" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:25.955" starttime="20210121 14:48:25.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.957" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:25.957" starttime="20210121 14:48:25.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:25.958" starttime="20210121 14:48:25.957"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:25.958" starttime="20210121 14:48:25.944"></status>
</kw>
<msg timestamp="20210121 14:48:25.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:25.958" starttime="20210121 14:48:25.943"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:25.958" starttime="20210121 14:48:25.943"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:25.963" level="INFO">Running command 'md5sum /tmp/17435-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:25.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:25.980" level="INFO">${output} = 234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:25.981" starttime="20210121 14:48:25.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.982" level="INFO">234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:25.982" starttime="20210121 14:48:25.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:25.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:25.983" starttime="20210121 14:48:25.982"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:25.983" starttime="20210121 14:48:25.960"></status>
</kw>
<msg timestamp="20210121 14:48:25.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:25.984" starttime="20210121 14:48:25.960"></status>
</kw>
<msg timestamp="20210121 14:48:25.984" level="INFO">${checksumbefore} = 234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:25.984" starttime="20210121 14:48:25.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:25.988" level="INFO">Running command 'md5sum /tmp/17435-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:26.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:26.004" level="INFO">${output} = 234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:26.004" starttime="20210121 14:48:25.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.006" level="INFO">234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:26.006" starttime="20210121 14:48:26.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:26.007" starttime="20210121 14:48:26.006"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.007" starttime="20210121 14:48:25.985"></status>
</kw>
<msg timestamp="20210121 14:48:26.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:26.008" starttime="20210121 14:48:25.985"></status>
</kw>
<msg timestamp="20210121 14:48:26.008" level="INFO">${checksumafter} = 234594cd2551c0dfe092b8f0c108f74d</msg>
<status status="PASS" endtime="20210121 14:48:26.008" starttime="20210121 14:48:25.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:26.009" starttime="20210121 14:48:26.008"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.009" starttime="20210121 14:48:25.959"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:26.009" critical="yes" starttime="20210121 14:48:19.650"></status>
</test>
<test id="s1-s12-s6-t3" name="Test Multipart Upload Complete Entity too small">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:26.013" level="INFO">${random} = 83694</msg>
<status status="PASS" endtime="20210121 14:48:26.013" starttime="20210121 14:48:26.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.013" level="INFO">${PREFIX} = 83694</msg>
<status status="PASS" endtime="20210121 14:48:26.013" starttime="20210121 14:48:26.013"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.014" starttime="20210121 14:48:26.012"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:26.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 83694/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:26.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:26.519" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795", 
    "Key": "83694/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:48:26.519" starttime="20210121 14:48:26.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.520" level="INFO">{
    "Bucket": "link", 
    "UploadId": "7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795", 
    "Key": "83694/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:48:26.520" starttime="20210121 14:48:26.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:26.521" starttime="20210121 14:48:26.520"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.521" starttime="20210121 14:48:26.017"></status>
</kw>
<msg timestamp="20210121 14:48:26.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:26.522" starttime="20210121 14:48:26.017"></status>
</kw>
<msg timestamp="20210121 14:48:26.522" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795", 
    "Key": "83694/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:48:26.522" starttime="20210121 14:48:26.016"></status>
</kw>
<msg timestamp="20210121 14:48:26.522" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795", 
    "Key": "83694/multipartKey2"
}</msg>
<status status="PASS" endtime="20210121 14:48:26.522" starttime="20210121 14:48:26.015"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:26.525" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795", 
    "Key": "83694/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:26.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:26.571" level="INFO">${output} = 7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795</msg>
<status status="PASS" endtime="20210121 14:48:26.571" starttime="20210121 14:48:26.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.572" level="INFO">7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795</msg>
<status status="PASS" endtime="20210121 14:48:26.572" starttime="20210121 14:48:26.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:26.573" starttime="20210121 14:48:26.572"></status>
</kw>
<msg timestamp="20210121 14:48:26.573" level="INFO">${uploadID} = 7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795</msg>
<status status="PASS" endtime="20210121 14:48:26.573" starttime="20210121 14:48:26.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:26.574" starttime="20210121 14:48:26.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:26.574" starttime="20210121 14:48:26.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:26.575" starttime="20210121 14:48:26.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part1" &gt; /tmp/part1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:26.579" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210121 14:48:26.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:26.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:26.582" starttime="20210121 14:48:26.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.583" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:26.583" starttime="20210121 14:48:26.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:26.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:26.583" starttime="20210121 14:48:26.583"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.584" starttime="20210121 14:48:26.576"></status>
</kw>
<msg timestamp="20210121 14:48:26.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:26.584" starttime="20210121 14:48:26.576"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:26.584" starttime="20210121 14:48:26.575"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:26.588" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 83694/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:27.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:27.281" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257869570244"
}</msg>
<status status="PASS" endtime="20210121 14:48:27.281" starttime="20210121 14:48:26.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.282" level="INFO">{
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257869570244"
}</msg>
<status status="PASS" endtime="20210121 14:48:27.282" starttime="20210121 14:48:27.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:27.283" starttime="20210121 14:48:27.282"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:27.283" starttime="20210121 14:48:26.586"></status>
</kw>
<msg timestamp="20210121 14:48:27.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:27.284" starttime="20210121 14:48:26.586"></status>
</kw>
<msg timestamp="20210121 14:48:27.284" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257869570244"
}</msg>
<status status="PASS" endtime="20210121 14:48:27.284" starttime="20210121 14:48:26.585"></status>
</kw>
<msg timestamp="20210121 14:48:27.284" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257869570244"
}</msg>
<status status="PASS" endtime="20210121 14:48:27.284" starttime="20210121 14:48:26.585"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:27.287" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257869570244"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:27.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:27.334" level="INFO">${output} = /legacy/source-bucket/83694/multipartKey2105594257869570244</msg>
<status status="PASS" endtime="20210121 14:48:27.334" starttime="20210121 14:48:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.335" level="INFO">/legacy/source-bucket/83694/multipartKey2105594257869570244</msg>
<status status="PASS" endtime="20210121 14:48:27.335" starttime="20210121 14:48:27.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:27.336" starttime="20210121 14:48:27.335"></status>
</kw>
<msg timestamp="20210121 14:48:27.337" level="INFO">${eTag1} = /legacy/source-bucket/83694/multipartKey2105594257869570244</msg>
<status status="PASS" endtime="20210121 14:48:27.337" starttime="20210121 14:48:27.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:27.338" starttime="20210121 14:48:27.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:27.341" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:48:27.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:27.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:27.344" starttime="20210121 14:48:27.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.345" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:27.345" starttime="20210121 14:48:27.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:27.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:27.346" starttime="20210121 14:48:27.346"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:27.347" starttime="20210121 14:48:27.339"></status>
</kw>
<msg timestamp="20210121 14:48:27.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:27.347" starttime="20210121 14:48:27.338"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:27.347" starttime="20210121 14:48:27.338"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:27.352" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 83694/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:28.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:28.082" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257920164037"
}</msg>
<status status="PASS" endtime="20210121 14:48:28.082" starttime="20210121 14:48:27.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.083" level="INFO">{
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257920164037"
}</msg>
<status status="PASS" endtime="20210121 14:48:28.083" starttime="20210121 14:48:28.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:28.084" starttime="20210121 14:48:28.083"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:28.084" starttime="20210121 14:48:27.349"></status>
</kw>
<msg timestamp="20210121 14:48:28.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:28.084" starttime="20210121 14:48:27.349"></status>
</kw>
<msg timestamp="20210121 14:48:28.084" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257920164037"
}</msg>
<status status="PASS" endtime="20210121 14:48:28.085" starttime="20210121 14:48:27.348"></status>
</kw>
<msg timestamp="20210121 14:48:28.085" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257920164037"
}</msg>
<status status="PASS" endtime="20210121 14:48:28.085" starttime="20210121 14:48:27.347"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:28.088" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/83694/multipartKey2105594257920164037"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:28.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:28.139" level="INFO">${output} = /legacy/source-bucket/83694/multipartKey2105594257920164037</msg>
<status status="PASS" endtime="20210121 14:48:28.139" starttime="20210121 14:48:28.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.140" level="INFO">/legacy/source-bucket/83694/multipartKey2105594257920164037</msg>
<status status="PASS" endtime="20210121 14:48:28.140" starttime="20210121 14:48:28.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:28.141" starttime="20210121 14:48:28.140"></status>
</kw>
<msg timestamp="20210121 14:48:28.141" level="INFO">${eTag2} = /legacy/source-bucket/83694/multipartKey2105594257920164037</msg>
<status status="PASS" endtime="20210121 14:48:28.142" starttime="20210121 14:48:28.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:28.142" starttime="20210121 14:48:28.142"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:28.146" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7af2af72-dede-4304-9f6f-2fbd92a28220-105594257832345795 --bucket link --key 83694/multipartKey2 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/83694/multipartKey2105594257869570244,PartNumber=1},{ETag=/legacy/source-bucket/83694/multipartKey2105594257920164037,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:28.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:28.669" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:48:28.669" starttime="20210121 14:48:28.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.671" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" endtime="20210121 14:48:28.671" starttime="20210121 14:48:28.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:28.672" starttime="20210121 14:48:28.672"></status>
</kw>
<msg timestamp="20210121 14:48:28.673" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:48:28.673" starttime="20210121 14:48:28.143"></status>
</kw>
<msg timestamp="20210121 14:48:28.673" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" endtime="20210121 14:48:28.673" starttime="20210121 14:48:28.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:28.674" starttime="20210121 14:48:28.673"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:28.674" critical="yes" starttime="20210121 14:48:26.011"></status>
</test>
<test id="s1-s12-s6-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:28.678" level="INFO">${random} = 43562</msg>
<status status="PASS" endtime="20210121 14:48:28.678" starttime="20210121 14:48:28.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:28.679" level="INFO">${PREFIX} = 43562</msg>
<status status="PASS" endtime="20210121 14:48:28.679" starttime="20210121 14:48:28.679"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:28.679" starttime="20210121 14:48:28.676"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:28.684" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 43562/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:29.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:29.214" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:29.214" starttime="20210121 14:48:28.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.215" level="INFO">{
    "Bucket": "link", 
    "UploadId": "4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:29.215" starttime="20210121 14:48:29.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:29.216" starttime="20210121 14:48:29.215"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:29.216" starttime="20210121 14:48:28.681"></status>
</kw>
<msg timestamp="20210121 14:48:29.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:29.216" starttime="20210121 14:48:28.681"></status>
</kw>
<msg timestamp="20210121 14:48:29.217" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:29.217" starttime="20210121 14:48:28.680"></status>
</kw>
<msg timestamp="20210121 14:48:29.218" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:29.218" starttime="20210121 14:48:28.679"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:29.221" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494", 
    "Key": "43562/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:29.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:29.267" level="INFO">${output} = 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494</msg>
<status status="PASS" endtime="20210121 14:48:29.267" starttime="20210121 14:48:29.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.269" level="INFO">4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494</msg>
<status status="PASS" endtime="20210121 14:48:29.269" starttime="20210121 14:48:29.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:29.270" starttime="20210121 14:48:29.269"></status>
</kw>
<msg timestamp="20210121 14:48:29.270" level="INFO">${uploadID} = 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494</msg>
<status status="PASS" endtime="20210121 14:48:29.270" starttime="20210121 14:48:29.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:29.271" starttime="20210121 14:48:29.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:29.271" starttime="20210121 14:48:29.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:29.272" starttime="20210121 14:48:29.271"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:29.276" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:29.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:29.774" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:29.774" starttime="20210121 14:48:29.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.775" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:48:29.776" starttime="20210121 14:48:29.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:29.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:29.776" starttime="20210121 14:48:29.776"></status>
</kw>
<msg timestamp="20210121 14:48:29.777" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:29.777" starttime="20210121 14:48:29.273"></status>
</kw>
<msg timestamp="20210121 14:48:29.777" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:29.777" starttime="20210121 14:48:29.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:29.778" starttime="20210121 14:48:29.777"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:29.782" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:30.280" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:30.280" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:30.280" starttime="20210121 14:48:29.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:30.282" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:48:30.282" starttime="20210121 14:48:30.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:30.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:30.283" starttime="20210121 14:48:30.282"></status>
</kw>
<msg timestamp="20210121 14:48:30.283" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:30.283" starttime="20210121 14:48:29.779"></status>
</kw>
<msg timestamp="20210121 14:48:30.283" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:30.283" starttime="20210121 14:48:29.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:30.284" starttime="20210121 14:48:30.283"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:30.299" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:30.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:30.334" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0319045 s, 164 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:30.334" starttime="20210121 14:48:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:30.335" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0319045 s, 164 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:30.335" starttime="20210121 14:48:30.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:30.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:30.336" starttime="20210121 14:48:30.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:30.336" starttime="20210121 14:48:30.295"></status>
</kw>
<msg timestamp="20210121 14:48:30.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:30.336" starttime="20210121 14:48:30.295"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:30.337" starttime="20210121 14:48:30.294"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:30.337" starttime="20210121 14:48:30.284"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:30.337" starttime="20210121 14:48:30.284"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:30.341" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 43562/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:31.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:31.306" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258118410439"
}</msg>
<status status="PASS" endtime="20210121 14:48:31.306" starttime="20210121 14:48:30.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:31.307" level="INFO">{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258118410439"
}</msg>
<status status="PASS" endtime="20210121 14:48:31.308" starttime="20210121 14:48:31.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:31.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:31.308" starttime="20210121 14:48:31.308"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:31.309" starttime="20210121 14:48:30.339"></status>
</kw>
<msg timestamp="20210121 14:48:31.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:31.309" starttime="20210121 14:48:30.338"></status>
</kw>
<msg timestamp="20210121 14:48:31.309" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258118410439"
}</msg>
<status status="PASS" endtime="20210121 14:48:31.309" starttime="20210121 14:48:30.338"></status>
</kw>
<msg timestamp="20210121 14:48:31.310" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258118410439"
}</msg>
<status status="PASS" endtime="20210121 14:48:31.310" starttime="20210121 14:48:30.337"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:31.320" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258118410439"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:31.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:31.368" level="INFO">${output} = /legacy/source-bucket/43562/multipartKey3105594258118410439</msg>
<status status="PASS" endtime="20210121 14:48:31.368" starttime="20210121 14:48:31.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:31.369" level="INFO">/legacy/source-bucket/43562/multipartKey3105594258118410439</msg>
<status status="PASS" endtime="20210121 14:48:31.369" starttime="20210121 14:48:31.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:31.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:31.370" starttime="20210121 14:48:31.369"></status>
</kw>
<msg timestamp="20210121 14:48:31.370" level="INFO">${eTag1} = /legacy/source-bucket/43562/multipartKey3105594258118410439</msg>
<status status="PASS" endtime="20210121 14:48:31.370" starttime="20210121 14:48:31.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:31.371" starttime="20210121 14:48:31.371"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:31.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 43562/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:32.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:32.346" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258184667336"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.346" starttime="20210121 14:48:31.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.347" level="INFO">{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258184667336"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.347" starttime="20210121 14:48:32.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:32.348" starttime="20210121 14:48:32.347"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:32.348" starttime="20210121 14:48:31.373"></status>
</kw>
<msg timestamp="20210121 14:48:32.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:32.349" starttime="20210121 14:48:31.373"></status>
</kw>
<msg timestamp="20210121 14:48:32.349" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258184667336"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.349" starttime="20210121 14:48:31.372"></status>
</kw>
<msg timestamp="20210121 14:48:32.349" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258184667336"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.349" starttime="20210121 14:48:31.372"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:32.352" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258184667336"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:32.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:32.398" level="INFO">${output} = /legacy/source-bucket/43562/multipartKey3105594258184667336</msg>
<status status="PASS" endtime="20210121 14:48:32.398" starttime="20210121 14:48:32.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.399" level="INFO">/legacy/source-bucket/43562/multipartKey3105594258184667336</msg>
<status status="PASS" endtime="20210121 14:48:32.399" starttime="20210121 14:48:32.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:32.400" starttime="20210121 14:48:32.400"></status>
</kw>
<msg timestamp="20210121 14:48:32.401" level="INFO">${eTag2} = /legacy/source-bucket/43562/multipartKey3105594258184667336</msg>
<status status="PASS" endtime="20210121 14:48:32.401" starttime="20210121 14:48:32.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:32.401" starttime="20210121 14:48:32.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part3" &gt; /tmp/part3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:32.405" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20210121 14:48:32.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:32.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:32.407" starttime="20210121 14:48:32.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.408" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:32.408" starttime="20210121 14:48:32.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:32.409" starttime="20210121 14:48:32.408"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:32.409" starttime="20210121 14:48:32.402"></status>
</kw>
<msg timestamp="20210121 14:48:32.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:32.409" starttime="20210121 14:48:32.402"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:32.410" starttime="20210121 14:48:32.401"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:32.414" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 43562/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:32.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:32.991" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258251120841"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.991" starttime="20210121 14:48:32.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.992" level="INFO">{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258251120841"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.993" starttime="20210121 14:48:32.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:32.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:32.993" starttime="20210121 14:48:32.993"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:32.994" starttime="20210121 14:48:32.411"></status>
</kw>
<msg timestamp="20210121 14:48:32.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:32.994" starttime="20210121 14:48:32.411"></status>
</kw>
<msg timestamp="20210121 14:48:32.994" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258251120841"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.994" starttime="20210121 14:48:32.410"></status>
</kw>
<msg timestamp="20210121 14:48:32.995" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258251120841"
}</msg>
<status status="PASS" endtime="20210121 14:48:32.995" starttime="20210121 14:48:32.410"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag3}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:32.998" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/43562/multipartKey3105594258251120841"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:33.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:33.045" level="INFO">${output} = /legacy/source-bucket/43562/multipartKey3105594258251120841</msg>
<status status="PASS" endtime="20210121 14:48:33.045" starttime="20210121 14:48:32.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:33.047" level="INFO">/legacy/source-bucket/43562/multipartKey3105594258251120841</msg>
<status status="PASS" endtime="20210121 14:48:33.047" starttime="20210121 14:48:33.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:33.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:33.048" starttime="20210121 14:48:33.047"></status>
</kw>
<msg timestamp="20210121 14:48:33.048" level="INFO">${eTag3} = /legacy/source-bucket/43562/multipartKey3105594258251120841</msg>
<status status="PASS" endtime="20210121 14:48:33.048" starttime="20210121 14:48:32.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:33.049" starttime="20210121 14:48:33.048"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:33.053" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:33.559" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:33.559" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:33.559" starttime="20210121 14:48:33.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:33.560" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:48:33.560" starttime="20210121 14:48:33.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:33.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:33.562" starttime="20210121 14:48:33.560"></status>
</kw>
<msg timestamp="20210121 14:48:33.562" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:33.562" starttime="20210121 14:48:33.050"></status>
</kw>
<msg timestamp="20210121 14:48:33.563" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:33.563" starttime="20210121 14:48:33.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:33.563" starttime="20210121 14:48:33.563"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:33.568" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/43562/multipartKey3105594258118410439,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:34.071" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:34.071" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:34.071" starttime="20210121 14:48:33.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:34.072" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" endtime="20210121 14:48:34.072" starttime="20210121 14:48:34.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:34.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:34.073" starttime="20210121 14:48:34.072"></status>
</kw>
<msg timestamp="20210121 14:48:34.073" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:34.073" starttime="20210121 14:48:33.565"></status>
</kw>
<msg timestamp="20210121 14:48:34.073" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" endtime="20210121 14:48:34.074" starttime="20210121 14:48:33.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPart</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:34.074" starttime="20210121 14:48:34.074"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:34.085" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/43562/multipartKey3105594258118410439,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:34.595" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:34.595" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:48:34.595" starttime="20210121 14:48:34.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:34.596" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:48:34.596" starttime="20210121 14:48:34.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:34.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:34.597" starttime="20210121 14:48:34.597"></status>
</kw>
<msg timestamp="20210121 14:48:34.598" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:48:34.598" starttime="20210121 14:48:34.075"></status>
</kw>
<msg timestamp="20210121 14:48:34.598" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" endtime="20210121 14:48:34.598" starttime="20210121 14:48:34.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:34.599" starttime="20210121 14:48:34.598"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:34.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4ded0ecc-1bbd-4721-a7fb-0bdddbcbb359-105594258008375494 --bucket link --key 43562/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/43562/multipartKey3105594258118410439,PartNumber=1},{ETag=/legacy/source-bucket/43562/multipartKey3105594258251120841,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:35.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:35.099" level="INFO">${output} = {
    "ETag": "4ac368e6a61c010eda68e52e41c187ba8c6f9cbd67eb8faddb63ba3ae4863f50", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:35.099" starttime="20210121 14:48:34.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.100" level="INFO">{
    "ETag": "4ac368e6a61c010eda68e52e41c187ba8c6f9cbd67eb8faddb63ba3ae4863f50", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:35.100" starttime="20210121 14:48:35.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:35.101" starttime="20210121 14:48:35.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.101" starttime="20210121 14:48:34.601"></status>
</kw>
<msg timestamp="20210121 14:48:35.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:35.101" starttime="20210121 14:48:34.601"></status>
</kw>
<msg timestamp="20210121 14:48:35.102" level="INFO">${output} = {
    "ETag": "4ac368e6a61c010eda68e52e41c187ba8c6f9cbd67eb8faddb63ba3ae4863f50", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:35.102" starttime="20210121 14:48:34.600"></status>
</kw>
<msg timestamp="20210121 14:48:35.102" level="INFO">${result} = {
    "ETag": "4ac368e6a61c010eda68e52e41c187ba8c6f9cbd67eb8faddb63ba3ae4863f50", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "43562/multipartKey3"
}</msg>
<status status="PASS" endtime="20210121 14:48:35.102" starttime="20210121 14:48:34.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:35.103" starttime="20210121 14:48:35.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:35.103" starttime="20210121 14:48:35.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:35.104" starttime="20210121 14:48:35.103"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:35.110" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 43562/multipartKey3 /tmp/43562-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:35.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:35.806" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:35 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:35.806" starttime="20210121 14:48:35.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.808" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:35 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14:48:35 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:48:35.808" starttime="20210121 14:48:35.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:35.809" starttime="20210121 14:48:35.808"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.809" starttime="20210121 14:48:35.106"></status>
</kw>
<msg timestamp="20210121 14:48:35.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:35.809" starttime="20210121 14:48:35.105"></status>
</kw>
<msg timestamp="20210121 14:48:35.809" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:35 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:35.809" starttime="20210121 14:48:35.105"></status>
</kw>
<msg timestamp="20210121 14:48:35.810" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:35 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:35.810" starttime="20210121 14:48:35.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:35.816" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/43562-multipartKey3'.</msg>
<msg timestamp="20210121 14:48:35.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:35.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:35.827" starttime="20210121 14:48:35.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.828" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:35.828" starttime="20210121 14:48:35.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:35.829" starttime="20210121 14:48:35.828"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.829" starttime="20210121 14:48:35.813"></status>
</kw>
<msg timestamp="20210121 14:48:35.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:35.830" starttime="20210121 14:48:35.811"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.830" starttime="20210121 14:48:35.810"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:35.836" level="INFO">Running command 'md5sum /tmp/43562-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:35.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:35.850" level="INFO">${output} = 44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.850" starttime="20210121 14:48:35.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.851" level="INFO">44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.851" starttime="20210121 14:48:35.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:35.852" starttime="20210121 14:48:35.852"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.852" starttime="20210121 14:48:35.832"></status>
</kw>
<msg timestamp="20210121 14:48:35.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:35.853" starttime="20210121 14:48:35.831"></status>
</kw>
<msg timestamp="20210121 14:48:35.853" level="INFO">${checksumbefore} = 44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.853" starttime="20210121 14:48:35.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:35.857" level="INFO">Running command 'md5sum /tmp/43562-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:35.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:35.872" level="INFO">${output} = 44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.872" starttime="20210121 14:48:35.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.873" level="INFO">44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.873" starttime="20210121 14:48:35.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:35.875" starttime="20210121 14:48:35.874"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.875" starttime="20210121 14:48:35.854"></status>
</kw>
<msg timestamp="20210121 14:48:35.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:35.875" starttime="20210121 14:48:35.854"></status>
</kw>
<msg timestamp="20210121 14:48:35.875" level="INFO">${checksumafter} = 44cc1d7dde38586462d39b41d343bd55</msg>
<status status="PASS" endtime="20210121 14:48:35.875" starttime="20210121 14:48:35.853"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:35.876" starttime="20210121 14:48:35.876"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.876" starttime="20210121 14:48:35.830"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:35.877" critical="yes" starttime="20210121 14:48:28.675"></status>
</test>
<test id="s1-s12-s6-t5" name="Test abort Multipart upload">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:35.880" level="INFO">${random} = 80897</msg>
<status status="PASS" endtime="20210121 14:48:35.880" starttime="20210121 14:48:35.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:35.880" level="INFO">${PREFIX} = 80897</msg>
<status status="PASS" endtime="20210121 14:48:35.881" starttime="20210121 14:48:35.880"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:35.881" starttime="20210121 14:48:35.879"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:35.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 80897/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:36.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:36.389" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730", 
    "Key": "80897/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:48:36.389" starttime="20210121 14:48:35.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:36.390" level="INFO">{
    "Bucket": "link", 
    "UploadId": "71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730", 
    "Key": "80897/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:48:36.391" starttime="20210121 14:48:36.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:36.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:36.391" starttime="20210121 14:48:36.391"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:36.392" starttime="20210121 14:48:35.882"></status>
</kw>
<msg timestamp="20210121 14:48:36.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:36.392" starttime="20210121 14:48:35.882"></status>
</kw>
<msg timestamp="20210121 14:48:36.392" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730", 
    "Key": "80897/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:48:36.392" starttime="20210121 14:48:35.881"></status>
</kw>
<msg timestamp="20210121 14:48:36.392" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730", 
    "Key": "80897/multipartKey4"
}</msg>
<status status="PASS" endtime="20210121 14:48:36.392" starttime="20210121 14:48:35.881"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:36.396" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730", 
    "Key": "80897/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:36.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:36.441" level="INFO">${output} = 71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730</msg>
<status status="PASS" endtime="20210121 14:48:36.441" starttime="20210121 14:48:36.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:36.442" level="INFO">71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730</msg>
<status status="PASS" endtime="20210121 14:48:36.442" starttime="20210121 14:48:36.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:36.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:36.443" starttime="20210121 14:48:36.442"></status>
</kw>
<msg timestamp="20210121 14:48:36.443" level="INFO">${uploadID} = 71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730</msg>
<status status="PASS" endtime="20210121 14:48:36.443" starttime="20210121 14:48:36.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:36.444" starttime="20210121 14:48:36.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:36.444" starttime="20210121 14:48:36.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:36.445" starttime="20210121 14:48:36.444"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:36.449" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 80897/multipartKey4 --upload-id 71f73f98-b1c2-414e-b598-b008143a1cca-105594258479382730 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:37.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:37.032" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:37.033" starttime="20210121 14:48:36.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.034" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:37.034" starttime="20210121 14:48:37.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:37.035" starttime="20210121 14:48:37.034"></status>
</kw>
<msg timestamp="20210121 14:48:37.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:37.035" starttime="20210121 14:48:36.446"></status>
</kw>
<msg timestamp="20210121 14:48:37.035" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:48:37.035" starttime="20210121 14:48:36.445"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:37.036" critical="yes" starttime="20210121 14:48:35.878"></status>
</test>
<test id="s1-s12-s6-t6" name="Test abort Multipart upload with invalid uploadId">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:37.038" level="INFO">${random} = 11854</msg>
<status status="PASS" endtime="20210121 14:48:37.038" starttime="20210121 14:48:37.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.039" level="INFO">${PREFIX} = 11854</msg>
<status status="PASS" endtime="20210121 14:48:37.039" starttime="20210121 14:48:37.039"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:37.039" starttime="20210121 14:48:37.037"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:37.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 11854/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:37.522" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:37.523" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:48:37.523" starttime="20210121 14:48:37.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.524" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20210121 14:48:37.524" starttime="20210121 14:48:37.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:37.525" starttime="20210121 14:48:37.524"></status>
</kw>
<msg timestamp="20210121 14:48:37.525" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:48:37.525" starttime="20210121 14:48:37.040"></status>
</kw>
<msg timestamp="20210121 14:48:37.525" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" endtime="20210121 14:48:37.525" starttime="20210121 14:48:37.040"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:37.526" critical="yes" starttime="20210121 14:48:37.037"></status>
</test>
<test id="s1-s12-s6-t7" name="Upload part with Incorrect uploadID">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:37.528" level="INFO">${random} = 43518</msg>
<status status="PASS" endtime="20210121 14:48:37.528" starttime="20210121 14:48:37.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.529" level="INFO">${PREFIX} = 43518</msg>
<status status="PASS" endtime="20210121 14:48:37.529" starttime="20210121 14:48:37.529"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:37.529" starttime="20210121 14:48:37.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:37.533" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:48:37.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:37.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:37.535" starttime="20210121 14:48:37.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.536" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:37.536" starttime="20210121 14:48:37.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:37.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:37.537" starttime="20210121 14:48:37.536"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:37.537" starttime="20210121 14:48:37.530"></status>
</kw>
<msg timestamp="20210121 14:48:37.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:37.537" starttime="20210121 14:48:37.530"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:37.537" starttime="20210121 14:48:37.529"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:37.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 43518/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:38.012" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:48:38.012" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:48:38.012" starttime="20210121 14:48:37.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.014" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" endtime="20210121 14:48:38.014" starttime="20210121 14:48:38.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:38.015" starttime="20210121 14:48:38.015"></status>
</kw>
<msg timestamp="20210121 14:48:38.017" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:48:38.017" starttime="20210121 14:48:37.538"></status>
</kw>
<msg timestamp="20210121 14:48:38.017" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" endtime="20210121 14:48:38.017" starttime="20210121 14:48:37.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:38.018" starttime="20210121 14:48:38.017"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:38.018" critical="yes" starttime="20210121 14:48:37.526"></status>
</test>
<test id="s1-s12-s6-t8" name="Test list parts">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:38.023" level="INFO">${random} = 00102</msg>
<status status="PASS" endtime="20210121 14:48:38.023" starttime="20210121 14:48:38.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.024" level="INFO">${PREFIX} = 00102</msg>
<status status="PASS" endtime="20210121 14:48:38.024" starttime="20210121 14:48:38.023"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.024" starttime="20210121 14:48:38.020"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:38.028" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 00102/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:38.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:38.533" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308", 
    "Key": "00102/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:48:38.533" starttime="20210121 14:48:38.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.534" level="INFO">{
    "Bucket": "link", 
    "UploadId": "0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308", 
    "Key": "00102/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:48:38.534" starttime="20210121 14:48:38.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:38.535" starttime="20210121 14:48:38.534"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.535" starttime="20210121 14:48:38.026"></status>
</kw>
<msg timestamp="20210121 14:48:38.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:38.535" starttime="20210121 14:48:38.025"></status>
</kw>
<msg timestamp="20210121 14:48:38.536" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308", 
    "Key": "00102/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:48:38.536" starttime="20210121 14:48:38.025"></status>
</kw>
<msg timestamp="20210121 14:48:38.536" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308", 
    "Key": "00102/multipartKey5"
}</msg>
<status status="PASS" endtime="20210121 14:48:38.536" starttime="20210121 14:48:38.024"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:38.539" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308", 
    "Key": "00102/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:38.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:38.585" level="INFO">${output} = 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308</msg>
<status status="PASS" endtime="20210121 14:48:38.585" starttime="20210121 14:48:38.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.586" level="INFO">0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308</msg>
<status status="PASS" endtime="20210121 14:48:38.586" starttime="20210121 14:48:38.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:38.587" starttime="20210121 14:48:38.586"></status>
</kw>
<msg timestamp="20210121 14:48:38.587" level="INFO">${uploadID} = 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308</msg>
<status status="PASS" endtime="20210121 14:48:38.587" starttime="20210121 14:48:38.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:38.588" starttime="20210121 14:48:38.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:38.588" starttime="20210121 14:48:38.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:38.589" starttime="20210121 14:48:38.589"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:38.594" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:38.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:38.633" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0357087 s, 147 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:38.633" starttime="20210121 14:48:38.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.634" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0357087 s, 147 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:38.634" starttime="20210121 14:48:38.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:38.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:38.635" starttime="20210121 14:48:38.635"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.636" starttime="20210121 14:48:38.591"></status>
</kw>
<msg timestamp="20210121 14:48:38.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:38.636" starttime="20210121 14:48:38.591"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.636" starttime="20210121 14:48:38.590"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.636" starttime="20210121 14:48:38.589"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:38.637" starttime="20210121 14:48:38.589"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:38.641" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 00102/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:39.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:39.531" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805"
}</msg>
<status status="PASS" endtime="20210121 14:48:39.531" starttime="20210121 14:48:38.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.532" level="INFO">{
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805"
}</msg>
<status status="PASS" endtime="20210121 14:48:39.532" starttime="20210121 14:48:39.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:39.533" starttime="20210121 14:48:39.533"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:39.534" starttime="20210121 14:48:38.639"></status>
</kw>
<msg timestamp="20210121 14:48:39.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:39.534" starttime="20210121 14:48:38.638"></status>
</kw>
<msg timestamp="20210121 14:48:39.534" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805"
}</msg>
<status status="PASS" endtime="20210121 14:48:39.534" starttime="20210121 14:48:38.637"></status>
</kw>
<msg timestamp="20210121 14:48:39.534" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805"
}</msg>
<status status="PASS" endtime="20210121 14:48:39.535" starttime="20210121 14:48:38.637"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:39.538" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:39.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:39.586" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:39.586" starttime="20210121 14:48:39.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.587" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:39.587" starttime="20210121 14:48:39.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:39.588" starttime="20210121 14:48:39.587"></status>
</kw>
<msg timestamp="20210121 14:48:39.588" level="INFO">${eTag1} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:39.588" starttime="20210121 14:48:39.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:39.589" starttime="20210121 14:48:39.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "Part2" &gt; /tmp/part2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:39.596" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210121 14:48:39.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:39.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:39.598" starttime="20210121 14:48:39.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.599" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:39.599" starttime="20210121 14:48:39.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:39.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:39.600" starttime="20210121 14:48:39.599"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:39.600" starttime="20210121 14:48:39.590"></status>
</kw>
<msg timestamp="20210121 14:48:39.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:39.600" starttime="20210121 14:48:39.590"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:39.600" starttime="20210121 14:48:39.589"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:39.605" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 00102/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:40.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:40.294" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966"
}</msg>
<status status="PASS" endtime="20210121 14:48:40.294" starttime="20210121 14:48:39.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.296" level="INFO">{
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966"
}</msg>
<status status="PASS" endtime="20210121 14:48:40.296" starttime="20210121 14:48:40.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:40.297" starttime="20210121 14:48:40.296"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:40.297" starttime="20210121 14:48:39.602"></status>
</kw>
<msg timestamp="20210121 14:48:40.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:40.297" starttime="20210121 14:48:39.602"></status>
</kw>
<msg timestamp="20210121 14:48:40.297" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966"
}</msg>
<status status="PASS" endtime="20210121 14:48:40.297" starttime="20210121 14:48:39.601"></status>
</kw>
<msg timestamp="20210121 14:48:40.298" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966"
}</msg>
<status status="PASS" endtime="20210121 14:48:40.298" starttime="20210121 14:48:39.601"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:40.301" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:40.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:40.349" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.350" starttime="20210121 14:48:40.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.351" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.351" starttime="20210121 14:48:40.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:40.352" starttime="20210121 14:48:40.351"></status>
</kw>
<msg timestamp="20210121 14:48:40.352" level="INFO">${eTag2} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.352" starttime="20210121 14:48:40.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:40.353" starttime="20210121 14:48:40.352"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:40.357" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 00102/multipartKey5 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:40.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:40.867" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:40.868" starttime="20210121 14:48:40.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.869" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:48:40.869" starttime="20210121 14:48:40.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:40.872" starttime="20210121 14:48:40.869"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:40.872" starttime="20210121 14:48:40.354"></status>
</kw>
<msg timestamp="20210121 14:48:40.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:40.873" starttime="20210121 14:48:40.354"></status>
</kw>
<msg timestamp="20210121 14:48:40.873" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:40.873" starttime="20210121 14:48:40.354"></status>
</kw>
<msg timestamp="20210121 14:48:40.874" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:40.874" starttime="20210121 14:48:40.353"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:40.877" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:40.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:40.924" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:40.924" starttime="20210121 14:48:40.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.925" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:40.925" starttime="20210121 14:48:40.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:40.926" starttime="20210121 14:48:40.926"></status>
</kw>
<msg timestamp="20210121 14:48:40.927" level="INFO">${part1} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:40.927" starttime="20210121 14:48:40.874"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:40.930" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:40.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:40.975" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.975" starttime="20210121 14:48:40.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.976" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.976" starttime="20210121 14:48:40.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:40.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:40.977" starttime="20210121 14:48:40.977"></status>
</kw>
<msg timestamp="20210121 14:48:40.978" level="INFO">${part2} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:40.978" starttime="20210121 14:48:40.927"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:40.978" starttime="20210121 14:48:40.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:40.979" starttime="20210121 14:48:40.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:40.979" starttime="20210121 14:48:40.979"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:40.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 00102/multipartKey5 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:41.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:41.480" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:41.480" starttime="20210121 14:48:40.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.481" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:48:41.481" starttime="20210121 14:48:41.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:41.482" starttime="20210121 14:48:41.481"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:41.482" starttime="20210121 14:48:40.981"></status>
</kw>
<msg timestamp="20210121 14:48:41.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:41.482" starttime="20210121 14:48:40.981"></status>
</kw>
<msg timestamp="20210121 14:48:41.483" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:41.483" starttime="20210121 14:48:40.980"></status>
</kw>
<msg timestamp="20210121 14:48:41.483" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:41.483" starttime="20210121 14:48:40.980"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:41.486" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:41.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:41.530" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:41.530" starttime="20210121 14:48:41.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.531" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:41.532" starttime="20210121 14:48:41.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:41.532" starttime="20210121 14:48:41.532"></status>
</kw>
<msg timestamp="20210121 14:48:41.533" level="INFO">${part1} = /legacy/source-bucket/00102/multipartKey5105594258659737805</msg>
<status status="PASS" endtime="20210121 14:48:41.533" starttime="20210121 14:48:41.483"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:41.536" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:39.380Z", 
            "PartNumber": 1, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258659737805", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:41.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:41.580" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:48:41.580" starttime="20210121 14:48:41.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.581" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:48:41.581" starttime="20210121 14:48:41.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:41.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:41.582" starttime="20210121 14:48:41.582"></status>
</kw>
<msg timestamp="20210121 14:48:41.582" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" endtime="20210121 14:48:41.583" starttime="20210121 14:48:41.533"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part1}</arg>
<arg>${eTag1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:41.583" starttime="20210121 14:48:41.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:41.584" starttime="20210121 14:48:41.583"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:41.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key 00102/multipartKey5 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:42.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:42.059" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:42.059" starttime="20210121 14:48:41.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.060" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" endtime="20210121 14:48:42.061" starttime="20210121 14:48:42.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:42.062" starttime="20210121 14:48:42.061"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:42.062" starttime="20210121 14:48:41.586"></status>
</kw>
<msg timestamp="20210121 14:48:42.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:42.063" starttime="20210121 14:48:41.585"></status>
</kw>
<msg timestamp="20210121 14:48:42.063" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:42.063" starttime="20210121 14:48:41.585"></status>
</kw>
<msg timestamp="20210121 14:48:42.063" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket...</msg>
<status status="PASS" endtime="20210121 14:48:42.063" starttime="20210121 14:48:41.584"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${part2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:42.067" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-01-21T14:48:40.106Z", 
            "PartNumber": 2, 
            "ETag": "/legacy/source-bucket/00102/multipartKey5105594258721013966", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:42.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:42.114" level="INFO">${output} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:42.114" starttime="20210121 14:48:42.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.115" level="INFO">/legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:42.115" starttime="20210121 14:48:42.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:42.116" starttime="20210121 14:48:42.115"></status>
</kw>
<msg timestamp="20210121 14:48:42.116" level="INFO">${part2} = /legacy/source-bucket/00102/multipartKey5105594258721013966</msg>
<status status="PASS" endtime="20210121 14:48:42.116" starttime="20210121 14:48:42.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${part2}</arg>
<arg>${eTag2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:42.117" starttime="20210121 14:48:42.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:42.118" starttime="20210121 14:48:42.117"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:42.122" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 00102/multipartKey5 --upload-id 0e12f829-d54a-4fac-b925-ae2010d3b268-105594258619695308 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:42.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:42.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:42.605" starttime="20210121 14:48:42.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.606" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:42.607" starttime="20210121 14:48:42.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:42.607" starttime="20210121 14:48:42.607"></status>
</kw>
<msg timestamp="20210121 14:48:42.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:42.608" starttime="20210121 14:48:42.118"></status>
</kw>
<msg timestamp="20210121 14:48:42.608" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:48:42.608" starttime="20210121 14:48:42.118"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:42.609" critical="yes" starttime="20210121 14:48:38.019"></status>
</test>
<test id="s1-s12-s6-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:42.611" level="INFO">${random} = 79200</msg>
<status status="PASS" endtime="20210121 14:48:42.611" starttime="20210121 14:48:42.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.612" level="INFO">${PREFIX} = 79200</msg>
<status status="PASS" endtime="20210121 14:48:42.612" starttime="20210121 14:48:42.611"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:42.612" starttime="20210121 14:48:42.610"></status>
</kw>
<kw name="Create Random file">
<arguments>
<arg>22</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:42.616" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:42.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:42.855" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.235173 s, 98.1 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:42.855" starttime="20210121 14:48:42.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.856" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.235173 s, 98.1 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:42.856" starttime="20210121 14:48:42.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:42.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:42.857" starttime="20210121 14:48:42.857"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:42.858" starttime="20210121 14:48:42.613"></status>
</kw>
<msg timestamp="20210121 14:48:42.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:42.858" starttime="20210121 14:48:42.613"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:42.858" starttime="20210121 14:48:42.612"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:42.859" starttime="20210121 14:48:42.612"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:42.865" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:44.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:44.905" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:48:44.905" starttime="20210121 14:48:42.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:44.907" level="INFO">Completed 256.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (10.6 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (12.7 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (13.9 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (15.3 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (18.9 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (24.5 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (26.6 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (27.6 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (28.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (30.5 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (31.5 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (32.4 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (33.4 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (35.8 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (36.8 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (37.7 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (40.3 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (41.1 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (42.0 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (42.9 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (43.8 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (44.5 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (45.1 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (47.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (47.7 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (48.5 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (49.4 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (50.3 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (51.2 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (52.1 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (52.9 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (53.7 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (54.0 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (54.9 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (53.4 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (55.3 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (54.5 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (55.2 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (56.5 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (57.2 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (58.6 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (55.3 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (56.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (57.2 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (57.3 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (57.3 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (60.3 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (60.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (61.0 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (60.8 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://link/mpyawscli                   </msg>
<status status="PASS" endtime="20210121 14:48:44.907" starttime="20210121 14:48:44.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:44.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:44.908" starttime="20210121 14:48:44.908"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:44.909" starttime="20210121 14:48:42.861"></status>
</kw>
<msg timestamp="20210121 14:48:44.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:44.910" starttime="20210121 14:48:42.860"></status>
</kw>
<msg timestamp="20210121 14:48:44.910" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:48:44.911" starttime="20210121 14:48:42.860"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:44.911" starttime="20210121 14:48:42.859"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:44.918" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:46.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:46.133" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:48:46.133" starttime="20210121 14:48:44.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.134" level="INFO">Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (9.3 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (10.6 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (11.6 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (12.8 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (14.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (14.3 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (15.3 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (16.3 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (18.7 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (20.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (21.6 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (21.8 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (23.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (24.6 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (25.3 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (26.2 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (27.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (28.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (28.7 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (29.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (30.2 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (31.8 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (27.5 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (28.2 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (29.6 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (30.0 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (30.7 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (31.4 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (32.1 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (32.5 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (33.0 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (33.6 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (33.8 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (34.4 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (34.2 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (34.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (35.3 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (36.2 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (38.1 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (38.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (37.7 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (38.7 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (35.3 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (35.7 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (35.9 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (36.3 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (35.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (36.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (37.0 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (35.7 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (36.0 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (36.3 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (36.5 MiB/s) with 1 file(s) remaining
download: s3://link/mpyawscli to ../../tmp/part1.result          </msg>
<status status="PASS" endtime="20210121 14:48:46.134" starttime="20210121 14:48:46.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:46.135" starttime="20210121 14:48:46.135"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.136" starttime="20210121 14:48:44.914"></status>
</kw>
<msg timestamp="20210121 14:48:46.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:46.136" starttime="20210121 14:48:44.914"></status>
</kw>
<msg timestamp="20210121 14:48:46.136" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" endtime="20210121 14:48:46.136" starttime="20210121 14:48:44.912"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.137" starttime="20210121 14:48:44.911"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>rm s3://${BUCKET}/mpyawscli</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:46.141" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:46.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:46.751" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:48:46.751" starttime="20210121 14:48:46.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.752" level="INFO">delete: s3://link/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:48:46.752" starttime="20210121 14:48:46.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:46.753" starttime="20210121 14:48:46.753"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.753" starttime="20210121 14:48:46.138"></status>
</kw>
<msg timestamp="20210121 14:48:46.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:46.754" starttime="20210121 14:48:46.138"></status>
</kw>
<msg timestamp="20210121 14:48:46.754" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" endtime="20210121 14:48:46.754" starttime="20210121 14:48:46.137"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.754" starttime="20210121 14:48:46.137"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:46.762" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:46.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:46.818" level="INFO">${output} = 02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.818" starttime="20210121 14:48:46.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.819" level="INFO">02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.819" starttime="20210121 14:48:46.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:46.820" starttime="20210121 14:48:46.820"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.821" starttime="20210121 14:48:46.756"></status>
</kw>
<msg timestamp="20210121 14:48:46.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:46.821" starttime="20210121 14:48:46.756"></status>
</kw>
<msg timestamp="20210121 14:48:46.821" level="INFO">${checksumbefore} = 02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.821" starttime="20210121 14:48:46.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:46.825" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:46.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:46.880" level="INFO">${output} = 02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.880" starttime="20210121 14:48:46.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.881" level="INFO">02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.881" starttime="20210121 14:48:46.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:46.883" starttime="20210121 14:48:46.881"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.883" starttime="20210121 14:48:46.822"></status>
</kw>
<msg timestamp="20210121 14:48:46.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:46.883" starttime="20210121 14:48:46.822"></status>
</kw>
<msg timestamp="20210121 14:48:46.884" level="INFO">${checksumafter} = 02e9875f0ad1a793c42ebaf243374bbe</msg>
<status status="PASS" endtime="20210121 14:48:46.884" starttime="20210121 14:48:46.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:46.884" starttime="20210121 14:48:46.884"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.885" starttime="20210121 14:48:46.754"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:46.885" critical="yes" starttime="20210121 14:48:42.609"></status>
</test>
<test id="s1-s12-s6-t10" name="Test Multipart Upload Put With Copy">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:46.888" level="INFO">${random} = 50344</msg>
<status status="PASS" endtime="20210121 14:48:46.888" starttime="20210121 14:48:46.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.888" level="INFO">${PREFIX} = 50344</msg>
<status status="PASS" endtime="20210121 14:48:46.889" starttime="20210121 14:48:46.888"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.889" starttime="20210121 14:48:46.887"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>5</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>5</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:46.893" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:46.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:46.933" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0335737 s, 156 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:46.933" starttime="20210121 14:48:46.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.934" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0335737 s, 156 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:46.935" starttime="20210121 14:48:46.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:46.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:46.935" starttime="20210121 14:48:46.935"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.936" starttime="20210121 14:48:46.891"></status>
</kw>
<msg timestamp="20210121 14:48:46.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:46.936" starttime="20210121 14:48:46.890"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.936" starttime="20210121 14:48:46.890"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.937" starttime="20210121 14:48:46.889"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:46.937" starttime="20210121 14:48:46.889"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:46.942" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 50344/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:47.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:47.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:47.809" starttime="20210121 14:48:46.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:47.811" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:47.811" starttime="20210121 14:48:47.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:47.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:47.812" starttime="20210121 14:48:47.811"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:47.813" starttime="20210121 14:48:46.938"></status>
</kw>
<msg timestamp="20210121 14:48:47.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:47.813" starttime="20210121 14:48:46.938"></status>
</kw>
<msg timestamp="20210121 14:48:47.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:47.813" starttime="20210121 14:48:46.937"></status>
</kw>
<msg timestamp="20210121 14:48:47.813" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:48:47.814" starttime="20210121 14:48:46.937"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:47.819" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 50344/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:48.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:48.291" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:48.291" starttime="20210121 14:48:47.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:48.293" level="INFO">{
    "Bucket": "link", 
    "UploadId": "82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:48.293" starttime="20210121 14:48:48.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:48.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:48.293" starttime="20210121 14:48:48.293"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:48.294" starttime="20210121 14:48:47.816"></status>
</kw>
<msg timestamp="20210121 14:48:48.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:48.294" starttime="20210121 14:48:47.815"></status>
</kw>
<msg timestamp="20210121 14:48:48.294" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:48.294" starttime="20210121 14:48:47.815"></status>
</kw>
<msg timestamp="20210121 14:48:48.295" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:48.295" starttime="20210121 14:48:47.814"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:48.298" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140", 
    "Key": "50344/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:48.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:48.346" level="INFO">${output} = 82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140</msg>
<status status="PASS" endtime="20210121 14:48:48.346" starttime="20210121 14:48:48.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:48.348" level="INFO">82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140</msg>
<status status="PASS" endtime="20210121 14:48:48.348" starttime="20210121 14:48:48.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:48.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:48.349" starttime="20210121 14:48:48.348"></status>
</kw>
<msg timestamp="20210121 14:48:48.349" level="INFO">${uploadID} = 82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140</msg>
<status status="PASS" endtime="20210121 14:48:48.349" starttime="20210121 14:48:48.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:48.350" starttime="20210121 14:48:48.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:48.350" starttime="20210121 14:48:48.350"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:48.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 50344/copytest/destination --upload-id 82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140 --part-number 1 --copy-source link/50344/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:49.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:49.413" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:49.340Z", 
        "ETag": "/legacy/source-bucket/50344/copytest/destination105594259294847189"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:49.413" starttime="20210121 14:48:48.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.414" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:49.340Z", 
        "ETag": "/legacy/source-bucket/50344/copytest/destination105594259294847189"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:49.414" starttime="20210121 14:48:49.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:49.415" starttime="20210121 14:48:49.414"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:49.415" starttime="20210121 14:48:48.352"></status>
</kw>
<msg timestamp="20210121 14:48:49.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:49.416" starttime="20210121 14:48:48.352"></status>
</kw>
<msg timestamp="20210121 14:48:49.416" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:49.340Z", 
        "ETag": "/legacy/source-bucket/50344/copytest/destination105594259294847189"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:49.416" starttime="20210121 14:48:48.351"></status>
</kw>
<msg timestamp="20210121 14:48:49.416" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:49.340Z", 
        "ETag": "/legacy/source-bucket/50344/copytest/destination105594259294847189"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:49.417" starttime="20210121 14:48:48.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:49.417" starttime="20210121 14:48:49.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:49.418" starttime="20210121 14:48:49.417"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:49.422" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:49.340Z", 
        "ETag": "/legacy/source-bucket/50344/copytest/destination105594259294847189"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:49.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:49.470" level="INFO">${output} = /legacy/source-bucket/50344/copytest/destination105594259294847189</msg>
<status status="PASS" endtime="20210121 14:48:49.470" starttime="20210121 14:48:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.471" level="INFO">/legacy/source-bucket/50344/copytest/destination105594259294847189</msg>
<status status="PASS" endtime="20210121 14:48:49.471" starttime="20210121 14:48:49.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:49.472" starttime="20210121 14:48:49.471"></status>
</kw>
<msg timestamp="20210121 14:48:49.473" level="INFO">${eTag1} = /legacy/source-bucket/50344/copytest/destination105594259294847189</msg>
<status status="PASS" endtime="20210121 14:48:49.473" starttime="20210121 14:48:49.418"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:49.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 82acdb72-7d6c-4266-afd6-02fb154b420c-105594259259261140 --bucket link --key 50344/copytest/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/50344/copytest/destination105594259294847189,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:49.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:49.974" level="INFO">${output} = {
    "ETag": "7f9ec8b5ad109c7be8713cb0af9353033361d777c8d701f072b445c19bf0ad3e", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:49.974" starttime="20210121 14:48:49.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.975" level="INFO">{
    "ETag": "7f9ec8b5ad109c7be8713cb0af9353033361d777c8d701f072b445c19bf0ad3e", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:49.975" starttime="20210121 14:48:49.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:49.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:49.976" starttime="20210121 14:48:49.975"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:49.976" starttime="20210121 14:48:49.475"></status>
</kw>
<msg timestamp="20210121 14:48:49.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:49.977" starttime="20210121 14:48:49.474"></status>
</kw>
<msg timestamp="20210121 14:48:49.977" level="INFO">${output} = {
    "ETag": "7f9ec8b5ad109c7be8713cb0af9353033361d777c8d701f072b445c19bf0ad3e", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "50344/copytest/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:49.977" starttime="20210121 14:48:49.474"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:49.977" starttime="20210121 14:48:49.473"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:49.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 50344/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:50.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:50.578" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:49 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:50.578" starttime="20210121 14:48:49.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.579" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:49 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14:48:50 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:48:50.579" starttime="20210121 14:48:50.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:50.580" starttime="20210121 14:48:50.579"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.580" starttime="20210121 14:48:49.979"></status>
</kw>
<msg timestamp="20210121 14:48:50.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:50.581" starttime="20210121 14:48:49.979"></status>
</kw>
<msg timestamp="20210121 14:48:50.581" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:49 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Thu, 21 Jan 2021 14...</msg>
<status status="PASS" endtime="20210121 14:48:50.581" starttime="20210121 14:48:49.978"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.581" starttime="20210121 14:48:49.977"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:50.586" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:50.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:50.600" level="INFO">${output} = 4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.600" starttime="20210121 14:48:50.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.602" level="INFO">4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.602" starttime="20210121 14:48:50.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:50.602" starttime="20210121 14:48:50.602"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.603" starttime="20210121 14:48:50.583"></status>
</kw>
<msg timestamp="20210121 14:48:50.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:50.603" starttime="20210121 14:48:50.583"></status>
</kw>
<msg timestamp="20210121 14:48:50.603" level="INFO">${checksumbefore} = 4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.603" starttime="20210121 14:48:50.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:50.607" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:50.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:50.621" level="INFO">${output} = 4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.621" starttime="20210121 14:48:50.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.622" level="INFO">4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.622" starttime="20210121 14:48:50.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:50.623" starttime="20210121 14:48:50.622"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.623" starttime="20210121 14:48:50.604"></status>
</kw>
<msg timestamp="20210121 14:48:50.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:50.624" starttime="20210121 14:48:50.604"></status>
</kw>
<msg timestamp="20210121 14:48:50.624" level="INFO">${checksumafter} = 4b4d691f18f68d1f595aa5c3f1b36113</msg>
<status status="PASS" endtime="20210121 14:48:50.625" starttime="20210121 14:48:50.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:50.625" starttime="20210121 14:48:50.625"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.625" starttime="20210121 14:48:50.581"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:50.626" critical="yes" starttime="20210121 14:48:46.886"></status>
</test>
<test id="s1-s12-s6-t11" name="Test Multipart Upload Put With Copy and range">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:50.629" level="INFO">${random} = 77771</msg>
<status status="PASS" endtime="20210121 14:48:50.629" starttime="20210121 14:48:50.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.630" level="INFO">${PREFIX} = 77771</msg>
<status status="PASS" endtime="20210121 14:48:50.630" starttime="20210121 14:48:50.629"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.630" starttime="20210121 14:48:50.628"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create Random file</arg>
<arg>10</arg>
</arguments>
<kw name="Create Random file">
<arguments>
<arg>10</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:50.635" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:50.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:50.702" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0633146 s, 166 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:50.702" starttime="20210121 14:48:50.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.704" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0633146 s, 166 MB/s</msg>
<status status="PASS" endtime="20210121 14:48:50.704" starttime="20210121 14:48:50.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:50.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:50.704" starttime="20210121 14:48:50.704"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.705" starttime="20210121 14:48:50.633"></status>
</kw>
<msg timestamp="20210121 14:48:50.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:50.705" starttime="20210121 14:48:50.633"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.705" starttime="20210121 14:48:50.632"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.706" starttime="20210121 14:48:50.631"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:50.706" starttime="20210121 14:48:50.631"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:50.710" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 77771/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:51.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:51.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:51.707" starttime="20210121 14:48:50.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:51.708" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:51.709" starttime="20210121 14:48:51.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:51.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:51.709" starttime="20210121 14:48:51.709"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:51.710" starttime="20210121 14:48:50.708"></status>
</kw>
<msg timestamp="20210121 14:48:51.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:51.710" starttime="20210121 14:48:50.707"></status>
</kw>
<msg timestamp="20210121 14:48:51.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:51.710" starttime="20210121 14:48:50.707"></status>
</kw>
<msg timestamp="20210121 14:48:51.710" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:48:51.711" starttime="20210121 14:48:50.706"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:51.715" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 77771/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:52.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:52.200" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:52.200" starttime="20210121 14:48:51.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:52.202" level="INFO">{
    "Bucket": "link", 
    "UploadId": "ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:52.202" starttime="20210121 14:48:52.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:52.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:52.203" starttime="20210121 14:48:52.202"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:52.203" starttime="20210121 14:48:51.713"></status>
</kw>
<msg timestamp="20210121 14:48:52.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:52.203" starttime="20210121 14:48:51.712"></status>
</kw>
<msg timestamp="20210121 14:48:52.203" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:52.204" starttime="20210121 14:48:51.712"></status>
</kw>
<msg timestamp="20210121 14:48:52.204" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:52.204" starttime="20210121 14:48:51.711"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:52.207" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151", 
    "Key": "77771/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:52.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:52.252" level="INFO">${output} = ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151</msg>
<status status="PASS" endtime="20210121 14:48:52.252" starttime="20210121 14:48:52.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:52.253" level="INFO">ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151</msg>
<status status="PASS" endtime="20210121 14:48:52.253" starttime="20210121 14:48:52.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:52.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:52.254" starttime="20210121 14:48:52.254"></status>
</kw>
<msg timestamp="20210121 14:48:52.255" level="INFO">${uploadID} = ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151</msg>
<status status="PASS" endtime="20210121 14:48:52.255" starttime="20210121 14:48:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:52.255" starttime="20210121 14:48:52.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:52.256" starttime="20210121 14:48:52.255"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:52.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 77771/copyrange/destination --upload-id ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151 --part-number 1 --copy-source link/77771/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:53.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:53.231" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.183Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259551944920"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.231" starttime="20210121 14:48:52.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.232" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.183Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259551944920"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.232" starttime="20210121 14:48:53.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:53.233" starttime="20210121 14:48:53.232"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:53.233" starttime="20210121 14:48:52.263"></status>
</kw>
<msg timestamp="20210121 14:48:53.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:53.234" starttime="20210121 14:48:52.263"></status>
</kw>
<msg timestamp="20210121 14:48:53.234" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.183Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259551944920"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.234" starttime="20210121 14:48:52.263"></status>
</kw>
<msg timestamp="20210121 14:48:53.234" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.183Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259551944920"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.234" starttime="20210121 14:48:52.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:53.235" starttime="20210121 14:48:53.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:53.235" starttime="20210121 14:48:53.235"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:53.238" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.183Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259551944920"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:53.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:53.283" level="INFO">${output} = /legacy/source-bucket/77771/copyrange/destination105594259551944920</msg>
<status status="PASS" endtime="20210121 14:48:53.283" starttime="20210121 14:48:53.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.284" level="INFO">/legacy/source-bucket/77771/copyrange/destination105594259551944920</msg>
<status status="PASS" endtime="20210121 14:48:53.285" starttime="20210121 14:48:53.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:53.285" starttime="20210121 14:48:53.285"></status>
</kw>
<msg timestamp="20210121 14:48:53.286" level="INFO">${eTag1} = /legacy/source-bucket/77771/copyrange/destination105594259551944920</msg>
<status status="PASS" endtime="20210121 14:48:53.286" starttime="20210121 14:48:53.235"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:53.291" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key 77771/copyrange/destination --upload-id ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151 --part-number 2 --copy-source link/77771/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:53.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:53.903" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.854Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259619578073"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.904" starttime="20210121 14:48:53.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.905" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.854Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259619578073"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.905" starttime="20210121 14:48:53.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:53.906" starttime="20210121 14:48:53.905"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:53.907" starttime="20210121 14:48:53.288"></status>
</kw>
<msg timestamp="20210121 14:48:53.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:53.907" starttime="20210121 14:48:53.288"></status>
</kw>
<msg timestamp="20210121 14:48:53.907" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.854Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259619578073"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.907" starttime="20210121 14:48:53.287"></status>
</kw>
<msg timestamp="20210121 14:48:53.907" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.854Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259619578073"
    }
}</msg>
<status status="PASS" endtime="20210121 14:48:53.907" starttime="20210121 14:48:53.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:53.908" starttime="20210121 14:48:53.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>LastModified</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:53.909" starttime="20210121 14:48:53.908"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${eTag2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:53.912" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-01-21T14:48:53.854Z", 
        "ETag": "/legacy/source-bucket/77771/copyrange/destination105594259619578073"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:53.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:53.958" level="INFO">${output} = /legacy/source-bucket/77771/copyrange/destination105594259619578073</msg>
<status status="PASS" endtime="20210121 14:48:53.958" starttime="20210121 14:48:53.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.959" level="INFO">/legacy/source-bucket/77771/copyrange/destination105594259619578073</msg>
<status status="PASS" endtime="20210121 14:48:53.959" starttime="20210121 14:48:53.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:53.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:53.960" starttime="20210121 14:48:53.960"></status>
</kw>
<msg timestamp="20210121 14:48:53.961" level="INFO">${eTag2} = /legacy/source-bucket/77771/copyrange/destination105594259619578073</msg>
<status status="PASS" endtime="20210121 14:48:53.961" starttime="20210121 14:48:53.909"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:53.966" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id ba1f59dd-37a5-4d0e-b21f-73478a798563-105594259515048151 --bucket link --key 77771/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/77771/copyrange/destination105594259551944920,PartNumber=1},{ETag=/legacy/source-bucket/77771/copyrange/destination105594259619578073,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:54.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:54.604" level="INFO">${output} = {
    "ETag": "a45caaff4d12dbb30c543380e70bae26ae356c3a5e7cb3f24067a54abef3875c", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:54.604" starttime="20210121 14:48:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:54.605" level="INFO">{
    "ETag": "a45caaff4d12dbb30c543380e70bae26ae356c3a5e7cb3f24067a54abef3875c", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:54.605" starttime="20210121 14:48:54.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:54.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:54.606" starttime="20210121 14:48:54.605"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:54.606" starttime="20210121 14:48:53.963"></status>
</kw>
<msg timestamp="20210121 14:48:54.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:54.607" starttime="20210121 14:48:53.963"></status>
</kw>
<msg timestamp="20210121 14:48:54.607" level="INFO">${output} = {
    "ETag": "a45caaff4d12dbb30c543380e70bae26ae356c3a5e7cb3f24067a54abef3875c", 
    "Bucket": "link", 
    "Location": "link", 
    "Key": "77771/copyrange/destination"
}</msg>
<status status="PASS" endtime="20210121 14:48:54.607" starttime="20210121 14:48:53.962"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:54.607" starttime="20210121 14:48:53.961"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:54.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 77771/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:55.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:55.318" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:54 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 1...</msg>
<status status="PASS" endtime="20210121 14:48:55.318" starttime="20210121 14:48:54.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.319" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:54 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 14:48:55 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:48:55.319" starttime="20210121 14:48:55.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:55.320" starttime="20210121 14:48:55.319"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.320" starttime="20210121 14:48:54.609"></status>
</kw>
<msg timestamp="20210121 14:48:55.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:55.321" starttime="20210121 14:48:54.609"></status>
</kw>
<msg timestamp="20210121 14:48:55.321" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:48:54 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Thu, 21 Jan 2021 1...</msg>
<status status="PASS" endtime="20210121 14:48:55.321" starttime="20210121 14:48:54.608"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.321" starttime="20210121 14:48:54.607"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:55.326" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:55.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:55.354" level="INFO">${output} = 68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.354" starttime="20210121 14:48:55.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.356" level="INFO">68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.356" starttime="20210121 14:48:55.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:55.357" starttime="20210121 14:48:55.356"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.357" starttime="20210121 14:48:55.323"></status>
</kw>
<msg timestamp="20210121 14:48:55.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:55.357" starttime="20210121 14:48:55.322"></status>
</kw>
<msg timestamp="20210121 14:48:55.357" level="INFO">${checksumbefore} = 68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.357" starttime="20210121 14:48:55.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:55.363" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:55.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:55.391" level="INFO">${output} = 68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.391" starttime="20210121 14:48:55.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.392" level="INFO">68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.393" starttime="20210121 14:48:55.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:55.393" starttime="20210121 14:48:55.393"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.394" starttime="20210121 14:48:55.359"></status>
</kw>
<msg timestamp="20210121 14:48:55.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:55.394" starttime="20210121 14:48:55.359"></status>
</kw>
<msg timestamp="20210121 14:48:55.394" level="INFO">${checksumafter} = 68dbf13a48e64db0c59920d60141a26e</msg>
<status status="PASS" endtime="20210121 14:48:55.394" starttime="20210121 14:48:55.358"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:55.395" starttime="20210121 14:48:55.394"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.395" starttime="20210121 14:48:55.321"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:55.395" critical="yes" starttime="20210121 14:48:50.627"></status>
</test>
<test id="s1-s12-s6-t12" name="Test Multipart Upload list">
<kw type="setup" name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:55.398" level="INFO">${random} = 31418</msg>
<status status="PASS" endtime="20210121 14:48:55.398" starttime="20210121 14:48:55.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.399" level="INFO">${PREFIX} = 31418</msg>
<status status="PASS" endtime="20210121 14:48:55.399" starttime="20210121 14:48:55.399"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.399" starttime="20210121 14:48:55.397"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:55.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 31418/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:55.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:55.898" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
    "Key": "31418/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:48:55.898" starttime="20210121 14:48:55.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.899" level="INFO">{
    "Bucket": "link", 
    "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
    "Key": "31418/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:48:55.899" starttime="20210121 14:48:55.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:55.900" starttime="20210121 14:48:55.899"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:55.900" starttime="20210121 14:48:55.401"></status>
</kw>
<msg timestamp="20210121 14:48:55.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:55.901" starttime="20210121 14:48:55.401"></status>
</kw>
<msg timestamp="20210121 14:48:55.901" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
    "Key": "31418/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:48:55.901" starttime="20210121 14:48:55.400"></status>
</kw>
<msg timestamp="20210121 14:48:55.901" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
    "Key": "31418/listtest/key1"
}</msg>
<status status="PASS" endtime="20210121 14:48:55.901" starttime="20210121 14:48:55.399"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID1}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:55.905" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
    "Key": "31418/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:55.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:55.950" level="INFO">${output} = 00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210</msg>
<status status="PASS" endtime="20210121 14:48:55.950" starttime="20210121 14:48:55.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.951" level="INFO">00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210</msg>
<status status="PASS" endtime="20210121 14:48:55.951" starttime="20210121 14:48:55.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:55.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:55.952" starttime="20210121 14:48:55.952"></status>
</kw>
<msg timestamp="20210121 14:48:55.953" level="INFO">${uploadID1} = 00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210</msg>
<status status="PASS" endtime="20210121 14:48:55.953" starttime="20210121 14:48:55.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:55.953" starttime="20210121 14:48:55.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:55.954" starttime="20210121 14:48:55.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:55.955" starttime="20210121 14:48:55.954"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:55.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 31418/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:56.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:56.456" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
    "Key": "31418/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:48:56.456" starttime="20210121 14:48:55.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:56.457" level="INFO">{
    "Bucket": "link", 
    "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
    "Key": "31418/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:48:56.457" starttime="20210121 14:48:56.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:56.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:56.458" starttime="20210121 14:48:56.458"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:56.458" starttime="20210121 14:48:55.957"></status>
</kw>
<msg timestamp="20210121 14:48:56.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:56.459" starttime="20210121 14:48:55.956"></status>
</kw>
<msg timestamp="20210121 14:48:56.459" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
    "Key": "31418/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:48:56.459" starttime="20210121 14:48:55.956"></status>
</kw>
<msg timestamp="20210121 14:48:56.459" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
    "Key": "31418/listtest/key2"
}</msg>
<status status="PASS" endtime="20210121 14:48:56.459" starttime="20210121 14:48:55.955"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${uploadID2}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:56.463" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
    "Key": "31418/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:56.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:56.509" level="INFO">${output} = f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835</msg>
<status status="PASS" endtime="20210121 14:48:56.509" starttime="20210121 14:48:56.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:56.510" level="INFO">f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835</msg>
<status status="PASS" endtime="20210121 14:48:56.510" starttime="20210121 14:48:56.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:56.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:56.511" starttime="20210121 14:48:56.510"></status>
</kw>
<msg timestamp="20210121 14:48:56.512" level="INFO">${uploadID2} = f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835</msg>
<status status="PASS" endtime="20210121 14:48:56.512" starttime="20210121 14:48:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:56.513" starttime="20210121 14:48:56.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:56.514" starttime="20210121 14:48:56.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>UploadId</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:56.515" starttime="20210121 14:48:56.515"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:56.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix 31418/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:57.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:57.076" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:4...</msg>
<status status="PASS" endtime="20210121 14:48:57.076" starttime="20210121 14:48:56.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.078" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:48:55.847Z", 
            "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
            "StorageClass": "STANDARD", 
            "Key": "31418/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:48:56.406Z", 
            "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
            "StorageClass": "STANDARD", 
            "Key": "31418/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:48:57.078" starttime="20210121 14:48:57.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:57.080" starttime="20210121 14:48:57.079"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.080" starttime="20210121 14:48:56.517"></status>
</kw>
<msg timestamp="20210121 14:48:57.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:57.081" starttime="20210121 14:48:56.517"></status>
</kw>
<msg timestamp="20210121 14:48:57.081" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:4...</msg>
<status status="PASS" endtime="20210121 14:48:57.081" starttime="20210121 14:48:56.516"></status>
</kw>
<msg timestamp="20210121 14:48:57.082" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:4...</msg>
<status status="PASS" endtime="20210121 14:48:57.082" starttime="20210121 14:48:56.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID1}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.083" starttime="20210121 14:48:57.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${uploadID2}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.084" starttime="20210121 14:48:57.083"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:57.089" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:48:55.847Z", 
            "UploadId": "00c4efe4-6c30-4de1-b0a2-aaa97a8f54b6-105594259757269210", 
            "StorageClass": "STANDARD", 
            "Key": "31418/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-01-21T14:48:56.406Z", 
            "UploadId": "f9001671-a6b0-49f4-8a3d-29a35269e7d7-105594259793903835", 
            "StorageClass": "STANDARD", 
            "Key": "31418/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:57.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:57.158" level="INFO">${output} = 2</msg>
<status status="PASS" endtime="20210121 14:48:57.158" starttime="20210121 14:48:57.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.160" level="INFO">2</msg>
<status status="PASS" endtime="20210121 14:48:57.160" starttime="20210121 14:48:57.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:57.161" starttime="20210121 14:48:57.160"></status>
</kw>
<msg timestamp="20210121 14:48:57.161" level="INFO">${count} = 2</msg>
<status status="PASS" endtime="20210121 14:48:57.161" starttime="20210121 14:48:57.084"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.163" starttime="20210121 14:48:57.161"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:48:57.164" critical="yes" starttime="20210121 14:48:55.396"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:48:57.168" starttime="20210121 14:48:11.199"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectcopy.robot" id="s1-s12-s7" name="Objectcopy">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:48:57.188" level="INFO">${random} = 64494</msg>
<status status="PASS" endtime="20210121 14:48:57.188" starttime="20210121 14:48:57.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.190" level="INFO">${PREFIX} = 64494</msg>
<status status="PASS" endtime="20210121 14:48:57.190" starttime="20210121 14:48:57.189"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.190" starttime="20210121 14:48:57.187"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.190" starttime="20210121 14:48:57.187"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:57.193" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:57.196" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:48:57.196" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:48:57.196" starttime="20210121 14:48:57.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.197" starttime="20210121 14:48:57.197"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:57.199" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:57.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:57.354" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:48:57.354" starttime="20210121 14:48:57.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:57.359" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:57.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:57.759" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:48:57.759" starttime="20210121 14:48:57.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.760" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:48:57.760" starttime="20210121 14:48:57.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:57.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:57.761" starttime="20210121 14:48:57.760"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.761" starttime="20210121 14:48:57.356"></status>
</kw>
<msg timestamp="20210121 14:48:57.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:57.761" starttime="20210121 14:48:57.356"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.762" starttime="20210121 14:48:57.356"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.762" starttime="20210121 14:48:57.355"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.762" starttime="20210121 14:48:57.354"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.762" starttime="20210121 14:48:57.191"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:57.762" starttime="20210121 14:48:57.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.764" starttime="20210121 14:48:57.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:57.764" starttime="20210121 14:48:57.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:57.769" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:58.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:58.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:58.115" starttime="20210121 14:48:57.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.116" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:58.116" starttime="20210121 14:48:58.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:58.117" starttime="20210121 14:48:58.116"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.117" starttime="20210121 14:48:57.767"></status>
</kw>
<msg timestamp="20210121 14:48:58.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:58.118" starttime="20210121 14:48:57.766"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.118" starttime="20210121 14:48:57.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:58.121" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:58.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:58.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:58.487" starttime="20210121 14:48:58.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.488" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:58.488" starttime="20210121 14:48:58.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:58.489" starttime="20210121 14:48:58.488"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.489" starttime="20210121 14:48:58.119"></status>
</kw>
<msg timestamp="20210121 14:48:58.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:58.490" starttime="20210121 14:48:58.118"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.490" starttime="20210121 14:48:58.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:58.494" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:58.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:58.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:58.847" starttime="20210121 14:48:58.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.848" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:58.848" starttime="20210121 14:48:58.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:58.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:58.849" starttime="20210121 14:48:58.849"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.849" starttime="20210121 14:48:58.491"></status>
</kw>
<msg timestamp="20210121 14:48:58.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:58.850" starttime="20210121 14:48:58.490"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:58.850" starttime="20210121 14:48:58.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:58.854" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:48:59.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:48:59.221" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:48:59.222" starttime="20210121 14:48:58.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:48:59.223" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:48:59.223" starttime="20210121 14:48:59.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:48:59.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:48:59.223" starttime="20210121 14:48:59.223"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.224" starttime="20210121 14:48:58.851"></status>
</kw>
<msg timestamp="20210121 14:48:59.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:48:59.224" starttime="20210121 14:48:58.851"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.224" starttime="20210121 14:48:58.850"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.224" starttime="20210121 14:48:57.765"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.225" starttime="20210121 14:48:57.765"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.225" starttime="20210121 14:48:57.763"></status>
</kw>
<status status="PASS" endtime="20210121 14:48:59.225" starttime="20210121 14:48:57.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:48:59.226" starttime="20210121 14:48:59.226"></status>
</kw>
<msg timestamp="20210121 14:48:59.226" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:59.226" starttime="20210121 14:48:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:48:59.227" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:48:59.227" starttime="20210121 14:48:59.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:48:59.230" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:02.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:02.461" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:49:02.461" starttime="20210121 14:48:59.228"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:02.462" starttime="20210121 14:49:02.462"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:02.463" starttime="20210121 14:49:02.462"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:02.463" starttime="20210121 14:49:02.463"></status>
</kw>
<msg timestamp="20210121 14:49:02.464" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:49:02.464" starttime="20210121 14:48:59.228"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:49:02.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:02.464" starttime="20210121 14:49:02.464"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:02.464" starttime="20210121 14:48:59.228"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:02.464" starttime="20210121 14:48:59.227"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:02.465" starttime="20210121 14:48:57.186"></status>
</kw>
<test id="s1-s12-s7-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
</arguments>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210121 14:49:02.468" level="INFO">${postfix} = 41047</msg>
<status status="PASS" endtime="20210121 14:49:02.468" starttime="20210121 14:49:02.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
</arguments>
<msg timestamp="20210121 14:49:02.469" level="INFO">${DESTBUCKET} = destbucket-41047</msg>
<status status="PASS" endtime="20210121 14:49:02.469" starttime="20210121 14:49:02.468"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:02.473" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-41047 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:03.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:03.090" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-41047"
}</msg>
<status status="PASS" endtime="20210121 14:49:03.090" starttime="20210121 14:49:02.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.097" level="INFO">{
    "Location": "http://s3g:9878/destbucket-41047"
}</msg>
<status status="PASS" endtime="20210121 14:49:03.097" starttime="20210121 14:49:03.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:03.098" starttime="20210121 14:49:03.097"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.098" starttime="20210121 14:49:02.470"></status>
</kw>
<msg timestamp="20210121 14:49:03.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:03.098" starttime="20210121 14:49:02.470"></status>
</kw>
<msg timestamp="20210121 14:49:03.099" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-41047"
}</msg>
<status status="PASS" endtime="20210121 14:49:03.099" starttime="20210121 14:49:02.470"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.099" starttime="20210121 14:49:02.469"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.099" starttime="20210121 14:49:02.466"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.099" starttime="20210121 14:49:02.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/copyfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:03.103" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210121 14:49:03.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:03.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:03.107" starttime="20210121 14:49:03.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.109" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:03.109" starttime="20210121 14:49:03.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:03.112" starttime="20210121 14:49:03.109"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.112" starttime="20210121 14:49:03.100"></status>
</kw>
<msg timestamp="20210121 14:49:03.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:03.112" starttime="20210121 14:49:03.100"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.113" starttime="20210121 14:49:03.099"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:03.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 64494/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:03.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:03.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:03.863" starttime="20210121 14:49:03.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.864" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:03.864" starttime="20210121 14:49:03.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:03.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:03.865" starttime="20210121 14:49:03.864"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:03.865" starttime="20210121 14:49:03.114"></status>
</kw>
<msg timestamp="20210121 14:49:03.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:03.865" starttime="20210121 14:49:03.114"></status>
</kw>
<msg timestamp="20210121 14:49:03.866" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:03.866" starttime="20210121 14:49:03.113"></status>
</kw>
<msg timestamp="20210121 14:49:03.866" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:03.866" starttime="20210121 14:49:03.113"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:03.871" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 64494/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:04.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:04.439" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:03.704Z", 
            "ETag": "2021-01-21T14:49:03.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:04.439" starttime="20210121 14:49:03.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:04.441" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:03.704Z", 
            "ETag": "2021-01-21T14:49:03.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "64494/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:04.441" starttime="20210121 14:49:04.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:04.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:04.442" starttime="20210121 14:49:04.441"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:04.442" starttime="20210121 14:49:03.868"></status>
</kw>
<msg timestamp="20210121 14:49:04.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:04.442" starttime="20210121 14:49:03.867"></status>
</kw>
<msg timestamp="20210121 14:49:04.442" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:03.704Z", 
            "ETag": "2021-01-21T14:49:03.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:04.443" starttime="20210121 14:49:03.867"></status>
</kw>
<msg timestamp="20210121 14:49:04.443" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:03.704Z", 
            "ETag": "2021-01-21T14:49:03.704Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:04.443" starttime="20210121 14:49:03.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:04.444" starttime="20210121 14:49:04.443"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:04.449" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41047 --key 64494/copyobject/f1 --copy-source link/64494/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:05.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:05.093" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:05.004Z", 
        "ETag": "17dac3a5-f3f6-42ed-96c9-d63130318d2c"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:05.093" starttime="20210121 14:49:04.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:05.094" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:05.004Z", 
        "ETag": "17dac3a5-f3f6-42ed-96c9-d63130318d2c"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:05.094" starttime="20210121 14:49:05.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:05.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:05.095" starttime="20210121 14:49:05.094"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:05.096" starttime="20210121 14:49:04.445"></status>
</kw>
<msg timestamp="20210121 14:49:05.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:05.096" starttime="20210121 14:49:04.445"></status>
</kw>
<msg timestamp="20210121 14:49:05.096" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:05.004Z", 
        "ETag": "17dac3a5-f3f6-42ed-96c9-d63130318d2c"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:05.096" starttime="20210121 14:49:04.444"></status>
</kw>
<msg timestamp="20210121 14:49:05.097" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:05.004Z", 
        "ETag": "17dac3a5-f3f6-42ed-96c9-d63130318d2c"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:05.097" starttime="20210121 14:49:04.444"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:05.103" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-41047 --prefix 64494/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:05.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:05.630" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:05.004Z", 
            "ETag": "2021-01-21T14:49:05.004Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:05.630" starttime="20210121 14:49:05.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:05.631" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:05.004Z", 
            "ETag": "2021-01-21T14:49:05.004Z", 
            "StorageClass": "STANDARD", 
            "Key": "64494/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:05.631" starttime="20210121 14:49:05.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:05.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:05.632" starttime="20210121 14:49:05.631"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:05.633" starttime="20210121 14:49:05.100"></status>
</kw>
<msg timestamp="20210121 14:49:05.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:05.633" starttime="20210121 14:49:05.099"></status>
</kw>
<msg timestamp="20210121 14:49:05.633" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:05.004Z", 
            "ETag": "2021-01-21T14:49:05.004Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:05.633" starttime="20210121 14:49:05.098"></status>
</kw>
<msg timestamp="20210121 14:49:05.634" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:05.004Z", 
            "ETag": "2021-01-21T14:49:05.004Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:05.634" starttime="20210121 14:49:05.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:05.634" starttime="20210121 14:49:05.634"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:05.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41047 --key 64494/copyobject/f1 --copy-source link/64494/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:06.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:06.253" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:06.195Z", 
        "ETag": "aa3dfff4-023c-4132-bd46-b282e7d22747"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:06.253" starttime="20210121 14:49:05.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:06.254" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:06.195Z", 
        "ETag": "aa3dfff4-023c-4132-bd46-b282e7d22747"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:06.254" starttime="20210121 14:49:06.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:06.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:06.255" starttime="20210121 14:49:06.254"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:06.255" starttime="20210121 14:49:05.636"></status>
</kw>
<msg timestamp="20210121 14:49:06.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:06.255" starttime="20210121 14:49:05.636"></status>
</kw>
<msg timestamp="20210121 14:49:06.256" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:06.195Z", 
        "ETag": "aa3dfff4-023c-4132-bd46-b282e7d22747"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:06.256" starttime="20210121 14:49:05.635"></status>
</kw>
<msg timestamp="20210121 14:49:06.256" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:06.195Z", 
        "ETag": "aa3dfff4-023c-4132-bd46-b282e7d22747"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:06.256" starttime="20210121 14:49:05.635"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:06.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-41047 --prefix 64494/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:06.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:06.753" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:06.195Z", 
            "ETag": "2021-01-21T14:49:06.195Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:06.753" starttime="20210121 14:49:06.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:06.754" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:06.195Z", 
            "ETag": "2021-01-21T14:49:06.195Z", 
            "StorageClass": "STANDARD", 
            "Key": "64494/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:06.754" starttime="20210121 14:49:06.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:06.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:06.755" starttime="20210121 14:49:06.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:06.755" starttime="20210121 14:49:06.258"></status>
</kw>
<msg timestamp="20210121 14:49:06.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:06.755" starttime="20210121 14:49:06.257"></status>
</kw>
<msg timestamp="20210121 14:49:06.755" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:06.195Z", 
            "ETag": "2021-01-21T14:49:06.195Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:06.756" starttime="20210121 14:49:06.257"></status>
</kw>
<msg timestamp="20210121 14:49:06.756" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:06.195Z", 
            "ETag": "2021-01-21T14:49:06.195Z", 
            "StorageClass": "STANDARD", 
            "Key": "644...</msg>
<status status="PASS" endtime="20210121 14:49:06.756" starttime="20210121 14:49:06.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:06.757" starttime="20210121 14:49:06.756"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:06.757" critical="yes" starttime="20210121 14:49:02.465"></status>
</test>
<test id="s1-s12-s7-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:06.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 64494/copyobject/f1 --copy-source link/64494/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:07.299" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:07.299" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.299" starttime="20210121 14:49:06.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:07.300" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.300" starttime="20210121 14:49:07.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:07.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:07.301" starttime="20210121 14:49:07.300"></status>
</kw>
<msg timestamp="20210121 14:49:07.301" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.301" starttime="20210121 14:49:06.760"></status>
</kw>
<msg timestamp="20210121 14:49:07.302" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.302" starttime="20210121 14:49:06.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:07.302" starttime="20210121 14:49:07.302"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:07.306" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41047 --key 64494/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/64494/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:07.796" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:07.796" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.796" starttime="20210121 14:49:07.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:07.797" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.797" starttime="20210121 14:49:07.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:07.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:07.798" starttime="20210121 14:49:07.797"></status>
</kw>
<msg timestamp="20210121 14:49:07.799" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.799" starttime="20210121 14:49:07.303"></status>
</kw>
<msg timestamp="20210121 14:49:07.799" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:07.799" starttime="20210121 14:49:07.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:07.800" starttime="20210121 14:49:07.799"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:07.800" critical="yes" starttime="20210121 14:49:06.758"></status>
</test>
<test id="s1-s12-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:07.806" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-41047 --key 64494/copyobject/f1 --copy-source destbucket-41047/64494/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:08.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:08.266" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:08.226Z", 
        "ETag": "13e311c9-e186-4a7c-8788-4ae61a108024"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:08.267" starttime="20210121 14:49:07.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:08.268" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:08.226Z", 
        "ETag": "13e311c9-e186-4a7c-8788-4ae61a108024"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:08.268" starttime="20210121 14:49:08.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:08.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:08.269" starttime="20210121 14:49:08.268"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:08.269" starttime="20210121 14:49:07.803"></status>
</kw>
<msg timestamp="20210121 14:49:08.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:08.269" starttime="20210121 14:49:07.803"></status>
</kw>
<msg timestamp="20210121 14:49:08.270" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:08.226Z", 
        "ETag": "13e311c9-e186-4a7c-8788-4ae61a108024"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:08.270" starttime="20210121 14:49:07.802"></status>
</kw>
<msg timestamp="20210121 14:49:08.270" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-01-21T14:49:08.226Z", 
        "ETag": "13e311c9-e186-4a7c-8788-4ae61a108024"
    }
}</msg>
<status status="PASS" endtime="20210121 14:49:08.270" starttime="20210121 14:49:07.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ETag</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:08.271" starttime="20210121 14:49:08.270"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:08.271" critical="yes" starttime="20210121 14:49:07.801"></status>
</test>
<test id="s1-s12-s7-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:08.276" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-41047 --key 64494/copyobject/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:08.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:08.752" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:49:08.752" starttime="20210121 14:49:08.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:08.753" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:49:08.753" starttime="20210121 14:49:08.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:08.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:08.754" starttime="20210121 14:49:08.753"></status>
</kw>
<msg timestamp="20210121 14:49:08.754" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:49:08.754" starttime="20210121 14:49:08.273"></status>
</kw>
<msg timestamp="20210121 14:49:08.755" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" endtime="20210121 14:49:08.755" starttime="20210121 14:49:08.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchKey</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:08.755" starttime="20210121 14:49:08.755"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:08.756" critical="yes" starttime="20210121 14:49:08.272"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:49:08.757" starttime="20210121 14:48:57.174"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectdelete.robot" id="s1-s12-s8" name="Objectdelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:49:08.773" level="INFO">${random} = 93123</msg>
<status status="PASS" endtime="20210121 14:49:08.773" starttime="20210121 14:49:08.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:49:08.775" level="INFO">${PREFIX} = 93123</msg>
<status status="PASS" endtime="20210121 14:49:08.775" starttime="20210121 14:49:08.774"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:08.775" starttime="20210121 14:49:08.772"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:08.775" starttime="20210121 14:49:08.772"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:08.779" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:08.781" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:49:08.781" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:49:08.781" starttime="20210121 14:49:08.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:08.782" starttime="20210121 14:49:08.782"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:08.784" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:08.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:08.931" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:49:08.931" starttime="20210121 14:49:08.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:08.937" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:09.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:09.334" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:49:09.334" starttime="20210121 14:49:08.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:09.335" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:49:09.335" starttime="20210121 14:49:09.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:09.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:09.335" starttime="20210121 14:49:09.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.336" starttime="20210121 14:49:08.934"></status>
</kw>
<msg timestamp="20210121 14:49:09.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:09.336" starttime="20210121 14:49:08.934"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.336" starttime="20210121 14:49:08.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.337" starttime="20210121 14:49:08.933"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.337" starttime="20210121 14:49:08.932"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.337" starttime="20210121 14:49:08.776"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.337" starttime="20210121 14:49:08.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:09.338" starttime="20210121 14:49:09.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:09.339" starttime="20210121 14:49:09.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:09.344" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:09.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:09.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:09.698" starttime="20210121 14:49:09.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:09.699" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:09.699" starttime="20210121 14:49:09.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:09.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:09.700" starttime="20210121 14:49:09.699"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.703" starttime="20210121 14:49:09.340"></status>
</kw>
<msg timestamp="20210121 14:49:09.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:09.704" starttime="20210121 14:49:09.340"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:09.704" starttime="20210121 14:49:09.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:09.708" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:10.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:10.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:10.056" starttime="20210121 14:49:09.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.057" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:10.057" starttime="20210121 14:49:10.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:10.058" starttime="20210121 14:49:10.058"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.058" starttime="20210121 14:49:09.705"></status>
</kw>
<msg timestamp="20210121 14:49:10.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:10.059" starttime="20210121 14:49:09.705"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.059" starttime="20210121 14:49:09.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:10.064" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:10.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:10.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:10.405" starttime="20210121 14:49:10.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.406" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:10.406" starttime="20210121 14:49:10.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:10.407" starttime="20210121 14:49:10.406"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.407" starttime="20210121 14:49:10.060"></status>
</kw>
<msg timestamp="20210121 14:49:10.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:10.407" starttime="20210121 14:49:10.060"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.407" starttime="20210121 14:49:10.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:10.411" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:10.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:10.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:10.758" starttime="20210121 14:49:10.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.759" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:10.759" starttime="20210121 14:49:10.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:10.760" starttime="20210121 14:49:10.759"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.760" starttime="20210121 14:49:10.408"></status>
</kw>
<msg timestamp="20210121 14:49:10.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:10.408"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:10.408"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:09.339"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:09.339"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:09.338"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:10.761" starttime="20210121 14:49:09.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:10.762" starttime="20210121 14:49:10.762"></status>
</kw>
<msg timestamp="20210121 14:49:10.763" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:10.763" starttime="20210121 14:49:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:49:10.763" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:10.763" starttime="20210121 14:49:10.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:10.768" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:13.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:13.996" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:49:13.996" starttime="20210121 14:49:10.766"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:13.997" starttime="20210121 14:49:13.996"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:13.997" starttime="20210121 14:49:13.997"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:13.998" starttime="20210121 14:49:13.997"></status>
</kw>
<msg timestamp="20210121 14:49:13.998" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:49:13.998" starttime="20210121 14:49:10.765"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:49:13.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:13.999" starttime="20210121 14:49:13.998"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:13.999" starttime="20210121 14:49:10.764"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:13.999" starttime="20210121 14:49:10.763"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:13.999" starttime="20210121 14:49:08.771"></status>
</kw>
<test id="s1-s12-s8-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:14.004" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:49:14.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:14.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:14.007" starttime="20210121 14:49:14.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:14.008" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:14.008" starttime="20210121 14:49:14.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:14.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:14.009" starttime="20210121 14:49:14.008"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:14.009" starttime="20210121 14:49:14.001"></status>
</kw>
<msg timestamp="20210121 14:49:14.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:14.009" starttime="20210121 14:49:14.001"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:14.010" starttime="20210121 14:49:14.001"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:14.014" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 93123/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:14.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:14.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:14.666" starttime="20210121 14:49:14.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:14.667" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:14.668" starttime="20210121 14:49:14.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:14.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:14.668" starttime="20210121 14:49:14.668"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:14.669" starttime="20210121 14:49:14.011"></status>
</kw>
<msg timestamp="20210121 14:49:14.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:14.669" starttime="20210121 14:49:14.011"></status>
</kw>
<msg timestamp="20210121 14:49:14.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:14.669" starttime="20210121 14:49:14.010"></status>
</kw>
<msg timestamp="20210121 14:49:14.670" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:14.670" starttime="20210121 14:49:14.010"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:14.675" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 93123/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:15.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:15.142" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:14.522Z", 
            "ETag": "2021-01-21T14:49:14.522Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:49:15.142" starttime="20210121 14:49:14.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:15.143" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:14.522Z", 
            "ETag": "2021-01-21T14:49:14.522Z", 
            "StorageClass": "STANDARD", 
            "Key": "93123/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:15.143" starttime="20210121 14:49:15.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:15.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:15.145" starttime="20210121 14:49:15.143"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:15.145" starttime="20210121 14:49:14.672"></status>
</kw>
<msg timestamp="20210121 14:49:15.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:15.145" starttime="20210121 14:49:14.672"></status>
</kw>
<msg timestamp="20210121 14:49:15.146" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:14.522Z", 
            "ETag": "2021-01-21T14:49:14.522Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:49:15.146" starttime="20210121 14:49:14.671"></status>
</kw>
<msg timestamp="20210121 14:49:15.146" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:14.522Z", 
            "ETag": "2021-01-21T14:49:14.522Z", 
            "StorageClass": "STANDARD", 
            "Key": "931...</msg>
<status status="PASS" endtime="20210121 14:49:15.146" starttime="20210121 14:49:14.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:15.147" starttime="20210121 14:49:15.146"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:15.152" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 93123/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:15.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:15.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:15.750" starttime="20210121 14:49:15.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:15.752" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:15.752" starttime="20210121 14:49:15.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:15.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:15.752" starttime="20210121 14:49:15.752"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:15.753" starttime="20210121 14:49:15.149"></status>
</kw>
<msg timestamp="20210121 14:49:15.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:15.753" starttime="20210121 14:49:15.148"></status>
</kw>
<msg timestamp="20210121 14:49:15.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:15.753" starttime="20210121 14:49:15.148"></status>
</kw>
<msg timestamp="20210121 14:49:15.754" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:15.754" starttime="20210121 14:49:15.147"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:15.759" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 93123/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:16.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:16.261" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:16.261" starttime="20210121 14:49:15.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:16.262" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:16.262" starttime="20210121 14:49:16.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:16.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:16.263" starttime="20210121 14:49:16.262"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:16.264" starttime="20210121 14:49:15.756"></status>
</kw>
<msg timestamp="20210121 14:49:16.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:16.264" starttime="20210121 14:49:15.755"></status>
</kw>
<msg timestamp="20210121 14:49:16.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:16.264" starttime="20210121 14:49:15.755"></status>
</kw>
<msg timestamp="20210121 14:49:16.265" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:16.265" starttime="20210121 14:49:15.754"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:16.266" starttime="20210121 14:49:16.265"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>500</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:16.266" starttime="20210121 14:49:16.266"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:16.267" critical="yes" starttime="20210121 14:49:13.999"></status>
</test>
<test id="s1-s12-s8-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:16.272" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:16.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:16.744" level="INFO">${output} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:16.745" starttime="20210121 14:49:16.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:16.746" level="INFO">                           PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
                           PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:49:16.746" starttime="20210121 14:49:16.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:16.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:16.747" starttime="20210121 14:49:16.746"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:16.747" starttime="20210121 14:49:16.270"></status>
</kw>
<msg timestamp="20210121 14:49:16.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:16.748" starttime="20210121 14:49:16.269"></status>
</kw>
<msg timestamp="20210121 14:49:16.748" level="INFO">${output} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:16.748" starttime="20210121 14:49:16.269"></status>
</kw>
<msg timestamp="20210121 14:49:16.748" level="INFO">${result} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:16.748" starttime="20210121 14:49:16.268"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:16.749" starttime="20210121 14:49:16.749"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:16.753" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:17.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:17.331" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:17.331" starttime="20210121 14:49:16.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.332" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:17.332" starttime="20210121 14:49:17.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:17.333" starttime="20210121 14:49:17.333"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:17.334" starttime="20210121 14:49:16.751"></status>
</kw>
<msg timestamp="20210121 14:49:17.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:17.334" starttime="20210121 14:49:16.750"></status>
</kw>
<msg timestamp="20210121 14:49:17.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:17.335" starttime="20210121 14:49:16.750"></status>
</kw>
<msg timestamp="20210121 14:49:17.335" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:17.335" starttime="20210121 14:49:16.749"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:17.340" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:17.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:17.790" level="INFO">${output} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:17.790" starttime="20210121 14:49:17.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.791" level="INFO">                           PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
                           PRE dir1/
2021-01-21 14:47:38         29 testfile</msg>
<status status="PASS" endtime="20210121 14:49:17.792" starttime="20210121 14:49:17.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:17.792" starttime="20210121 14:49:17.792"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:17.793" starttime="20210121 14:49:17.337"></status>
</kw>
<msg timestamp="20210121 14:49:17.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:17.793" starttime="20210121 14:49:17.336"></status>
</kw>
<msg timestamp="20210121 14:49:17.793" level="INFO">${output} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:17.793" starttime="20210121 14:49:17.336"></status>
</kw>
<msg timestamp="20210121 14:49:17.793" level="INFO">${result} =                            PRE 17435/
                           PRE 43562/
                           PRE 50344/
                           PRE 64494/
                           PRE 77771/
          ...</msg>
<status status="PASS" endtime="20210121 14:49:17.794" starttime="20210121 14:49:17.335"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:17.794" starttime="20210121 14:49:17.794"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:17.794" critical="yes" starttime="20210121 14:49:16.267"></status>
</test>
<test id="s1-s12-s8-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:17.800" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:49:17.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:17.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:17.802" starttime="20210121 14:49:17.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.803" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:17.803" starttime="20210121 14:49:17.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:17.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:17.805" starttime="20210121 14:49:17.804"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:17.805" starttime="20210121 14:49:17.797"></status>
</kw>
<msg timestamp="20210121 14:49:17.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:17.805" starttime="20210121 14:49:17.796"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:17.805" starttime="20210121 14:49:17.796"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:17.809" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/93123/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:18.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:18.370" level="INFO">${output} = Completed 29 Bytes/29 Bytes (287 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapidir/f1 </msg>
<status status="PASS" endtime="20210121 14:49:18.370" starttime="20210121 14:49:17.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:18.371" level="INFO">Completed 29 Bytes/29 Bytes (287 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapidir/f1 </msg>
<status status="PASS" endtime="20210121 14:49:18.371" starttime="20210121 14:49:18.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:18.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:18.372" starttime="20210121 14:49:18.371"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:18.372" starttime="20210121 14:49:17.807"></status>
</kw>
<msg timestamp="20210121 14:49:18.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:18.372" starttime="20210121 14:49:17.807"></status>
</kw>
<msg timestamp="20210121 14:49:18.373" level="INFO">${output} = Completed 29 Bytes/29 Bytes (287 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapidir/f1 </msg>
<status status="PASS" endtime="20210121 14:49:18.373" starttime="20210121 14:49:17.806"></status>
</kw>
<msg timestamp="20210121 14:49:18.373" level="INFO">${result} = Completed 29 Bytes/29 Bytes (287 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapidir/f1 </msg>
<status status="PASS" endtime="20210121 14:49:18.373" starttime="20210121 14:49:17.806"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:18.378" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/93123/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:18.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:18.872" level="INFO">${output} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:18.872" starttime="20210121 14:49:18.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:18.874" level="INFO">2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:18.874" starttime="20210121 14:49:18.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:18.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:18.875" starttime="20210121 14:49:18.875"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:18.876" starttime="20210121 14:49:18.375"></status>
</kw>
<msg timestamp="20210121 14:49:18.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:18.876" starttime="20210121 14:49:18.375"></status>
</kw>
<msg timestamp="20210121 14:49:18.876" level="INFO">${output} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:18.876" starttime="20210121 14:49:18.375"></status>
</kw>
<msg timestamp="20210121 14:49:18.877" level="INFO">${result} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:18.877" starttime="20210121 14:49:18.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:18.877" starttime="20210121 14:49:18.877"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:18.882" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 93123/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:19.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:19.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:19.471" starttime="20210121 14:49:18.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:19.472" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:19.472" starttime="20210121 14:49:19.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:19.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:19.473" starttime="20210121 14:49:19.472"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:19.473" starttime="20210121 14:49:18.879"></status>
</kw>
<msg timestamp="20210121 14:49:19.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:19.474" starttime="20210121 14:49:18.879"></status>
</kw>
<msg timestamp="20210121 14:49:19.474" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:19.474" starttime="20210121 14:49:18.878"></status>
</kw>
<msg timestamp="20210121 14:49:19.474" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:19.474" starttime="20210121 14:49:18.878"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:19.479" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/93123/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:19.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:19.937" level="INFO">${output} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:19.937" starttime="20210121 14:49:19.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:19.938" level="INFO">2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:19.938" starttime="20210121 14:49:19.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:19.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:19.939" starttime="20210121 14:49:19.939"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:19.940" starttime="20210121 14:49:19.477"></status>
</kw>
<msg timestamp="20210121 14:49:19.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:19.940" starttime="20210121 14:49:19.476"></status>
</kw>
<msg timestamp="20210121 14:49:19.940" level="INFO">${output} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:19.940" starttime="20210121 14:49:19.475"></status>
</kw>
<msg timestamp="20210121 14:49:19.940" level="INFO">${result} = 2021-01-21 14:49:18         29 f1</msg>
<status status="PASS" endtime="20210121 14:49:19.940" starttime="20210121 14:49:19.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:19.941" starttime="20210121 14:49:19.941"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:19.945" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 93123/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:20.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:20.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:20.517" starttime="20210121 14:49:19.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:20.518" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:20.518" starttime="20210121 14:49:20.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:20.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:20.519" starttime="20210121 14:49:20.519"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:20.520" starttime="20210121 14:49:19.943"></status>
</kw>
<msg timestamp="20210121 14:49:20.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:20.520" starttime="20210121 14:49:19.942"></status>
</kw>
<msg timestamp="20210121 14:49:20.520" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:20.520" starttime="20210121 14:49:19.942"></status>
</kw>
<msg timestamp="20210121 14:49:20.520" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:20.520" starttime="20210121 14:49:19.941"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:20.521" critical="yes" starttime="20210121 14:49:17.795"></status>
</test>
<test id="s1-s12-s8-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:20.526" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:49:20.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:20.529" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:20.529" starttime="20210121 14:49:20.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:20.530" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:20.530" starttime="20210121 14:49:20.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:20.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:20.531" starttime="20210121 14:49:20.530"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:20.531" starttime="20210121 14:49:20.523"></status>
</kw>
<msg timestamp="20210121 14:49:20.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:20.531" starttime="20210121 14:49:20.523"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:20.532" starttime="20210121 14:49:20.522"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:20.536" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/93123/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:21.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:21.157" level="INFO">${output} = Completed 29 Bytes/29 Bytes (171 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.158" starttime="20210121 14:49:20.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:21.159" level="INFO">Completed 29 Bytes/29 Bytes (171 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.159" starttime="20210121 14:49:21.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:21.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:21.160" starttime="20210121 14:49:21.159"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:21.160" starttime="20210121 14:49:20.534"></status>
</kw>
<msg timestamp="20210121 14:49:21.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:21.160" starttime="20210121 14:49:20.533"></status>
</kw>
<msg timestamp="20210121 14:49:21.161" level="INFO">${output} = Completed 29 Bytes/29 Bytes (171 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.161" starttime="20210121 14:49:20.532"></status>
</kw>
<msg timestamp="20210121 14:49:21.161" level="INFO">${result} = Completed 29 Bytes/29 Bytes (171 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/93123/deletetestapiprefix/filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.161" starttime="20210121 14:49:20.532"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:21.166" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/93123/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:21.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:21.656" level="INFO">${output} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.656" starttime="20210121 14:49:21.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:21.658" level="INFO">2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.658" starttime="20210121 14:49:21.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:21.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:21.659" starttime="20210121 14:49:21.658"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:21.659" starttime="20210121 14:49:21.163"></status>
</kw>
<msg timestamp="20210121 14:49:21.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:21.659" starttime="20210121 14:49:21.163"></status>
</kw>
<msg timestamp="20210121 14:49:21.660" level="INFO">${output} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.660" starttime="20210121 14:49:21.162"></status>
</kw>
<msg timestamp="20210121 14:49:21.660" level="INFO">${result} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:21.660" starttime="20210121 14:49:21.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:21.661" starttime="20210121 14:49:21.660"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:21.667" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 93123/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:22.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:22.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:22.138" starttime="20210121 14:49:21.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:22.139" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:22.139" starttime="20210121 14:49:22.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:22.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:22.143" starttime="20210121 14:49:22.139"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:22.143" starttime="20210121 14:49:21.663"></status>
</kw>
<msg timestamp="20210121 14:49:22.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:22.144" starttime="20210121 14:49:21.662"></status>
</kw>
<msg timestamp="20210121 14:49:22.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:22.144" starttime="20210121 14:49:21.662"></status>
</kw>
<msg timestamp="20210121 14:49:22.144" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:22.144" starttime="20210121 14:49:21.661"></status>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arguments>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:22.150" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/93123/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:22.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:22.642" level="INFO">${output} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:22.642" starttime="20210121 14:49:22.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:22.644" level="INFO">2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:22.644" starttime="20210121 14:49:22.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:22.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:22.645" starttime="20210121 14:49:22.644"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:22.645" starttime="20210121 14:49:22.146"></status>
</kw>
<msg timestamp="20210121 14:49:22.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:22.645" starttime="20210121 14:49:22.146"></status>
</kw>
<msg timestamp="20210121 14:49:22.645" level="INFO">${output} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:22.645" starttime="20210121 14:49:22.145"></status>
</kw>
<msg timestamp="20210121 14:49:22.646" level="INFO">${result} = 2021-01-21 14:49:21         29 filefile</msg>
<status status="PASS" endtime="20210121 14:49:22.646" starttime="20210121 14:49:22.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>filefile</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:22.646" starttime="20210121 14:49:22.646"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:22.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key 93123/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:23.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:23.250" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:23.250" starttime="20210121 14:49:22.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:23.251" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:23.252" starttime="20210121 14:49:23.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:23.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:23.252" starttime="20210121 14:49:23.252"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:23.253" starttime="20210121 14:49:22.648"></status>
</kw>
<msg timestamp="20210121 14:49:23.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:23.253" starttime="20210121 14:49:22.648"></status>
</kw>
<msg timestamp="20210121 14:49:23.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:23.253" starttime="20210121 14:49:22.647"></status>
</kw>
<msg timestamp="20210121 14:49:23.254" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:23.254" starttime="20210121 14:49:22.646"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:23.254" critical="yes" starttime="20210121 14:49:20.521"></status>
</test>
<test id="s1-s12-s8-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:23.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:23.724" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:23.725" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:23.725" starttime="20210121 14:49:23.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:23.726" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:23.726" starttime="20210121 14:49:23.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:23.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:23.727" starttime="20210121 14:49:23.726"></status>
</kw>
<msg timestamp="20210121 14:49:23.727" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:23.727" starttime="20210121 14:49:23.256"></status>
</kw>
<msg timestamp="20210121 14:49:23.728" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" endtime="20210121 14:49:23.728" starttime="20210121 14:49:23.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:23.728" starttime="20210121 14:49:23.728"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:23.728" critical="yes" starttime="20210121 14:49:23.255"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:49:23.730" starttime="20210121 14:49:08.760"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectmultidelete.robot" id="s1-s12-s9" name="Objectmultidelete">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:49:23.745" level="INFO">${random} = 92099</msg>
<status status="PASS" endtime="20210121 14:49:23.745" starttime="20210121 14:49:23.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:49:23.746" level="INFO">${PREFIX} = 92099</msg>
<status status="PASS" endtime="20210121 14:49:23.746" starttime="20210121 14:49:23.745"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:23.746" starttime="20210121 14:49:23.744"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:23.746" starttime="20210121 14:49:23.744"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:23.749" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:23.752" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:49:23.752" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:49:23.752" starttime="20210121 14:49:23.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:23.753" starttime="20210121 14:49:23.752"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:23.755" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:23.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:23.895" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:49:23.896" starttime="20210121 14:49:23.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:23.901" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:24.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:24.305" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:49:24.305" starttime="20210121 14:49:23.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.306" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:49:24.306" starttime="20210121 14:49:24.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:24.307" starttime="20210121 14:49:24.306"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.307" starttime="20210121 14:49:23.898"></status>
</kw>
<msg timestamp="20210121 14:49:24.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:24.307" starttime="20210121 14:49:23.898"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.308" starttime="20210121 14:49:23.898"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.308" starttime="20210121 14:49:23.897"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.308" starttime="20210121 14:49:23.896"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.308" starttime="20210121 14:49:23.747"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.308" starttime="20210121 14:49:23.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:24.310" starttime="20210121 14:49:24.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:24.310" starttime="20210121 14:49:24.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:24.316" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:24.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:24.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:24.650" starttime="20210121 14:49:24.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.651" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:24.651" starttime="20210121 14:49:24.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:24.651" starttime="20210121 14:49:24.651"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.652" starttime="20210121 14:49:24.313"></status>
</kw>
<msg timestamp="20210121 14:49:24.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:24.652" starttime="20210121 14:49:24.313"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.652" starttime="20210121 14:49:24.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:24.657" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:24.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:24.989" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:24.989" starttime="20210121 14:49:24.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.990" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:24.990" starttime="20210121 14:49:24.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:24.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:24.991" starttime="20210121 14:49:24.991"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.991" starttime="20210121 14:49:24.653"></status>
</kw>
<msg timestamp="20210121 14:49:24.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:24.992" starttime="20210121 14:49:24.653"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:24.992" starttime="20210121 14:49:24.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:24.995" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:25.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:25.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:25.332" starttime="20210121 14:49:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:25.333" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:25.334" starttime="20210121 14:49:25.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:25.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:25.334" starttime="20210121 14:49:25.334"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.335" starttime="20210121 14:49:24.993"></status>
</kw>
<msg timestamp="20210121 14:49:25.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:25.335" starttime="20210121 14:49:24.993"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.335" starttime="20210121 14:49:24.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:25.339" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:25.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:25.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:25.705" starttime="20210121 14:49:25.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:25.706" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:25.706" starttime="20210121 14:49:25.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:25.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:25.706" starttime="20210121 14:49:25.706"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.707" starttime="20210121 14:49:25.336"></status>
</kw>
<msg timestamp="20210121 14:49:25.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:25.707" starttime="20210121 14:49:25.336"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.707" starttime="20210121 14:49:25.335"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.708" starttime="20210121 14:49:24.311"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.708" starttime="20210121 14:49:24.310"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.708" starttime="20210121 14:49:24.309"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:25.708" starttime="20210121 14:49:24.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:25.709" starttime="20210121 14:49:25.709"></status>
</kw>
<msg timestamp="20210121 14:49:25.709" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:25.709" starttime="20210121 14:49:25.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:49:25.710" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:25.710" starttime="20210121 14:49:25.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:25.714" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:29.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:29.150" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:49:29.150" starttime="20210121 14:49:25.711"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:29.152" starttime="20210121 14:49:29.151"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:29.152" starttime="20210121 14:49:29.152"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:29.152" starttime="20210121 14:49:29.152"></status>
</kw>
<msg timestamp="20210121 14:49:29.153" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:49:29.153" starttime="20210121 14:49:25.711"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:49:29.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:29.154" starttime="20210121 14:49:29.153"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.154" starttime="20210121 14:49:25.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.154" starttime="20210121 14:49:25.710"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.154" starttime="20210121 14:49:23.743"></status>
</kw>
<test id="s1-s12-s9-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arguments>
<arg>date &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:29.163" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:49:29.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:29.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:29.172" starttime="20210121 14:49:29.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:29.173" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:29.173" starttime="20210121 14:49:29.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:29.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:29.174" starttime="20210121 14:49:29.173"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.174" starttime="20210121 14:49:29.157"></status>
</kw>
<msg timestamp="20210121 14:49:29.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:29.175" starttime="20210121 14:49:29.157"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.175" starttime="20210121 14:49:29.156"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:29.181" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 92099/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:29.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:29.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:29.888" starttime="20210121 14:49:29.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:29.890" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:29.890" starttime="20210121 14:49:29.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:29.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:29.891" starttime="20210121 14:49:29.890"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:29.891" starttime="20210121 14:49:29.177"></status>
</kw>
<msg timestamp="20210121 14:49:29.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:29.891" starttime="20210121 14:49:29.176"></status>
</kw>
<msg timestamp="20210121 14:49:29.892" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:29.892" starttime="20210121 14:49:29.176"></status>
</kw>
<msg timestamp="20210121 14:49:29.892" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:29.892" starttime="20210121 14:49:29.175"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:29.901" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 92099/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:30.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:30.615" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:30.615" starttime="20210121 14:49:29.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:30.616" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:30.616" starttime="20210121 14:49:30.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:30.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:30.617" starttime="20210121 14:49:30.616"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:30.617" starttime="20210121 14:49:29.894"></status>
</kw>
<msg timestamp="20210121 14:49:30.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:30.617" starttime="20210121 14:49:29.894"></status>
</kw>
<msg timestamp="20210121 14:49:30.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:30.618" starttime="20210121 14:49:29.893"></status>
</kw>
<msg timestamp="20210121 14:49:30.618" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:30.618" starttime="20210121 14:49:29.892"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:30.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 92099/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:31.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:31.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:31.318" starttime="20210121 14:49:30.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:31.319" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:31.320" starttime="20210121 14:49:31.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:31.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:31.320" starttime="20210121 14:49:31.320"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:31.321" starttime="20210121 14:49:30.620"></status>
</kw>
<msg timestamp="20210121 14:49:31.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:31.321" starttime="20210121 14:49:30.620"></status>
</kw>
<msg timestamp="20210121 14:49:31.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:31.321" starttime="20210121 14:49:30.619"></status>
</kw>
<msg timestamp="20210121 14:49:31.322" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:31.322" starttime="20210121 14:49:30.618"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:31.327" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 92099/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:31.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:31.824" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:29.730Z", 
            "ETag": "2021-01-21T14:49:29.730Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:31.824" starttime="20210121 14:49:31.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:31.825" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:29.730Z", 
            "ETag": "2021-01-21T14:49:29.730Z", 
            "StorageClass": "STANDARD", 
            "Key": "92099/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-01-21T14:49:30.438Z", 
            "ETag": "2021-01-21T14:49:30.438Z", 
            "StorageClass": "STANDARD", 
            "Key": "92099/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-01-21T14:49:31.159Z", 
            "ETag": "2021-01-21T14:49:31.159Z", 
            "StorageClass": "STANDARD", 
            "Key": "92099/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:31.826" starttime="20210121 14:49:31.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:31.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:31.826" starttime="20210121 14:49:31.826"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:31.827" starttime="20210121 14:49:31.324"></status>
</kw>
<msg timestamp="20210121 14:49:31.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:31.827" starttime="20210121 14:49:31.324"></status>
</kw>
<msg timestamp="20210121 14:49:31.827" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:29.730Z", 
            "ETag": "2021-01-21T14:49:29.730Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:31.827" starttime="20210121 14:49:31.323"></status>
</kw>
<msg timestamp="20210121 14:49:31.828" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:29.730Z", 
            "ETag": "2021-01-21T14:49:29.730Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:31.828" starttime="20210121 14:49:31.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:31.828" starttime="20210121 14:49:31.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:31.829" starttime="20210121 14:49:31.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:31.830" starttime="20210121 14:49:31.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:31.830" starttime="20210121 14:49:31.830"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:31.831" starttime="20210121 14:49:31.830"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:31.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket link --delete 'Objects=[{Key=92099/multidelete/f1},{Key=92099/multidelete/f2},{Key=92099/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:32.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:32.370" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "92099/multidelete/f1"
        }, 
        {
            "Key": "92099/multidelete/f2"
        }, 
        {
            "Key": "92099/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:49:32.370" starttime="20210121 14:49:31.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:32.371" level="INFO">{
    "Deleted": [
        {
            "Key": "92099/multidelete/f1"
        }, 
        {
            "Key": "92099/multidelete/f2"
        }, 
        {
            "Key": "92099/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:32.371" starttime="20210121 14:49:32.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:32.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:32.372" starttime="20210121 14:49:32.372"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:32.373" starttime="20210121 14:49:31.832"></status>
</kw>
<msg timestamp="20210121 14:49:32.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:32.373" starttime="20210121 14:49:31.832"></status>
</kw>
<msg timestamp="20210121 14:49:32.373" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "92099/multidelete/f1"
        }, 
        {
            "Key": "92099/multidelete/f2"
        }, 
        {
            "Key": "92099/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:49:32.373" starttime="20210121 14:49:31.832"></status>
</kw>
<msg timestamp="20210121 14:49:32.374" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "92099/multidelete/f1"
        }, 
        {
            "Key": "92099/multidelete/f2"
        }, 
        {
            "Key": "92099/multidelete/f4"
 ...</msg>
<status status="PASS" endtime="20210121 14:49:32.374" starttime="20210121 14:49:31.831"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Error</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.375" starttime="20210121 14:49:32.374"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:32.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 92099/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:32.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:32.895" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:31.159Z", 
            "ETag": "2021-01-21T14:49:31.159Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:32.896" starttime="20210121 14:49:32.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:32.898" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:31.159Z", 
            "ETag": "2021-01-21T14:49:31.159Z", 
            "StorageClass": "STANDARD", 
            "Key": "92099/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:32.898" starttime="20210121 14:49:32.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:32.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:32.899" starttime="20210121 14:49:32.898"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:32.900" starttime="20210121 14:49:32.377"></status>
</kw>
<msg timestamp="20210121 14:49:32.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:32.900" starttime="20210121 14:49:32.377"></status>
</kw>
<msg timestamp="20210121 14:49:32.900" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:31.159Z", 
            "ETag": "2021-01-21T14:49:31.159Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:32.900" starttime="20210121 14:49:32.376"></status>
</kw>
<msg timestamp="20210121 14:49:32.901" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:31.159Z", 
            "ETag": "2021-01-21T14:49:31.159Z", 
            "StorageClass": "STANDARD", 
            "Key": "920...</msg>
<status status="PASS" endtime="20210121 14:49:32.901" starttime="20210121 14:49:32.375"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.902" starttime="20210121 14:49:32.901"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.903" starttime="20210121 14:49:32.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.903" starttime="20210121 14:49:32.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>STANDARD</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.904" starttime="20210121 14:49:32.904"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.910" starttime="20210121 14:49:32.909"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:32.910" critical="yes" starttime="20210121 14:49:29.155"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:49:32.912" starttime="20210121 14:49:23.733"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/objectputget.robot" id="s1-s12-s10" name="Objectputget">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:49:32.929" level="INFO">${random} = 31027</msg>
<status status="PASS" endtime="20210121 14:49:32.930" starttime="20210121 14:49:32.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:49:32.931" level="INFO">${PREFIX} = 31027</msg>
<status status="PASS" endtime="20210121 14:49:32.931" starttime="20210121 14:49:32.930"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:32.931" starttime="20210121 14:49:32.929"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:32.931" starttime="20210121 14:49:32.928"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:32.934" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:32.936" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:49:32.937" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:49:32.937" starttime="20210121 14:49:32.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:32.938" starttime="20210121 14:49:32.938"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:32.940" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:33.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:33.108" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:49:33.108" starttime="20210121 14:49:32.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:33.115" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:33.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:33.565" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:49:33.565" starttime="20210121 14:49:33.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:33.566" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:49:33.566" starttime="20210121 14:49:33.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:33.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:33.567" starttime="20210121 14:49:33.567"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.567" starttime="20210121 14:49:33.112"></status>
</kw>
<msg timestamp="20210121 14:49:33.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:33.112"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:33.111"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:33.111"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:33.109"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:32.932"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.568" starttime="20210121 14:49:32.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:33.570" starttime="20210121 14:49:33.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:33.571" starttime="20210121 14:49:33.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:33.575" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:33.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:33.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:33.944" starttime="20210121 14:49:33.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:33.946" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:33.946" starttime="20210121 14:49:33.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:33.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:33.947" starttime="20210121 14:49:33.946"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.947" starttime="20210121 14:49:33.573"></status>
</kw>
<msg timestamp="20210121 14:49:33.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:33.947" starttime="20210121 14:49:33.572"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:33.948" starttime="20210121 14:49:33.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:33.952" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:34.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:34.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:34.336" starttime="20210121 14:49:33.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:34.337" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:34.337" starttime="20210121 14:49:34.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:34.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:34.338" starttime="20210121 14:49:34.337"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:34.338" starttime="20210121 14:49:33.949"></status>
</kw>
<msg timestamp="20210121 14:49:34.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:34.339" starttime="20210121 14:49:33.948"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:34.339" starttime="20210121 14:49:33.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:34.343" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:34.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:34.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:34.723" starttime="20210121 14:49:34.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:34.724" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:34.724" starttime="20210121 14:49:34.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:34.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:34.725" starttime="20210121 14:49:34.724"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:34.725" starttime="20210121 14:49:34.340"></status>
</kw>
<msg timestamp="20210121 14:49:34.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:34.726" starttime="20210121 14:49:34.340"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:34.726" starttime="20210121 14:49:34.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:34.731" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:35.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:35.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:35.114" starttime="20210121 14:49:34.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:35.115" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:35.115" starttime="20210121 14:49:35.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:35.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:35.115" starttime="20210121 14:49:35.115"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.116" starttime="20210121 14:49:34.727"></status>
</kw>
<msg timestamp="20210121 14:49:35.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:35.116" starttime="20210121 14:49:34.727"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.116" starttime="20210121 14:49:34.726"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.117" starttime="20210121 14:49:33.571"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.117" starttime="20210121 14:49:33.571"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.117" starttime="20210121 14:49:33.569"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:35.117" starttime="20210121 14:49:33.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:35.118" starttime="20210121 14:49:35.118"></status>
</kw>
<msg timestamp="20210121 14:49:35.118" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:35.118" starttime="20210121 14:49:35.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:49:35.119" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:35.119" starttime="20210121 14:49:35.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:35.122" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:38.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:38.746" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:49:38.746" starttime="20210121 14:49:35.120"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:38.748" starttime="20210121 14:49:38.747"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:38.749" starttime="20210121 14:49:38.748"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:38.750" starttime="20210121 14:49:38.749"></status>
</kw>
<msg timestamp="20210121 14:49:38.750" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:49:38.750" starttime="20210121 14:49:35.120"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:49:38.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:38.751" starttime="20210121 14:49:38.750"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:38.751" starttime="20210121 14:49:35.119"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:38.751" starttime="20210121 14:49:35.119"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:38.751" starttime="20210121 14:49:32.928"></status>
</kw>
<test id="s1-s12-s10-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arguments>
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:38.757" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210121 14:49:38.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:38.759" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:38.759" starttime="20210121 14:49:38.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:38.761" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:38.761" starttime="20210121 14:49:38.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:38.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:38.761" starttime="20210121 14:49:38.761"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:38.762" starttime="20210121 14:49:38.754"></status>
</kw>
<msg timestamp="20210121 14:49:38.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:38.762" starttime="20210121 14:49:38.754"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:38.762" starttime="20210121 14:49:38.753"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:38.768" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 31027/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:39.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:39.529" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:39.529" starttime="20210121 14:49:38.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:39.530" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:39.530" starttime="20210121 14:49:39.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:39.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:39.531" starttime="20210121 14:49:39.530"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:39.532" starttime="20210121 14:49:38.764"></status>
</kw>
<msg timestamp="20210121 14:49:39.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:39.532" starttime="20210121 14:49:38.764"></status>
</kw>
<msg timestamp="20210121 14:49:39.532" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:39.532" starttime="20210121 14:49:38.763"></status>
</kw>
<msg timestamp="20210121 14:49:39.533" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:39.533" starttime="20210121 14:49:38.762"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:39.538" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 31027/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:40.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:40.039" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:40.040" starttime="20210121 14:49:39.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.041" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "31027/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:40.041" starttime="20210121 14:49:40.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:40.042" starttime="20210121 14:49:40.041"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:40.042" starttime="20210121 14:49:39.534"></status>
</kw>
<msg timestamp="20210121 14:49:40.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:40.042" starttime="20210121 14:49:39.534"></status>
</kw>
<msg timestamp="20210121 14:49:40.045" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:40.045" starttime="20210121 14:49:39.533"></status>
</kw>
<msg timestamp="20210121 14:49:40.045" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:40.045" starttime="20210121 14:49:39.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>f1</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:40.046" starttime="20210121 14:49:40.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>touch -f /tmp/zerobyte</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:40.050" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:40.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:40.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:40.053" starttime="20210121 14:49:40.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.054" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:40.054" starttime="20210121 14:49:40.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:40.055" starttime="20210121 14:49:40.055"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:40.055" starttime="20210121 14:49:40.047"></status>
</kw>
<msg timestamp="20210121 14:49:40.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:40.056" starttime="20210121 14:49:40.047"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:40.056" starttime="20210121 14:49:40.046"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:40.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 31027/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:40.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:40.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:40.556" starttime="20210121 14:49:40.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.557" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:40.557" starttime="20210121 14:49:40.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:40.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:40.558" starttime="20210121 14:49:40.557"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:40.558" starttime="20210121 14:49:40.058"></status>
</kw>
<msg timestamp="20210121 14:49:40.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:40.558" starttime="20210121 14:49:40.058"></status>
</kw>
<msg timestamp="20210121 14:49:40.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:40.559" starttime="20210121 14:49:40.057"></status>
</kw>
<msg timestamp="20210121 14:49:40.559" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210121 14:49:40.559" starttime="20210121 14:49:40.056"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:40.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix 31027/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:41.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:41.044" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:41.044" starttime="20210121 14:49:40.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.046" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "31027/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-01-21T14:49:40.516Z", 
            "ETag": "2021-01-21T14:49:40.516Z", 
            "StorageClass": "STANDARD", 
            "Key": "31027/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" endtime="20210121 14:49:41.046" starttime="20210121 14:49:41.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:41.046" starttime="20210121 14:49:41.046"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:41.047" starttime="20210121 14:49:40.562"></status>
</kw>
<msg timestamp="20210121 14:49:41.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:41.047" starttime="20210121 14:49:40.561"></status>
</kw>
<msg timestamp="20210121 14:49:41.047" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:41.047" starttime="20210121 14:49:40.560"></status>
</kw>
<msg timestamp="20210121 14:49:41.048" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-01-21T14:49:39.372Z", 
            "ETag": "2021-01-21T14:49:39.372Z", 
            "StorageClass": "STANDARD", 
            "Key": "310...</msg>
<status status="PASS" endtime="20210121 14:49:41.048" starttime="20210121 14:49:40.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>zerobyte</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:41.048" starttime="20210121 14:49:41.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:41.049" critical="yes" starttime="20210121 14:49:38.752"></status>
</test>
<test id="s1-s12-s10-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:41.055" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:41.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:41.582" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:41.582" starttime="20210121 14:49:41.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.584" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:41 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:41.584" starttime="20210121 14:49:41.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:41.584" starttime="20210121 14:49:41.584"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:41.585" starttime="20210121 14:49:41.052"></status>
</kw>
<msg timestamp="20210121 14:49:41.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:41.585" starttime="20210121 14:49:41.051"></status>
</kw>
<msg timestamp="20210121 14:49:41.585" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:41.585" starttime="20210121 14:49:41.051"></status>
</kw>
<msg timestamp="20210121 14:49:41.586" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:41.586" starttime="20210121 14:49:41.050"></status>
</kw>
<kw name="Compare files" library="os">
<arguments>
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumbefore}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:41.590" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:41.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:41.594" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.594" starttime="20210121 14:49:41.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.595" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.596" starttime="20210121 14:49:41.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:41.596" starttime="20210121 14:49:41.596"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:41.597" starttime="20210121 14:49:41.587"></status>
</kw>
<msg timestamp="20210121 14:49:41.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:41.597" starttime="20210121 14:49:41.587"></status>
</kw>
<msg timestamp="20210121 14:49:41.597" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.597" starttime="20210121 14:49:41.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
</arguments>
<assign>
<var>${checksumafter}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:41.603" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:41.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:41.606" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.606" starttime="20210121 14:49:41.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.607" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.608" starttime="20210121 14:49:41.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:41.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:41.608" starttime="20210121 14:49:41.608"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:41.609" starttime="20210121 14:49:41.599"></status>
</kw>
<msg timestamp="20210121 14:49:41.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:41.609" starttime="20210121 14:49:41.598"></status>
</kw>
<msg timestamp="20210121 14:49:41.619" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" endtime="20210121 14:49:41.619" starttime="20210121 14:49:41.597"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:41.620" starttime="20210121 14:49:41.620"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:41.620" starttime="20210121 14:49:41.586"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:41.621" critical="yes" starttime="20210121 14:49:41.049"></status>
</test>
<test id="s1-s12-s10-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:41.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:42.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.146" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.146" starttime="20210121 14:49:41.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.148" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:42 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:42.148" starttime="20210121 14:49:42.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.148" starttime="20210121 14:49:42.148"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.149" starttime="20210121 14:49:41.625"></status>
</kw>
<msg timestamp="20210121 14:49:42.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.149" starttime="20210121 14:49:41.625"></status>
</kw>
<msg timestamp="20210121 14:49:42.149" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.149" starttime="20210121 14:49:41.623"></status>
</kw>
<msg timestamp="20210121 14:49:42.150" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.150" starttime="20210121 14:49:41.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.150" starttime="20210121 14:49:42.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.151" starttime="20210121 14:49:42.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.151" starttime="20210121 14:49:42.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.155" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:42.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.158" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.158" starttime="20210121 14:49:42.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.159" level="INFO">Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.159" starttime="20210121 14:49:42.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.160" starttime="20210121 14:49:42.159"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.160" starttime="20210121 14:49:42.153"></status>
</kw>
<msg timestamp="20210121 14:49:42.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.160" starttime="20210121 14:49:42.152"></status>
</kw>
<msg timestamp="20210121 14:49:42.161" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.161" starttime="20210121 14:49:42.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.165" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:42.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.167" level="INFO">${output} = Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.167" starttime="20210121 14:49:42.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.168" level="INFO">Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.168" starttime="20210121 14:49:42.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.169" starttime="20210121 14:49:42.168"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.169" starttime="20210121 14:49:42.162"></status>
</kw>
<msg timestamp="20210121 14:49:42.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.169" starttime="20210121 14:49:42.162"></status>
</kw>
<msg timestamp="20210121 14:49:42.170" level="INFO">${actualData} = Rando</msg>
<status status="PASS" endtime="20210121 14:49:42.170" starttime="20210121 14:49:42.161"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.170" starttime="20210121 14:49:42.170"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.177" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:42.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.664" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.664" starttime="20210121 14:49:42.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.665" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:42 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:42.665" starttime="20210121 14:49:42.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.666" starttime="20210121 14:49:42.666"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.667" starttime="20210121 14:49:42.174"></status>
</kw>
<msg timestamp="20210121 14:49:42.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.667" starttime="20210121 14:49:42.174"></status>
</kw>
<msg timestamp="20210121 14:49:42.667" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.667" starttime="20210121 14:49:42.173"></status>
</kw>
<msg timestamp="20210121 14:49:42.667" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:42.667" starttime="20210121 14:49:42.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.668" starttime="20210121 14:49:42.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.669" starttime="20210121 14:49:42.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.669" starttime="20210121 14:49:42.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.674" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:42.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.676" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.676" starttime="20210121 14:49:42.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.677" level="INFO">ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.677" starttime="20210121 14:49:42.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.678" starttime="20210121 14:49:42.678"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.678" starttime="20210121 14:49:42.670"></status>
</kw>
<msg timestamp="20210121 14:49:42.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.679" starttime="20210121 14:49:42.670"></status>
</kw>
<msg timestamp="20210121 14:49:42.679" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.679" starttime="20210121 14:49:42.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result1</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.682" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:42.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:42.685" level="INFO">${output} = ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.685" starttime="20210121 14:49:42.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.686" level="INFO">ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.686" starttime="20210121 14:49:42.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:42.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:42.687" starttime="20210121 14:49:42.686"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:42.687" starttime="20210121 14:49:42.680"></status>
</kw>
<msg timestamp="20210121 14:49:42.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:42.688" starttime="20210121 14:49:42.680"></status>
</kw>
<msg timestamp="20210121 14:49:42.688" level="INFO">${actualData} = ndo</msg>
<status status="PASS" endtime="20210121 14:49:42.688" starttime="20210121 14:49:42.679"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:42.689" starttime="20210121 14:49:42.688"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:42.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:43.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:43.184" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:43.184" starttime="20210121 14:49:42.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.185" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:43 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:43.185" starttime="20210121 14:49:43.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:43.187" starttime="20210121 14:49:43.186"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:43.187" starttime="20210121 14:49:42.691"></status>
</kw>
<msg timestamp="20210121 14:49:43.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:43.187" starttime="20210121 14:49:42.690"></status>
</kw>
<msg timestamp="20210121 14:49:43.187" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:43.188" starttime="20210121 14:49:42.690"></status>
</kw>
<msg timestamp="20210121 14:49:43.188" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:43.188" starttime="20210121 14:49:42.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:43.188" starttime="20210121 14:49:43.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:43.189" starttime="20210121 14:49:43.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:43.190" starttime="20210121 14:49:43.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:43.193" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:43.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:43.197" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.197" starttime="20210121 14:49:43.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.198" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.199" starttime="20210121 14:49:43.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:43.199" starttime="20210121 14:49:43.199"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:43.200" starttime="20210121 14:49:43.191"></status>
</kw>
<msg timestamp="20210121 14:49:43.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:43.200" starttime="20210121 14:49:43.190"></status>
</kw>
<msg timestamp="20210121 14:49:43.200" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.200" starttime="20210121 14:49:43.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile1.result2</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:43.204" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:43.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:43.207" level="INFO">${output} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.207" starttime="20210121 14:49:43.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.208" level="INFO">ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.208" starttime="20210121 14:49:43.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:43.208" starttime="20210121 14:49:43.208"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:43.209" starttime="20210121 14:49:43.201"></status>
</kw>
<msg timestamp="20210121 14:49:43.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:43.209" starttime="20210121 14:49:43.201"></status>
</kw>
<msg timestamp="20210121 14:49:43.209" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" endtime="20210121 14:49:43.209" starttime="20210121 14:49:43.200"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:43.210" starttime="20210121 14:49:43.209"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:43.210" critical="yes" starttime="20210121 14:49:41.622"></status>
</test>
<test id="s1-s12-s10-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:43.216" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:43.694" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:43.694" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:43.694" starttime="20210121 14:49:43.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.695" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:43.695" starttime="20210121 14:49:43.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:43.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:43.696" starttime="20210121 14:49:43.696"></status>
</kw>
<msg timestamp="20210121 14:49:43.696" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:43.697" starttime="20210121 14:49:43.213"></status>
</kw>
<msg timestamp="20210121 14:49:43.697" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:43.697" starttime="20210121 14:49:43.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:43.698" starttime="20210121 14:49:43.697"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:43.698" critical="yes" starttime="20210121 14:49:43.211"></status>
</test>
<test id="s1-s12-s10-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:43.705" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.217" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.217" starttime="20210121 14:49:43.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.219" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:44 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:44.219" starttime="20210121 14:49:44.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.220" starttime="20210121 14:49:44.219"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.220" starttime="20210121 14:49:43.701"></status>
</kw>
<msg timestamp="20210121 14:49:44.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.221" starttime="20210121 14:49:43.701"></status>
</kw>
<msg timestamp="20210121 14:49:44.221" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.221" starttime="20210121 14:49:43.700"></status>
</kw>
<msg timestamp="20210121 14:49:44.221" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.221" starttime="20210121 14:49:43.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.222" starttime="20210121 14:49:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.222" starttime="20210121 14:49:44.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.223" starttime="20210121 14:49:44.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.227" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.229" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.229" starttime="20210121 14:49:44.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.230" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.230" starttime="20210121 14:49:44.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.231" starttime="20210121 14:49:44.230"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.231" starttime="20210121 14:49:44.224"></status>
</kw>
<msg timestamp="20210121 14:49:44.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.231" starttime="20210121 14:49:44.224"></status>
</kw>
<msg timestamp="20210121 14:49:44.232" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.232" starttime="20210121 14:49:44.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile2.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.236" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.238" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.239" starttime="20210121 14:49:44.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.239" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.240" starttime="20210121 14:49:44.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.240" starttime="20210121 14:49:44.240"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.241" starttime="20210121 14:49:44.233"></status>
</kw>
<msg timestamp="20210121 14:49:44.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.241" starttime="20210121 14:49:44.232"></status>
</kw>
<msg timestamp="20210121 14:49:44.241" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.241" starttime="20210121 14:49:44.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.242" starttime="20210121 14:49:44.241"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:44.243" critical="yes" starttime="20210121 14:49:43.699"></status>
</test>
<test id="s1-s12-s10-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.248" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.769" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.769" starttime="20210121 14:49:44.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.770" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:44 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:44.770" starttime="20210121 14:49:44.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.771" starttime="20210121 14:49:44.770"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.771" starttime="20210121 14:49:44.246"></status>
</kw>
<msg timestamp="20210121 14:49:44.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.772" starttime="20210121 14:49:44.246"></status>
</kw>
<msg timestamp="20210121 14:49:44.772" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.772" starttime="20210121 14:49:44.245"></status>
</kw>
<msg timestamp="20210121 14:49:44.772" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:44.772" starttime="20210121 14:49:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.773" starttime="20210121 14:49:44.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.773" starttime="20210121 14:49:44.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.774" starttime="20210121 14:49:44.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.778" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.780" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.780" starttime="20210121 14:49:44.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.781" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.781" starttime="20210121 14:49:44.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.782" starttime="20210121 14:49:44.782"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.782" starttime="20210121 14:49:44.775"></status>
</kw>
<msg timestamp="20210121 14:49:44.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.783" starttime="20210121 14:49:44.775"></status>
</kw>
<msg timestamp="20210121 14:49:44.783" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.783" starttime="20210121 14:49:44.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile3.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.787" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:44.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:44.789" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.789" starttime="20210121 14:49:44.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.790" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.790" starttime="20210121 14:49:44.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:44.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:44.791" starttime="20210121 14:49:44.790"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:44.791" starttime="20210121 14:49:44.784"></status>
</kw>
<msg timestamp="20210121 14:49:44.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:44.791" starttime="20210121 14:49:44.784"></status>
</kw>
<msg timestamp="20210121 14:49:44.792" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:44.792" starttime="20210121 14:49:44.783"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:44.792" starttime="20210121 14:49:44.792"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:44.792" critical="yes" starttime="20210121 14:49:44.243"></status>
</test>
<test id="s1-s12-s10-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:44.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:45.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.288" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.288" starttime="20210121 14:49:44.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.289" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:45 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:45.289" starttime="20210121 14:49:45.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.290" starttime="20210121 14:49:45.290"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.290" starttime="20210121 14:49:44.797"></status>
</kw>
<msg timestamp="20210121 14:49:45.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.291" starttime="20210121 14:49:44.797"></status>
</kw>
<msg timestamp="20210121 14:49:45.291" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.291" starttime="20210121 14:49:44.795"></status>
</kw>
<msg timestamp="20210121 14:49:45.291" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.291" starttime="20210121 14:49:44.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.292" starttime="20210121 14:49:45.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.293" starttime="20210121 14:49:45.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.293" starttime="20210121 14:49:45.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.297" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:45.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.301" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20210121 14:49:45.301" starttime="20210121 14:49:45.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.302" level="INFO">R</msg>
<status status="PASS" endtime="20210121 14:49:45.302" starttime="20210121 14:49:45.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.303" starttime="20210121 14:49:45.302"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.304" starttime="20210121 14:49:45.294"></status>
</kw>
<msg timestamp="20210121 14:49:45.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.304" starttime="20210121 14:49:45.294"></status>
</kw>
<msg timestamp="20210121 14:49:45.304" level="INFO">${expectedData} = R</msg>
<status status="PASS" endtime="20210121 14:49:45.304" starttime="20210121 14:49:45.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile4.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.308" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:45.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.310" level="INFO">${output} = R</msg>
<status status="PASS" endtime="20210121 14:49:45.310" starttime="20210121 14:49:45.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.311" level="INFO">R</msg>
<status status="PASS" endtime="20210121 14:49:45.312" starttime="20210121 14:49:45.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.313" starttime="20210121 14:49:45.312"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.313" starttime="20210121 14:49:45.305"></status>
</kw>
<msg timestamp="20210121 14:49:45.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.314" starttime="20210121 14:49:45.305"></status>
</kw>
<msg timestamp="20210121 14:49:45.314" level="INFO">${actualData} = R</msg>
<status status="PASS" endtime="20210121 14:49:45.314" starttime="20210121 14:49:45.304"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.315" starttime="20210121 14:49:45.314"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.320" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:45.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.821" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.822" starttime="20210121 14:49:45.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.823" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:45 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:45.823" starttime="20210121 14:49:45.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.824" starttime="20210121 14:49:45.823"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.825" starttime="20210121 14:49:45.317"></status>
</kw>
<msg timestamp="20210121 14:49:45.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.825" starttime="20210121 14:49:45.317"></status>
</kw>
<msg timestamp="20210121 14:49:45.825" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.825" starttime="20210121 14:49:45.316"></status>
</kw>
<msg timestamp="20210121 14:49:45.826" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Thu, 21 Jan 2...</msg>
<status status="PASS" endtime="20210121 14:49:45.826" starttime="20210121 14:49:45.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.826" starttime="20210121 14:49:45.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.827" starttime="20210121 14:49:45.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.828" starttime="20210121 14:49:45.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.833" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:45.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.835" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20210121 14:49:45.835" starttime="20210121 14:49:45.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.836" level="INFO">o</msg>
<status status="PASS" endtime="20210121 14:49:45.837" starttime="20210121 14:49:45.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.837" starttime="20210121 14:49:45.837"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.838" starttime="20210121 14:49:45.830"></status>
</kw>
<msg timestamp="20210121 14:49:45.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.838" starttime="20210121 14:49:45.830"></status>
</kw>
<msg timestamp="20210121 14:49:45.838" level="INFO">${expectedData} = o</msg>
<status status="PASS" endtime="20210121 14:49:45.838" starttime="20210121 14:49:45.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile5.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.842" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:45.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:45.844" level="INFO">${output} = o</msg>
<status status="PASS" endtime="20210121 14:49:45.844" starttime="20210121 14:49:45.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.845" level="INFO">o</msg>
<status status="PASS" endtime="20210121 14:49:45.845" starttime="20210121 14:49:45.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:45.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:45.846" starttime="20210121 14:49:45.845"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:45.846" starttime="20210121 14:49:45.839"></status>
</kw>
<msg timestamp="20210121 14:49:45.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:45.846" starttime="20210121 14:49:45.839"></status>
</kw>
<msg timestamp="20210121 14:49:45.847" level="INFO">${actualData} = o</msg>
<status status="PASS" endtime="20210121 14:49:45.847" starttime="20210121 14:49:45.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:45.847" starttime="20210121 14:49:45.847"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:45.848" critical="yes" starttime="20210121 14:49:44.793"></status>
</test>
<test id="s1-s12-s10-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:45.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:46.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.342" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.342" starttime="20210121 14:49:45.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.343" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:46 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:46.343" starttime="20210121 14:49:46.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.344" starttime="20210121 14:49:46.344"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.344" starttime="20210121 14:49:45.851"></status>
</kw>
<msg timestamp="20210121 14:49:46.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.345" starttime="20210121 14:49:45.851"></status>
</kw>
<msg timestamp="20210121 14:49:46.345" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.345" starttime="20210121 14:49:45.850"></status>
</kw>
<msg timestamp="20210121 14:49:46.346" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.346" starttime="20210121 14:49:45.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.346" starttime="20210121 14:49:46.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.347" starttime="20210121 14:49:46.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.347" starttime="20210121 14:49:46.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.351" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210121 14:49:46.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.354" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20210121 14:49:46.354" starttime="20210121 14:49:46.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.355" level="INFO">ext</msg>
<status status="PASS" endtime="20210121 14:49:46.355" starttime="20210121 14:49:46.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.355" starttime="20210121 14:49:46.355"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.356" starttime="20210121 14:49:46.348"></status>
</kw>
<msg timestamp="20210121 14:49:46.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.356" starttime="20210121 14:49:46.348"></status>
</kw>
<msg timestamp="20210121 14:49:46.356" level="INFO">${expectedData} = ext</msg>
<status status="PASS" endtime="20210121 14:49:46.356" starttime="20210121 14:49:46.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile6.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.360" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:46.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.362" level="INFO">${output} = ext</msg>
<status status="PASS" endtime="20210121 14:49:46.362" starttime="20210121 14:49:46.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.363" level="INFO">ext</msg>
<status status="PASS" endtime="20210121 14:49:46.363" starttime="20210121 14:49:46.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.364" starttime="20210121 14:49:46.363"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.364" starttime="20210121 14:49:46.357"></status>
</kw>
<msg timestamp="20210121 14:49:46.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.364" starttime="20210121 14:49:46.357"></status>
</kw>
<msg timestamp="20210121 14:49:46.365" level="INFO">${actualData} = ext</msg>
<status status="PASS" endtime="20210121 14:49:46.365" starttime="20210121 14:49:46.356"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.365" starttime="20210121 14:49:46.365"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.370" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:46.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.929" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.929" starttime="20210121 14:49:46.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.931" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan 2021 14:49:46 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:46.931" starttime="20210121 14:49:46.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.932" starttime="20210121 14:49:46.931"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.932" starttime="20210121 14:49:46.367"></status>
</kw>
<msg timestamp="20210121 14:49:46.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.932" starttime="20210121 14:49:46.367"></status>
</kw>
<msg timestamp="20210121 14:49:46.933" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.933" starttime="20210121 14:49:46.366"></status>
</kw>
<msg timestamp="20210121 14:49:46.933" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Thu, 21 Jan ...</msg>
<status status="PASS" endtime="20210121 14:49:46.933" starttime="20210121 14:49:46.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.934" starttime="20210121 14:49:46.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.934" starttime="20210121 14:49:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.935" starttime="20210121 14:49:46.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.939" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:46.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.942" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.942" starttime="20210121 14:49:46.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.943" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.943" starttime="20210121 14:49:46.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.944" starttime="20210121 14:49:46.944"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.945" starttime="20210121 14:49:46.936"></status>
</kw>
<msg timestamp="20210121 14:49:46.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.945" starttime="20210121 14:49:46.936"></status>
</kw>
<msg timestamp="20210121 14:49:46.945" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.945" starttime="20210121 14:49:46.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile7.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.949" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:46.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:46.951" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.951" starttime="20210121 14:49:46.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.952" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.953" starttime="20210121 14:49:46.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:46.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:46.953" starttime="20210121 14:49:46.953"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:46.954" starttime="20210121 14:49:46.946"></status>
</kw>
<msg timestamp="20210121 14:49:46.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:46.954" starttime="20210121 14:49:46.946"></status>
</kw>
<msg timestamp="20210121 14:49:46.954" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:46.954" starttime="20210121 14:49:46.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:46.955" starttime="20210121 14:49:46.954"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:46.955" critical="yes" starttime="20210121 14:49:45.848"></status>
</test>
<test id="s1-s12-s10-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:46.961" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:47.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:47.484" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:47.484" starttime="20210121 14:49:46.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.485" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:47 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:47.485" starttime="20210121 14:49:47.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:47.487" starttime="20210121 14:49:47.486"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:47.487" starttime="20210121 14:49:46.959"></status>
</kw>
<msg timestamp="20210121 14:49:47.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:47.487" starttime="20210121 14:49:46.959"></status>
</kw>
<msg timestamp="20210121 14:49:47.488" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:47.488" starttime="20210121 14:49:46.958"></status>
</kw>
<msg timestamp="20210121 14:49:47.488" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:47.488" starttime="20210121 14:49:46.957"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:47.489" starttime="20210121 14:49:47.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:47.489" starttime="20210121 14:49:47.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:47.493" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:47.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:47.496" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.496" starttime="20210121 14:49:47.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.497" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.497" starttime="20210121 14:49:47.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:47.504" starttime="20210121 14:49:47.497"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:47.504" starttime="20210121 14:49:47.490"></status>
</kw>
<msg timestamp="20210121 14:49:47.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:47.505" starttime="20210121 14:49:47.490"></status>
</kw>
<msg timestamp="20210121 14:49:47.505" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.505" starttime="20210121 14:49:47.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:47.509" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:47.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:47.511" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.511" starttime="20210121 14:49:47.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.512" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.512" starttime="20210121 14:49:47.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:47.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:47.513" starttime="20210121 14:49:47.512"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:47.513" starttime="20210121 14:49:47.506"></status>
</kw>
<msg timestamp="20210121 14:49:47.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:47.513" starttime="20210121 14:49:47.506"></status>
</kw>
<msg timestamp="20210121 14:49:47.514" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:47.514" starttime="20210121 14:49:47.505"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:47.514" starttime="20210121 14:49:47.514"></status>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:47.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:48.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:48.020" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:48.020" starttime="20210121 14:49:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.022" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:47 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" endtime="20210121 14:49:48.022" starttime="20210121 14:49:48.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:48.022" starttime="20210121 14:49:48.022"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:48.023" starttime="20210121 14:49:47.517"></status>
</kw>
<msg timestamp="20210121 14:49:48.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:48.023" starttime="20210121 14:49:47.517"></status>
</kw>
<msg timestamp="20210121 14:49:48.023" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:48.023" starttime="20210121 14:49:47.516"></status>
</kw>
<msg timestamp="20210121 14:49:48.024" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Thu, 21 Jan 2021 14:49:39 GMT", 
    "ContentLength": 11, 
    "Expires": "Thu, 21 Jan 2021 14:49:4...</msg>
<status status="PASS" endtime="20210121 14:49:48.024" starttime="20210121 14:49:47.515"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ContentRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:48.024" starttime="20210121 14:49:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>AcceptRanges</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:48.025" starttime="20210121 14:49:48.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile</arg>
</arguments>
<assign>
<var>${expectedData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:48.029" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:48.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:48.032" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.032" starttime="20210121 14:49:48.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.034" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.034" starttime="20210121 14:49:48.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:48.034" starttime="20210121 14:49:48.034"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:48.035" starttime="20210121 14:49:48.026"></status>
</kw>
<msg timestamp="20210121 14:49:48.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:48.035" starttime="20210121 14:49:48.026"></status>
</kw>
<msg timestamp="20210121 14:49:48.035" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.035" starttime="20210121 14:49:48.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cat /tmp/testfile8.result</arg>
</arguments>
<assign>
<var>${actualData}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:48.039" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:48.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:48.041" level="INFO">${output} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.041" starttime="20210121 14:49:48.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.042" level="INFO">Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.042" starttime="20210121 14:49:48.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:48.043" starttime="20210121 14:49:48.043"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:48.043" starttime="20210121 14:49:48.036"></status>
</kw>
<msg timestamp="20210121 14:49:48.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:48.044" starttime="20210121 14:49:48.036"></status>
</kw>
<msg timestamp="20210121 14:49:48.044" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" endtime="20210121 14:49:48.044" starttime="20210121 14:49:48.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:48.045" starttime="20210121 14:49:48.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:48.045" critical="yes" starttime="20210121 14:49:46.956"></status>
</test>
<test id="s1-s12-s10-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:48.050" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:48.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:48.524" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:48.524" starttime="20210121 14:49:48.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.525" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:48.525" starttime="20210121 14:49:48.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:48.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:48.526" starttime="20210121 14:49:48.526"></status>
</kw>
<msg timestamp="20210121 14:49:48.526" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:48.527" starttime="20210121 14:49:48.048"></status>
</kw>
<msg timestamp="20210121 14:49:48.527" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:48.527" starttime="20210121 14:49:48.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:48.527" starttime="20210121 14:49:48.527"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:48.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:49.007" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:49.007" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.007" starttime="20210121 14:49:48.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:49.008" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.009" starttime="20210121 14:49:49.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:49.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:49.009" starttime="20210121 14:49:49.009"></status>
</kw>
<msg timestamp="20210121 14:49:49.010" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.010" starttime="20210121 14:49:48.528"></status>
</kw>
<msg timestamp="20210121 14:49:49.010" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.010" starttime="20210121 14:49:48.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:49.011" starttime="20210121 14:49:49.010"></status>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arguments>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:49.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 31027/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:49.531" level="INFO">${rc} = 255</msg>
<msg timestamp="20210121 14:49:49.531" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.531" starttime="20210121 14:49:49.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:49.532" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.532" starttime="20210121 14:49:49.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:49.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:49.533" starttime="20210121 14:49:49.533"></status>
</kw>
<msg timestamp="20210121 14:49:49.534" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.534" starttime="20210121 14:49:49.012"></status>
</kw>
<msg timestamp="20210121 14:49:49.534" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" endtime="20210121 14:49:49.534" starttime="20210121 14:49:49.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>InvalidRange</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:49.535" starttime="20210121 14:49:49.534"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:49.535" critical="yes" starttime="20210121 14:49:48.046"></status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" endtime="20210121 14:49:49.537" starttime="20210121 14:49:32.915"></status>
</suite>
<suite source="/opt/hadoop/smoketest/s3/webui.robot" id="s1-s12-s11" name="Webui">
<kw type="setup" name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Generate random prefix</arg>
</arguments>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210121 14:49:49.553" level="INFO">${random} = 25396</msg>
<status status="PASS" endtime="20210121 14:49:49.553" starttime="20210121 14:49:49.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREFIX}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210121 14:49:49.554" level="INFO">${PREFIX} = 25396</msg>
<status status="PASS" endtime="20210121 14:49:49.554" starttime="20210121 14:49:49.553"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:49.555" starttime="20210121 14:49:49.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:49.555" starttime="20210121 14:49:49.552"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:49.557" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:49.560" level="INFO">${rc} = 1</msg>
<msg timestamp="20210121 14:49:49.560" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" endtime="20210121 14:49:49.560" starttime="20210121 14:49:49.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:49.561" starttime="20210121 14:49:49.560"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:49.564" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:49.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:49.705" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Requirename'
Usage: yum [options] COMMAND

List of Commands:

check          Check ...</msg>
<status status="PASS" endtime="20210121 14:49:49.705" starttime="20210121 14:49:49.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:49.710" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:50.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:50.107" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.racks...</msg>
<status status="PASS" endtime="20210121 14:49:50.107" starttime="20210121 14:49:49.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.108" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.vcu.edu
 * epel: d2lzkl7pfhq30w.cloudfront.net
 * extras: mirror.trouble-free.net
 * updates: mirror.rackspace.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" endtime="20210121 14:49:50.109" starttime="20210121 14:49:50.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:50.109" starttime="20210121 14:49:50.109"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.110" starttime="20210121 14:49:49.707"></status>
</kw>
<msg timestamp="20210121 14:49:50.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:50.110" starttime="20210121 14:49:49.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.110" starttime="20210121 14:49:49.707"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.110" starttime="20210121 14:49:49.706"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.110" starttime="20210121 14:49:49.705"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.111" starttime="20210121 14:49:49.555"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.111" starttime="20210121 14:49:49.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:50.112" starttime="20210121 14:49:50.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:50.113" starttime="20210121 14:49:50.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:50.117" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:50.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:50.493" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:50.493" starttime="20210121 14:49:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.494" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:50.495" starttime="20210121 14:49:50.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:50.495" starttime="20210121 14:49:50.495"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.495" starttime="20210121 14:49:50.115"></status>
</kw>
<msg timestamp="20210121 14:49:50.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:50.496" starttime="20210121 14:49:50.114"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.496" starttime="20210121 14:49:50.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:50.500" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:50.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:50.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:50.836" starttime="20210121 14:49:50.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.837" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:50.837" starttime="20210121 14:49:50.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:50.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:50.838" starttime="20210121 14:49:50.837"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.838" starttime="20210121 14:49:50.497"></status>
</kw>
<msg timestamp="20210121 14:49:50.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:50.838" starttime="20210121 14:49:50.497"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:50.839" starttime="20210121 14:49:50.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:50.843" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:51.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:51.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:51.205" starttime="20210121 14:49:50.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:51.206" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:51.206" starttime="20210121 14:49:51.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:51.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:51.207" starttime="20210121 14:49:51.206"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.207" starttime="20210121 14:49:50.840"></status>
</kw>
<msg timestamp="20210121 14:49:51.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:51.207" starttime="20210121 14:49:50.839"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.207" starttime="20210121 14:49:50.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:51.211" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:51.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:51.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210121 14:49:51.547" starttime="20210121 14:49:51.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:51.548" level="INFO"></msg>
<status status="PASS" endtime="20210121 14:49:51.548" starttime="20210121 14:49:51.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:51.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:51.549" starttime="20210121 14:49:51.548"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.549" starttime="20210121 14:49:51.208"></status>
</kw>
<msg timestamp="20210121 14:49:51.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:51.549" starttime="20210121 14:49:51.208"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.549" starttime="20210121 14:49:51.208"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.550" starttime="20210121 14:49:50.113"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.550" starttime="20210121 14:49:50.113"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.550" starttime="20210121 14:49:50.111"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:51.550" starttime="20210121 14:49:50.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${BUCKET}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:51.551" starttime="20210121 14:49:51.551"></status>
</kw>
<msg timestamp="20210121 14:49:51.551" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:51.551" starttime="20210121 14:49:51.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BUCKET}</arg>
</arguments>
<msg timestamp="20210121 14:49:51.552" level="INFO">${BUCKET} = link</msg>
<status status="PASS" endtime="20210121 14:49:51.552" starttime="20210121 14:49:51.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
</arguments>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:51.556" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:55.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:55.005" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-21T14:47:30.076...</msg>
<status status="PASS" endtime="20210121 14:49:55.005" starttime="20210121 14:49:51.554"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.007" starttime="20210121 14:49:55.006"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.007" starttime="20210121 14:49:55.007"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.008" starttime="20210121 14:49:55.007"></status>
</kw>
<msg timestamp="20210121 14:49:55.008" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210121 14:49:55.008" starttime="20210121 14:49:51.553"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${exists}</arg>
</arguments>
<msg timestamp="20210121 14:49:55.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:55.009" starttime="20210121 14:49:55.008"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:55.009" starttime="20210121 14:49:51.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:55.009" starttime="20210121 14:49:51.552"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:55.009" starttime="20210121 14:49:49.552"></status>
</kw>
<test id="s1-s12-s11-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.011" starttime="20210121 14:49:55.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:55.015" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:55.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:55.027" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:49:55.027" starttime="20210121 14:49:55.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:55.028" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Thu, 21 Jan 2021 14:49:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 21 Jan 2021 14:49:55 GMT
&lt; Date: Thu, 21 Jan 2021 14:49:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" endtime="20210121 14:49:55.029" starttime="20210121 14:49:55.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:55.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:55.029" starttime="20210121 14:49:55.029"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:55.030" starttime="20210121 14:49:55.012"></status>
</kw>
<msg timestamp="20210121 14:49:55.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:55.030" starttime="20210121 14:49:55.012"></status>
</kw>
<msg timestamp="20210121 14:49:55.030" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:49:55.030" starttime="20210121 14:49:55.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Location</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.031" starttime="20210121 14:49:55.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>/static/</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.032" starttime="20210121 14:49:55.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210121 14:49:55.036" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210121 14:49:55.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210121 14:49:55.049" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:49:55.049" starttime="20210121 14:49:55.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210121 14:49:55.050" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.7...
* Connected to s3g (172.18.0.7) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 21 Jan 2021 14:49:55 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Thu, 21 Jan 2021 13:47:54 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3127
&lt; 
{ [data not shown]

100  3127  100  3127    0     0   428k      0 --:--:-- --:--:-- --:--:--  436k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Hadoop Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Hadoop Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Hadoop Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" endtime="20210121 14:49:55.050" starttime="20210121 14:49:55.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210121 14:49:55.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210121 14:49:55.051" starttime="20210121 14:49:55.050"></status>
</kw>
<status status="PASS" endtime="20210121 14:49:55.051" starttime="20210121 14:49:55.033"></status>
</kw>
<msg timestamp="20210121 14:49:55.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210121 14:49:55.052" starttime="20210121 14:49:55.032"></status>
</kw>
<msg timestamp="20210121 14:49:55.052" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" endtime="20210121 14:49:55.052" starttime="20210121 14:49:55.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Apache Hadoop Ozone S3</arg>
</arguments>
<status status="PASS" endtime="20210121 14:49:55.053" starttime="20210121 14:49:55.052"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210121 14:49:55.053" critical="yes" starttime="20210121 14:49:55.010"></status>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" endtime="20210121 14:49:55.054" starttime="20210121 14:49:49.541"></status>
</suite>
<status status="PASS" endtime="20210121 14:49:55.060" starttime="20210121 14:46:29.867"></status>
</suite>
<status status="FAIL" elapsedtime="2283249" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="227">Critical Tests</stat>
<stat fail="3" pass="227">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="3" id="s1" name="ozone" pass="227">ozone</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="28">ozone.Basic</stat>
<stat fail="0" id="s1-s1-s1" name="Basic" pass="2">ozone.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="4">ozone.Basic.Getconf</stat>
<stat fail="0" id="s1-s1-s3" name="Links" pass="15">ozone.Basic.Links</stat>
<stat fail="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="1">ozone.Basic.Ozone-Shell-Single</stat>
<stat fail="0" id="s1-s1-s5" name="Ozone-Shell" pass="6">ozone.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Gdpr" pass="4">ozone.Gdpr</stat>
<stat fail="0" id="s1-s2-s1" name="Gdpr" pass="4">ozone.Gdpr.Gdpr</stat>
<stat fail="0" id="s1-s3" name="Lib" pass="20">ozone.Lib</stat>
<stat fail="0" id="s1-s3-s1" name="Fs Tests" pass="9">ozone.Lib.Fs Tests</stat>
<stat fail="0" id="s1-s3-s2" name="Os Tests" pass="5">ozone.Lib.Os Tests</stat>
<stat fail="0" id="s1-s3-s3" name="String Tests" pass="6">ozone.Lib.String Tests</stat>
<stat fail="0" id="s1-s4" name="Ozone-Lib" pass="7">ozone.Ozone-Lib</stat>
<stat fail="0" id="s1-s4-s1" name="Shell Tests" pass="7">ozone.Ozone-Lib.Shell Tests</stat>
<stat fail="0" id="s1-s5" name="Ozone-Secure-Token" pass="1">ozone.Ozone-Secure-Token</stat>
<stat fail="0" id="s1-s6" name="ozonefs-ofs-bucket" pass="21">ozone.ozonefs-ofs-bucket</stat>
<stat fail="0" id="s1-s7" name="ozonefs-o3fs-link" pass="21">ozone.ozonefs-o3fs-link</stat>
<stat fail="0" id="s1-s8" name="ozonefs-o3fs-bucket" pass="21">ozone.ozonefs-o3fs-bucket</stat>
<stat fail="0" id="s1-s9" name="ozonefs-ofs-link" pass="21">ozone.ozonefs-ofs-link</stat>
<stat fail="3" id="s1-s10" name="Recon" pass="1">ozone.Recon</stat>
<stat fail="3" id="s1-s10-s1" name="Recon-Api" pass="1">ozone.Recon.Recon-Api</stat>
<stat fail="0" id="s1-s11" name="s3-generated" pass="41">ozone.s3-generated</stat>
<stat fail="0" id="s1-s11-s1" name="Awss3" pass="1">ozone.s3-generated.Awss3</stat>
<stat fail="0" id="s1-s11-s2" name="Bucketcreate" pass="3">ozone.s3-generated.Bucketcreate</stat>
<stat fail="0" id="s1-s11-s3" name="Bucketdelete" pass="2">ozone.s3-generated.Bucketdelete</stat>
<stat fail="0" id="s1-s11-s4" name="Buckethead" pass="1">ozone.s3-generated.Buckethead</stat>
<stat fail="0" id="s1-s11-s5" name="Bucketlist" pass="1">ozone.s3-generated.Bucketlist</stat>
<stat fail="0" id="s1-s11-s6" name="MultipartUpload" pass="12">ozone.s3-generated.MultipartUpload</stat>
<stat fail="0" id="s1-s11-s7" name="Objectcopy" pass="4">ozone.s3-generated.Objectcopy</stat>
<stat fail="0" id="s1-s11-s8" name="Objectdelete" pass="5">ozone.s3-generated.Objectdelete</stat>
<stat fail="0" id="s1-s11-s9" name="Objectmultidelete" pass="1">ozone.s3-generated.Objectmultidelete</stat>
<stat fail="0" id="s1-s11-s10" name="Objectputget" pass="10">ozone.s3-generated.Objectputget</stat>
<stat fail="0" id="s1-s11-s11" name="Webui" pass="1">ozone.s3-generated.Webui</stat>
<stat fail="0" id="s1-s12" name="s3-link" pass="41">ozone.s3-link</stat>
<stat fail="0" id="s1-s12-s1" name="Awss3" pass="1">ozone.s3-link.Awss3</stat>
<stat fail="0" id="s1-s12-s2" name="Bucketcreate" pass="3">ozone.s3-link.Bucketcreate</stat>
<stat fail="0" id="s1-s12-s3" name="Bucketdelete" pass="2">ozone.s3-link.Bucketdelete</stat>
<stat fail="0" id="s1-s12-s4" name="Buckethead" pass="1">ozone.s3-link.Buckethead</stat>
<stat fail="0" id="s1-s12-s5" name="Bucketlist" pass="1">ozone.s3-link.Bucketlist</stat>
<stat fail="0" id="s1-s12-s6" name="MultipartUpload" pass="12">ozone.s3-link.MultipartUpload</stat>
<stat fail="0" id="s1-s12-s7" name="Objectcopy" pass="4">ozone.s3-link.Objectcopy</stat>
<stat fail="0" id="s1-s12-s8" name="Objectdelete" pass="5">ozone.s3-link.Objectdelete</stat>
<stat fail="0" id="s1-s12-s9" name="Objectmultidelete" pass="1">ozone.s3-link.Objectmultidelete</stat>
<stat fail="0" id="s1-s12-s10" name="Objectputget" pass="10">ozone.s3-link.Objectputget</stat>
<stat fail="0" id="s1-s12-s11" name="Webui" pass="1">ozone.s3-link.Webui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
