<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210126 13:40:04.394" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:22.051" starttime="20210126 13:20:22.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:22.056" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:22.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:22.135" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 26 Jan 2021 13:20:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 26 Jan 2021 13:06:00 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210126 13:20:22.135" starttime="20210126 13:20:22.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:22.136" level="INFO">HTTP/1.1 200 OK
Date: Tue, 26 Jan 2021 13:20:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 26 Jan 2021 13:06:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210126 13:20:22.136" starttime="20210126 13:20:22.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:22.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:22.137" starttime="20210126 13:20:22.136"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:22.137" starttime="20210126 13:20:22.052"></status>
</kw>
<msg timestamp="20210126 13:20:22.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:22.138" starttime="20210126 13:20:22.052"></status>
</kw>
<msg timestamp="20210126 13:20:22.138" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 26 Jan 2021 13:20:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 26 Jan 2021 13:06:00 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210126 13:20:22.138" starttime="20210126 13:20:22.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:22.139" starttime="20210126 13:20:22.138"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:20:22.139" critical="yes" starttime="20210126 13:20:22.050"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:22.142" starttime="20210126 13:20:22.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:22.150" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:36.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:36.031" level="INFO">${output} = 2021-01-26 13:20:23,528 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:20:23,625 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:21:36.031" starttime="20210126 13:20:22.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:36.032" level="INFO">2021-01-26 13:20:23,528 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:20:23,625 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:20:23,625 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-26 13:20:24,684 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-26 13:20:24,685 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-01-26 13:20:24,692 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-01-26 13:20:24,698 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-26 13:20:24,707 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-26 13:20:24,747 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-89255, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 13:20:24,772 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-60980, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 13:20:24,781 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-73381, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 13:20:24,791 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-23314, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 13:20:24,800 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-60623, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 13:20:24,817 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89255/bucket-0-04519, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,847 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-60980/bucket-0-13569, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,857 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73381/bucket-0-89777, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,868 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-23314/bucket-0-26384, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,886 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60623/bucket-0-59609, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,893 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89255/bucket-1-23290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,901 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-60980/bucket-1-10292, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,913 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73381/bucket-1-72231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,922 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-23314/bucket-1-83957, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,931 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60623/bucket-1-84313, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,942 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89255/bucket-2-09882, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,950 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-60980/bucket-2-74893, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,961 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73381/bucket-2-50731, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,980 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-23314/bucket-2-34116, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:24,993 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60623/bucket-2-00753, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,003 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89255/bucket-3-72901, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,012 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-60980/bucket-3-40771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,023 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73381/bucket-3-93254, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,031 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-23314/bucket-3-55765, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,037 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60623/bucket-3-30246, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,044 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-89255/bucket-4-00151, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,049 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-60980/bucket-4-94092, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,054 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-73381/bucket-4-91666, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,059 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-23314/bucket-4-10254, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,071 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60623/bucket-4-33903, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 13:20:25,679 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-26 13:20:25,716 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-26 13:20:25,929 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:20:25,930 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-04DBD13CD9A5-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:20:25,930 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 13:20:26,716 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2021-01-26 13:20:27,716 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2021-01-26 13:20:28,717 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-26 13:20:29,717 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-26 13:20:30,718 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-26 13:20:31,718 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-26 13:20:32,719 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-01-26 13:20:33,720 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-01-26 13:20:34,720 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-26 13:20:35,720 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-26 13:20:36,721 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-26 13:20:37,721 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2021-01-26 13:20:38,722 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2021-01-26 13:20:39,722 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2021-01-26 13:20:40,723 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-26 13:20:41,723 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-26 13:20:42,724 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-26 13:20:43,724 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2021-01-26 13:20:44,725 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2021-01-26 13:20:45,735 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2021-01-26 13:20:46,736 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2021-01-26 13:20:47,736 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2021-01-26 13:20:48,737 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2021-01-26 13:20:49,737 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2021-01-26 13:20:50,738 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2021-01-26 13:20:51,738 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2021-01-26 13:20:52,739 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2021-01-26 13:20:53,739 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2021-01-26 13:20:54,739 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2021-01-26 13:20:55,740 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-01-26 13:20:56,740 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-01-26 13:20:57,741 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2021-01-26 13:20:58,741 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2021-01-26 13:20:59,742 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2021-01-26 13:21:00,742 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2021-01-26 13:21:01,743 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2021-01-26 13:21:02,743 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2021-01-26 13:21:03,743 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2021-01-26 13:21:04,744 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2021-01-26 13:21:05,744 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2021-01-26 13:21:06,745 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2021-01-26 13:21:07,745 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2021-01-26 13:21:08,745 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2021-01-26 13:21:09,746 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2021-01-26 13:21:10,746 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2021-01-26 13:21:11,747 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-26 13:21:12,747 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-26 13:21:13,748 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-26 13:21:14,748 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2021-01-26 13:21:15,749 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2021-01-26 13:21:16,749 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2021-01-26 13:21:17,749 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-01-26 13:21:18,750 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-01-26 13:21:19,750 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-26 13:21:20,751 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-26 13:21:21,751 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-26 13:21:22,751 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-26 13:21:23,752 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-26 13:21:24,752 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-26 13:21:25,756 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2021-01-26 13:21:26,756 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2021-01-26 13:21:27,756 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-01-26 13:21:28,757 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-01-26 13:21:29,757 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-01-26 13:21:30,758 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: 7a3bc90b05f257c8ace2f76d74264906f0f7a932
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,085
Average Time spent in bucket creation: 00:00:00,190
Average Time spent in key creation: 00:00:02,027
Average Time spent in key write: 00:00:00,882
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:11,785
***************************************************</msg>
<status status="PASS" endtime="20210126 13:21:36.032" starttime="20210126 13:21:36.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:36.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:36.033" starttime="20210126 13:21:36.032"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:36.033" starttime="20210126 13:20:22.144"></status>
</kw>
<msg timestamp="20210126 13:21:36.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:36.033" starttime="20210126 13:20:22.143"></status>
</kw>
<msg timestamp="20210126 13:21:36.034" level="INFO">${result} = 2021-01-26 13:20:23,528 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:20:23,625 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:21:36.034" starttime="20210126 13:20:22.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:36.035" starttime="20210126 13:21:36.034"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:36.035" starttime="20210126 13:21:36.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:36.035" starttime="20210126 13:21:36.035"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:36.035" critical="yes" starttime="20210126 13:20:22.140"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210126 13:21:36.036" starttime="20210126 13:20:22.028"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:36.045" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:37.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:37.169" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210126 13:21:37.169" starttime="20210126 13:21:36.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:37.170" level="INFO">om</msg>
<status status="PASS" endtime="20210126 13:21:37.170" starttime="20210126 13:21:37.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:37.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:37.171" starttime="20210126 13:21:37.170"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:37.171" starttime="20210126 13:21:36.043"></status>
</kw>
<msg timestamp="20210126 13:21:37.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:37.171" starttime="20210126 13:21:36.042"></status>
</kw>
<msg timestamp="20210126 13:21:37.172" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210126 13:21:37.172" starttime="20210126 13:21:36.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:37.172" starttime="20210126 13:21:37.172"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:37.175" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:38.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:38.373" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210126 13:21:38.373" starttime="20210126 13:21:37.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:38.374" level="INFO">om</msg>
<status status="PASS" endtime="20210126 13:21:38.374" starttime="20210126 13:21:38.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:38.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:38.375" starttime="20210126 13:21:38.374"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:38.375" starttime="20210126 13:21:37.173"></status>
</kw>
<msg timestamp="20210126 13:21:38.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:38.375" starttime="20210126 13:21:37.173"></status>
</kw>
<msg timestamp="20210126 13:21:38.375" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210126 13:21:38.375" starttime="20210126 13:21:37.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:38.376" starttime="20210126 13:21:38.376"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:38.376" critical="yes" starttime="20210126 13:21:36.041"></status>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:38.381" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:39.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:39.587" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 13:21:39.587" starttime="20210126 13:21:38.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:39.588" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 13:21:39.588" starttime="20210126 13:21:39.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:39.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:39.589" starttime="20210126 13:21:39.588"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:39.589" starttime="20210126 13:21:38.379"></status>
</kw>
<msg timestamp="20210126 13:21:39.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:39.589" starttime="20210126 13:21:38.378"></status>
</kw>
<msg timestamp="20210126 13:21:39.589" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210126 13:21:39.590" starttime="20210126 13:21:38.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:39.590" starttime="20210126 13:21:39.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:39.593" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:40.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:40.656" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 13:21:40.656" starttime="20210126 13:21:39.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:40.657" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 13:21:40.657" starttime="20210126 13:21:40.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:40.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:40.658" starttime="20210126 13:21:40.657"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:40.658" starttime="20210126 13:21:39.591"></status>
</kw>
<msg timestamp="20210126 13:21:40.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:40.658" starttime="20210126 13:21:39.591"></status>
</kw>
<msg timestamp="20210126 13:21:40.658" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210126 13:21:40.658" starttime="20210126 13:21:39.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:40.659" starttime="20210126 13:21:40.658"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:40.659" critical="yes" starttime="20210126 13:21:38.377"></status>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:40.663" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:41.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:41.703" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210126 13:21:41.703" starttime="20210126 13:21:40.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:41.704" level="INFO">om</msg>
<status status="PASS" endtime="20210126 13:21:41.704" starttime="20210126 13:21:41.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:41.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:41.704" starttime="20210126 13:21:41.704"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:41.705" starttime="20210126 13:21:40.661"></status>
</kw>
<msg timestamp="20210126 13:21:41.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:41.705" starttime="20210126 13:21:40.661"></status>
</kw>
<msg timestamp="20210126 13:21:41.705" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210126 13:21:41.705" starttime="20210126 13:21:40.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:41.705" starttime="20210126 13:21:41.705"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:41.706" starttime="20210126 13:21:41.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:41.709" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:42.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:42.771" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210126 13:21:42.771" starttime="20210126 13:21:41.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:42.772" level="INFO">om</msg>
<status status="PASS" endtime="20210126 13:21:42.772" starttime="20210126 13:21:42.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:42.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:42.773" starttime="20210126 13:21:42.773"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:42.773" starttime="20210126 13:21:41.707"></status>
</kw>
<msg timestamp="20210126 13:21:42.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:42.773" starttime="20210126 13:21:41.707"></status>
</kw>
<msg timestamp="20210126 13:21:42.774" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210126 13:21:42.774" starttime="20210126 13:21:41.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:42.774" starttime="20210126 13:21:42.774"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:42.775" starttime="20210126 13:21:42.774"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:42.775" critical="yes" starttime="20210126 13:21:40.660"></status>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:42.778" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:43.859" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:21:43.860" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:43.860" starttime="20210126 13:21:42.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:43.861" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:43.861" starttime="20210126 13:21:43.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:43.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:43.862" starttime="20210126 13:21:43.861"></status>
</kw>
<msg timestamp="20210126 13:21:43.862" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:43.862" starttime="20210126 13:21:42.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:43.862" starttime="20210126 13:21:43.862"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:43.865" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:44.802" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:21:44.802" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:44.802" starttime="20210126 13:21:43.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:44.803" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:44.803" starttime="20210126 13:21:44.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:44.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:44.804" starttime="20210126 13:21:44.803"></status>
</kw>
<msg timestamp="20210126 13:21:44.804" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210126 13:21:44.804" starttime="20210126 13:21:43.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:44.805" starttime="20210126 13:21:44.804"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:44.805" critical="yes" starttime="20210126 13:21:42.775"></status>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210126 13:21:44.806" starttime="20210126 13:21:36.038"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 13:21:44.819" level="INFO">${random} = 42170</msg>
<status status="PASS" endtime="20210126 13:21:44.819" starttime="20210126 13:21:44.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210126 13:21:44.820" level="INFO">${source} = 42170-source</msg>
<status status="PASS" endtime="20210126 13:21:44.820" starttime="20210126 13:21:44.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210126 13:21:44.821" level="INFO">${target} = 42170-target</msg>
<status status="PASS" endtime="20210126 13:21:44.821" starttime="20210126 13:21:44.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:44.824" level="INFO">Running command 'ozone sh volume create 42170-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:47.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:47.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:21:47.272" starttime="20210126 13:21:44.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:47.273" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:21:47.273" starttime="20210126 13:21:47.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:47.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:47.274" starttime="20210126 13:21:47.273"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:47.274" starttime="20210126 13:21:44.822"></status>
</kw>
<msg timestamp="20210126 13:21:47.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:47.274" starttime="20210126 13:21:44.821"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:47.274" starttime="20210126 13:21:44.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:47.277" level="INFO">Running command 'ozone sh volume create 42170-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:49.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:49.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:21:49.815" starttime="20210126 13:21:47.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:49.816" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:21:49.816" starttime="20210126 13:21:49.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:49.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:49.817" starttime="20210126 13:21:49.817"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:49.817" starttime="20210126 13:21:47.275"></status>
</kw>
<msg timestamp="20210126 13:21:49.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:49.817" starttime="20210126 13:21:47.275"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:49.818" starttime="20210126 13:21:47.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:49.818" starttime="20210126 13:21:49.818"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:49.818" starttime="20210126 13:21:44.818"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:49.819" starttime="20210126 13:21:49.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:49.822" level="INFO">Running command 'ozone sh bucket link 42170-source/no-such-bucket 42170-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:52.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:52.341" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:21:52.341" starttime="20210126 13:21:49.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:52.342" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:21:52.342" starttime="20210126 13:21:52.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:52.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:52.342" starttime="20210126 13:21:52.342"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:52.343" starttime="20210126 13:21:49.820"></status>
</kw>
<msg timestamp="20210126 13:21:52.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:52.343" starttime="20210126 13:21:49.820"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:52.343" starttime="20210126 13:21:49.820"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:52.346" level="INFO">Running command 'ozone sh key list 42170-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:55.017" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:21:55.017" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 13:21:55.017" starttime="20210126 13:21:52.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:55.018" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 13:21:55.018" starttime="20210126 13:21:55.017"></status>
</kw>
<msg timestamp="20210126 13:21:55.018" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 13:21:55.019" starttime="20210126 13:21:52.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:55.019" starttime="20210126 13:21:55.019"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:21:55.019" critical="yes" starttime="20210126 13:21:49.818"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:21:55.021" starttime="20210126 13:21:55.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:55.024" level="INFO">Running command 'ozone sh bucket link 42170-source/bucket1 42170-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:57.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:57.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:21:57.488" starttime="20210126 13:21:55.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:57.489" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:21:57.489" starttime="20210126 13:21:57.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:57.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:57.490" starttime="20210126 13:21:57.489"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:57.490" starttime="20210126 13:21:55.022"></status>
</kw>
<msg timestamp="20210126 13:21:57.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:57.490" starttime="20210126 13:21:55.022"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:57.490" starttime="20210126 13:21:55.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:57.494" level="INFO">Running command 'ozone sh bucket create 42170-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:21:59.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:21:59.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:21:59.861" starttime="20210126 13:21:57.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:21:59.862" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:21:59.862" starttime="20210126 13:21:59.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:21:59.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:21:59.862" starttime="20210126 13:21:59.862"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:59.863" starttime="20210126 13:21:57.491"></status>
</kw>
<msg timestamp="20210126 13:21:59.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:21:59.863" starttime="20210126 13:21:57.491"></status>
</kw>
<status status="PASS" endtime="20210126 13:21:59.863" starttime="20210126 13:21:57.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:21:59.866" level="INFO">Running command 'ozone sh key put 42170-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:04.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:04.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:04.332" starttime="20210126 13:21:59.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:04.333" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:04.333" starttime="20210126 13:22:04.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:04.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:04.334" starttime="20210126 13:22:04.333"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:04.334" starttime="20210126 13:21:59.864"></status>
</kw>
<msg timestamp="20210126 13:22:04.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:04.334" starttime="20210126 13:21:59.864"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:04.335" starttime="20210126 13:21:59.863"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:22:04.336" level="INFO">${postfix} = 48003</msg>
<status status="PASS" endtime="20210126 13:22:04.336" starttime="20210126 13:22:04.336"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:22:04.336" level="INFO">${tmpfile} = /tmp/tempkey-48003</msg>
<status status="PASS" endtime="20210126 13:22:04.337" starttime="20210126 13:22:04.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:04.340" level="INFO">Running command 'ozone sh key get -f 42170-target/link1/key1 /tmp/tempkey-48003 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:08.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:08.371" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:08.371" starttime="20210126 13:22:04.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:08.372" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:08.373" starttime="20210126 13:22:08.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:08.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:08.373" starttime="20210126 13:22:08.373"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:08.374" starttime="20210126 13:22:04.337"></status>
</kw>
<msg timestamp="20210126 13:22:08.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:08.374" starttime="20210126 13:22:04.337"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:08.374" starttime="20210126 13:22:04.337"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:22:08.376" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-48003 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:08.381" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 13:22:08.381" starttime="20210126 13:22:08.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:08.386" level="INFO">Running command 'rm -f /tmp/tempkey-48003 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:08.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:08.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:08.388" starttime="20210126 13:22:08.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:08.389" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:08.389" starttime="20210126 13:22:08.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:08.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:08.390" starttime="20210126 13:22:08.389"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:08.390" starttime="20210126 13:22:08.382"></status>
</kw>
<msg timestamp="20210126 13:22:08.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:08.390" starttime="20210126 13:22:08.382"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:08.390" starttime="20210126 13:22:08.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:22:08.391" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 13:22:08.391" starttime="20210126 13:22:08.391"></status>
</kw>
<msg timestamp="20210126 13:22:08.391" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 13:22:08.391" starttime="20210126 13:22:04.335"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:08.392" starttime="20210126 13:22:08.391"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:08.392" starttime="20210126 13:22:04.335"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:08.392" critical="yes" starttime="20210126 13:21:55.020"></status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:08.395" starttime="20210126 13:22:08.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:08.398" level="INFO">Running command 'ozone sh key put 42170-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:13.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:13.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:13.065" starttime="20210126 13:22:08.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:13.066" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:13.066" starttime="20210126 13:22:13.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:13.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:13.067" starttime="20210126 13:22:13.066"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:13.067" starttime="20210126 13:22:08.396"></status>
</kw>
<msg timestamp="20210126 13:22:13.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:13.067" starttime="20210126 13:22:08.395"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:13.067" starttime="20210126 13:22:08.395"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:22:13.069" level="INFO">${postfix} = 04982</msg>
<status status="PASS" endtime="20210126 13:22:13.069" starttime="20210126 13:22:13.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:22:13.069" level="INFO">${tmpfile} = /tmp/tempkey-04982</msg>
<status status="PASS" endtime="20210126 13:22:13.069" starttime="20210126 13:22:13.069"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:13.072" level="INFO">Running command 'ozone sh key get -f 42170-source/bucket1/key2 /tmp/tempkey-04982 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:17.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:17.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:17.267" starttime="20210126 13:22:13.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:17.268" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:17.268" starttime="20210126 13:22:17.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:17.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:17.269" starttime="20210126 13:22:17.268"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:17.269" starttime="20210126 13:22:13.070"></status>
</kw>
<msg timestamp="20210126 13:22:17.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:17.269" starttime="20210126 13:22:13.070"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:17.269" starttime="20210126 13:22:13.069"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:22:17.272" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-04982 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:17.274" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 13:22:17.274" starttime="20210126 13:22:17.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:17.278" level="INFO">Running command 'rm -f /tmp/tempkey-04982 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:17.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:17.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:17.280" starttime="20210126 13:22:17.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:17.281" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:17.281" starttime="20210126 13:22:17.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:17.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:17.281" starttime="20210126 13:22:17.281"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:17.282" starttime="20210126 13:22:17.275"></status>
</kw>
<msg timestamp="20210126 13:22:17.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:17.282" starttime="20210126 13:22:17.275"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:17.282" starttime="20210126 13:22:17.274"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:22:17.283" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 13:22:17.283" starttime="20210126 13:22:17.282"></status>
</kw>
<msg timestamp="20210126 13:22:17.283" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 13:22:17.283" starttime="20210126 13:22:13.068"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:17.283" starttime="20210126 13:22:17.283"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:17.284" starttime="20210126 13:22:13.067"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:17.284" critical="yes" starttime="20210126 13:22:08.394"></status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:17.286" starttime="20210126 13:22:17.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:17.289" level="INFO">Running command 'ozone sh key list 42170-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:20.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:20.082" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:20.082" starttime="20210126 13:22:17.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:20.083" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:20.083" starttime="20210126 13:22:20.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:20.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:20.084" starttime="20210126 13:22:20.083"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:20.084" starttime="20210126 13:22:17.287"></status>
</kw>
<msg timestamp="20210126 13:22:20.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:20.084" starttime="20210126 13:22:17.286"></status>
</kw>
<msg timestamp="20210126 13:22:20.085" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:20.085" starttime="20210126 13:22:17.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:20.088" level="INFO">Running command 'ozone sh key list 42170-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:22.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:22.800" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:22.800" starttime="20210126 13:22:20.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:22.801" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:22.802" starttime="20210126 13:22:22.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:22.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:22.802" starttime="20210126 13:22:22.802"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:22.802" starttime="20210126 13:22:20.085"></status>
</kw>
<msg timestamp="20210126 13:22:22.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:22.803" starttime="20210126 13:22:20.085"></status>
</kw>
<msg timestamp="20210126 13:22:22.803" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210126 13:22:22.803" starttime="20210126 13:22:20.085"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:22.803" starttime="20210126 13:22:22.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:22.804" starttime="20210126 13:22:22.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:22.804" starttime="20210126 13:22:22.804"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:22.804" critical="yes" starttime="20210126 13:22:17.285"></status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:22.808" starttime="20210126 13:22:22.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:22.811" level="INFO">Running command 'ozone sh key delete 42170-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:25.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:25.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:25.369" starttime="20210126 13:22:22.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:25.370" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:25.370" starttime="20210126 13:22:25.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:25.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:25.371" starttime="20210126 13:22:25.370"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:25.371" starttime="20210126 13:22:22.809"></status>
</kw>
<msg timestamp="20210126 13:22:25.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:25.371" starttime="20210126 13:22:22.809"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:25.371" starttime="20210126 13:22:22.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:25.374" level="INFO">Running command 'ozone sh key list 42170-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:28.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:28.143" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 13:22:28.143" starttime="20210126 13:22:25.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:28.144" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 13:22:28.144" starttime="20210126 13:22:28.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:28.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:28.145" starttime="20210126 13:22:28.144"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:28.145" starttime="20210126 13:22:25.372"></status>
</kw>
<msg timestamp="20210126 13:22:28.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:28.145" starttime="20210126 13:22:25.372"></status>
</kw>
<msg timestamp="20210126 13:22:28.145" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210126 13:22:28.146" starttime="20210126 13:22:25.371"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:28.146" starttime="20210126 13:22:28.146"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:28.146" critical="yes" starttime="20210126 13:22:22.807"></status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:28.148" starttime="20210126 13:22:28.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:28.151" level="INFO">Running command 'ozone sh bucket list 42170-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:30.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:30.927" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210126 13:22:30.927" starttime="20210126 13:22:28.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:30.928" level="INFO">{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:21:52.175Z",
  "modificationTime" : "2021-01-26T13:21:52.175Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:21:57.384Z",
  "modificationTime" : "2021-01-26T13:21:57.384Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 13:22:30.929" starttime="20210126 13:22:30.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:30.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:30.929" starttime="20210126 13:22:30.929"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:30.929" starttime="20210126 13:22:28.149"></status>
</kw>
<msg timestamp="20210126 13:22:30.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:30.930" starttime="20210126 13:22:28.149"></status>
</kw>
<msg timestamp="20210126 13:22:30.930" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210126 13:22:30.930" starttime="20210126 13:22:28.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:30.931" starttime="20210126 13:22:30.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:30.931" starttime="20210126 13:22:30.931"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:30.931" critical="yes" starttime="20210126 13:22:28.147"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:30.933" starttime="20210126 13:22:30.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:30.936" level="INFO">Running command 'ozone sh bucket info 42170-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:33.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:33.788" level="INFO">${output} = 42170-source bucket1</msg>
<status status="PASS" endtime="20210126 13:22:33.788" starttime="20210126 13:22:30.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:33.789" level="INFO">42170-source bucket1</msg>
<status status="PASS" endtime="20210126 13:22:33.790" starttime="20210126 13:22:33.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:33.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:33.790" starttime="20210126 13:22:33.790"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:33.790" starttime="20210126 13:22:30.934"></status>
</kw>
<msg timestamp="20210126 13:22:33.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:33.791" starttime="20210126 13:22:30.934"></status>
</kw>
<msg timestamp="20210126 13:22:33.791" level="INFO">${result} = 42170-source bucket1</msg>
<status status="PASS" endtime="20210126 13:22:33.791" starttime="20210126 13:22:30.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:33.792" starttime="20210126 13:22:33.791"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:33.792" critical="yes" starttime="20210126 13:22:30.932"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:33.793" starttime="20210126 13:22:33.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:33.797" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 42170-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:36.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:36.186" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:22:36.186" starttime="20210126 13:22:33.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:36.187" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:22:36.187" starttime="20210126 13:22:36.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:36.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:36.188" starttime="20210126 13:22:36.187"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:36.188" starttime="20210126 13:22:33.794"></status>
</kw>
<msg timestamp="20210126 13:22:36.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:36.188" starttime="20210126 13:22:33.794"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:36.188" starttime="20210126 13:22:33.794"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:36.192" level="INFO">Running command 'ozone sh bucket getacl 42170-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:38.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:38.906" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 13:22:38.907" starttime="20210126 13:22:36.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:38.908" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 13:22:38.908" starttime="20210126 13:22:38.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:38.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:38.908" starttime="20210126 13:22:38.908"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:38.908" starttime="20210126 13:22:36.190"></status>
</kw>
<msg timestamp="20210126 13:22:38.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:38.909" starttime="20210126 13:22:36.190"></status>
</kw>
<msg timestamp="20210126 13:22:38.909" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 13:22:38.909" starttime="20210126 13:22:36.189"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:38.909" starttime="20210126 13:22:38.909"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:38.910" starttime="20210126 13:22:36.188"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:38.914" level="INFO">Running command 'ozone sh bucket getacl 42170-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:41.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:41.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:41.338" starttime="20210126 13:22:38.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:41.340" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:41.340" starttime="20210126 13:22:41.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:41.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:41.340" starttime="20210126 13:22:41.340"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:41.341" starttime="20210126 13:22:38.911"></status>
</kw>
<msg timestamp="20210126 13:22:41.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:41.341" starttime="20210126 13:22:38.911"></status>
</kw>
<msg timestamp="20210126 13:22:41.341" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210126 13:22:41.341" starttime="20210126 13:22:38.910"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:41.342" starttime="20210126 13:22:41.341"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:41.342" starttime="20210126 13:22:38.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:41.345" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 42170-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:43.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:43.648" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:22:43.648" starttime="20210126 13:22:41.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:43.649" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:22:43.649" starttime="20210126 13:22:43.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:43.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:43.650" starttime="20210126 13:22:43.649"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:43.650" starttime="20210126 13:22:41.342"></status>
</kw>
<msg timestamp="20210126 13:22:43.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:43.650" starttime="20210126 13:22:41.342"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:43.650" starttime="20210126 13:22:41.342"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:43.654" level="INFO">Running command 'ozone sh bucket getacl 42170-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:46.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:46.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:46.359" starttime="20210126 13:22:43.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:46.360" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:46.360" starttime="20210126 13:22:46.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:46.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:46.361" starttime="20210126 13:22:46.361"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:46.361" starttime="20210126 13:22:43.652"></status>
</kw>
<msg timestamp="20210126 13:22:46.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:46.362" starttime="20210126 13:22:43.652"></status>
</kw>
<msg timestamp="20210126 13:22:46.362" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210126 13:22:46.362" starttime="20210126 13:22:43.651"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:46.362" starttime="20210126 13:22:46.362"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:46.362" starttime="20210126 13:22:43.650"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:46.366" level="INFO">Running command 'ozone sh bucket getacl 42170-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:48.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:48.912" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210126 13:22:48.912" starttime="20210126 13:22:46.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:48.913" level="INFO">READ</msg>
<status status="PASS" endtime="20210126 13:22:48.913" starttime="20210126 13:22:48.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:48.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:48.914" starttime="20210126 13:22:48.913"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:48.914" starttime="20210126 13:22:46.364"></status>
</kw>
<msg timestamp="20210126 13:22:48.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:48.914" starttime="20210126 13:22:46.364"></status>
</kw>
<msg timestamp="20210126 13:22:48.914" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210126 13:22:48.915" starttime="20210126 13:22:46.363"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:48.915" starttime="20210126 13:22:48.915"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:48.916" starttime="20210126 13:22:46.363"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:48.916" critical="yes" starttime="20210126 13:22:33.792"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:48.918" starttime="20210126 13:22:48.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:48.921" level="INFO">Running command 'ozone sh bucket link 42170-source/bucket2 42170-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:51.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:51.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:51.270" starttime="20210126 13:22:48.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:51.271" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:51.272" starttime="20210126 13:22:51.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:51.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:51.272" starttime="20210126 13:22:51.272"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:51.273" starttime="20210126 13:22:48.918"></status>
</kw>
<msg timestamp="20210126 13:22:51.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:51.273" starttime="20210126 13:22:48.918"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:51.273" starttime="20210126 13:22:48.918"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:51.275" level="INFO">Running command 'ozone sh bucket create 42170-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:53.842" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:22:53.842" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:53.842" starttime="20210126 13:22:51.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:53.843" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:53.843" starttime="20210126 13:22:53.843"></status>
</kw>
<msg timestamp="20210126 13:22:53.844" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:53.844" starttime="20210126 13:22:51.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:53.844" starttime="20210126 13:22:53.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:53.847" level="INFO">Running command 'ozone sh bucket create 42170-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:56.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:22:56.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:22:56.380" starttime="20210126 13:22:53.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:56.381" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:22:56.381" starttime="20210126 13:22:56.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:22:56.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:22:56.382" starttime="20210126 13:22:56.381"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:56.382" starttime="20210126 13:22:53.845"></status>
</kw>
<msg timestamp="20210126 13:22:56.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:22:56.382" starttime="20210126 13:22:53.845"></status>
</kw>
<status status="PASS" endtime="20210126 13:22:56.382" starttime="20210126 13:22:53.844"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:56.385" level="INFO">Running command 'ozone sh bucket link 42170-source/bucket1 42170-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:22:59.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:22:59.050" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:59.050" starttime="20210126 13:22:56.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:22:59.051" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:59.051" starttime="20210126 13:22:59.051"></status>
</kw>
<msg timestamp="20210126 13:22:59.052" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 13:22:59.052" starttime="20210126 13:22:56.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.052" starttime="20210126 13:22:59.052"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:59.053" critical="yes" starttime="20210126 13:22:48.917"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.054" starttime="20210126 13:22:59.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.055" starttime="20210126 13:22:59.055"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:59.055" critical="yes" starttime="20210126 13:22:59.053"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.056" starttime="20210126 13:22:59.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.057" starttime="20210126 13:22:59.056"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:59.057" critical="yes" starttime="20210126 13:22:59.055"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.058" starttime="20210126 13:22:59.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.059" starttime="20210126 13:22:59.058"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:22:59.059" critical="yes" starttime="20210126 13:22:59.057"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:22:59.060" starttime="20210126 13:22:59.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:22:59.063" level="INFO">Running command 'ozone sh bucket link 42170-target/loop1 42170-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:01.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:01.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:01.677" starttime="20210126 13:22:59.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:01.678" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:01.678" starttime="20210126 13:23:01.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:01.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:01.678" starttime="20210126 13:23:01.678"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:01.679" starttime="20210126 13:22:59.061"></status>
</kw>
<msg timestamp="20210126 13:23:01.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:01.679" starttime="20210126 13:22:59.061"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:01.679" starttime="20210126 13:22:59.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:01.682" level="INFO">Running command 'ozone sh bucket link 42170-target/loop2 42170-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:04.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:04.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:04.262" starttime="20210126 13:23:01.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:04.263" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:04.263" starttime="20210126 13:23:04.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:04.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:04.263" starttime="20210126 13:23:04.263"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:04.264" starttime="20210126 13:23:01.680"></status>
</kw>
<msg timestamp="20210126 13:23:04.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:04.264" starttime="20210126 13:23:01.680"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:04.264" starttime="20210126 13:23:01.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:04.267" level="INFO">Running command 'ozone sh bucket link 42170-target/loop3 42170-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:06.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:06.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:06.863" starttime="20210126 13:23:04.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:06.864" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:06.864" starttime="20210126 13:23:06.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:06.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:06.865" starttime="20210126 13:23:06.864"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:06.865" starttime="20210126 13:23:04.265"></status>
</kw>
<msg timestamp="20210126 13:23:06.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:06.865" starttime="20210126 13:23:04.265"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:06.866" starttime="20210126 13:23:04.264"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:06.869" level="INFO">Running command 'ozone sh key list 42170-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:09.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:23:09.314" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 13:23:09.315" starttime="20210126 13:23:06.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:09.316" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 13:23:09.316" starttime="20210126 13:23:09.315"></status>
</kw>
<msg timestamp="20210126 13:23:09.316" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 13:23:09.316" starttime="20210126 13:23:06.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:09.317" starttime="20210126 13:23:09.316"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:23:09.317" critical="yes" starttime="20210126 13:22:59.059"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:09.319" starttime="20210126 13:23:09.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:09.322" level="INFO">Running command 'ozone sh bucket link 42170-source/bucket1 42170-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:11.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:11.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:11.804" starttime="20210126 13:23:09.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:11.805" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:11.805" starttime="20210126 13:23:11.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:11.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:11.806" starttime="20210126 13:23:11.806"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:11.806" starttime="20210126 13:23:09.320"></status>
</kw>
<msg timestamp="20210126 13:23:11.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:11.806" starttime="20210126 13:23:09.320"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:11.807" starttime="20210126 13:23:09.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:11.810" level="INFO">Running command 'ozone sh key put 42170-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:16.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:16.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:16.618" starttime="20210126 13:23:11.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:16.619" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:16.619" starttime="20210126 13:23:16.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:16.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:16.619" starttime="20210126 13:23:16.619"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:16.620" starttime="20210126 13:23:11.807"></status>
</kw>
<msg timestamp="20210126 13:23:16.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:16.620" starttime="20210126 13:23:11.807"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:16.620" starttime="20210126 13:23:11.807"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:23:16.622" level="INFO">${postfix} = 24909</msg>
<status status="PASS" endtime="20210126 13:23:16.622" starttime="20210126 13:23:16.621"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:23:16.622" level="INFO">${tmpfile} = /tmp/tempkey-24909</msg>
<status status="PASS" endtime="20210126 13:23:16.622" starttime="20210126 13:23:16.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:16.625" level="INFO">Running command 'ozone sh key get -f 42170-target/link1/key3 /tmp/tempkey-24909 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:20.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:20.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:20.916" starttime="20210126 13:23:16.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:20.917" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:20.917" starttime="20210126 13:23:20.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:20.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:20.918" starttime="20210126 13:23:20.917"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:20.918" starttime="20210126 13:23:16.623"></status>
</kw>
<msg timestamp="20210126 13:23:20.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:20.918" starttime="20210126 13:23:16.623"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:20.918" starttime="20210126 13:23:16.622"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:23:20.920" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-24909 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:20.922" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 13:23:20.922" starttime="20210126 13:23:20.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:20.926" level="INFO">Running command 'rm -f /tmp/tempkey-24909 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:20.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:20.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:20.928" starttime="20210126 13:23:20.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:20.929" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:20.929" starttime="20210126 13:23:20.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:20.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:20.930" starttime="20210126 13:23:20.929"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:20.930" starttime="20210126 13:23:20.924"></status>
</kw>
<msg timestamp="20210126 13:23:20.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:20.930" starttime="20210126 13:23:20.923"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:20.930" starttime="20210126 13:23:20.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:23:20.931" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 13:23:20.931" starttime="20210126 13:23:20.930"></status>
</kw>
<msg timestamp="20210126 13:23:20.931" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 13:23:20.931" starttime="20210126 13:23:16.621"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:20.931" starttime="20210126 13:23:20.931"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:20.932" starttime="20210126 13:23:16.620"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:23:20.932" critical="yes" starttime="20210126 13:23:09.318"></status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:20.934" starttime="20210126 13:23:20.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:20.936" level="INFO">Running command 'ozone sh bucket delete 42170-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:23.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:23.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:23.452" starttime="20210126 13:23:20.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:23.453" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:23.453" starttime="20210126 13:23:23.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:23.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:23.453" starttime="20210126 13:23:23.453"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:23.454" starttime="20210126 13:23:20.934"></status>
</kw>
<msg timestamp="20210126 13:23:23.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:23.454" starttime="20210126 13:23:20.934"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:23.454" starttime="20210126 13:23:20.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:23.458" level="INFO">Running command 'ozone sh bucket list 42170-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:26.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:26.212" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T...</msg>
<status status="PASS" endtime="20210126 13:23:26.212" starttime="20210126 13:23:23.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:26.213" level="INFO">{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:22:56.190Z",
  "modificationTime" : "2021-01-26T13:22:56.190Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:21:52.175Z",
  "modificationTime" : "2021-01-26T13:21:52.175Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:22:51.213Z",
  "modificationTime" : "2021-01-26T13:22:51.213Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:23:11.736Z",
  "modificationTime" : "2021-01-26T13:23:11.736Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:23:06.723Z",
  "modificationTime" : "2021-01-26T13:23:06.723Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:23:01.574Z",
  "modificationTime" : "2021-01-26T13:23:01.574Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:23:04.076Z",
  "modificationTime" : "2021-01-26T13:23:04.076Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42170-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 13:23:26.213" starttime="20210126 13:23:26.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:26.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:26.214" starttime="20210126 13:23:26.213"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:26.214" starttime="20210126 13:23:23.455"></status>
</kw>
<msg timestamp="20210126 13:23:26.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:26.214" starttime="20210126 13:23:23.455"></status>
</kw>
<msg timestamp="20210126 13:23:26.215" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "42170-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T...</msg>
<status status="PASS" endtime="20210126 13:23:26.215" starttime="20210126 13:23:23.454"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:26.215" starttime="20210126 13:23:26.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:26.219" level="INFO">Running command 'ozone sh key list 42170-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:28.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:28.807" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210126 13:23:28.807" starttime="20210126 13:23:26.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:28.808" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210126 13:23:28.808" starttime="20210126 13:23:28.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:28.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:28.809" starttime="20210126 13:23:28.808"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:28.809" starttime="20210126 13:23:26.216"></status>
</kw>
<msg timestamp="20210126 13:23:28.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:28.809" starttime="20210126 13:23:26.216"></status>
</kw>
<msg timestamp="20210126 13:23:28.809" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210126 13:23:28.809" starttime="20210126 13:23:26.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:28.810" starttime="20210126 13:23:28.809"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 13:23:28.810" critical="yes" starttime="20210126 13:23:20.932"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210126 13:23:28.812" starttime="20210126 13:21:44.809"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 13:23:28.834" level="INFO">${random} = 00299</msg>
<status status="PASS" endtime="20210126 13:23:28.834" starttime="20210126 13:23:28.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210126 13:23:28.834" level="INFO">${prefix} = 00299</msg>
<status status="PASS" endtime="20210126 13:23:28.834" starttime="20210126 13:23:28.834"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:28.834" starttime="20210126 13:23:28.833"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:28.838" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:31.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:23:31.274" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00299-rpcbasic is not found</msg>
<status status="PASS" endtime="20210126 13:23:31.274" starttime="20210126 13:23:28.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:31.275" level="INFO">VOLUME_NOT_FOUND Volume 00299-rpcbasic is not found</msg>
<status status="PASS" endtime="20210126 13:23:31.275" starttime="20210126 13:23:31.274"></status>
</kw>
<msg timestamp="20210126 13:23:31.275" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00299-rpcbasic is not found</msg>
<status status="PASS" endtime="20210126 13:23:31.275" starttime="20210126 13:23:28.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:31.276" starttime="20210126 13:23:31.275"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:31.279" level="INFO">Running command 'ozone sh volume create /00299-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:33.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:33.652" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:33.653" starttime="20210126 13:23:31.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:33.654" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:33.654" starttime="20210126 13:23:33.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:33.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:33.654" starttime="20210126 13:23:33.654"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:33.654" starttime="20210126 13:23:31.277"></status>
</kw>
<msg timestamp="20210126 13:23:33.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:33.655" starttime="20210126 13:23:31.276"></status>
</kw>
<msg timestamp="20210126 13:23:33.655" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:23:33.655" starttime="20210126 13:23:31.276"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:33.655" starttime="20210126 13:23:33.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:33.659" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="00299-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:36.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:36.223" level="INFO">${output} = {
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:23:36.223" starttime="20210126 13:23:33.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:36.224" level="INFO">{
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:23:33.602Z",
  "modificationTime": "2021-01-26T13:23:33.602Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:23:36.225" starttime="20210126 13:23:36.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:36.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:36.225" starttime="20210126 13:23:36.225"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:36.225" starttime="20210126 13:23:33.656"></status>
</kw>
<msg timestamp="20210126 13:23:36.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:36.226" starttime="20210126 13:23:33.656"></status>
</kw>
<msg timestamp="20210126 13:23:36.226" level="INFO">${result} = {
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:23:36.226" starttime="20210126 13:23:33.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:36.226" starttime="20210126 13:23:36.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:36.229" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="00299-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:39.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:39.050" level="INFO">${output} = {
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:23:39.050" starttime="20210126 13:23:36.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:39.051" level="INFO">{
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:23:33.602Z",
  "modificationTime": "2021-01-26T13:23:33.602Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:23:39.051" starttime="20210126 13:23:39.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:39.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:39.052" starttime="20210126 13:23:39.051"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:39.052" starttime="20210126 13:23:36.227"></status>
</kw>
<msg timestamp="20210126 13:23:39.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:39.052" starttime="20210126 13:23:36.227"></status>
</kw>
<msg timestamp="20210126 13:23:39.053" level="INFO">${result} = {
  "metadata": {},
  "name": "00299-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:23:39.053" starttime="20210126 13:23:36.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:39.053" starttime="20210126 13:23:39.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:39.056" level="INFO">Running command 'ozone sh volume setquota /00299-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:41.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:41.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:41.530" starttime="20210126 13:23:39.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:41.531" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:41.531" starttime="20210126 13:23:41.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:41.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:41.531" starttime="20210126 13:23:41.531"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:41.532" starttime="20210126 13:23:39.054"></status>
</kw>
<msg timestamp="20210126 13:23:41.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:41.532" starttime="20210126 13:23:39.054"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:41.532" starttime="20210126 13:23:39.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:41.536" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic | jq -r '. | select(.name=="00299-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:44.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:44.218" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:44.218" starttime="20210126 13:23:41.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:44.219" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:44.220" starttime="20210126 13:23:44.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:44.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:44.220" starttime="20210126 13:23:44.220"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:44.220" starttime="20210126 13:23:41.533"></status>
</kw>
<msg timestamp="20210126 13:23:44.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:44.221" starttime="20210126 13:23:41.533"></status>
</kw>
<msg timestamp="20210126 13:23:44.221" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:44.221" starttime="20210126 13:23:41.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:44.221" starttime="20210126 13:23:44.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:44.225" level="INFO">Running command 'ozone sh bucket create /00299-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:46.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:46.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:46.771" starttime="20210126 13:23:44.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:46.772" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:46.773" starttime="20210126 13:23:46.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:46.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:46.773" starttime="20210126 13:23:46.773"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:46.773" starttime="20210126 13:23:44.222"></status>
</kw>
<msg timestamp="20210126 13:23:46.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:46.774" starttime="20210126 13:23:44.222"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:46.774" starttime="20210126 13:23:44.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:46.777" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:49.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:49.482" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210126 13:23:49.482" starttime="20210126 13:23:46.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:49.483" level="INFO">DISK</msg>
<status status="PASS" endtime="20210126 13:23:49.483" starttime="20210126 13:23:49.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:49.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:49.483" starttime="20210126 13:23:49.483"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:49.484" starttime="20210126 13:23:46.775"></status>
</kw>
<msg timestamp="20210126 13:23:49.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:49.484" starttime="20210126 13:23:46.775"></status>
</kw>
<msg timestamp="20210126 13:23:49.484" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210126 13:23:49.484" starttime="20210126 13:23:46.774"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:49.485" starttime="20210126 13:23:49.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:49.488" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:52.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:52.316" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:52.316" starttime="20210126 13:23:49.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:52.317" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:52.317" starttime="20210126 13:23:52.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:52.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:52.318" starttime="20210126 13:23:52.318"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:52.318" starttime="20210126 13:23:49.486"></status>
</kw>
<msg timestamp="20210126 13:23:52.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:52.319" starttime="20210126 13:23:49.485"></status>
</kw>
<msg timestamp="20210126 13:23:52.319" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:23:52.319" starttime="20210126 13:23:49.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:52.319" starttime="20210126 13:23:52.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:52.323" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:54.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:54.945" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210126 13:23:54.945" starttime="20210126 13:23:52.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:54.946" level="INFO">100</msg>
<status status="PASS" endtime="20210126 13:23:54.946" starttime="20210126 13:23:54.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:54.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:54.947" starttime="20210126 13:23:54.946"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:54.947" starttime="20210126 13:23:52.320"></status>
</kw>
<msg timestamp="20210126 13:23:54.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:54.947" starttime="20210126 13:23:52.320"></status>
</kw>
<msg timestamp="20210126 13:23:54.947" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210126 13:23:54.947" starttime="20210126 13:23:52.319"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:54.948" starttime="20210126 13:23:54.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:54.951" level="INFO">Running command 'ozone sh bucket setquota /00299-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:57.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:57.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:23:57.359" starttime="20210126 13:23:54.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:57.360" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:23:57.360" starttime="20210126 13:23:57.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:57.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:57.361" starttime="20210126 13:23:57.361"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:57.361" starttime="20210126 13:23:54.949"></status>
</kw>
<msg timestamp="20210126 13:23:57.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:57.362" starttime="20210126 13:23:54.949"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:57.362" starttime="20210126 13:23:54.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:57.365" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:23:59.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:23:59.806" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:23:59.806" starttime="20210126 13:23:57.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:23:59.807" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210126 13:23:59.807" starttime="20210126 13:23:59.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:23:59.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:23:59.808" starttime="20210126 13:23:59.807"></status>
</kw>
<status status="PASS" endtime="20210126 13:23:59.808" starttime="20210126 13:23:57.363"></status>
</kw>
<msg timestamp="20210126 13:23:59.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:23:59.808" starttime="20210126 13:23:57.363"></status>
</kw>
<msg timestamp="20210126 13:23:59.809" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:23:59.809" starttime="20210126 13:23:57.362"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210126 13:23:59.809" starttime="20210126 13:23:59.809"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:23:59.813" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:02.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:02.467" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210126 13:24:02.467" starttime="20210126 13:23:59.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:02.468" level="INFO">1000</msg>
<status status="PASS" endtime="20210126 13:24:02.468" starttime="20210126 13:24:02.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:02.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:02.469" starttime="20210126 13:24:02.468"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:02.469" starttime="20210126 13:23:59.810"></status>
</kw>
<msg timestamp="20210126 13:24:02.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:02.469" starttime="20210126 13:23:59.810"></status>
</kw>
<msg timestamp="20210126 13:24:02.469" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210126 13:24:02.469" starttime="20210126 13:23:59.809"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:02.470" starttime="20210126 13:24:02.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:02.473" level="INFO">Running command 'ozone sh bucket list /00299-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:05.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:05.166" level="INFO">${output} = 00299-rpcbasic</msg>
<status status="PASS" endtime="20210126 13:24:05.166" starttime="20210126 13:24:02.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:05.167" level="INFO">00299-rpcbasic</msg>
<status status="PASS" endtime="20210126 13:24:05.167" starttime="20210126 13:24:05.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:05.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:05.168" starttime="20210126 13:24:05.167"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:05.168" starttime="20210126 13:24:02.471"></status>
</kw>
<msg timestamp="20210126 13:24:05.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:05.168" starttime="20210126 13:24:02.471"></status>
</kw>
<msg timestamp="20210126 13:24:05.168" level="INFO">${result} = 00299-rpcbasic</msg>
<status status="PASS" endtime="20210126 13:24:05.168" starttime="20210126 13:24:02.470"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:05.169" starttime="20210126 13:24:05.168"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:05.173" level="INFO">Running command 'ozone sh key put /00299-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:09.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:09.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:09.565" starttime="20210126 13:24:05.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:09.566" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:09.566" starttime="20210126 13:24:09.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:09.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:09.567" starttime="20210126 13:24:09.566"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:09.567" starttime="20210126 13:24:05.171"></status>
</kw>
<msg timestamp="20210126 13:24:09.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:09.567" starttime="20210126 13:24:05.171"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:09.567" starttime="20210126 13:24:05.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:09.571" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:09.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:09.573" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:09.573" starttime="20210126 13:24:09.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:09.574" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:09.574" starttime="20210126 13:24:09.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:09.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:09.574" starttime="20210126 13:24:09.574"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:09.574" starttime="20210126 13:24:09.568"></status>
</kw>
<msg timestamp="20210126 13:24:09.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:09.575" starttime="20210126 13:24:09.568"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:09.575" starttime="20210126 13:24:09.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:09.578" level="INFO">Running command 'ozone sh key get /00299-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:13.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:13.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:13.821" starttime="20210126 13:24:09.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:13.822" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:13.822" starttime="20210126 13:24:13.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:13.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:13.823" starttime="20210126 13:24:13.822"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:13.823" starttime="20210126 13:24:09.576"></status>
</kw>
<msg timestamp="20210126 13:24:13.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:13.823" starttime="20210126 13:24:09.576"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:13.823" starttime="20210126 13:24:09.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:13.826" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:13.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:13.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:13.829" starttime="20210126 13:24:13.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:13.830" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:13.830" starttime="20210126 13:24:13.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:13.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:13.831" starttime="20210126 13:24:13.830"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:13.831" starttime="20210126 13:24:13.824"></status>
</kw>
<msg timestamp="20210126 13:24:13.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:13.831" starttime="20210126 13:24:13.824"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:13.831" starttime="20210126 13:24:13.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:13.834" level="INFO">Running command 'ozone sh key put -t RATIS /00299-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:18.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:18.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:18.171" starttime="20210126 13:24:13.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:18.172" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:18.172" starttime="20210126 13:24:18.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:18.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:18.173" starttime="20210126 13:24:18.172"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:18.173" starttime="20210126 13:24:13.832"></status>
</kw>
<msg timestamp="20210126 13:24:18.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:18.173" starttime="20210126 13:24:13.832"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:18.173" starttime="20210126 13:24:13.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:18.177" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:18.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:18.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:18.179" starttime="20210126 13:24:18.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:18.180" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:18.180" starttime="20210126 13:24:18.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:18.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:18.180" starttime="20210126 13:24:18.180"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:18.181" starttime="20210126 13:24:18.174"></status>
</kw>
<msg timestamp="20210126 13:24:18.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:18.181" starttime="20210126 13:24:18.174"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:18.181" starttime="20210126 13:24:18.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:18.184" level="INFO">Running command 'ozone sh key get /00299-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:22.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:22.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:22.344" starttime="20210126 13:24:18.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:22.345" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:22.345" starttime="20210126 13:24:22.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:22.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:22.346" starttime="20210126 13:24:22.345"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:22.346" starttime="20210126 13:24:18.182"></status>
</kw>
<msg timestamp="20210126 13:24:22.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:22.346" starttime="20210126 13:24:18.182"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:22.346" starttime="20210126 13:24:18.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:22.350" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:22.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:22.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:22.352" starttime="20210126 13:24:22.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:22.353" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:22.353" starttime="20210126 13:24:22.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:22.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:22.354" starttime="20210126 13:24:22.353"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:22.354" starttime="20210126 13:24:22.347"></status>
</kw>
<msg timestamp="20210126 13:24:22.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:22.354" starttime="20210126 13:24:22.347"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:22.355" starttime="20210126 13:24:22.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:22.358" level="INFO">Running command 'ozone sh key info /00299-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:25.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:25.050" level="INFO">${output} = {
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:16.196Z",
  "modificationTime": "2021-01-26T13:24:17.779Z",
...</msg>
<status status="PASS" endtime="20210126 13:24:25.050" starttime="20210126 13:24:22.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:25.052" level="INFO">{
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:16.196Z",
  "modificationTime": "2021-01-26T13:24:17.779Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622238409195650,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:24:25.052" starttime="20210126 13:24:25.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:25.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:25.052" starttime="20210126 13:24:25.052"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:25.053" starttime="20210126 13:24:22.356"></status>
</kw>
<msg timestamp="20210126 13:24:25.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:25.053" starttime="20210126 13:24:22.355"></status>
</kw>
<msg timestamp="20210126 13:24:25.053" level="INFO">${result} = {
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:16.196Z",
  "modificationTime": "2021-01-26T13:24:17.779Z",
...</msg>
<status status="PASS" endtime="20210126 13:24:25.053" starttime="20210126 13:24:22.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:25.053" starttime="20210126 13:24:25.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:25.057" level="INFO">Running command 'ozone sh key delete /00299-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:27.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:27.580" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:27.580" starttime="20210126 13:24:25.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:27.581" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:27.581" starttime="20210126 13:24:27.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:27.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:27.582" starttime="20210126 13:24:27.581"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:27.582" starttime="20210126 13:24:25.054"></status>
</kw>
<msg timestamp="20210126 13:24:27.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:27.582" starttime="20210126 13:24:25.054"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:27.582" starttime="20210126 13:24:25.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:27.586" level="INFO">Running command 'ozone sh key cp /00299-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:31.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:31.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:31.978" starttime="20210126 13:24:27.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:31.979" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:31.979" starttime="20210126 13:24:31.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:31.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:31.980" starttime="20210126 13:24:31.979"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:31.980" starttime="20210126 13:24:27.583"></status>
</kw>
<msg timestamp="20210126 13:24:31.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:31.980" starttime="20210126 13:24:27.583"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:31.980" starttime="20210126 13:24:27.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:31.984" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:31.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:31.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:31.986" starttime="20210126 13:24:31.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:31.987" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:31.987" starttime="20210126 13:24:31.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:31.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:31.988" starttime="20210126 13:24:31.987"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:31.988" starttime="20210126 13:24:31.981"></status>
</kw>
<msg timestamp="20210126 13:24:31.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:31.988" starttime="20210126 13:24:31.981"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:31.988" starttime="20210126 13:24:31.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:31.991" level="INFO">Running command 'ozone sh key get /00299-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:36.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:36.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:36.069" starttime="20210126 13:24:31.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:36.071" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:36.071" starttime="20210126 13:24:36.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:36.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:36.071" starttime="20210126 13:24:36.071"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:36.071" starttime="20210126 13:24:31.989"></status>
</kw>
<msg timestamp="20210126 13:24:36.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:36.072" starttime="20210126 13:24:31.989"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:36.072" starttime="20210126 13:24:31.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:36.075" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:36.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:36.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:36.078" starttime="20210126 13:24:36.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:36.079" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:36.079" starttime="20210126 13:24:36.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:36.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:36.079" starttime="20210126 13:24:36.079"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:36.080" starttime="20210126 13:24:36.073"></status>
</kw>
<msg timestamp="20210126 13:24:36.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:36.080" starttime="20210126 13:24:36.072"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:36.080" starttime="20210126 13:24:36.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:36.083" level="INFO">Running command 'ozone sh key delete /00299-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:38.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:38.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:38.464" starttime="20210126 13:24:36.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:38.465" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:38.465" starttime="20210126 13:24:38.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:38.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:38.466" starttime="20210126 13:24:38.465"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:38.466" starttime="20210126 13:24:36.081"></status>
</kw>
<msg timestamp="20210126 13:24:38.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:38.466" starttime="20210126 13:24:36.081"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:38.467" starttime="20210126 13:24:36.080"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:38.469" level="INFO">Running command 'ozone sh key get /00299-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:40.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:24:40.918" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:24:40.918" starttime="20210126 13:24:38.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:40.919" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:24:40.919" starttime="20210126 13:24:40.918"></status>
</kw>
<msg timestamp="20210126 13:24:40.920" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:24:40.920" starttime="20210126 13:24:38.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:40.920" starttime="20210126 13:24:40.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:40.924" level="INFO">Running command 'ozone sh key get --force /00299-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:44.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:44.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:44.926" starttime="20210126 13:24:40.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:44.927" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:44.927" starttime="20210126 13:24:44.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:44.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:44.928" starttime="20210126 13:24:44.927"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:44.928" starttime="20210126 13:24:40.921"></status>
</kw>
<msg timestamp="20210126 13:24:44.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:44.928" starttime="20210126 13:24:40.921"></status>
</kw>
<msg timestamp="20210126 13:24:44.928" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:24:44.928" starttime="20210126 13:24:40.920"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:44.929" starttime="20210126 13:24:44.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:44.932" level="INFO">Running command 'ozone sh key info /00299-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:47.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:47.408" level="INFO">${output} = {
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:07.521Z",
  "modificationTime": "2021-01-26T13:24:09.190Z",
  "rep...</msg>
<status status="PASS" endtime="20210126 13:24:47.409" starttime="20210126 13:24:44.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:47.410" level="INFO">{
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:07.521Z",
  "modificationTime": "2021-01-26T13:24:09.190Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622237840670850,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:24:47.410" starttime="20210126 13:24:47.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:47.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:47.410" starttime="20210126 13:24:47.410"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:47.411" starttime="20210126 13:24:44.930"></status>
</kw>
<msg timestamp="20210126 13:24:47.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:47.411" starttime="20210126 13:24:44.930"></status>
</kw>
<msg timestamp="20210126 13:24:47.411" level="INFO">${result} = {
  "volumeName": "00299-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:24:07.521Z",
  "modificationTime": "2021-01-26T13:24:09.190Z",
  "rep...</msg>
<status status="PASS" endtime="20210126 13:24:47.411" starttime="20210126 13:24:44.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:47.412" starttime="20210126 13:24:47.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:47.415" level="INFO">Running command 'ozone sh key list /00299-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:50.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:50.159" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 13:24:50.159" starttime="20210126 13:24:47.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:50.160" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 13:24:50.160" starttime="20210126 13:24:50.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:50.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:50.161" starttime="20210126 13:24:50.160"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:50.161" starttime="20210126 13:24:47.413"></status>
</kw>
<msg timestamp="20210126 13:24:50.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:50.161" starttime="20210126 13:24:47.412"></status>
</kw>
<msg timestamp="20210126 13:24:50.162" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210126 13:24:50.162" starttime="20210126 13:24:47.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:50.162" starttime="20210126 13:24:50.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:50.165" level="INFO">Running command 'ozone sh key rename /00299-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:52.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:52.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:52.578" starttime="20210126 13:24:50.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:52.579" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:52.579" starttime="20210126 13:24:52.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:52.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:52.580" starttime="20210126 13:24:52.579"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:52.580" starttime="20210126 13:24:50.163"></status>
</kw>
<msg timestamp="20210126 13:24:52.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:52.580" starttime="20210126 13:24:50.163"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:52.580" starttime="20210126 13:24:50.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:52.584" level="INFO">Running command 'ozone sh key list /00299-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:55.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:55.151" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210126 13:24:55.151" starttime="20210126 13:24:52.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:55.152" level="INFO">key2</msg>
<status status="PASS" endtime="20210126 13:24:55.152" starttime="20210126 13:24:55.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:55.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:55.153" starttime="20210126 13:24:55.152"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:55.153" starttime="20210126 13:24:52.582"></status>
</kw>
<msg timestamp="20210126 13:24:55.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:55.153" starttime="20210126 13:24:52.581"></status>
</kw>
<msg timestamp="20210126 13:24:55.153" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210126 13:24:55.153" starttime="20210126 13:24:52.580"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:24:55.154" starttime="20210126 13:24:55.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:55.157" level="INFO">Running command 'ozone sh key delete /00299-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:57.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:57.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:57.584" starttime="20210126 13:24:55.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:57.585" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:57.585" starttime="20210126 13:24:57.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:57.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:57.586" starttime="20210126 13:24:57.586"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:57.586" starttime="20210126 13:24:55.155"></status>
</kw>
<msg timestamp="20210126 13:24:57.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:57.586" starttime="20210126 13:24:55.155"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:57.587" starttime="20210126 13:24:55.154"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:57.587" starttime="20210126 13:24:05.169"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:57.587" starttime="20210126 13:24:05.169"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:57.590" level="INFO">Running command 'ozone sh volume clrquota --space-quota /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:24:59.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:24:59.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:24:59.936" starttime="20210126 13:24:57.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:24:59.937" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:24:59.937" starttime="20210126 13:24:59.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:24:59.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:24:59.937" starttime="20210126 13:24:59.937"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:59.938" starttime="20210126 13:24:57.588"></status>
</kw>
<msg timestamp="20210126 13:24:59.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:24:59.938" starttime="20210126 13:24:57.587"></status>
</kw>
<status status="PASS" endtime="20210126 13:24:59.938" starttime="20210126 13:24:57.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:24:59.942" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic | jq -r '. | select(.name=="00299-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:02.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:02.551" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:02.552" starttime="20210126 13:24:59.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:02.553" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:02.553" starttime="20210126 13:25:02.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:02.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:02.553" starttime="20210126 13:25:02.553"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:02.553" starttime="20210126 13:24:59.939"></status>
</kw>
<msg timestamp="20210126 13:25:02.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:02.554" starttime="20210126 13:24:59.939"></status>
</kw>
<msg timestamp="20210126 13:25:02.554" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:02.554" starttime="20210126 13:24:59.938"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:02.554" starttime="20210126 13:25:02.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:02.558" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:04.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:04.953" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:04.953" starttime="20210126 13:25:02.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:04.954" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:04.955" starttime="20210126 13:25:04.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:04.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:04.955" starttime="20210126 13:25:04.955"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:04.955" starttime="20210126 13:25:02.556"></status>
</kw>
<msg timestamp="20210126 13:25:04.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:04.956" starttime="20210126 13:25:02.555"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:04.956" starttime="20210126 13:25:02.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:04.959" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic | jq -r '. | select(.name=="00299-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:07.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:07.918" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:07.918" starttime="20210126 13:25:04.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:07.919" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:07.919" starttime="20210126 13:25:07.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:07.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:07.920" starttime="20210126 13:25:07.919"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:07.920" starttime="20210126 13:25:04.957"></status>
</kw>
<msg timestamp="20210126 13:25:07.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:07.920" starttime="20210126 13:25:04.957"></status>
</kw>
<msg timestamp="20210126 13:25:07.921" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:07.921" starttime="20210126 13:25:04.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:07.921" starttime="20210126 13:25:07.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:07.924" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /00299-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:10.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:10.441" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:10.441" starttime="20210126 13:25:07.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:10.442" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:10.442" starttime="20210126 13:25:10.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:10.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:10.442" starttime="20210126 13:25:10.442"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:10.443" starttime="20210126 13:25:07.922"></status>
</kw>
<msg timestamp="20210126 13:25:10.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:10.443" starttime="20210126 13:25:07.922"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:10.443" starttime="20210126 13:25:07.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:10.446" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:13.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:13.109" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:13.109" starttime="20210126 13:25:10.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:13.110" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:13.110" starttime="20210126 13:25:13.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:13.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:13.111" starttime="20210126 13:25:13.110"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:13.111" starttime="20210126 13:25:10.444"></status>
</kw>
<msg timestamp="20210126 13:25:13.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:13.111" starttime="20210126 13:25:10.444"></status>
</kw>
<msg timestamp="20210126 13:25:13.111" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:13.111" starttime="20210126 13:25:10.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:13.112" starttime="20210126 13:25:13.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:13.115" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /00299-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:15.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:15.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:15.539" starttime="20210126 13:25:13.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:15.540" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:15.540" starttime="20210126 13:25:15.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:15.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:15.541" starttime="20210126 13:25:15.540"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:15.541" starttime="20210126 13:25:13.113"></status>
</kw>
<msg timestamp="20210126 13:25:15.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:15.541" starttime="20210126 13:25:13.113"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:15.542" starttime="20210126 13:25:13.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:15.545" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:18.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:18.174" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:18.174" starttime="20210126 13:25:15.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:18.175" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:18.175" starttime="20210126 13:25:18.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:18.176" starttime="20210126 13:25:18.175"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:18.176" starttime="20210126 13:25:15.543"></status>
</kw>
<msg timestamp="20210126 13:25:18.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:18.176" starttime="20210126 13:25:15.542"></status>
</kw>
<msg timestamp="20210126 13:25:18.176" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:18.176" starttime="20210126 13:25:15.542"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:18.177" starttime="20210126 13:25:18.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:18.180" level="INFO">Running command 'ozone sh bucket delete /00299-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:20.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:20.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:20.484" starttime="20210126 13:25:18.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:20.485" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:20.485" starttime="20210126 13:25:20.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:20.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:20.486" starttime="20210126 13:25:20.485"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:20.486" starttime="20210126 13:25:18.178"></status>
</kw>
<msg timestamp="20210126 13:25:20.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:20.486" starttime="20210126 13:25:18.177"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:20.486" starttime="20210126 13:25:18.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:20.490" level="INFO">Running command 'ozone sh volume delete /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:22.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:22.720" level="INFO">${output} = Volume 00299-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210126 13:25:22.720" starttime="20210126 13:25:20.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:22.721" level="INFO">Volume 00299-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210126 13:25:22.721" starttime="20210126 13:25:22.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:22.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:22.722" starttime="20210126 13:25:22.721"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:22.722" starttime="20210126 13:25:20.487"></status>
</kw>
<msg timestamp="20210126 13:25:22.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:22.722" starttime="20210126 13:25:20.487"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:22.722" starttime="20210126 13:25:20.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:22.727" level="INFO">Running command 'ozone sh volume create /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:25.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:25.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:25.259" starttime="20210126 13:25:22.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:25.260" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:25.260" starttime="20210126 13:25:25.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:25.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:25.261" starttime="20210126 13:25:25.260"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:25.261" starttime="20210126 13:25:22.724"></status>
</kw>
<msg timestamp="20210126 13:25:25.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:25.261" starttime="20210126 13:25:22.724"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:25.261" starttime="20210126 13:25:22.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:25.265" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic | jq -r '. | select(.name=="00299-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:27.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:27.912" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:27.912" starttime="20210126 13:25:25.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:27.913" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:27.913" starttime="20210126 13:25:27.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:27.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:27.914" starttime="20210126 13:25:27.913"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:27.914" starttime="20210126 13:25:25.262"></status>
</kw>
<msg timestamp="20210126 13:25:27.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:27.914" starttime="20210126 13:25:25.262"></status>
</kw>
<msg timestamp="20210126 13:25:27.914" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:27.914" starttime="20210126 13:25:25.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:27.915" starttime="20210126 13:25:27.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:27.918" level="INFO">Running command 'ozone sh volume info /00299-rpcbasic | jq -r '. | select(.name=="00299-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:30.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:30.433" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:30.433" starttime="20210126 13:25:27.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:30.434" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:30.434" starttime="20210126 13:25:30.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:30.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:30.435" starttime="20210126 13:25:30.434"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:30.435" starttime="20210126 13:25:27.916"></status>
</kw>
<msg timestamp="20210126 13:25:30.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:30.435" starttime="20210126 13:25:27.916"></status>
</kw>
<msg timestamp="20210126 13:25:30.435" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:30.435" starttime="20210126 13:25:27.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:30.436" starttime="20210126 13:25:30.436"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:30.439" level="INFO">Running command 'ozone sh bucket create /00299-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:32.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:32.841" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:32.842" starttime="20210126 13:25:30.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:32.843" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:32.843" starttime="20210126 13:25:32.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:32.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:32.844" starttime="20210126 13:25:32.843"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:32.844" starttime="20210126 13:25:30.437"></status>
</kw>
<msg timestamp="20210126 13:25:32.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:32.844" starttime="20210126 13:25:30.437"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:32.844" starttime="20210126 13:25:30.436"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:32.848" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:35.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:35.540" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:35.540" starttime="20210126 13:25:32.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:35.541" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:35.541" starttime="20210126 13:25:35.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:35.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:35.542" starttime="20210126 13:25:35.541"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:35.542" starttime="20210126 13:25:32.845"></status>
</kw>
<msg timestamp="20210126 13:25:35.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:35.542" starttime="20210126 13:25:32.845"></status>
</kw>
<msg timestamp="20210126 13:25:35.542" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:35.542" starttime="20210126 13:25:32.844"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:35.543" starttime="20210126 13:25:35.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:35.547" level="INFO">Running command 'ozone sh bucket info /00299-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:38.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:38.175" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:25:38.175" starttime="20210126 13:25:35.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:38.176" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:25:38.176" starttime="20210126 13:25:38.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:38.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:38.177" starttime="20210126 13:25:38.176"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:38.177" starttime="20210126 13:25:35.544"></status>
</kw>
<msg timestamp="20210126 13:25:38.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:38.177" starttime="20210126 13:25:35.544"></status>
</kw>
<msg timestamp="20210126 13:25:38.177" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:25:38.178" starttime="20210126 13:25:35.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:38.178" starttime="20210126 13:25:38.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:38.181" level="INFO">Running command 'ozone sh bucket delete /00299-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:40.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:40.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:40.426" starttime="20210126 13:25:38.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:40.427" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:40.427" starttime="20210126 13:25:40.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:40.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:40.428" starttime="20210126 13:25:40.427"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:40.428" starttime="20210126 13:25:38.179"></status>
</kw>
<msg timestamp="20210126 13:25:40.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:40.428" starttime="20210126 13:25:38.179"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:40.429" starttime="20210126 13:25:38.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:40.432" level="INFO">Running command 'ozone sh volume delete /00299-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:42.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:42.848" level="INFO">${output} = Volume 00299-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210126 13:25:42.849" starttime="20210126 13:25:40.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:42.850" level="INFO">Volume 00299-rpcbasic is deleted</msg>
<status status="PASS" endtime="20210126 13:25:42.850" starttime="20210126 13:25:42.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:42.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:42.850" starttime="20210126 13:25:42.850"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:42.850" starttime="20210126 13:25:40.429"></status>
</kw>
<msg timestamp="20210126 13:25:42.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:42.851" starttime="20210126 13:25:40.429"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:42.851" starttime="20210126 13:25:40.429"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:42.851" starttime="20210126 13:23:28.835"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:25:42.851" critical="yes" starttime="20210126 13:23:28.835"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20210126 13:25:42.852" starttime="20210126 13:23:28.817"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 13:25:42.861" level="INFO">${random} = 89622</msg>
<status status="PASS" endtime="20210126 13:25:42.861" starttime="20210126 13:25:42.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210126 13:25:42.861" level="INFO">${prefix} = 89622</msg>
<status status="PASS" endtime="20210126 13:25:42.861" starttime="20210126 13:25:42.861"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:42.862" starttime="20210126 13:25:42.860"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:42.863" starttime="20210126 13:25:42.862"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:42.867" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:45.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:25:45.170" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89622-rpcwoport is not found</msg>
<status status="PASS" endtime="20210126 13:25:45.170" starttime="20210126 13:25:42.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:45.171" level="INFO">VOLUME_NOT_FOUND Volume 89622-rpcwoport is not found</msg>
<status status="PASS" endtime="20210126 13:25:45.171" starttime="20210126 13:25:45.170"></status>
</kw>
<msg timestamp="20210126 13:25:45.171" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89622-rpcwoport is not found</msg>
<status status="PASS" endtime="20210126 13:25:45.171" starttime="20210126 13:25:42.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:45.172" starttime="20210126 13:25:45.172"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:45.175" level="INFO">Running command 'ozone sh volume create o3://om:9862/89622-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:47.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:47.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:47.545" starttime="20210126 13:25:45.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:47.546" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:47.546" starttime="20210126 13:25:47.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:47.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:47.547" starttime="20210126 13:25:47.546"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:47.547" starttime="20210126 13:25:45.173"></status>
</kw>
<msg timestamp="20210126 13:25:47.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:47.547" starttime="20210126 13:25:45.173"></status>
</kw>
<msg timestamp="20210126 13:25:47.547" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:25:47.547" starttime="20210126 13:25:45.172"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:47.548" starttime="20210126 13:25:47.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:47.551" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="89622-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:50.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:50.200" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210126 13:25:50.200" starttime="20210126 13:25:47.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:50.201" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:25:47.479Z",
  "modificationTime": "2021-01-26T13:25:47.479Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:25:50.201" starttime="20210126 13:25:50.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:50.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:50.202" starttime="20210126 13:25:50.202"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:50.202" starttime="20210126 13:25:47.549"></status>
</kw>
<msg timestamp="20210126 13:25:50.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:50.202" starttime="20210126 13:25:47.549"></status>
</kw>
<msg timestamp="20210126 13:25:50.203" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210126 13:25:50.203" starttime="20210126 13:25:47.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:50.203" starttime="20210126 13:25:50.203"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:50.206" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89622-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:52.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:52.829" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210126 13:25:52.829" starttime="20210126 13:25:50.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:52.830" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:25:47.479Z",
  "modificationTime": "2021-01-26T13:25:47.479Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:25:52.830" starttime="20210126 13:25:52.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:52.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:52.831" starttime="20210126 13:25:52.830"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:52.831" starttime="20210126 13:25:50.204"></status>
</kw>
<msg timestamp="20210126 13:25:52.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:52.831" starttime="20210126 13:25:50.204"></status>
</kw>
<msg timestamp="20210126 13:25:52.831" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-0...</msg>
<status status="PASS" endtime="20210126 13:25:52.831" starttime="20210126 13:25:50.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:52.832" starttime="20210126 13:25:52.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:52.835" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/89622-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:55.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:55.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:25:55.456" starttime="20210126 13:25:52.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:55.458" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:25:55.458" starttime="20210126 13:25:55.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:55.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:55.458" starttime="20210126 13:25:55.458"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:55.458" starttime="20210126 13:25:52.833"></status>
</kw>
<msg timestamp="20210126 13:25:55.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:55.459" starttime="20210126 13:25:52.833"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:55.459" starttime="20210126 13:25:52.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:55.462" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport | jq -r '. | select(.name=="89622-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:25:58.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:25:58.017" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:25:58.017" starttime="20210126 13:25:55.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:25:58.018" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:25:58.018" starttime="20210126 13:25:58.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:25:58.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:25:58.019" starttime="20210126 13:25:58.019"></status>
</kw>
<status status="PASS" endtime="20210126 13:25:58.019" starttime="20210126 13:25:55.460"></status>
</kw>
<msg timestamp="20210126 13:25:58.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:25:58.020" starttime="20210126 13:25:55.460"></status>
</kw>
<msg timestamp="20210126 13:25:58.020" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:25:58.020" starttime="20210126 13:25:55.459"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:25:58.020" starttime="20210126 13:25:58.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:25:58.024" level="INFO">Running command 'ozone sh bucket create o3://om:9862/89622-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:00.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:00.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:00.458" starttime="20210126 13:25:58.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:00.459" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:00.459" starttime="20210126 13:26:00.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:00.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:00.460" starttime="20210126 13:26:00.459"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:00.460" starttime="20210126 13:25:58.021"></status>
</kw>
<msg timestamp="20210126 13:26:00.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:00.460" starttime="20210126 13:25:58.021"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:00.460" starttime="20210126 13:25:58.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:00.464" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:03.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:03.042" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210126 13:26:03.042" starttime="20210126 13:26:00.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:03.043" level="INFO">DISK</msg>
<status status="PASS" endtime="20210126 13:26:03.043" starttime="20210126 13:26:03.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:03.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:03.043" starttime="20210126 13:26:03.043"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:03.044" starttime="20210126 13:26:00.462"></status>
</kw>
<msg timestamp="20210126 13:26:03.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:03.044" starttime="20210126 13:26:00.461"></status>
</kw>
<msg timestamp="20210126 13:26:03.044" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210126 13:26:03.044" starttime="20210126 13:26:00.461"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:03.045" starttime="20210126 13:26:03.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:03.048" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:05.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:05.720" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:26:05.720" starttime="20210126 13:26:03.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:05.722" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:26:05.722" starttime="20210126 13:26:05.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:05.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:05.722" starttime="20210126 13:26:05.722"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:05.722" starttime="20210126 13:26:03.046"></status>
</kw>
<msg timestamp="20210126 13:26:05.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:05.723" starttime="20210126 13:26:03.046"></status>
</kw>
<msg timestamp="20210126 13:26:05.723" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:26:05.723" starttime="20210126 13:26:03.045"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:05.723" starttime="20210126 13:26:05.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:05.727" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:08.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:08.464" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210126 13:26:08.464" starttime="20210126 13:26:05.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:08.465" level="INFO">100</msg>
<status status="PASS" endtime="20210126 13:26:08.465" starttime="20210126 13:26:08.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:08.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:08.466" starttime="20210126 13:26:08.465"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:08.466" starttime="20210126 13:26:05.724"></status>
</kw>
<msg timestamp="20210126 13:26:08.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:08.466" starttime="20210126 13:26:05.724"></status>
</kw>
<msg timestamp="20210126 13:26:08.466" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210126 13:26:08.466" starttime="20210126 13:26:05.723"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:08.467" starttime="20210126 13:26:08.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:08.470" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/89622-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:10.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:10.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:10.879" starttime="20210126 13:26:08.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:10.880" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:10.880" starttime="20210126 13:26:10.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:10.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:10.881" starttime="20210126 13:26:10.880"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:10.881" starttime="20210126 13:26:08.468"></status>
</kw>
<msg timestamp="20210126 13:26:10.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:10.881" starttime="20210126 13:26:08.467"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:10.881" starttime="20210126 13:26:08.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:10.885" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:13.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:13.413" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:26:13.413" starttime="20210126 13:26:10.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:13.414" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210126 13:26:13.414" starttime="20210126 13:26:13.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:13.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:13.414" starttime="20210126 13:26:13.414"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:13.414" starttime="20210126 13:26:10.883"></status>
</kw>
<msg timestamp="20210126 13:26:13.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:13.415" starttime="20210126 13:26:10.882"></status>
</kw>
<msg timestamp="20210126 13:26:13.415" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:26:13.415" starttime="20210126 13:26:10.882"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:13.416" starttime="20210126 13:26:13.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:13.419" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:15.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:15.876" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210126 13:26:15.876" starttime="20210126 13:26:13.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:15.877" level="INFO">1000</msg>
<status status="PASS" endtime="20210126 13:26:15.877" starttime="20210126 13:26:15.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:15.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:15.877" starttime="20210126 13:26:15.877"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:15.878" starttime="20210126 13:26:13.417"></status>
</kw>
<msg timestamp="20210126 13:26:15.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:15.878" starttime="20210126 13:26:13.417"></status>
</kw>
<msg timestamp="20210126 13:26:15.878" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210126 13:26:15.878" starttime="20210126 13:26:13.416"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:15.879" starttime="20210126 13:26:15.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:15.882" level="INFO">Running command 'ozone sh bucket list o3://om:9862/89622-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:18.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:18.488" level="INFO">${output} = 89622-rpcwoport</msg>
<status status="PASS" endtime="20210126 13:26:18.488" starttime="20210126 13:26:15.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:18.489" level="INFO">89622-rpcwoport</msg>
<status status="PASS" endtime="20210126 13:26:18.489" starttime="20210126 13:26:18.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:18.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:18.489" starttime="20210126 13:26:18.489"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:18.490" starttime="20210126 13:26:15.880"></status>
</kw>
<msg timestamp="20210126 13:26:18.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:18.490" starttime="20210126 13:26:15.879"></status>
</kw>
<msg timestamp="20210126 13:26:18.490" level="INFO">${result} = 89622-rpcwoport</msg>
<status status="PASS" endtime="20210126 13:26:18.490" starttime="20210126 13:26:15.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:18.491" starttime="20210126 13:26:18.490"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:18.495" level="INFO">Running command 'ozone sh key put o3://om:9862/89622-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:22.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:22.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:22.809" starttime="20210126 13:26:18.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:22.810" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:22.810" starttime="20210126 13:26:22.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:22.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:22.811" starttime="20210126 13:26:22.810"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:22.811" starttime="20210126 13:26:18.492"></status>
</kw>
<msg timestamp="20210126 13:26:22.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:22.811" starttime="20210126 13:26:18.492"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:22.811" starttime="20210126 13:26:18.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:22.815" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:22.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:22.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:22.817" starttime="20210126 13:26:22.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:22.818" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:22.818" starttime="20210126 13:26:22.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:22.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:22.819" starttime="20210126 13:26:22.818"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:22.819" starttime="20210126 13:26:22.813"></status>
</kw>
<msg timestamp="20210126 13:26:22.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:22.819" starttime="20210126 13:26:22.812"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:22.819" starttime="20210126 13:26:22.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:22.823" level="INFO">Running command 'ozone sh key get o3://om:9862/89622-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:26.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:26.982" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:26.982" starttime="20210126 13:26:22.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:26.984" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:26.984" starttime="20210126 13:26:26.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:26.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:26.984" starttime="20210126 13:26:26.984"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:26.985" starttime="20210126 13:26:22.820"></status>
</kw>
<msg timestamp="20210126 13:26:26.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:26.985" starttime="20210126 13:26:22.820"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:26.985" starttime="20210126 13:26:22.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:26.988" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:26.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:26.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:26.990" starttime="20210126 13:26:26.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:26.991" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:26.991" starttime="20210126 13:26:26.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:26.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:26.992" starttime="20210126 13:26:26.991"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:26.992" starttime="20210126 13:26:26.986"></status>
</kw>
<msg timestamp="20210126 13:26:26.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:26.992" starttime="20210126 13:26:26.986"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:26.993" starttime="20210126 13:26:26.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:26.995" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/89622-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:31.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:31.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:31.406" starttime="20210126 13:26:26.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:31.407" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:31.407" starttime="20210126 13:26:31.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:31.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:31.408" starttime="20210126 13:26:31.408"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:31.408" starttime="20210126 13:26:26.993"></status>
</kw>
<msg timestamp="20210126 13:26:31.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:31.409" starttime="20210126 13:26:26.993"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:31.409" starttime="20210126 13:26:26.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:31.412" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:31.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:31.414" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:31.415" starttime="20210126 13:26:31.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:31.415" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:31.415" starttime="20210126 13:26:31.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:31.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:31.416" starttime="20210126 13:26:31.416"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:31.416" starttime="20210126 13:26:31.410"></status>
</kw>
<msg timestamp="20210126 13:26:31.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:31.416" starttime="20210126 13:26:31.409"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:31.417" starttime="20210126 13:26:31.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:31.419" level="INFO">Running command 'ozone sh key get o3://om:9862/89622-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:35.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:35.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:35.495" starttime="20210126 13:26:31.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:35.496" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:35.496" starttime="20210126 13:26:35.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:35.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:35.497" starttime="20210126 13:26:35.496"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:35.497" starttime="20210126 13:26:31.417"></status>
</kw>
<msg timestamp="20210126 13:26:35.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:35.497" starttime="20210126 13:26:31.417"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:35.497" starttime="20210126 13:26:31.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:35.500" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:35.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:35.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:35.502" starttime="20210126 13:26:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:35.503" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:35.503" starttime="20210126 13:26:35.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:35.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:35.504" starttime="20210126 13:26:35.503"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:35.504" starttime="20210126 13:26:35.498"></status>
</kw>
<msg timestamp="20210126 13:26:35.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:35.504" starttime="20210126 13:26:35.498"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:35.505" starttime="20210126 13:26:35.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:35.508" level="INFO">Running command 'ozone sh key info o3://om:9862/89622-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:38.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:38.203" level="INFO">${output} = {
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:29.389Z",
  "modificationTime": "2021-01-26T13:26:31.037Z",...</msg>
<status status="PASS" endtime="20210126 13:26:38.204" starttime="20210126 13:26:35.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:38.205" level="INFO">{
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:29.389Z",
  "modificationTime": "2021-01-26T13:26:31.037Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622247138132100,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:26:38.205" starttime="20210126 13:26:38.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:38.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:38.205" starttime="20210126 13:26:38.205"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:38.206" starttime="20210126 13:26:35.506"></status>
</kw>
<msg timestamp="20210126 13:26:38.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:38.206" starttime="20210126 13:26:35.505"></status>
</kw>
<msg timestamp="20210126 13:26:38.206" level="INFO">${result} = {
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:29.389Z",
  "modificationTime": "2021-01-26T13:26:31.037Z",...</msg>
<status status="PASS" endtime="20210126 13:26:38.206" starttime="20210126 13:26:35.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:38.207" starttime="20210126 13:26:38.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:38.210" level="INFO">Running command 'ozone sh key delete o3://om:9862/89622-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:40.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:40.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:40.691" starttime="20210126 13:26:38.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:40.692" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:40.692" starttime="20210126 13:26:40.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:40.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:40.693" starttime="20210126 13:26:40.693"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:40.693" starttime="20210126 13:26:38.207"></status>
</kw>
<msg timestamp="20210126 13:26:40.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:40.694" starttime="20210126 13:26:38.207"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:40.694" starttime="20210126 13:26:38.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:40.697" level="INFO">Running command 'ozone sh key cp o3://om:9862/89622-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:45.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:45.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:45.335" starttime="20210126 13:26:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:45.337" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:45.337" starttime="20210126 13:26:45.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:45.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:45.337" starttime="20210126 13:26:45.337"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:45.338" starttime="20210126 13:26:40.695"></status>
</kw>
<msg timestamp="20210126 13:26:45.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:45.338" starttime="20210126 13:26:40.694"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:45.338" starttime="20210126 13:26:40.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:45.341" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:45.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:45.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:45.343" starttime="20210126 13:26:45.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:45.344" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:45.344" starttime="20210126 13:26:45.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:45.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:45.345" starttime="20210126 13:26:45.344"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:45.345" starttime="20210126 13:26:45.339"></status>
</kw>
<msg timestamp="20210126 13:26:45.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:45.345" starttime="20210126 13:26:45.338"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:45.345" starttime="20210126 13:26:45.338"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:45.348" level="INFO">Running command 'ozone sh key get o3://om:9862/89622-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:49.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:49.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:49.485" starttime="20210126 13:26:45.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:49.486" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:49.486" starttime="20210126 13:26:49.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:49.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:49.487" starttime="20210126 13:26:49.486"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:49.487" starttime="20210126 13:26:45.346"></status>
</kw>
<msg timestamp="20210126 13:26:49.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:49.487" starttime="20210126 13:26:45.346"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:49.487" starttime="20210126 13:26:45.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:49.491" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:49.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:49.493" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:49.493" starttime="20210126 13:26:49.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:49.494" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:49.494" starttime="20210126 13:26:49.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:49.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:49.494" starttime="20210126 13:26:49.494"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:49.495" starttime="20210126 13:26:49.488"></status>
</kw>
<msg timestamp="20210126 13:26:49.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:49.495" starttime="20210126 13:26:49.488"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:49.495" starttime="20210126 13:26:49.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:49.498" level="INFO">Running command 'ozone sh key delete o3://om:9862/89622-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:51.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:51.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:51.982" starttime="20210126 13:26:49.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:51.983" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:51.983" starttime="20210126 13:26:51.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:51.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:51.983" starttime="20210126 13:26:51.983"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:51.984" starttime="20210126 13:26:49.496"></status>
</kw>
<msg timestamp="20210126 13:26:51.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:51.984" starttime="20210126 13:26:49.496"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:51.984" starttime="20210126 13:26:49.495"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:51.987" level="INFO">Running command 'ozone sh key get o3://om:9862/89622-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:54.348" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:26:54.349" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:26:54.349" starttime="20210126 13:26:51.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:54.350" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:26:54.350" starttime="20210126 13:26:54.349"></status>
</kw>
<msg timestamp="20210126 13:26:54.350" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:26:54.350" starttime="20210126 13:26:51.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:54.351" starttime="20210126 13:26:54.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:54.354" level="INFO">Running command 'ozone sh key get --force o3://om:9862/89622-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:26:58.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:26:58.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:26:58.336" starttime="20210126 13:26:54.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:26:58.338" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:26:58.338" starttime="20210126 13:26:58.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:26:58.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:26:58.338" starttime="20210126 13:26:58.338"></status>
</kw>
<status status="PASS" endtime="20210126 13:26:58.338" starttime="20210126 13:26:54.352"></status>
</kw>
<msg timestamp="20210126 13:26:58.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:26:58.339" starttime="20210126 13:26:54.351"></status>
</kw>
<msg timestamp="20210126 13:26:58.339" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:26:58.339" starttime="20210126 13:26:54.351"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:26:58.339" starttime="20210126 13:26:58.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:26:58.343" level="INFO">Running command 'ozone sh key info o3://om:9862/89622-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:00.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:00.950" level="INFO">${output} = {
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:20.860Z",
  "modificationTime": "2021-01-26T13:26:22.311Z",
  "re...</msg>
<status status="PASS" endtime="20210126 13:27:00.950" starttime="20210126 13:26:58.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:00.951" level="INFO">{
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:20.860Z",
  "modificationTime": "2021-01-26T13:26:22.311Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622246579175550,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:27:00.951" starttime="20210126 13:27:00.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:00.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:00.952" starttime="20210126 13:27:00.951"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:00.952" starttime="20210126 13:26:58.340"></status>
</kw>
<msg timestamp="20210126 13:27:00.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:00.952" starttime="20210126 13:26:58.340"></status>
</kw>
<msg timestamp="20210126 13:27:00.953" level="INFO">${result} = {
  "volumeName": "89622-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:26:20.860Z",
  "modificationTime": "2021-01-26T13:26:22.311Z",
  "re...</msg>
<status status="PASS" endtime="20210126 13:27:00.953" starttime="20210126 13:26:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:00.953" starttime="20210126 13:27:00.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:00.957" level="INFO">Running command 'ozone sh key list o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:03.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:03.519" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 13:27:03.519" starttime="20210126 13:27:00.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:03.520" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 13:27:03.520" starttime="20210126 13:27:03.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:03.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:03.521" starttime="20210126 13:27:03.521"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:03.521" starttime="20210126 13:27:00.954"></status>
</kw>
<msg timestamp="20210126 13:27:03.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:03.522" starttime="20210126 13:27:00.954"></status>
</kw>
<msg timestamp="20210126 13:27:03.522" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210126 13:27:03.522" starttime="20210126 13:27:00.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:03.522" starttime="20210126 13:27:03.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:03.526" level="INFO">Running command 'ozone sh key rename o3://om:9862/89622-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:05.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:05.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:05.909" starttime="20210126 13:27:03.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:05.910" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:05.910" starttime="20210126 13:27:05.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:05.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:05.911" starttime="20210126 13:27:05.911"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:05.911" starttime="20210126 13:27:03.523"></status>
</kw>
<msg timestamp="20210126 13:27:05.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:05.911" starttime="20210126 13:27:03.523"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:05.912" starttime="20210126 13:27:03.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:05.915" level="INFO">Running command 'ozone sh key list o3://om:9862/89622-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:08.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:08.584" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210126 13:27:08.584" starttime="20210126 13:27:05.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:08.585" level="INFO">key2</msg>
<status status="PASS" endtime="20210126 13:27:08.585" starttime="20210126 13:27:08.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:08.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:08.586" starttime="20210126 13:27:08.586"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:08.586" starttime="20210126 13:27:05.913"></status>
</kw>
<msg timestamp="20210126 13:27:08.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:08.586" starttime="20210126 13:27:05.912"></status>
</kw>
<msg timestamp="20210126 13:27:08.587" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210126 13:27:08.587" starttime="20210126 13:27:05.912"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:08.587" starttime="20210126 13:27:08.587"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:08.590" level="INFO">Running command 'ozone sh key delete o3://om:9862/89622-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:10.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:10.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:10.964" starttime="20210126 13:27:08.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:10.965" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:10.965" starttime="20210126 13:27:10.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:10.966" starttime="20210126 13:27:10.965"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:10.967" starttime="20210126 13:27:08.588"></status>
</kw>
<msg timestamp="20210126 13:27:10.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:10.967" starttime="20210126 13:27:08.588"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:10.967" starttime="20210126 13:27:08.587"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:10.967" starttime="20210126 13:26:18.491"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:10.967" starttime="20210126 13:26:18.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:10.971" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:13.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:13.469" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:13.469" starttime="20210126 13:27:10.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:13.470" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:13.470" starttime="20210126 13:27:13.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:13.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:13.471" starttime="20210126 13:27:13.470"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:13.471" starttime="20210126 13:27:10.968"></status>
</kw>
<msg timestamp="20210126 13:27:13.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:13.471" starttime="20210126 13:27:10.968"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:13.471" starttime="20210126 13:27:10.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:13.475" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport | jq -r '. | select(.name=="89622-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:16.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:16.111" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:16.111" starttime="20210126 13:27:13.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:16.112" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:16.112" starttime="20210126 13:27:16.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:16.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:16.113" starttime="20210126 13:27:16.112"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:16.113" starttime="20210126 13:27:13.473"></status>
</kw>
<msg timestamp="20210126 13:27:16.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:16.113" starttime="20210126 13:27:13.472"></status>
</kw>
<msg timestamp="20210126 13:27:16.113" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:16.113" starttime="20210126 13:27:13.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:16.114" starttime="20210126 13:27:16.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:16.117" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:18.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:18.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:18.559" starttime="20210126 13:27:16.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:18.560" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:18.560" starttime="20210126 13:27:18.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:18.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:18.561" starttime="20210126 13:27:18.560"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:18.561" starttime="20210126 13:27:16.115"></status>
</kw>
<msg timestamp="20210126 13:27:18.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:18.561" starttime="20210126 13:27:16.114"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:18.561" starttime="20210126 13:27:16.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:18.575" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport | jq -r '. | select(.name=="89622-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:21.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:21.242" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:21.242" starttime="20210126 13:27:18.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:21.243" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:21.243" starttime="20210126 13:27:21.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:21.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:21.244" starttime="20210126 13:27:21.244"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:21.244" starttime="20210126 13:27:18.562"></status>
</kw>
<msg timestamp="20210126 13:27:21.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:21.244" starttime="20210126 13:27:18.562"></status>
</kw>
<msg timestamp="20210126 13:27:21.245" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:21.245" starttime="20210126 13:27:18.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:21.245" starttime="20210126 13:27:21.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:21.248" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/89622-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:23.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:23.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:23.723" starttime="20210126 13:27:21.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:23.724" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:23.724" starttime="20210126 13:27:23.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:23.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:23.725" starttime="20210126 13:27:23.724"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:23.725" starttime="20210126 13:27:21.246"></status>
</kw>
<msg timestamp="20210126 13:27:23.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:23.725" starttime="20210126 13:27:21.246"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:23.725" starttime="20210126 13:27:21.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:23.729" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:26.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:26.498" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:26.498" starttime="20210126 13:27:23.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:26.499" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:26.499" starttime="20210126 13:27:26.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:26.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:26.499" starttime="20210126 13:27:26.499"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:26.500" starttime="20210126 13:27:23.726"></status>
</kw>
<msg timestamp="20210126 13:27:26.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:26.500" starttime="20210126 13:27:23.726"></status>
</kw>
<msg timestamp="20210126 13:27:26.500" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:26.500" starttime="20210126 13:27:23.725"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:26.501" starttime="20210126 13:27:26.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:26.504" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/89622-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:28.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:28.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:28.851" starttime="20210126 13:27:26.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:28.853" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:28.853" starttime="20210126 13:27:28.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:28.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:28.853" starttime="20210126 13:27:28.853"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:28.853" starttime="20210126 13:27:26.501"></status>
</kw>
<msg timestamp="20210126 13:27:28.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:28.854" starttime="20210126 13:27:26.501"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:28.854" starttime="20210126 13:27:26.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:28.857" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:31.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:31.549" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:31.549" starttime="20210126 13:27:28.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:31.550" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:31.551" starttime="20210126 13:27:31.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:31.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:31.551" starttime="20210126 13:27:31.551"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:31.551" starttime="20210126 13:27:28.855"></status>
</kw>
<msg timestamp="20210126 13:27:31.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:31.552" starttime="20210126 13:27:28.855"></status>
</kw>
<msg timestamp="20210126 13:27:31.552" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:31.552" starttime="20210126 13:27:28.854"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:31.552" starttime="20210126 13:27:31.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:31.556" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/89622-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:33.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:33.891" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:33.891" starttime="20210126 13:27:31.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:33.892" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:33.892" starttime="20210126 13:27:33.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:33.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:33.892" starttime="20210126 13:27:33.892"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:33.893" starttime="20210126 13:27:31.553"></status>
</kw>
<msg timestamp="20210126 13:27:33.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:33.893" starttime="20210126 13:27:31.553"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:33.893" starttime="20210126 13:27:31.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:33.896" level="INFO">Running command 'ozone sh volume delete o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:36.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:36.325" level="INFO">${output} = Volume 89622-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210126 13:27:36.326" starttime="20210126 13:27:33.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:36.327" level="INFO">Volume 89622-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210126 13:27:36.327" starttime="20210126 13:27:36.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:36.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:36.328" starttime="20210126 13:27:36.327"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:36.328" starttime="20210126 13:27:33.894"></status>
</kw>
<msg timestamp="20210126 13:27:36.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:36.328" starttime="20210126 13:27:33.894"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:36.328" starttime="20210126 13:27:33.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:36.332" level="INFO">Running command 'ozone sh volume create o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:38.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:38.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:38.833" starttime="20210126 13:27:36.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:38.834" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:38.835" starttime="20210126 13:27:38.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:38.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:38.835" starttime="20210126 13:27:38.835"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:38.835" starttime="20210126 13:27:36.329"></status>
</kw>
<msg timestamp="20210126 13:27:38.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:38.836" starttime="20210126 13:27:36.329"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:38.836" starttime="20210126 13:27:36.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:38.840" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport | jq -r '. | select(.name=="89622-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:41.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:41.421" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:41.421" starttime="20210126 13:27:38.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:41.422" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:41.423" starttime="20210126 13:27:41.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:41.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:41.423" starttime="20210126 13:27:41.423"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:41.423" starttime="20210126 13:27:38.837"></status>
</kw>
<msg timestamp="20210126 13:27:41.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:41.424" starttime="20210126 13:27:38.837"></status>
</kw>
<msg timestamp="20210126 13:27:41.424" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:41.424" starttime="20210126 13:27:38.836"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:41.424" starttime="20210126 13:27:41.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:41.428" level="INFO">Running command 'ozone sh volume info o3://om:9862/89622-rpcwoport | jq -r '. | select(.name=="89622-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:44.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:44.068" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:44.068" starttime="20210126 13:27:41.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:44.069" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:44.069" starttime="20210126 13:27:44.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:44.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:44.070" starttime="20210126 13:27:44.069"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:44.070" starttime="20210126 13:27:41.425"></status>
</kw>
<msg timestamp="20210126 13:27:44.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:44.070" starttime="20210126 13:27:41.425"></status>
</kw>
<msg timestamp="20210126 13:27:44.070" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:44.070" starttime="20210126 13:27:41.424"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:44.071" starttime="20210126 13:27:44.070"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:44.074" level="INFO">Running command 'ozone sh bucket create o3://om:9862/89622-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:46.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:46.382" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:46.382" starttime="20210126 13:27:44.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:46.383" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:46.384" starttime="20210126 13:27:46.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:46.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:46.384" starttime="20210126 13:27:46.384"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:46.385" starttime="20210126 13:27:44.072"></status>
</kw>
<msg timestamp="20210126 13:27:46.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:46.385" starttime="20210126 13:27:44.071"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:46.385" starttime="20210126 13:27:44.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:46.389" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:49.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:49.106" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:49.106" starttime="20210126 13:27:46.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:49.107" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:49.107" starttime="20210126 13:27:49.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:49.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:49.108" starttime="20210126 13:27:49.108"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:49.108" starttime="20210126 13:27:46.386"></status>
</kw>
<msg timestamp="20210126 13:27:49.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:49.109" starttime="20210126 13:27:46.386"></status>
</kw>
<msg timestamp="20210126 13:27:49.109" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:49.109" starttime="20210126 13:27:46.385"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:49.109" starttime="20210126 13:27:49.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:49.113" level="INFO">Running command 'ozone sh bucket info o3://om:9862/89622-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:51.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:51.721" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:27:51.721" starttime="20210126 13:27:49.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:51.722" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:27:51.723" starttime="20210126 13:27:51.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:51.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:51.723" starttime="20210126 13:27:51.723"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:51.724" starttime="20210126 13:27:49.110"></status>
</kw>
<msg timestamp="20210126 13:27:51.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:51.724" starttime="20210126 13:27:49.110"></status>
</kw>
<msg timestamp="20210126 13:27:51.724" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:27:51.724" starttime="20210126 13:27:49.109"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:51.724" starttime="20210126 13:27:51.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:51.728" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/89622-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:54.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:54.188" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:54.188" starttime="20210126 13:27:51.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:54.189" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:54.189" starttime="20210126 13:27:54.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:54.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:54.190" starttime="20210126 13:27:54.189"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:54.190" starttime="20210126 13:27:51.725"></status>
</kw>
<msg timestamp="20210126 13:27:54.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:54.190" starttime="20210126 13:27:51.725"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:54.191" starttime="20210126 13:27:51.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:54.194" level="INFO">Running command 'ozone sh volume delete o3://om:9862/89622-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:56.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:56.606" level="INFO">${output} = Volume 89622-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210126 13:27:56.606" starttime="20210126 13:27:54.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:56.607" level="INFO">Volume 89622-rpcwoport is deleted</msg>
<status status="PASS" endtime="20210126 13:27:56.607" starttime="20210126 13:27:56.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:56.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:56.607" starttime="20210126 13:27:56.607"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:56.608" starttime="20210126 13:27:54.192"></status>
</kw>
<msg timestamp="20210126 13:27:56.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:56.608" starttime="20210126 13:27:54.191"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:56.608" starttime="20210126 13:27:54.191"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:56.608" starttime="20210126 13:25:42.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:27:56.608" critical="yes" starttime="20210126 13:25:42.862"></status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:27:56.610" starttime="20210126 13:27:56.610"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:56.614" level="INFO">Running command 'ozone sh volume create o3://om:9862/89622-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:27:59.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:27:59.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:27:59.039" starttime="20210126 13:27:56.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:27:59.040" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:27:59.040" starttime="20210126 13:27:59.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:27:59.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:27:59.041" starttime="20210126 13:27:59.040"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:59.041" starttime="20210126 13:27:56.612"></status>
</kw>
<msg timestamp="20210126 13:27:59.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:27:59.041" starttime="20210126 13:27:56.612"></status>
</kw>
<status status="PASS" endtime="20210126 13:27:59.041" starttime="20210126 13:27:56.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:27:59.045" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89622-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:01.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:01.723" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:01.723" starttime="20210126 13:27:59.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:01.724" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:01.724" starttime="20210126 13:28:01.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:01.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:01.725" starttime="20210126 13:28:01.724"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:01.725" starttime="20210126 13:27:59.043"></status>
</kw>
<msg timestamp="20210126 13:28:01.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:01.725" starttime="20210126 13:27:59.042"></status>
</kw>
<msg timestamp="20210126 13:28:01.725" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:01.725" starttime="20210126 13:27:59.041"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:01.726" starttime="20210126 13:28:01.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:01.729" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/89622-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:04.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:04.301" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:04.301" starttime="20210126 13:28:01.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:04.302" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:04.303" starttime="20210126 13:28:04.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:04.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:04.303" starttime="20210126 13:28:04.303"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:04.303" starttime="20210126 13:28:01.727"></status>
</kw>
<msg timestamp="20210126 13:28:04.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:04.304" starttime="20210126 13:28:01.727"></status>
</kw>
<msg timestamp="20210126 13:28:04.304" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:04.304" starttime="20210126 13:28:01.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:04.307" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89622-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:06.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:06.883" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:06.883" starttime="20210126 13:28:04.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:06.884" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:06.884" starttime="20210126 13:28:06.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:06.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:06.885" starttime="20210126 13:28:06.885"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:06.885" starttime="20210126 13:28:04.305"></status>
</kw>
<msg timestamp="20210126 13:28:06.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:06.886" starttime="20210126 13:28:04.305"></status>
</kw>
<msg timestamp="20210126 13:28:06.886" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:06.886" starttime="20210126 13:28:04.304"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:06.887" starttime="20210126 13:28:06.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:06.890" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/89622-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:09.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:09.474" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210126 13:28:09.474" starttime="20210126 13:28:06.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:09.475" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210126 13:28:09.475" starttime="20210126 13:28:09.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:09.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:09.475" starttime="20210126 13:28:09.475"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:09.476" starttime="20210126 13:28:06.888"></status>
</kw>
<msg timestamp="20210126 13:28:09.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:09.476" starttime="20210126 13:28:06.887"></status>
</kw>
<msg timestamp="20210126 13:28:09.476" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210126 13:28:09.476" starttime="20210126 13:28:06.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:09.479" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89622-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:12.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:12.191" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:12.191" starttime="20210126 13:28:09.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:12.192" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:12.192" starttime="20210126 13:28:12.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:12.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:12.193" starttime="20210126 13:28:12.192"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:12.193" starttime="20210126 13:28:09.477"></status>
</kw>
<msg timestamp="20210126 13:28:12.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:12.193" starttime="20210126 13:28:09.477"></status>
</kw>
<msg timestamp="20210126 13:28:12.193" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:12.193" starttime="20210126 13:28:09.476"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:12.194" starttime="20210126 13:28:12.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:12.197" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/89622-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:14.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:14.692" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:14.692" starttime="20210126 13:28:12.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:14.693" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:14.693" starttime="20210126 13:28:14.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:14.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:14.694" starttime="20210126 13:28:14.693"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:14.694" starttime="20210126 13:28:12.195"></status>
</kw>
<msg timestamp="20210126 13:28:14.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:14.695" starttime="20210126 13:28:12.195"></status>
</kw>
<msg timestamp="20210126 13:28:14.695" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:14.695" starttime="20210126 13:28:12.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:14.698" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/89622-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:17.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:17.252" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210126 13:28:17.252" starttime="20210126 13:28:14.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:17.253" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:17.253" starttime="20210126 13:28:17.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:17.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:17.254" starttime="20210126 13:28:17.253"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:17.254" starttime="20210126 13:28:14.696"></status>
</kw>
<msg timestamp="20210126 13:28:17.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:17.254" starttime="20210126 13:28:14.696"></status>
</kw>
<msg timestamp="20210126 13:28:17.255" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210126 13:28:17.255" starttime="20210126 13:28:14.695"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:17.255" starttime="20210126 13:28:17.255"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:17.256" starttime="20210126 13:28:17.255"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:17.256" starttime="20210126 13:27:56.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:28:17.256" critical="yes" starttime="20210126 13:27:56.609"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:17.258" starttime="20210126 13:28:17.257"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:17.261" level="INFO">Running command 'ozone sh bucket create o3://om:9862/89622-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:19.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:19.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:28:19.791" starttime="20210126 13:28:17.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:19.792" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:28:19.793" starttime="20210126 13:28:19.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:19.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:19.793" starttime="20210126 13:28:19.793"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:19.793" starttime="20210126 13:28:17.259"></status>
</kw>
<msg timestamp="20210126 13:28:19.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:19.794" starttime="20210126 13:28:17.259"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:19.794" starttime="20210126 13:28:17.258"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:19.797" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89622-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:22.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:22.479" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:22.479" starttime="20210126 13:28:19.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:22.481" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:22.481" starttime="20210126 13:28:22.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:22.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:22.482" starttime="20210126 13:28:22.481"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:22.482" starttime="20210126 13:28:19.795"></status>
</kw>
<msg timestamp="20210126 13:28:22.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:22.482" starttime="20210126 13:28:19.794"></status>
</kw>
<msg timestamp="20210126 13:28:22.482" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:22.482" starttime="20210126 13:28:19.794"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:22.483" starttime="20210126 13:28:22.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:22.486" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/89622-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:24.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:24.862" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210126 13:28:24.863" starttime="20210126 13:28:22.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:24.864" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210126 13:28:24.864" starttime="20210126 13:28:24.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:24.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:24.864" starttime="20210126 13:28:24.864"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:24.865" starttime="20210126 13:28:22.484"></status>
</kw>
<msg timestamp="20210126 13:28:24.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:24.865" starttime="20210126 13:28:22.483"></status>
</kw>
<msg timestamp="20210126 13:28:24.865" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210126 13:28:24.865" starttime="20210126 13:28:22.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:24.868" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89622-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:27.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:27.495" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:27.495" starttime="20210126 13:28:24.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:27.496" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:27.496" starttime="20210126 13:28:27.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:27.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:27.497" starttime="20210126 13:28:27.496"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:27.497" starttime="20210126 13:28:24.866"></status>
</kw>
<msg timestamp="20210126 13:28:27.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:27.497" starttime="20210126 13:28:24.866"></status>
</kw>
<msg timestamp="20210126 13:28:27.498" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:27.498" starttime="20210126 13:28:24.865"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:27.499" starttime="20210126 13:28:27.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:27.502" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/89622-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:29.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:29.899" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:29.899" starttime="20210126 13:28:27.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:29.900" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:29.901" starttime="20210126 13:28:29.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:29.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:29.901" starttime="20210126 13:28:29.901"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:29.901" starttime="20210126 13:28:27.500"></status>
</kw>
<msg timestamp="20210126 13:28:29.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:29.902" starttime="20210126 13:28:27.499"></status>
</kw>
<msg timestamp="20210126 13:28:29.902" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:29.902" starttime="20210126 13:28:27.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:29.905" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89622-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:32.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:32.241" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:32.241" starttime="20210126 13:28:29.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:32.242" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:32.242" starttime="20210126 13:28:32.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:32.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:32.243" starttime="20210126 13:28:32.242"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:32.243" starttime="20210126 13:28:29.903"></status>
</kw>
<msg timestamp="20210126 13:28:32.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:32.243" starttime="20210126 13:28:29.903"></status>
</kw>
<msg timestamp="20210126 13:28:32.243" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:32.244" starttime="20210126 13:28:29.902"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:32.244" starttime="20210126 13:28:32.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:32.248" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/89622-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:34.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:34.519" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:34.519" starttime="20210126 13:28:32.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:34.520" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:34.521" starttime="20210126 13:28:34.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:34.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:34.521" starttime="20210126 13:28:34.521"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:34.521" starttime="20210126 13:28:32.245"></status>
</kw>
<msg timestamp="20210126 13:28:34.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:34.522" starttime="20210126 13:28:32.245"></status>
</kw>
<msg timestamp="20210126 13:28:34.522" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:34.522" starttime="20210126 13:28:32.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:34.525" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/89622-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:37.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:37.159" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210126 13:28:37.159" starttime="20210126 13:28:34.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:37.160" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:37.160" starttime="20210126 13:28:37.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:37.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:37.161" starttime="20210126 13:28:37.160"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:37.161" starttime="20210126 13:28:34.523"></status>
</kw>
<msg timestamp="20210126 13:28:37.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:37.161" starttime="20210126 13:28:34.523"></status>
</kw>
<msg timestamp="20210126 13:28:37.161" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210126 13:28:37.161" starttime="20210126 13:28:34.522"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:37.162" starttime="20210126 13:28:37.162"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:37.162" starttime="20210126 13:28:37.162"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:37.163" starttime="20210126 13:28:17.258"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:28:37.163" critical="yes" starttime="20210126 13:28:17.257"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:37.165" starttime="20210126 13:28:37.164"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:37.168" level="INFO">Running command 'ozone sh key put o3://om:9862/89622-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:41.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:41.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:28:41.452" starttime="20210126 13:28:37.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:41.453" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:28:41.453" starttime="20210126 13:28:41.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:41.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:41.454" starttime="20210126 13:28:41.453"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:41.454" starttime="20210126 13:28:37.166"></status>
</kw>
<msg timestamp="20210126 13:28:41.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:41.454" starttime="20210126 13:28:37.166"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:41.455" starttime="20210126 13:28:37.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:41.458" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89622-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:44.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:44.173" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:44.173" starttime="20210126 13:28:41.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:44.174" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:44.175" starttime="20210126 13:28:44.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:44.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:44.175" starttime="20210126 13:28:44.175"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:44.175" starttime="20210126 13:28:41.455"></status>
</kw>
<msg timestamp="20210126 13:28:44.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:44.176" starttime="20210126 13:28:41.455"></status>
</kw>
<msg timestamp="20210126 13:28:44.176" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:44.176" starttime="20210126 13:28:41.455"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:44.176" starttime="20210126 13:28:44.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:44.180" level="INFO">Running command 'ozone sh key addacl o3://om:9862/89622-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:46.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:46.476" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:46.477" starttime="20210126 13:28:44.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:46.478" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:46.478" starttime="20210126 13:28:46.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:46.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:46.478" starttime="20210126 13:28:46.478"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:46.478" starttime="20210126 13:28:44.177"></status>
</kw>
<msg timestamp="20210126 13:28:46.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:46.479" starttime="20210126 13:28:44.177"></status>
</kw>
<msg timestamp="20210126 13:28:46.479" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 13:28:46.479" starttime="20210126 13:28:44.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:46.482" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89622-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:48.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:48.934" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:48.934" starttime="20210126 13:28:46.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:48.935" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:48.935" starttime="20210126 13:28:48.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:48.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:48.936" starttime="20210126 13:28:48.936"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:48.936" starttime="20210126 13:28:46.480"></status>
</kw>
<msg timestamp="20210126 13:28:48.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:48.937" starttime="20210126 13:28:46.480"></status>
</kw>
<msg timestamp="20210126 13:28:48.937" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:48.937" starttime="20210126 13:28:46.479"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:48.938" starttime="20210126 13:28:48.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:48.941" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/89622-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:51.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:51.393" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:51.393" starttime="20210126 13:28:48.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:51.394" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:51.394" starttime="20210126 13:28:51.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:51.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:51.395" starttime="20210126 13:28:51.395"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:51.395" starttime="20210126 13:28:48.939"></status>
</kw>
<msg timestamp="20210126 13:28:51.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:51.396" starttime="20210126 13:28:48.938"></status>
</kw>
<msg timestamp="20210126 13:28:51.396" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210126 13:28:51.396" starttime="20210126 13:28:48.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:51.399" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89622-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:54.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:54.092" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:54.092" starttime="20210126 13:28:51.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:54.093" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:54.093" starttime="20210126 13:28:54.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:54.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:54.094" starttime="20210126 13:28:54.093"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:54.094" starttime="20210126 13:28:51.397"></status>
</kw>
<msg timestamp="20210126 13:28:54.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:54.094" starttime="20210126 13:28:51.396"></status>
</kw>
<msg timestamp="20210126 13:28:54.094" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" endtime="20210126 13:28:54.095" starttime="20210126 13:28:51.396"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:54.095" starttime="20210126 13:28:54.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:54.098" level="INFO">Running command 'ozone sh key setacl o3://om:9862/89622-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:56.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:56.530" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:56.530" starttime="20210126 13:28:54.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:56.531" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:56.531" starttime="20210126 13:28:56.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:56.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:56.532" starttime="20210126 13:28:56.531"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:56.532" starttime="20210126 13:28:54.096"></status>
</kw>
<msg timestamp="20210126 13:28:56.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:56.532" starttime="20210126 13:28:54.096"></status>
</kw>
<msg timestamp="20210126 13:28:56.533" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210126 13:28:56.533" starttime="20210126 13:28:54.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:56.536" level="INFO">Running command 'ozone sh key getacl o3://om:9862/89622-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:28:59.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:28:59.209" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210126 13:28:59.209" starttime="20210126 13:28:56.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:28:59.210" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210126 13:28:59.210" starttime="20210126 13:28:59.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:28:59.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:28:59.210" starttime="20210126 13:28:59.210"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:59.211" starttime="20210126 13:28:56.534"></status>
</kw>
<msg timestamp="20210126 13:28:59.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:28:59.211" starttime="20210126 13:28:56.533"></status>
</kw>
<msg timestamp="20210126 13:28:59.211" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210126 13:28:59.211" starttime="20210126 13:28:56.533"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:59.212" starttime="20210126 13:28:59.211"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:59.212" starttime="20210126 13:28:59.212"></status>
</kw>
<status status="PASS" endtime="20210126 13:28:59.213" starttime="20210126 13:28:37.165"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:28:59.213" critical="yes" starttime="20210126 13:28:37.163"></status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:28:59.214" starttime="20210126 13:28:59.214"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:28:59.218" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:01.704" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:29:01.704" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89622-rpcwport is not found</msg>
<status status="PASS" endtime="20210126 13:29:01.704" starttime="20210126 13:28:59.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:01.705" level="INFO">VOLUME_NOT_FOUND Volume 89622-rpcwport is not found</msg>
<status status="PASS" endtime="20210126 13:29:01.705" starttime="20210126 13:29:01.705"></status>
</kw>
<msg timestamp="20210126 13:29:01.706" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89622-rpcwport is not found</msg>
<status status="PASS" endtime="20210126 13:29:01.706" starttime="20210126 13:28:59.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:01.706" starttime="20210126 13:29:01.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:01.710" level="INFO">Running command 'ozone sh volume create o3:///89622-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:04.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:04.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:04.265" starttime="20210126 13:29:01.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:04.266" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:04.266" starttime="20210126 13:29:04.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:04.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:04.267" starttime="20210126 13:29:04.267"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:04.267" starttime="20210126 13:29:01.707"></status>
</kw>
<msg timestamp="20210126 13:29:04.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:04.267" starttime="20210126 13:29:01.707"></status>
</kw>
<msg timestamp="20210126 13:29:04.268" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:29:04.268" starttime="20210126 13:29:01.707"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:04.268" starttime="20210126 13:29:04.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:04.272" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="89622-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:06.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:06.989" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:29:06.989" starttime="20210126 13:29:04.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:06.990" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:29:04.105Z",
  "modificationTime": "2021-01-26T13:29:04.105Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:29:06.990" starttime="20210126 13:29:06.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:06.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:06.991" starttime="20210126 13:29:06.991"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:06.991" starttime="20210126 13:29:04.269"></status>
</kw>
<msg timestamp="20210126 13:29:06.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:06.991" starttime="20210126 13:29:04.269"></status>
</kw>
<msg timestamp="20210126 13:29:06.992" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:29:06.992" starttime="20210126 13:29:04.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:06.992" starttime="20210126 13:29:06.992"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:06.996" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89622-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:09.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:09.709" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:29:09.709" starttime="20210126 13:29:06.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:09.710" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:29:04.105Z",
  "modificationTime": "2021-01-26T13:29:04.105Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:29:09.711" starttime="20210126 13:29:09.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:09.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:09.712" starttime="20210126 13:29:09.711"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:09.713" starttime="20210126 13:29:06.993"></status>
</kw>
<msg timestamp="20210126 13:29:09.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:09.713" starttime="20210126 13:29:06.993"></status>
</kw>
<msg timestamp="20210126 13:29:09.713" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01...</msg>
<status status="PASS" endtime="20210126 13:29:09.713" starttime="20210126 13:29:06.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:09.713" starttime="20210126 13:29:09.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:09.717" level="INFO">Running command 'ozone sh volume setquota o3:///89622-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:12.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:12.192" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:12.192" starttime="20210126 13:29:09.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:12.193" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:12.193" starttime="20210126 13:29:12.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:12.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:12.193" starttime="20210126 13:29:12.193"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:12.194" starttime="20210126 13:29:09.714"></status>
</kw>
<msg timestamp="20210126 13:29:12.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:12.194" starttime="20210126 13:29:09.714"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:12.194" starttime="20210126 13:29:09.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:12.197" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport | jq -r '. | select(.name=="89622-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:14.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:14.862" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:14.863" starttime="20210126 13:29:12.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:14.864" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:14.864" starttime="20210126 13:29:14.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:14.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:14.864" starttime="20210126 13:29:14.864"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:14.865" starttime="20210126 13:29:12.195"></status>
</kw>
<msg timestamp="20210126 13:29:14.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:14.865" starttime="20210126 13:29:12.195"></status>
</kw>
<msg timestamp="20210126 13:29:14.865" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:14.865" starttime="20210126 13:29:12.194"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:14.866" starttime="20210126 13:29:14.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:14.869" level="INFO">Running command 'ozone sh bucket create o3:///89622-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:17.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:17.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:17.339" starttime="20210126 13:29:14.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:17.340" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:17.341" starttime="20210126 13:29:17.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:17.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:17.341" starttime="20210126 13:29:17.341"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:17.341" starttime="20210126 13:29:14.867"></status>
</kw>
<msg timestamp="20210126 13:29:17.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:17.342" starttime="20210126 13:29:14.866"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:17.342" starttime="20210126 13:29:14.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:17.345" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:20.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:20.144" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210126 13:29:20.144" starttime="20210126 13:29:17.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:20.145" level="INFO">DISK</msg>
<status status="PASS" endtime="20210126 13:29:20.145" starttime="20210126 13:29:20.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:20.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:20.145" starttime="20210126 13:29:20.145"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:20.146" starttime="20210126 13:29:17.343"></status>
</kw>
<msg timestamp="20210126 13:29:20.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:20.146" starttime="20210126 13:29:17.343"></status>
</kw>
<msg timestamp="20210126 13:29:20.146" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210126 13:29:20.146" starttime="20210126 13:29:17.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:20.146" starttime="20210126 13:29:20.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:20.150" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:22.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:22.947" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:22.947" starttime="20210126 13:29:20.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:22.949" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:22.949" starttime="20210126 13:29:22.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:22.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:22.949" starttime="20210126 13:29:22.949"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:22.949" starttime="20210126 13:29:20.148"></status>
</kw>
<msg timestamp="20210126 13:29:22.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:22.950" starttime="20210126 13:29:20.147"></status>
</kw>
<msg timestamp="20210126 13:29:22.950" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:29:22.950" starttime="20210126 13:29:20.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:22.951" starttime="20210126 13:29:22.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:22.954" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:25.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:25.643" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210126 13:29:25.643" starttime="20210126 13:29:22.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:25.644" level="INFO">100</msg>
<status status="PASS" endtime="20210126 13:29:25.644" starttime="20210126 13:29:25.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:25.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:25.645" starttime="20210126 13:29:25.644"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:25.645" starttime="20210126 13:29:22.952"></status>
</kw>
<msg timestamp="20210126 13:29:25.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:25.645" starttime="20210126 13:29:22.951"></status>
</kw>
<msg timestamp="20210126 13:29:25.645" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210126 13:29:25.645" starttime="20210126 13:29:22.951"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:25.646" starttime="20210126 13:29:25.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:25.649" level="INFO">Running command 'ozone sh bucket setquota o3:///89622-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:28.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:28.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:28.042" starttime="20210126 13:29:25.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:28.043" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:28.044" starttime="20210126 13:29:28.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:28.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:28.044" starttime="20210126 13:29:28.044"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:28.044" starttime="20210126 13:29:25.647"></status>
</kw>
<msg timestamp="20210126 13:29:28.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:28.045" starttime="20210126 13:29:25.646"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:28.045" starttime="20210126 13:29:25.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:28.049" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:30.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:30.642" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:29:30.642" starttime="20210126 13:29:28.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:30.643" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210126 13:29:30.643" starttime="20210126 13:29:30.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:30.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:30.643" starttime="20210126 13:29:30.643"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:30.644" starttime="20210126 13:29:28.046"></status>
</kw>
<msg timestamp="20210126 13:29:30.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:30.644" starttime="20210126 13:29:28.046"></status>
</kw>
<msg timestamp="20210126 13:29:30.644" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:29:30.644" starttime="20210126 13:29:28.045"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:30.645" starttime="20210126 13:29:30.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:30.648" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:33.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:33.389" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210126 13:29:33.389" starttime="20210126 13:29:30.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:33.390" level="INFO">1000</msg>
<status status="PASS" endtime="20210126 13:29:33.390" starttime="20210126 13:29:33.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:33.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:33.391" starttime="20210126 13:29:33.390"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:33.391" starttime="20210126 13:29:30.646"></status>
</kw>
<msg timestamp="20210126 13:29:33.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:33.392" starttime="20210126 13:29:30.646"></status>
</kw>
<msg timestamp="20210126 13:29:33.392" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210126 13:29:33.392" starttime="20210126 13:29:30.645"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:33.392" starttime="20210126 13:29:33.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:33.396" level="INFO">Running command 'ozone sh bucket list o3:///89622-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:36.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:36.070" level="INFO">${output} = 89622-rpcwport</msg>
<status status="PASS" endtime="20210126 13:29:36.070" starttime="20210126 13:29:33.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:36.071" level="INFO">89622-rpcwport</msg>
<status status="PASS" endtime="20210126 13:29:36.071" starttime="20210126 13:29:36.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:36.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:36.072" starttime="20210126 13:29:36.072"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:36.072" starttime="20210126 13:29:33.393"></status>
</kw>
<msg timestamp="20210126 13:29:36.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:36.073" starttime="20210126 13:29:33.393"></status>
</kw>
<msg timestamp="20210126 13:29:36.073" level="INFO">${result} = 89622-rpcwport</msg>
<status status="PASS" endtime="20210126 13:29:36.073" starttime="20210126 13:29:33.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:36.073" starttime="20210126 13:29:36.073"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:36.077" level="INFO">Running command 'ozone sh key put o3:///89622-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:40.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:40.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:40.658" starttime="20210126 13:29:36.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:40.660" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:40.660" starttime="20210126 13:29:40.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:40.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:40.661" starttime="20210126 13:29:40.660"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:40.661" starttime="20210126 13:29:36.075"></status>
</kw>
<msg timestamp="20210126 13:29:40.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:40.661" starttime="20210126 13:29:36.075"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:40.661" starttime="20210126 13:29:36.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:40.664" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:40.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:40.667" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:40.667" starttime="20210126 13:29:40.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:40.668" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:40.668" starttime="20210126 13:29:40.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:40.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:40.668" starttime="20210126 13:29:40.668"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:40.668" starttime="20210126 13:29:40.662"></status>
</kw>
<msg timestamp="20210126 13:29:40.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:40.669" starttime="20210126 13:29:40.662"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:40.669" starttime="20210126 13:29:40.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:40.672" level="INFO">Running command 'ozone sh key get o3:///89622-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:44.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:44.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:44.716" starttime="20210126 13:29:40.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:44.717" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:44.717" starttime="20210126 13:29:44.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:44.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:44.718" starttime="20210126 13:29:44.717"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:44.718" starttime="20210126 13:29:40.670"></status>
</kw>
<msg timestamp="20210126 13:29:44.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:44.718" starttime="20210126 13:29:40.670"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:44.718" starttime="20210126 13:29:40.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:44.721" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:44.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:44.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:44.724" starttime="20210126 13:29:44.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:44.725" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:44.725" starttime="20210126 13:29:44.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:44.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:44.725" starttime="20210126 13:29:44.725"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:44.725" starttime="20210126 13:29:44.719"></status>
</kw>
<msg timestamp="20210126 13:29:44.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:44.726" starttime="20210126 13:29:44.719"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:44.726" starttime="20210126 13:29:44.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:44.729" level="INFO">Running command 'ozone sh key put -t RATIS o3:///89622-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:48.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:48.914" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:48.914" starttime="20210126 13:29:44.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:48.915" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:48.915" starttime="20210126 13:29:48.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:48.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:48.916" starttime="20210126 13:29:48.915"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:48.916" starttime="20210126 13:29:44.727"></status>
</kw>
<msg timestamp="20210126 13:29:48.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:48.916" starttime="20210126 13:29:44.726"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:48.916" starttime="20210126 13:29:44.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:48.919" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:48.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:48.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:48.922" starttime="20210126 13:29:48.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:48.923" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:48.923" starttime="20210126 13:29:48.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:48.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:48.923" starttime="20210126 13:29:48.923"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:48.924" starttime="20210126 13:29:48.917"></status>
</kw>
<msg timestamp="20210126 13:29:48.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:48.924" starttime="20210126 13:29:48.917"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:48.924" starttime="20210126 13:29:48.917"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:48.927" level="INFO">Running command 'ozone sh key get o3:///89622-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:52.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:52.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:52.992" starttime="20210126 13:29:48.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:52.993" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:52.993" starttime="20210126 13:29:52.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:52.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:52.993" starttime="20210126 13:29:52.993"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:52.994" starttime="20210126 13:29:48.925"></status>
</kw>
<msg timestamp="20210126 13:29:52.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:52.994" starttime="20210126 13:29:48.925"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:52.994" starttime="20210126 13:29:48.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:52.997" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:52.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:52.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:52.999" starttime="20210126 13:29:52.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:53.000" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:53.000" starttime="20210126 13:29:53.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:53.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:53.001" starttime="20210126 13:29:53.001"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:53.001" starttime="20210126 13:29:52.995"></status>
</kw>
<msg timestamp="20210126 13:29:53.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:53.001" starttime="20210126 13:29:52.995"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:53.002" starttime="20210126 13:29:52.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:53.005" level="INFO">Running command 'ozone sh key info o3:///89622-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:55.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:55.738" level="INFO">${output} = {
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:46.857Z",
  "modificationTime": "2021-01-26T13:29:48.506Z",
...</msg>
<status status="PASS" endtime="20210126 13:29:55.739" starttime="20210126 13:29:53.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:55.740" level="INFO">{
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:46.857Z",
  "modificationTime": "2021-01-26T13:29:48.506Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622260079329420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:29:55.740" starttime="20210126 13:29:55.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:55.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:55.741" starttime="20210126 13:29:55.740"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:55.741" starttime="20210126 13:29:53.003"></status>
</kw>
<msg timestamp="20210126 13:29:55.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:55.741" starttime="20210126 13:29:53.002"></status>
</kw>
<msg timestamp="20210126 13:29:55.742" level="INFO">${result} = {
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:46.857Z",
  "modificationTime": "2021-01-26T13:29:48.506Z",
...</msg>
<status status="PASS" endtime="20210126 13:29:55.742" starttime="20210126 13:29:53.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:29:55.742" starttime="20210126 13:29:55.742"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:55.745" level="INFO">Running command 'ozone sh key delete o3:///89622-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:29:58.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:29:58.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:29:58.137" starttime="20210126 13:29:55.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:29:58.139" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:29:58.139" starttime="20210126 13:29:58.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:29:58.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:29:58.139" starttime="20210126 13:29:58.139"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:58.140" starttime="20210126 13:29:55.743"></status>
</kw>
<msg timestamp="20210126 13:29:58.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:29:58.140" starttime="20210126 13:29:55.743"></status>
</kw>
<status status="PASS" endtime="20210126 13:29:58.140" starttime="20210126 13:29:55.742"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:29:58.143" level="INFO">Running command 'ozone sh key cp o3:///89622-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:02.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:02.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:02.645" starttime="20210126 13:29:58.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:02.646" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:02.646" starttime="20210126 13:30:02.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:02.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:02.646" starttime="20210126 13:30:02.646"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:02.647" starttime="20210126 13:29:58.141"></status>
</kw>
<msg timestamp="20210126 13:30:02.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:02.647" starttime="20210126 13:29:58.141"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:02.647" starttime="20210126 13:29:58.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:02.650" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:02.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:02.652" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:02.652" starttime="20210126 13:30:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:02.653" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:02.653" starttime="20210126 13:30:02.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:02.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:02.654" starttime="20210126 13:30:02.653"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:02.654" starttime="20210126 13:30:02.648"></status>
</kw>
<msg timestamp="20210126 13:30:02.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:02.654" starttime="20210126 13:30:02.647"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:02.654" starttime="20210126 13:30:02.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:02.658" level="INFO">Running command 'ozone sh key get o3:///89622-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:06.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:06.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:06.874" starttime="20210126 13:30:02.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:06.875" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:06.875" starttime="20210126 13:30:06.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:06.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:06.876" starttime="20210126 13:30:06.875"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:06.876" starttime="20210126 13:30:02.655"></status>
</kw>
<msg timestamp="20210126 13:30:06.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:06.876" starttime="20210126 13:30:02.655"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:06.877" starttime="20210126 13:30:02.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:06.880" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:06.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:06.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:06.882" starttime="20210126 13:30:06.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:06.883" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:06.883" starttime="20210126 13:30:06.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:06.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:06.884" starttime="20210126 13:30:06.883"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:06.884" starttime="20210126 13:30:06.877"></status>
</kw>
<msg timestamp="20210126 13:30:06.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:06.884" starttime="20210126 13:30:06.877"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:06.884" starttime="20210126 13:30:06.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:06.887" level="INFO">Running command 'ozone sh key delete o3:///89622-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:09.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:09.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:09.454" starttime="20210126 13:30:06.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:09.455" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:09.455" starttime="20210126 13:30:09.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:09.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:09.456" starttime="20210126 13:30:09.455"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:09.456" starttime="20210126 13:30:06.885"></status>
</kw>
<msg timestamp="20210126 13:30:09.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:09.456" starttime="20210126 13:30:06.885"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:09.456" starttime="20210126 13:30:06.884"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:09.459" level="INFO">Running command 'ozone sh key get o3:///89622-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:11.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:30:11.832" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:30:11.832" starttime="20210126 13:30:09.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:11.833" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:30:11.833" starttime="20210126 13:30:11.832"></status>
</kw>
<msg timestamp="20210126 13:30:11.833" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:30:11.833" starttime="20210126 13:30:09.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:11.834" starttime="20210126 13:30:11.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:11.837" level="INFO">Running command 'ozone sh key get --force o3:///89622-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:15.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:15.742" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:15.742" starttime="20210126 13:30:11.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:15.743" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:15.743" starttime="20210126 13:30:15.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:15.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:15.744" starttime="20210126 13:30:15.744"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:15.744" starttime="20210126 13:30:11.835"></status>
</kw>
<msg timestamp="20210126 13:30:15.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:15.744" starttime="20210126 13:30:11.835"></status>
</kw>
<msg timestamp="20210126 13:30:15.745" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:30:15.745" starttime="20210126 13:30:11.834"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:15.745" starttime="20210126 13:30:15.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:15.749" level="INFO">Running command 'ozone sh key info o3:///89622-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:18.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:18.398" level="INFO">${output} = {
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:38.605Z",
  "modificationTime": "2021-01-26T13:29:40.136Z",
  "rep...</msg>
<status status="PASS" endtime="20210126 13:30:18.398" starttime="20210126 13:30:15.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:18.399" level="INFO">{
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:38.605Z",
  "modificationTime": "2021-01-26T13:29:40.136Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622259538591870,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:30:18.399" starttime="20210126 13:30:18.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:18.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:18.400" starttime="20210126 13:30:18.400"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:18.400" starttime="20210126 13:30:15.747"></status>
</kw>
<msg timestamp="20210126 13:30:18.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:18.401" starttime="20210126 13:30:15.746"></status>
</kw>
<msg timestamp="20210126 13:30:18.401" level="INFO">${result} = {
  "volumeName": "89622-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:29:38.605Z",
  "modificationTime": "2021-01-26T13:29:40.136Z",
  "rep...</msg>
<status status="PASS" endtime="20210126 13:30:18.401" starttime="20210126 13:30:15.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:18.401" starttime="20210126 13:30:18.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:18.405" level="INFO">Running command 'ozone sh key list o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:21.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:21.100" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 13:30:21.100" starttime="20210126 13:30:18.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:21.101" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 13:30:21.101" starttime="20210126 13:30:21.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:21.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:21.102" starttime="20210126 13:30:21.101"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:21.102" starttime="20210126 13:30:18.402"></status>
</kw>
<msg timestamp="20210126 13:30:21.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:21.102" starttime="20210126 13:30:18.402"></status>
</kw>
<msg timestamp="20210126 13:30:21.103" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210126 13:30:21.103" starttime="20210126 13:30:18.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:21.103" starttime="20210126 13:30:21.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:21.107" level="INFO">Running command 'ozone sh key rename o3:///89622-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:23.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:23.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:23.854" starttime="20210126 13:30:21.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:23.856" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:23.856" starttime="20210126 13:30:23.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:23.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:23.856" starttime="20210126 13:30:23.856"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:23.856" starttime="20210126 13:30:21.104"></status>
</kw>
<msg timestamp="20210126 13:30:23.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:23.857" starttime="20210126 13:30:21.104"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:23.857" starttime="20210126 13:30:21.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:23.860" level="INFO">Running command 'ozone sh key list o3:///89622-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:26.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:26.481" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210126 13:30:26.481" starttime="20210126 13:30:23.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:26.482" level="INFO">key2</msg>
<status status="PASS" endtime="20210126 13:30:26.482" starttime="20210126 13:30:26.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:26.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:26.482" starttime="20210126 13:30:26.482"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:26.483" starttime="20210126 13:30:23.858"></status>
</kw>
<msg timestamp="20210126 13:30:26.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:26.483" starttime="20210126 13:30:23.858"></status>
</kw>
<msg timestamp="20210126 13:30:26.483" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210126 13:30:26.483" starttime="20210126 13:30:23.857"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:26.483" starttime="20210126 13:30:26.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:26.487" level="INFO">Running command 'ozone sh key delete o3:///89622-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:28.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:28.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:28.842" starttime="20210126 13:30:26.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:28.843" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:28.843" starttime="20210126 13:30:28.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:28.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:28.843" starttime="20210126 13:30:28.843"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:28.844" starttime="20210126 13:30:26.485"></status>
</kw>
<msg timestamp="20210126 13:30:28.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:28.844" starttime="20210126 13:30:26.484"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:28.844" starttime="20210126 13:30:26.484"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:28.844" starttime="20210126 13:29:36.074"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:28.844" starttime="20210126 13:29:36.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:28.848" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:31.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:31.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:31.315" starttime="20210126 13:30:28.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:31.316" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:31.316" starttime="20210126 13:30:31.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:31.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:31.317" starttime="20210126 13:30:31.316"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:31.317" starttime="20210126 13:30:28.845"></status>
</kw>
<msg timestamp="20210126 13:30:31.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:31.317" starttime="20210126 13:30:28.845"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:31.317" starttime="20210126 13:30:28.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:31.321" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport | jq -r '. | select(.name=="89622-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:33.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:33.968" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:30:33.968" starttime="20210126 13:30:31.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:33.969" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:30:33.969" starttime="20210126 13:30:33.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:33.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:33.970" starttime="20210126 13:30:33.969"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:33.970" starttime="20210126 13:30:31.318"></status>
</kw>
<msg timestamp="20210126 13:30:33.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:33.970" starttime="20210126 13:30:31.318"></status>
</kw>
<msg timestamp="20210126 13:30:33.970" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:30:33.970" starttime="20210126 13:30:31.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:33.971" starttime="20210126 13:30:33.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:33.974" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:36.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:36.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:36.472" starttime="20210126 13:30:33.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:36.473" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:36.473" starttime="20210126 13:30:36.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:36.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:36.473" starttime="20210126 13:30:36.473"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:36.474" starttime="20210126 13:30:33.972"></status>
</kw>
<msg timestamp="20210126 13:30:36.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:36.474" starttime="20210126 13:30:33.971"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:36.474" starttime="20210126 13:30:33.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:36.478" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport | jq -r '. | select(.name=="89622-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:39.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:39.152" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:30:39.152" starttime="20210126 13:30:36.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:39.153" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:30:39.154" starttime="20210126 13:30:39.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:39.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:39.154" starttime="20210126 13:30:39.154"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:39.155" starttime="20210126 13:30:36.475"></status>
</kw>
<msg timestamp="20210126 13:30:39.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:39.155" starttime="20210126 13:30:36.475"></status>
</kw>
<msg timestamp="20210126 13:30:39.155" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:30:39.155" starttime="20210126 13:30:36.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:39.155" starttime="20210126 13:30:39.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:39.159" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///89622-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:41.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:41.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:41.614" starttime="20210126 13:30:39.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:41.615" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:41.615" starttime="20210126 13:30:41.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:41.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:41.615" starttime="20210126 13:30:41.615"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:41.616" starttime="20210126 13:30:39.156"></status>
</kw>
<msg timestamp="20210126 13:30:41.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:41.616" starttime="20210126 13:30:39.156"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:41.616" starttime="20210126 13:30:39.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:41.619" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:44.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:44.363" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:30:44.363" starttime="20210126 13:30:41.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:44.364" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:30:44.364" starttime="20210126 13:30:44.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:44.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:44.365" starttime="20210126 13:30:44.364"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:44.365" starttime="20210126 13:30:41.617"></status>
</kw>
<msg timestamp="20210126 13:30:44.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:44.365" starttime="20210126 13:30:41.617"></status>
</kw>
<msg timestamp="20210126 13:30:44.365" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:30:44.365" starttime="20210126 13:30:41.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:44.366" starttime="20210126 13:30:44.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:44.369" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///89622-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:46.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:46.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:46.569" starttime="20210126 13:30:44.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:46.570" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:46.570" starttime="20210126 13:30:46.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:46.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:46.571" starttime="20210126 13:30:46.570"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:46.571" starttime="20210126 13:30:44.367"></status>
</kw>
<msg timestamp="20210126 13:30:46.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:46.571" starttime="20210126 13:30:44.367"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:46.571" starttime="20210126 13:30:44.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:46.575" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:49.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:49.124" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:30:49.124" starttime="20210126 13:30:46.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:49.125" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:30:49.125" starttime="20210126 13:30:49.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:49.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:49.126" starttime="20210126 13:30:49.126"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:49.126" starttime="20210126 13:30:46.572"></status>
</kw>
<msg timestamp="20210126 13:30:49.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:49.126" starttime="20210126 13:30:46.572"></status>
</kw>
<msg timestamp="20210126 13:30:49.127" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:30:49.127" starttime="20210126 13:30:46.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:49.127" starttime="20210126 13:30:49.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:49.130" level="INFO">Running command 'ozone sh bucket delete o3:///89622-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:51.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:51.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:51.391" starttime="20210126 13:30:49.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:51.392" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:51.392" starttime="20210126 13:30:51.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:51.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:51.392" starttime="20210126 13:30:51.392"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:51.393" starttime="20210126 13:30:49.128"></status>
</kw>
<msg timestamp="20210126 13:30:51.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:51.393" starttime="20210126 13:30:49.128"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:51.393" starttime="20210126 13:30:49.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:51.396" level="INFO">Running command 'ozone sh volume delete o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:53.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:53.777" level="INFO">${output} = Volume 89622-rpcwport is deleted</msg>
<status status="PASS" endtime="20210126 13:30:53.777" starttime="20210126 13:30:51.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:53.778" level="INFO">Volume 89622-rpcwport is deleted</msg>
<status status="PASS" endtime="20210126 13:30:53.778" starttime="20210126 13:30:53.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:53.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:53.779" starttime="20210126 13:30:53.778"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:53.779" starttime="20210126 13:30:51.394"></status>
</kw>
<msg timestamp="20210126 13:30:53.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:53.779" starttime="20210126 13:30:51.394"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:53.779" starttime="20210126 13:30:51.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:53.783" level="INFO">Running command 'ozone sh volume create o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:56.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:30:56.265" starttime="20210126 13:30:53.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:56.266" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:30:56.266" starttime="20210126 13:30:56.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:56.267" starttime="20210126 13:30:56.266"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:56.267" starttime="20210126 13:30:53.780"></status>
</kw>
<msg timestamp="20210126 13:30:56.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:56.267" starttime="20210126 13:30:53.780"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:56.268" starttime="20210126 13:30:53.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:56.271" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport | jq -r '. | select(.name=="89622-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:30:58.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:30:58.878" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:30:58.878" starttime="20210126 13:30:56.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:30:58.879" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:30:58.879" starttime="20210126 13:30:58.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:30:58.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:30:58.880" starttime="20210126 13:30:58.879"></status>
</kw>
<status status="PASS" endtime="20210126 13:30:58.880" starttime="20210126 13:30:56.269"></status>
</kw>
<msg timestamp="20210126 13:30:58.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:30:58.880" starttime="20210126 13:30:56.268"></status>
</kw>
<msg timestamp="20210126 13:30:58.880" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:30:58.880" starttime="20210126 13:30:56.268"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:30:58.881" starttime="20210126 13:30:58.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:30:58.884" level="INFO">Running command 'ozone sh volume info o3:///89622-rpcwport | jq -r '. | select(.name=="89622-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:01.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:01.330" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:31:01.330" starttime="20210126 13:30:58.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:01.331" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:31:01.331" starttime="20210126 13:31:01.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:01.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:01.332" starttime="20210126 13:31:01.332"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:01.332" starttime="20210126 13:30:58.882"></status>
</kw>
<msg timestamp="20210126 13:31:01.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:01.333" starttime="20210126 13:30:58.882"></status>
</kw>
<msg timestamp="20210126 13:31:01.333" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:31:01.333" starttime="20210126 13:30:58.881"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:01.333" starttime="20210126 13:31:01.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:01.337" level="INFO">Running command 'ozone sh bucket create o3:///89622-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:03.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:03.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:03.721" starttime="20210126 13:31:01.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:03.723" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:03.723" starttime="20210126 13:31:03.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:03.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:03.723" starttime="20210126 13:31:03.723"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:03.724" starttime="20210126 13:31:01.334"></status>
</kw>
<msg timestamp="20210126 13:31:03.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:03.724" starttime="20210126 13:31:01.334"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:03.724" starttime="20210126 13:31:01.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:03.727" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:06.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:06.560" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:31:06.560" starttime="20210126 13:31:03.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:06.561" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:31:06.561" starttime="20210126 13:31:06.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:06.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:06.562" starttime="20210126 13:31:06.561"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:06.562" starttime="20210126 13:31:03.725"></status>
</kw>
<msg timestamp="20210126 13:31:06.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:06.562" starttime="20210126 13:31:03.725"></status>
</kw>
<msg timestamp="20210126 13:31:06.563" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:31:06.563" starttime="20210126 13:31:03.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:06.563" starttime="20210126 13:31:06.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:06.567" level="INFO">Running command 'ozone sh bucket info o3:///89622-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:09.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:09.290" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:31:09.290" starttime="20210126 13:31:06.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:09.291" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:31:09.291" starttime="20210126 13:31:09.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:09.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:09.291" starttime="20210126 13:31:09.291"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:09.292" starttime="20210126 13:31:06.565"></status>
</kw>
<msg timestamp="20210126 13:31:09.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:09.292" starttime="20210126 13:31:06.564"></status>
</kw>
<msg timestamp="20210126 13:31:09.292" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:31:09.292" starttime="20210126 13:31:06.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:09.293" starttime="20210126 13:31:09.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:09.296" level="INFO">Running command 'ozone sh bucket delete o3:///89622-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:11.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:11.794" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:11.794" starttime="20210126 13:31:09.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:11.795" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:11.795" starttime="20210126 13:31:11.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:11.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:11.796" starttime="20210126 13:31:11.795"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:11.796" starttime="20210126 13:31:09.294"></status>
</kw>
<msg timestamp="20210126 13:31:11.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:11.796" starttime="20210126 13:31:09.293"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:11.796" starttime="20210126 13:31:09.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:11.800" level="INFO">Running command 'ozone sh volume delete o3:///89622-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:14.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:14.197" level="INFO">${output} = Volume 89622-rpcwport is deleted</msg>
<status status="PASS" endtime="20210126 13:31:14.197" starttime="20210126 13:31:11.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:14.198" level="INFO">Volume 89622-rpcwport is deleted</msg>
<status status="PASS" endtime="20210126 13:31:14.198" starttime="20210126 13:31:14.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:14.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:14.198" starttime="20210126 13:31:14.198"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:14.199" starttime="20210126 13:31:11.797"></status>
</kw>
<msg timestamp="20210126 13:31:14.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:14.199" starttime="20210126 13:31:11.797"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:14.199" starttime="20210126 13:31:11.796"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:14.199" starttime="20210126 13:28:59.214"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:31:14.199" critical="yes" starttime="20210126 13:28:59.213"></status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:14.201" starttime="20210126 13:31:14.201"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:14.205" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:16.628" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:31:16.628" level="INFO">${output} = VOLUME_NOT_FOUND Volume 89622-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210126 13:31:16.628" starttime="20210126 13:31:14.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:16.630" level="INFO">VOLUME_NOT_FOUND Volume 89622-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210126 13:31:16.630" starttime="20210126 13:31:16.629"></status>
</kw>
<msg timestamp="20210126 13:31:16.630" level="INFO">${result} = VOLUME_NOT_FOUND Volume 89622-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210126 13:31:16.630" starttime="20210126 13:31:14.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:16.630" starttime="20210126 13:31:16.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:16.634" level="INFO">Running command 'ozone sh volume create /89622-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:18.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:18.929" starttime="20210126 13:31:16.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:18.930" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:18.930" starttime="20210126 13:31:18.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:18.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:18.931" starttime="20210126 13:31:18.931"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:18.931" starttime="20210126 13:31:16.632"></status>
</kw>
<msg timestamp="20210126 13:31:18.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:18.931" starttime="20210126 13:31:16.631"></status>
</kw>
<msg timestamp="20210126 13:31:18.932" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:31:18.932" starttime="20210126 13:31:16.631"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:18.932" starttime="20210126 13:31:18.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:18.936" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="89622-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:21.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:21.782" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210126 13:31:21.782" starttime="20210126 13:31:18.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:21.783" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:31:18.863Z",
  "modificationTime": "2021-01-26T13:31:18.863Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:31:21.783" starttime="20210126 13:31:21.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:21.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:21.783" starttime="20210126 13:31:21.783"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:21.784" starttime="20210126 13:31:18.933"></status>
</kw>
<msg timestamp="20210126 13:31:21.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:21.784" starttime="20210126 13:31:18.933"></status>
</kw>
<msg timestamp="20210126 13:31:21.784" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210126 13:31:21.784" starttime="20210126 13:31:18.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:21.785" starttime="20210126 13:31:21.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:21.788" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="89622-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:24.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:24.475" level="INFO">${output} = {
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210126 13:31:24.475" starttime="20210126 13:31:21.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:24.476" level="INFO">{
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-01-26T13:31:18.863Z",
  "modificationTime": "2021-01-26T13:31:18.863Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210126 13:31:24.477" starttime="20210126 13:31:24.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:24.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:24.477" starttime="20210126 13:31:24.477"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:24.477" starttime="20210126 13:31:21.786"></status>
</kw>
<msg timestamp="20210126 13:31:24.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:24.478" starttime="20210126 13:31:21.786"></status>
</kw>
<msg timestamp="20210126 13:31:24.478" level="INFO">${result} = {
  "metadata": {},
  "name": "89622-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021...</msg>
<status status="PASS" endtime="20210126 13:31:24.478" starttime="20210126 13:31:21.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:24.478" starttime="20210126 13:31:24.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:24.482" level="INFO">Running command 'ozone sh volume setquota /89622-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:26.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:26.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:26.614" starttime="20210126 13:31:24.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:26.615" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:26.615" starttime="20210126 13:31:26.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:26.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:26.615" starttime="20210126 13:31:26.615"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:26.615" starttime="20210126 13:31:24.479"></status>
</kw>
<msg timestamp="20210126 13:31:26.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:26.616" starttime="20210126 13:31:24.479"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:26.616" starttime="20210126 13:31:24.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:26.620" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme | jq -r '. | select(.name=="89622-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:29.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:29.240" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:29.240" starttime="20210126 13:31:26.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:29.242" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:29.242" starttime="20210126 13:31:29.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:29.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:29.242" starttime="20210126 13:31:29.242"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:29.242" starttime="20210126 13:31:26.617"></status>
</kw>
<msg timestamp="20210126 13:31:29.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:29.243" starttime="20210126 13:31:26.617"></status>
</kw>
<msg timestamp="20210126 13:31:29.243" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:29.243" starttime="20210126 13:31:26.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:29.243" starttime="20210126 13:31:29.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:29.247" level="INFO">Running command 'ozone sh bucket create /89622-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:31.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:31.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:31.710" starttime="20210126 13:31:29.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:31.711" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:31.711" starttime="20210126 13:31:31.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:31.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:31.711" starttime="20210126 13:31:31.711"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:31.712" starttime="20210126 13:31:29.244"></status>
</kw>
<msg timestamp="20210126 13:31:31.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:31.712" starttime="20210126 13:31:29.244"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:31.712" starttime="20210126 13:31:29.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:31.715" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:34.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:34.466" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210126 13:31:34.467" starttime="20210126 13:31:31.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:34.468" level="INFO">DISK</msg>
<status status="PASS" endtime="20210126 13:31:34.468" starttime="20210126 13:31:34.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:34.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:34.468" starttime="20210126 13:31:34.468"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:34.469" starttime="20210126 13:31:31.713"></status>
</kw>
<msg timestamp="20210126 13:31:34.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:34.469" starttime="20210126 13:31:31.713"></status>
</kw>
<msg timestamp="20210126 13:31:34.469" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210126 13:31:34.469" starttime="20210126 13:31:31.712"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:34.470" starttime="20210126 13:31:34.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:34.473" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:37.205" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:37.206" starttime="20210126 13:31:34.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:37.207" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:37.207" starttime="20210126 13:31:37.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:37.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:37.207" starttime="20210126 13:31:37.207"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:37.208" starttime="20210126 13:31:34.471"></status>
</kw>
<msg timestamp="20210126 13:31:37.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:37.208" starttime="20210126 13:31:34.470"></status>
</kw>
<msg timestamp="20210126 13:31:37.208" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210126 13:31:37.208" starttime="20210126 13:31:34.470"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:37.209" starttime="20210126 13:31:37.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:37.212" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:39.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:39.820" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210126 13:31:39.820" starttime="20210126 13:31:37.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:39.821" level="INFO">100</msg>
<status status="PASS" endtime="20210126 13:31:39.821" starttime="20210126 13:31:39.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:39.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:39.821" starttime="20210126 13:31:39.821"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:39.822" starttime="20210126 13:31:37.210"></status>
</kw>
<msg timestamp="20210126 13:31:39.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:39.822" starttime="20210126 13:31:37.210"></status>
</kw>
<msg timestamp="20210126 13:31:39.822" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210126 13:31:39.822" starttime="20210126 13:31:37.209"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:39.823" starttime="20210126 13:31:39.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:39.826" level="INFO">Running command 'ozone sh bucket setquota /89622-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:42.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:42.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:42.182" starttime="20210126 13:31:39.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:42.183" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:42.183" starttime="20210126 13:31:42.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:42.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:42.184" starttime="20210126 13:31:42.184"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:42.185" starttime="20210126 13:31:39.824"></status>
</kw>
<msg timestamp="20210126 13:31:42.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:42.185" starttime="20210126 13:31:39.823"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:42.185" starttime="20210126 13:31:39.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:42.188" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:44.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:44.630" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:31:44.631" starttime="20210126 13:31:42.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:44.632" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210126 13:31:44.632" starttime="20210126 13:31:44.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:44.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:44.632" starttime="20210126 13:31:44.632"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:44.633" starttime="20210126 13:31:42.186"></status>
</kw>
<msg timestamp="20210126 13:31:44.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:44.633" starttime="20210126 13:31:42.186"></status>
</kw>
<msg timestamp="20210126 13:31:44.633" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210126 13:31:44.633" starttime="20210126 13:31:42.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:44.634" starttime="20210126 13:31:44.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:44.637" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:47.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:47.229" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210126 13:31:47.229" starttime="20210126 13:31:44.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:47.230" level="INFO">1000</msg>
<status status="PASS" endtime="20210126 13:31:47.230" starttime="20210126 13:31:47.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:47.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:47.232" starttime="20210126 13:31:47.231"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:47.232" starttime="20210126 13:31:44.635"></status>
</kw>
<msg timestamp="20210126 13:31:47.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:47.232" starttime="20210126 13:31:44.635"></status>
</kw>
<msg timestamp="20210126 13:31:47.232" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210126 13:31:47.232" starttime="20210126 13:31:44.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:47.233" starttime="20210126 13:31:47.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:47.236" level="INFO">Running command 'ozone sh bucket list /89622-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:49.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:49.842" level="INFO">${output} = 89622-rpcwoscheme</msg>
<status status="PASS" endtime="20210126 13:31:49.843" starttime="20210126 13:31:47.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:49.844" level="INFO">89622-rpcwoscheme</msg>
<status status="PASS" endtime="20210126 13:31:49.844" starttime="20210126 13:31:49.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:49.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:49.844" starttime="20210126 13:31:49.844"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:49.845" starttime="20210126 13:31:47.234"></status>
</kw>
<msg timestamp="20210126 13:31:49.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:49.845" starttime="20210126 13:31:47.234"></status>
</kw>
<msg timestamp="20210126 13:31:49.845" level="INFO">${result} = 89622-rpcwoscheme</msg>
<status status="PASS" endtime="20210126 13:31:49.845" starttime="20210126 13:31:47.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:31:49.846" starttime="20210126 13:31:49.845"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:49.850" level="INFO">Running command 'ozone sh key put /89622-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:54.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:54.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:54.120" starttime="20210126 13:31:49.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:54.121" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:54.121" starttime="20210126 13:31:54.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:54.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:54.121" starttime="20210126 13:31:54.121"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:54.122" starttime="20210126 13:31:49.847"></status>
</kw>
<msg timestamp="20210126 13:31:54.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:54.122" starttime="20210126 13:31:49.847"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:54.122" starttime="20210126 13:31:49.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:54.125" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:54.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:54.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:54.128" starttime="20210126 13:31:54.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:54.128" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:54.128" starttime="20210126 13:31:54.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:54.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:54.129" starttime="20210126 13:31:54.129"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:54.129" starttime="20210126 13:31:54.123"></status>
</kw>
<msg timestamp="20210126 13:31:54.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:54.129" starttime="20210126 13:31:54.123"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:54.130" starttime="20210126 13:31:54.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:54.133" level="INFO">Running command 'ozone sh key get /89622-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:58.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:58.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:58.239" starttime="20210126 13:31:54.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:58.240" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:58.240" starttime="20210126 13:31:58.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:58.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:58.241" starttime="20210126 13:31:58.240"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:58.241" starttime="20210126 13:31:54.131"></status>
</kw>
<msg timestamp="20210126 13:31:58.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:58.241" starttime="20210126 13:31:54.130"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:58.241" starttime="20210126 13:31:54.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:58.245" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:31:58.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:31:58.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:31:58.247" starttime="20210126 13:31:58.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:31:58.248" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:31:58.248" starttime="20210126 13:31:58.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:31:58.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:31:58.248" starttime="20210126 13:31:58.248"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:58.249" starttime="20210126 13:31:58.242"></status>
</kw>
<msg timestamp="20210126 13:31:58.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:31:58.249" starttime="20210126 13:31:58.242"></status>
</kw>
<status status="PASS" endtime="20210126 13:31:58.249" starttime="20210126 13:31:58.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:31:58.252" level="INFO">Running command 'ozone sh key put -t RATIS /89622-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:02.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:02.850" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:02.850" starttime="20210126 13:31:58.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:02.851" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:02.851" starttime="20210126 13:32:02.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:02.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:02.852" starttime="20210126 13:32:02.851"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:02.852" starttime="20210126 13:31:58.250"></status>
</kw>
<msg timestamp="20210126 13:32:02.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:02.852" starttime="20210126 13:31:58.250"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:02.852" starttime="20210126 13:31:58.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:02.855" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:02.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:02.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:02.858" starttime="20210126 13:32:02.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:02.859" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:02.859" starttime="20210126 13:32:02.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:02.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:02.859" starttime="20210126 13:32:02.859"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:02.859" starttime="20210126 13:32:02.853"></status>
</kw>
<msg timestamp="20210126 13:32:02.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:02.860" starttime="20210126 13:32:02.853"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:02.860" starttime="20210126 13:32:02.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:02.864" level="INFO">Running command 'ozone sh key get /89622-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:07.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:07.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:07.183" starttime="20210126 13:32:02.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:07.184" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:07.184" starttime="20210126 13:32:07.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:07.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:07.185" starttime="20210126 13:32:07.184"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:07.185" starttime="20210126 13:32:02.861"></status>
</kw>
<msg timestamp="20210126 13:32:07.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:07.185" starttime="20210126 13:32:02.861"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:07.185" starttime="20210126 13:32:02.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:07.188" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:07.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:07.191" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:07.191" starttime="20210126 13:32:07.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:07.191" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:07.192" starttime="20210126 13:32:07.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:07.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:07.192" starttime="20210126 13:32:07.192"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:07.192" starttime="20210126 13:32:07.186"></status>
</kw>
<msg timestamp="20210126 13:32:07.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:07.193" starttime="20210126 13:32:07.186"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:07.193" starttime="20210126 13:32:07.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:07.196" level="INFO">Running command 'ozone sh key info /89622-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:09.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:09.824" level="INFO">${output} = {
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:32:00.757Z",
  "modificationTime": "2021-01-26T13:32:02.349Z...</msg>
<status status="PASS" endtime="20210126 13:32:09.824" starttime="20210126 13:32:07.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:09.826" level="INFO">{
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:32:00.757Z",
  "modificationTime": "2021-01-26T13:32:02.349Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622268854665360,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:32:09.826" starttime="20210126 13:32:09.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:09.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:09.826" starttime="20210126 13:32:09.826"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:09.827" starttime="20210126 13:32:07.194"></status>
</kw>
<msg timestamp="20210126 13:32:09.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:09.827" starttime="20210126 13:32:07.193"></status>
</kw>
<msg timestamp="20210126 13:32:09.827" level="INFO">${result} = {
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:32:00.757Z",
  "modificationTime": "2021-01-26T13:32:02.349Z...</msg>
<status status="PASS" endtime="20210126 13:32:09.827" starttime="20210126 13:32:07.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:09.827" starttime="20210126 13:32:09.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:09.831" level="INFO">Running command 'ozone sh key delete /89622-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:12.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:12.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:12.392" starttime="20210126 13:32:09.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:12.393" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:12.393" starttime="20210126 13:32:12.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:12.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:12.394" starttime="20210126 13:32:12.393"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:12.394" starttime="20210126 13:32:09.828"></status>
</kw>
<msg timestamp="20210126 13:32:12.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:12.394" starttime="20210126 13:32:09.828"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:12.394" starttime="20210126 13:32:09.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:12.398" level="INFO">Running command 'ozone sh key cp /89622-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:16.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:16.969" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:16.969" starttime="20210126 13:32:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:16.970" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:16.970" starttime="20210126 13:32:16.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:16.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:16.970" starttime="20210126 13:32:16.970"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:16.971" starttime="20210126 13:32:12.395"></status>
</kw>
<msg timestamp="20210126 13:32:16.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:16.971" starttime="20210126 13:32:12.395"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:16.971" starttime="20210126 13:32:12.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:16.974" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:16.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:16.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:16.976" starttime="20210126 13:32:16.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:16.977" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:16.977" starttime="20210126 13:32:16.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:16.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:16.978" starttime="20210126 13:32:16.978"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:16.978" starttime="20210126 13:32:16.972"></status>
</kw>
<msg timestamp="20210126 13:32:16.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:16.978" starttime="20210126 13:32:16.972"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:16.979" starttime="20210126 13:32:16.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:16.982" level="INFO">Running command 'ozone sh key get /89622-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:21.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:21.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:21.092" starttime="20210126 13:32:16.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:21.093" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:21.093" starttime="20210126 13:32:21.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:21.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:21.093" starttime="20210126 13:32:21.093"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:21.094" starttime="20210126 13:32:16.979"></status>
</kw>
<msg timestamp="20210126 13:32:21.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:21.094" starttime="20210126 13:32:16.979"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:21.094" starttime="20210126 13:32:16.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:21.097" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:21.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:21.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:21.100" starttime="20210126 13:32:21.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:21.101" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:21.101" starttime="20210126 13:32:21.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:21.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:21.101" starttime="20210126 13:32:21.101"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:21.102" starttime="20210126 13:32:21.095"></status>
</kw>
<msg timestamp="20210126 13:32:21.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:21.102" starttime="20210126 13:32:21.095"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:21.102" starttime="20210126 13:32:21.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:21.106" level="INFO">Running command 'ozone sh key delete /89622-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:23.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:23.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:23.767" starttime="20210126 13:32:21.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:23.768" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:23.768" starttime="20210126 13:32:23.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:23.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:23.769" starttime="20210126 13:32:23.769"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:23.769" starttime="20210126 13:32:21.103"></status>
</kw>
<msg timestamp="20210126 13:32:23.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:23.770" starttime="20210126 13:32:21.103"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:23.770" starttime="20210126 13:32:21.102"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:23.772" level="INFO">Running command 'ozone sh key get /89622-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:26.103" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:32:26.103" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:32:26.103" starttime="20210126 13:32:23.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:26.104" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:32:26.104" starttime="20210126 13:32:26.103"></status>
</kw>
<msg timestamp="20210126 13:32:26.105" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20210126 13:32:26.105" starttime="20210126 13:32:23.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:26.105" starttime="20210126 13:32:26.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:26.109" level="INFO">Running command 'ozone sh key get --force /89622-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:30.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:30.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:30.381" starttime="20210126 13:32:26.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:30.382" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:30.382" starttime="20210126 13:32:30.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:30.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:30.383" starttime="20210126 13:32:30.383"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:30.383" starttime="20210126 13:32:26.106"></status>
</kw>
<msg timestamp="20210126 13:32:30.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:30.383" starttime="20210126 13:32:26.106"></status>
</kw>
<msg timestamp="20210126 13:32:30.384" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:32:30.384" starttime="20210126 13:32:26.105"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:30.384" starttime="20210126 13:32:30.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:30.388" level="INFO">Running command 'ozone sh key info /89622-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:33.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:33.053" level="INFO">${output} = {
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:31:52.094Z",
  "modificationTime": "2021-01-26T13:31:53.628Z",
  "...</msg>
<status status="PASS" endtime="20210126 13:32:33.053" starttime="20210126 13:32:30.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:33.055" level="INFO">{
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:31:52.094Z",
  "modificationTime": "2021-01-26T13:31:53.628Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105622268285550740,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20210126 13:32:33.055" starttime="20210126 13:32:33.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:33.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:33.055" starttime="20210126 13:32:33.055"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:33.056" starttime="20210126 13:32:30.385"></status>
</kw>
<msg timestamp="20210126 13:32:33.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:33.056" starttime="20210126 13:32:30.385"></status>
</kw>
<msg timestamp="20210126 13:32:33.056" level="INFO">${result} = {
  "volumeName": "89622-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2021-01-26T13:31:52.094Z",
  "modificationTime": "2021-01-26T13:31:53.628Z",
  "...</msg>
<status status="PASS" endtime="20210126 13:32:33.056" starttime="20210126 13:32:30.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:33.057" starttime="20210126 13:32:33.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:33.060" level="INFO">Running command 'ozone sh key list /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:35.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:35.869" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 13:32:35.869" starttime="20210126 13:32:33.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:35.871" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 13:32:35.871" starttime="20210126 13:32:35.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:35.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:35.871" starttime="20210126 13:32:35.871"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:35.872" starttime="20210126 13:32:33.058"></status>
</kw>
<msg timestamp="20210126 13:32:35.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:35.872" starttime="20210126 13:32:33.058"></status>
</kw>
<msg timestamp="20210126 13:32:35.872" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20210126 13:32:35.872" starttime="20210126 13:32:33.057"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:35.873" starttime="20210126 13:32:35.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:35.876" level="INFO">Running command 'ozone sh key rename /89622-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:38.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:38.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:38.430" starttime="20210126 13:32:35.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:38.431" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:38.431" starttime="20210126 13:32:38.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:38.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:38.432" starttime="20210126 13:32:38.431"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:38.432" starttime="20210126 13:32:35.874"></status>
</kw>
<msg timestamp="20210126 13:32:38.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:38.432" starttime="20210126 13:32:35.874"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:38.433" starttime="20210126 13:32:35.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:38.436" level="INFO">Running command 'ozone sh key list /89622-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:40.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:40.937" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20210126 13:32:40.937" starttime="20210126 13:32:38.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:40.938" level="INFO">key2</msg>
<status status="PASS" endtime="20210126 13:32:40.938" starttime="20210126 13:32:40.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:40.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:40.939" starttime="20210126 13:32:40.939"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:40.939" starttime="20210126 13:32:38.434"></status>
</kw>
<msg timestamp="20210126 13:32:40.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:40.939" starttime="20210126 13:32:38.433"></status>
</kw>
<msg timestamp="20210126 13:32:40.940" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20210126 13:32:40.940" starttime="20210126 13:32:38.433"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:40.940" starttime="20210126 13:32:40.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:40.943" level="INFO">Running command 'ozone sh key delete /89622-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:43.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:43.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:43.379" starttime="20210126 13:32:40.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:43.380" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:43.380" starttime="20210126 13:32:43.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:43.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:32:43.380"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:32:40.941"></status>
</kw>
<msg timestamp="20210126 13:32:43.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:32:40.941"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:32:40.940"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:31:49.846"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:43.381" starttime="20210126 13:31:49.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:43.385" level="INFO">Running command 'ozone sh volume clrquota --space-quota /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:45.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:45.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:45.895" starttime="20210126 13:32:43.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:45.896" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:45.896" starttime="20210126 13:32:45.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:45.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:45.897" starttime="20210126 13:32:45.896"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:45.897" starttime="20210126 13:32:43.382"></status>
</kw>
<msg timestamp="20210126 13:32:45.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:45.897" starttime="20210126 13:32:43.382"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:45.897" starttime="20210126 13:32:43.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:45.901" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme | jq -r '. | select(.name=="89622-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:48.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:48.656" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:32:48.656" starttime="20210126 13:32:45.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:48.658" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:32:48.658" starttime="20210126 13:32:48.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:48.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:48.658" starttime="20210126 13:32:48.658"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:48.658" starttime="20210126 13:32:45.899"></status>
</kw>
<msg timestamp="20210126 13:32:48.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:48.659" starttime="20210126 13:32:45.898"></status>
</kw>
<msg timestamp="20210126 13:32:48.659" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:32:48.659" starttime="20210126 13:32:45.898"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:48.659" starttime="20210126 13:32:48.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:48.663" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:51.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:51.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:51.318" starttime="20210126 13:32:48.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:51.319" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:51.319" starttime="20210126 13:32:51.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:51.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:51.320" starttime="20210126 13:32:51.319"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:51.320" starttime="20210126 13:32:48.660"></status>
</kw>
<msg timestamp="20210126 13:32:51.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:51.320" starttime="20210126 13:32:48.660"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:51.320" starttime="20210126 13:32:48.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:51.324" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme | jq -r '. | select(.name=="89622-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:54.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:54.027" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:32:54.027" starttime="20210126 13:32:51.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:54.028" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:32:54.029" starttime="20210126 13:32:54.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:54.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:54.029" starttime="20210126 13:32:54.029"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:54.029" starttime="20210126 13:32:51.322"></status>
</kw>
<msg timestamp="20210126 13:32:54.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:54.030" starttime="20210126 13:32:51.321"></status>
</kw>
<msg timestamp="20210126 13:32:54.030" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:32:54.030" starttime="20210126 13:32:51.321"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:54.030" starttime="20210126 13:32:54.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:54.034" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /89622-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:56.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:56.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:32:56.560" starttime="20210126 13:32:54.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:56.561" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:32:56.562" starttime="20210126 13:32:56.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:56.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:56.562" starttime="20210126 13:32:56.562"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:56.563" starttime="20210126 13:32:54.031"></status>
</kw>
<msg timestamp="20210126 13:32:56.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:56.563" starttime="20210126 13:32:54.031"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:56.563" starttime="20210126 13:32:54.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:56.567" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:32:59.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:32:59.322" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:32:59.322" starttime="20210126 13:32:56.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:32:59.323" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:32:59.323" starttime="20210126 13:32:59.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:32:59.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:32:59.324" starttime="20210126 13:32:59.323"></status>
</kw>
<status status="PASS" endtime="20210126 13:32:59.324" starttime="20210126 13:32:56.564"></status>
</kw>
<msg timestamp="20210126 13:32:59.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:32:59.324" starttime="20210126 13:32:56.564"></status>
</kw>
<msg timestamp="20210126 13:32:59.324" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:32:59.325" starttime="20210126 13:32:56.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:32:59.325" starttime="20210126 13:32:59.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:32:59.329" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /89622-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:01.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:01.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:01.717" starttime="20210126 13:32:59.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:01.718" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:01.718" starttime="20210126 13:33:01.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:01.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:01.719" starttime="20210126 13:33:01.718"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:01.719" starttime="20210126 13:32:59.326"></status>
</kw>
<msg timestamp="20210126 13:33:01.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:01.719" starttime="20210126 13:32:59.326"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:01.719" starttime="20210126 13:32:59.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:01.723" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:04.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:04.425" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:33:04.425" starttime="20210126 13:33:01.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:04.426" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:33:04.426" starttime="20210126 13:33:04.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:04.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:04.427" starttime="20210126 13:33:04.426"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:04.427" starttime="20210126 13:33:01.720"></status>
</kw>
<msg timestamp="20210126 13:33:04.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:04.427" starttime="20210126 13:33:01.720"></status>
</kw>
<msg timestamp="20210126 13:33:04.428" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:33:04.428" starttime="20210126 13:33:01.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:04.428" starttime="20210126 13:33:04.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:04.431" level="INFO">Running command 'ozone sh bucket delete /89622-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:06.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:06.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:06.979" starttime="20210126 13:33:04.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:06.980" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:06.980" starttime="20210126 13:33:06.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:06.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:06.982" starttime="20210126 13:33:06.981"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:06.982" starttime="20210126 13:33:04.429"></status>
</kw>
<msg timestamp="20210126 13:33:06.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:06.982" starttime="20210126 13:33:04.429"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:06.983" starttime="20210126 13:33:04.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:06.986" level="INFO">Running command 'ozone sh volume delete /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:09.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:09.541" level="INFO">${output} = Volume 89622-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210126 13:33:09.542" starttime="20210126 13:33:06.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:09.543" level="INFO">Volume 89622-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210126 13:33:09.543" starttime="20210126 13:33:09.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:09.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:09.543" starttime="20210126 13:33:09.543"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:09.544" starttime="20210126 13:33:06.984"></status>
</kw>
<msg timestamp="20210126 13:33:09.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:09.544" starttime="20210126 13:33:06.983"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:09.544" starttime="20210126 13:33:06.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:09.547" level="INFO">Running command 'ozone sh volume create /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:11.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:11.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:11.986" starttime="20210126 13:33:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:11.987" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:11.987" starttime="20210126 13:33:11.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:11.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:11.988" starttime="20210126 13:33:11.987"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:11.988" starttime="20210126 13:33:09.545"></status>
</kw>
<msg timestamp="20210126 13:33:11.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:11.988" starttime="20210126 13:33:09.545"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:11.988" starttime="20210126 13:33:09.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:11.992" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme | jq -r '. | select(.name=="89622-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:14.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:14.546" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:33:14.546" starttime="20210126 13:33:11.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:14.547" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:33:14.547" starttime="20210126 13:33:14.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:14.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:14.548" starttime="20210126 13:33:14.547"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:14.548" starttime="20210126 13:33:11.990"></status>
</kw>
<msg timestamp="20210126 13:33:14.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:14.548" starttime="20210126 13:33:11.989"></status>
</kw>
<msg timestamp="20210126 13:33:14.549" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:33:14.549" starttime="20210126 13:33:11.989"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:14.549" starttime="20210126 13:33:14.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:14.553" level="INFO">Running command 'ozone sh volume info /89622-rpcwoscheme | jq -r '. | select(.name=="89622-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:17.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:17.220" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:33:17.220" starttime="20210126 13:33:14.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:17.221" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:33:17.221" starttime="20210126 13:33:17.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:17.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:17.222" starttime="20210126 13:33:17.221"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:17.222" starttime="20210126 13:33:14.550"></status>
</kw>
<msg timestamp="20210126 13:33:17.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:17.222" starttime="20210126 13:33:14.550"></status>
</kw>
<msg timestamp="20210126 13:33:17.222" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:33:17.222" starttime="20210126 13:33:14.549"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:17.223" starttime="20210126 13:33:17.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:17.226" level="INFO">Running command 'ozone sh bucket create /89622-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:19.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:19.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:19.825" starttime="20210126 13:33:17.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:19.826" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:19.826" starttime="20210126 13:33:19.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:19.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:19.826" starttime="20210126 13:33:19.826"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:19.827" starttime="20210126 13:33:17.224"></status>
</kw>
<msg timestamp="20210126 13:33:19.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:19.827" starttime="20210126 13:33:17.223"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:19.827" starttime="20210126 13:33:17.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:19.831" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:22.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:22.631" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:33:22.631" starttime="20210126 13:33:19.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:22.632" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:33:22.632" starttime="20210126 13:33:22.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:22.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:22.633" starttime="20210126 13:33:22.632"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:22.633" starttime="20210126 13:33:19.828"></status>
</kw>
<msg timestamp="20210126 13:33:22.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:22.633" starttime="20210126 13:33:19.828"></status>
</kw>
<msg timestamp="20210126 13:33:22.634" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:33:22.634" starttime="20210126 13:33:19.827"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:22.634" starttime="20210126 13:33:22.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:22.637" level="INFO">Running command 'ozone sh bucket info /89622-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:25.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:25.302" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20210126 13:33:25.302" starttime="20210126 13:33:22.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:25.303" level="INFO">-1</msg>
<status status="PASS" endtime="20210126 13:33:25.303" starttime="20210126 13:33:25.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:25.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:25.304" starttime="20210126 13:33:25.303"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:25.304" starttime="20210126 13:33:22.635"></status>
</kw>
<msg timestamp="20210126 13:33:25.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:25.304" starttime="20210126 13:33:22.635"></status>
</kw>
<msg timestamp="20210126 13:33:25.304" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20210126 13:33:25.304" starttime="20210126 13:33:22.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:25.305" starttime="20210126 13:33:25.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:25.309" level="INFO">Running command 'ozone sh bucket delete /89622-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:27.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:27.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:27.817" starttime="20210126 13:33:25.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:27.818" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:27.819" starttime="20210126 13:33:27.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:27.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:27.819" starttime="20210126 13:33:27.819"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:27.819" starttime="20210126 13:33:25.306"></status>
</kw>
<msg timestamp="20210126 13:33:27.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:27.820" starttime="20210126 13:33:25.305"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:27.820" starttime="20210126 13:33:25.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:27.823" level="INFO">Running command 'ozone sh volume delete /89622-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:30.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:30.172" level="INFO">${output} = Volume 89622-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210126 13:33:30.172" starttime="20210126 13:33:27.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:30.173" level="INFO">Volume 89622-rpcwoscheme is deleted</msg>
<status status="PASS" endtime="20210126 13:33:30.173" starttime="20210126 13:33:30.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:30.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:30.174" starttime="20210126 13:33:30.173"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:30.174" starttime="20210126 13:33:27.821"></status>
</kw>
<msg timestamp="20210126 13:33:30.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:30.174" starttime="20210126 13:33:27.820"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:30.174" starttime="20210126 13:33:27.820"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:30.174" starttime="20210126 13:31:14.202"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:33:30.175" critical="yes" starttime="20210126 13:31:14.200"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20210126 13:33:30.176" starttime="20210126 13:25:42.854"></status>
</suite>
<status status="PASS" endtime="20210126 13:33:30.182" starttime="20210126 13:20:22.005"></status>
</suite>
<suite source="/opt/hadoop/smoketest/gdpr" id="s1-s2" name="Gdpr">
<suite source="/opt/hadoop/smoketest/gdpr/gdpr.robot" id="s1-s2-s1" name="Gdpr">
<kw type="setup" name="Generate volume">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 13:33:34.169" level="INFO">${random} = behdi</msg>
<status status="PASS" endtime="20210126 13:33:34.169" starttime="20210126 13:33:34.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210126 13:33:34.170" level="INFO">${volume} = behdi</msg>
<status status="PASS" endtime="20210126 13:33:34.170" starttime="20210126 13:33:34.169"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:34.170" starttime="20210126 13:33:34.168"></status>
</kw>
<test id="s1-s2-s1-t1" name="Test GDPR disabled">
<kw name="Test GDPR(disabled) without explicit options">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:34.176" level="INFO">Running command 'ozone sh volume create /behdi --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:36.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:36.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:36.825" starttime="20210126 13:33:34.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:36.826" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:36.826" starttime="20210126 13:33:36.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:36.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:36.827" starttime="20210126 13:33:36.826"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:36.827" starttime="20210126 13:33:34.172"></status>
</kw>
<msg timestamp="20210126 13:33:36.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:36.827" starttime="20210126 13:33:34.171"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:36.827" starttime="20210126 13:33:34.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:36.830" level="INFO">Running command 'ozone sh bucket create /behdi/mybucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:39.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:39.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:39.342" starttime="20210126 13:33:36.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:39.343" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:39.343" starttime="20210126 13:33:39.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:39.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:39.344" starttime="20210126 13:33:39.343"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:39.344" starttime="20210126 13:33:36.828"></status>
</kw>
<msg timestamp="20210126 13:33:39.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:39.344" starttime="20210126 13:33:36.828"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:39.345" starttime="20210126 13:33:36.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:39.348" level="INFO">Running command 'ozone sh bucket info /behdi/mybucket1 | jq -r '. | select(.name=="mybucket1") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:41.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:41.923" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210126 13:33:41.923" starttime="20210126 13:33:39.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:41.924" level="INFO">null</msg>
<status status="PASS" endtime="20210126 13:33:41.924" starttime="20210126 13:33:41.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:41.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:41.925" starttime="20210126 13:33:41.924"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:41.925" starttime="20210126 13:33:39.346"></status>
</kw>
<msg timestamp="20210126 13:33:41.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:41.925" starttime="20210126 13:33:39.345"></status>
</kw>
<msg timestamp="20210126 13:33:41.925" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210126 13:33:41.925" starttime="20210126 13:33:39.345"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:41.926" starttime="20210126 13:33:41.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket1/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:41.929" level="INFO">Running command 'ozone sh key put /behdi/mybucket1/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:46.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:46.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:46.354" starttime="20210126 13:33:41.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:46.355" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:46.355" starttime="20210126 13:33:46.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:46.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:46.356" starttime="20210126 13:33:46.355"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:46.356" starttime="20210126 13:33:41.927"></status>
</kw>
<msg timestamp="20210126 13:33:46.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:46.356" starttime="20210126 13:33:41.927"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:46.356" starttime="20210126 13:33:41.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:46.360" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:46.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:46.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:46.362" starttime="20210126 13:33:46.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:46.362" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:46.363" starttime="20210126 13:33:46.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:46.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:46.363" starttime="20210126 13:33:46.363"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:46.363" starttime="20210126 13:33:46.357"></status>
</kw>
<msg timestamp="20210126 13:33:46.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:46.364" starttime="20210126 13:33:46.357"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:46.364" starttime="20210126 13:33:46.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:46.367" level="INFO">Running command 'ozone sh key info /behdi/mybucket1/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:48.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:48.931" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210126 13:33:48.931" starttime="20210126 13:33:46.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:48.932" level="INFO">null</msg>
<status status="PASS" endtime="20210126 13:33:48.933" starttime="20210126 13:33:48.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:48.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:48.933" starttime="20210126 13:33:48.933"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:48.933" starttime="20210126 13:33:46.365"></status>
</kw>
<msg timestamp="20210126 13:33:48.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:48.934" starttime="20210126 13:33:46.364"></status>
</kw>
<msg timestamp="20210126 13:33:48.934" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210126 13:33:48.934" starttime="20210126 13:33:46.364"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:48.934" starttime="20210126 13:33:48.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket1/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:48.938" level="INFO">Running command 'ozone sh key delete /behdi/mybucket1/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:51.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:51.424" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:51.424" starttime="20210126 13:33:48.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:51.425" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:51.425" starttime="20210126 13:33:51.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:51.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:51.426" starttime="20210126 13:33:51.425"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:51.426" starttime="20210126 13:33:48.935"></status>
</kw>
<msg timestamp="20210126 13:33:51.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:51.426" starttime="20210126 13:33:48.935"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:51.426" starttime="20210126 13:33:48.934"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:51.426" starttime="20210126 13:33:34.171"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:33:51.427" critical="yes" starttime="20210126 13:33:34.170"></status>
</test>
<test id="s1-s2-s1-t2" name="Test GDPR --enforcegdpr=true">
<kw name="Test GDPR with --enforcegdpr=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create --enforcegdpr=true /${volume}/mybucket2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:51.432" level="INFO">Running command 'ozone sh bucket create --enforcegdpr=true /behdi/mybucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:53.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:53.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:33:53.977" starttime="20210126 13:33:51.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:53.978" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:33:53.979" starttime="20210126 13:33:53.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:53.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:53.979" starttime="20210126 13:33:53.979"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:53.979" starttime="20210126 13:33:51.429"></status>
</kw>
<msg timestamp="20210126 13:33:53.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:53.980" starttime="20210126 13:33:51.429"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:53.980" starttime="20210126 13:33:51.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:53.983" level="INFO">Running command 'ozone sh bucket info /behdi/mybucket2 | jq -r '. | select(.name=="mybucket2") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:33:56.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:33:56.662" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210126 13:33:56.662" starttime="20210126 13:33:53.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:33:56.663" level="INFO">true</msg>
<status status="PASS" endtime="20210126 13:33:56.663" starttime="20210126 13:33:56.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:33:56.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:33:56.664" starttime="20210126 13:33:56.664"></status>
</kw>
<status status="PASS" endtime="20210126 13:33:56.664" starttime="20210126 13:33:53.981"></status>
</kw>
<msg timestamp="20210126 13:33:56.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:33:56.665" starttime="20210126 13:33:53.980"></status>
</kw>
<msg timestamp="20210126 13:33:56.665" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210126 13:33:56.665" starttime="20210126 13:33:53.980"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210126 13:33:56.665" starttime="20210126 13:33:56.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket2/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:33:56.669" level="INFO">Running command 'ozone sh key put /behdi/mybucket2/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:01.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:01.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:01.083" starttime="20210126 13:33:56.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:01.085" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:01.085" starttime="20210126 13:34:01.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:01.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:01.085" starttime="20210126 13:34:01.085"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:01.086" starttime="20210126 13:33:56.666"></status>
</kw>
<msg timestamp="20210126 13:34:01.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:01.086" starttime="20210126 13:33:56.666"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:01.086" starttime="20210126 13:33:56.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:01.089" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:01.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:01.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:01.092" starttime="20210126 13:34:01.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:01.093" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:01.093" starttime="20210126 13:34:01.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:01.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:01.093" starttime="20210126 13:34:01.093"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:01.093" starttime="20210126 13:34:01.087"></status>
</kw>
<msg timestamp="20210126 13:34:01.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:01.094" starttime="20210126 13:34:01.086"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:01.094" starttime="20210126 13:34:01.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:01.097" level="INFO">Running command 'ozone sh key info /behdi/mybucket2/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:04.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:04.007" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210126 13:34:04.007" starttime="20210126 13:34:01.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:04.008" level="INFO">true</msg>
<status status="PASS" endtime="20210126 13:34:04.008" starttime="20210126 13:34:04.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:04.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:04.009" starttime="20210126 13:34:04.008"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:04.009" starttime="20210126 13:34:01.095"></status>
</kw>
<msg timestamp="20210126 13:34:04.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:04.009" starttime="20210126 13:34:01.095"></status>
</kw>
<msg timestamp="20210126 13:34:04.010" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210126 13:34:04.010" starttime="20210126 13:34:01.094"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210126 13:34:04.010" starttime="20210126 13:34:04.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket2/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:04.013" level="INFO">Running command 'ozone sh key delete /behdi/mybucket2/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:06.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:06.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:06.408" starttime="20210126 13:34:04.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:06.409" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:06.409" starttime="20210126 13:34:06.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:06.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:06.410" starttime="20210126 13:34:06.409"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:06.410" starttime="20210126 13:34:04.011"></status>
</kw>
<msg timestamp="20210126 13:34:06.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:06.410" starttime="20210126 13:34:04.011"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:06.410" starttime="20210126 13:34:04.010"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:06.410" starttime="20210126 13:33:51.428"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:34:06.411" critical="yes" starttime="20210126 13:33:51.427"></status>
</test>
<test id="s1-s2-s1-t3" name="Test GDPR -g=true">
<kw name="Test GDPR with -g=true">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create -g=true /${volume}/mybucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:06.416" level="INFO">Running command 'ozone sh bucket create -g=true /behdi/mybucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:08.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:08.908" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:08.908" starttime="20210126 13:34:06.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:08.909" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:08.909" starttime="20210126 13:34:08.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:08.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:08.909" starttime="20210126 13:34:08.909"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:08.910" starttime="20210126 13:34:06.414"></status>
</kw>
<msg timestamp="20210126 13:34:08.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:08.910" starttime="20210126 13:34:06.413"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:08.910" starttime="20210126 13:34:06.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:08.913" level="INFO">Running command 'ozone sh bucket info /behdi/mybucket3 | jq -r '. | select(.name=="mybucket3") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:11.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:11.616" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210126 13:34:11.617" starttime="20210126 13:34:08.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:11.618" level="INFO">true</msg>
<status status="PASS" endtime="20210126 13:34:11.618" starttime="20210126 13:34:11.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:11.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:11.618" starttime="20210126 13:34:11.618"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:11.619" starttime="20210126 13:34:08.911"></status>
</kw>
<msg timestamp="20210126 13:34:11.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:11.619" starttime="20210126 13:34:08.911"></status>
</kw>
<msg timestamp="20210126 13:34:11.619" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210126 13:34:11.619" starttime="20210126 13:34:08.910"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210126 13:34:11.620" starttime="20210126 13:34:11.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket3/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:11.623" level="INFO">Running command 'ozone sh key put /behdi/mybucket3/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:15.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:15.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:15.954" starttime="20210126 13:34:11.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:15.955" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:15.955" starttime="20210126 13:34:15.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:15.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:15.956" starttime="20210126 13:34:15.956"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:15.956" starttime="20210126 13:34:11.620"></status>
</kw>
<msg timestamp="20210126 13:34:15.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:15.956" starttime="20210126 13:34:11.620"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:15.957" starttime="20210126 13:34:11.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:15.960" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:15.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:15.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:15.962" starttime="20210126 13:34:15.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:15.963" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:15.963" starttime="20210126 13:34:15.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:15.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:15.964" starttime="20210126 13:34:15.963"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:15.964" starttime="20210126 13:34:15.957"></status>
</kw>
<msg timestamp="20210126 13:34:15.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:15.964" starttime="20210126 13:34:15.957"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:15.964" starttime="20210126 13:34:15.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:15.968" level="INFO">Running command 'ozone sh key info /behdi/mybucket3/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:18.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:18.757" level="INFO">${output} = true</msg>
<status status="PASS" endtime="20210126 13:34:18.757" starttime="20210126 13:34:15.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:18.758" level="INFO">true</msg>
<status status="PASS" endtime="20210126 13:34:18.758" starttime="20210126 13:34:18.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:18.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:18.759" starttime="20210126 13:34:18.759"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:18.759" starttime="20210126 13:34:15.965"></status>
</kw>
<msg timestamp="20210126 13:34:18.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:18.759" starttime="20210126 13:34:15.965"></status>
</kw>
<msg timestamp="20210126 13:34:18.760" level="INFO">${result} = true</msg>
<status status="PASS" endtime="20210126 13:34:18.760" starttime="20210126 13:34:15.965"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>true</arg>
</arguments>
<status status="PASS" endtime="20210126 13:34:18.760" starttime="20210126 13:34:18.760"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket3/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:18.764" level="INFO">Running command 'ozone sh key delete /behdi/mybucket3/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:21.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:21.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:21.215" starttime="20210126 13:34:18.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:21.216" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:21.217" starttime="20210126 13:34:21.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:21.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:21.217" starttime="20210126 13:34:21.217"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:21.218" starttime="20210126 13:34:18.761"></status>
</kw>
<msg timestamp="20210126 13:34:21.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:21.218" starttime="20210126 13:34:18.761"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:21.218" starttime="20210126 13:34:18.760"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:21.218" starttime="20210126 13:34:06.412"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:34:21.218" critical="yes" starttime="20210126 13:34:06.411"></status>
</test>
<test id="s1-s2-s1-t4" name="Test GDPR -g=false">
<kw name="Test GDPR with -g=false">
<arguments>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/mybucket4</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:21.223" level="INFO">Running command 'ozone sh bucket create /behdi/mybucket4 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:23.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:23.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:23.744" starttime="20210126 13:34:21.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:23.745" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:23.746" starttime="20210126 13:34:23.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:23.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:23.746" starttime="20210126 13:34:23.746"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:23.747" starttime="20210126 13:34:21.221"></status>
</kw>
<msg timestamp="20210126 13:34:23.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:23.747" starttime="20210126 13:34:21.221"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:23.747" starttime="20210126 13:34:21.220"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:23.750" level="INFO">Running command 'ozone sh bucket info /behdi/mybucket4 | jq -r '. | select(.name=="mybucket4") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:26.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:26.429" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210126 13:34:26.429" starttime="20210126 13:34:23.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:26.430" level="INFO">null</msg>
<status status="PASS" endtime="20210126 13:34:26.430" starttime="20210126 13:34:26.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:26.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:26.431" starttime="20210126 13:34:26.431"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:26.431" starttime="20210126 13:34:23.748"></status>
</kw>
<msg timestamp="20210126 13:34:26.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:26.431" starttime="20210126 13:34:23.748"></status>
</kw>
<msg timestamp="20210126 13:34:26.432" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210126 13:34:26.432" starttime="20210126 13:34:23.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210126 13:34:26.432" starttime="20210126 13:34:26.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/mybucket4/mykey /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:26.435" level="INFO">Running command 'ozone sh key put /behdi/mybucket4/mykey /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:30.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:30.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:30.882" starttime="20210126 13:34:26.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:30.883" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:30.884" starttime="20210126 13:34:30.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:30.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:30.884" starttime="20210126 13:34:30.884"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:30.884" starttime="20210126 13:34:26.433"></status>
</kw>
<msg timestamp="20210126 13:34:30.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:30.885" starttime="20210126 13:34:26.433"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:30.885" starttime="20210126 13:34:26.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:30.888" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:30.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:30.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:30.890" starttime="20210126 13:34:30.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:30.891" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:30.891" starttime="20210126 13:34:30.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:30.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:30.892" starttime="20210126 13:34:30.891"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:30.892" starttime="20210126 13:34:30.886"></status>
</kw>
<msg timestamp="20210126 13:34:30.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:30.892" starttime="20210126 13:34:30.885"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:30.892" starttime="20210126 13:34:30.885"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info /${volume}/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:30.895" level="INFO">Running command 'ozone sh key info /behdi/mybucket4/mykey | jq -r '. | select(.name=="mykey") | .metadata | .gdprEnabled' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:33.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:33.550" level="INFO">${output} = null</msg>
<status status="PASS" endtime="20210126 13:34:33.550" starttime="20210126 13:34:30.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:33.551" level="INFO">null</msg>
<status status="PASS" endtime="20210126 13:34:33.551" starttime="20210126 13:34:33.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:33.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:33.552" starttime="20210126 13:34:33.551"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:33.552" starttime="20210126 13:34:30.893"></status>
</kw>
<msg timestamp="20210126 13:34:33.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:33.552" starttime="20210126 13:34:30.893"></status>
</kw>
<msg timestamp="20210126 13:34:33.552" level="INFO">${result} = null</msg>
<status status="PASS" endtime="20210126 13:34:33.552" starttime="20210126 13:34:30.892"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" endtime="20210126 13:34:33.553" starttime="20210126 13:34:33.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete /${volume}/mybucket4/mykey</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:33.556" level="INFO">Running command 'ozone sh key delete /behdi/mybucket4/mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:36.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:36.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:36.055" starttime="20210126 13:34:33.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:36.056" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:36.057" starttime="20210126 13:34:36.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:36.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:36.057" starttime="20210126 13:34:36.057"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:36.057" starttime="20210126 13:34:33.554"></status>
</kw>
<msg timestamp="20210126 13:34:36.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:36.058" starttime="20210126 13:34:33.554"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:36.058" starttime="20210126 13:34:33.553"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:36.058" starttime="20210126 13:34:21.220"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:34:36.058" critical="yes" starttime="20210126 13:34:21.219"></status>
</test>
<doc>Smoketest Ozone GDPR Feature</doc>
<status status="PASS" endtime="20210126 13:34:36.059" starttime="20210126 13:33:34.145"></status>
</suite>
<status status="PASS" endtime="20210126 13:34:36.062" starttime="20210126 13:33:34.122"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib" id="s1-s3" name="Lib">
<suite source="/opt/hadoop/smoketest/lib/fs_tests.robot" id="s1-s3-s1" name="Fs Tests">
<test id="s1-s3-s1-t1" name="Format o3fs URL without path">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 13:19:24.568" starttime="20210126 13:19:24.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.568" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.568" starttime="20210126 13:19:24.568"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.569" starttime="20210126 13:19:24.567"></status>
</kw>
<msg timestamp="20210126 13:19:24.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.569" starttime="20210126 13:19:24.567"></status>
</kw>
<msg timestamp="20210126 13:19:24.570" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210126 13:19:24.570" starttime="20210126 13:19:24.566"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.570" starttime="20210126 13:19:24.570"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.570" critical="yes" starttime="20210126 13:19:24.565"></status>
</test>
<test id="s1-s3-s1-t2" name="Format o3fs URL with path">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.573" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 13:19:24.573" starttime="20210126 13:19:24.573"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.573" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.573" starttime="20210126 13:19:24.573"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.574" starttime="20210126 13:19:24.572"></status>
</kw>
<msg timestamp="20210126 13:19:24.574" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.574" starttime="20210126 13:19:24.572"></status>
</kw>
<msg timestamp="20210126 13:19:24.574" level="INFO">${result} = o3fs://bucket1.vol1.om/dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.574" starttime="20210126 13:19:24.571"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.om/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.575" starttime="20210126 13:19:24.574"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.575" critical="yes" starttime="20210126 13:19:24.571"></status>
</test>
<test id="s1-s3-s1-t3" name="Format o3fs URL with OM">
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>omservice</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.577" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 13:19:24.577" starttime="20210126 13:19:24.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.578" level="INFO">${result} = .omservice</msg>
<status status="PASS" endtime="20210126 13:19:24.578" starttime="20210126 13:19:24.577"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.578" starttime="20210126 13:19:24.576"></status>
</kw>
<msg timestamp="20210126 13:19:24.578" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" endtime="20210126 13:19:24.578" starttime="20210126 13:19:24.576"></status>
</kw>
<msg timestamp="20210126 13:19:24.578" level="INFO">${result} = o3fs://bucket1.vol1.omservice/dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.578" starttime="20210126 13:19:24.576"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>o3fs://bucket1.vol1.omservice/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.579" starttime="20210126 13:19:24.578"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.579" critical="yes" starttime="20210126 13:19:24.575"></status>
</test>
<test id="s1-s3-s1-t4" name="Format ofs URL without path">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.581" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:19:24.581" starttime="20210126 13:19:24.581"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.582" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.582" starttime="20210126 13:19:24.581"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.582" starttime="20210126 13:19:24.580"></status>
</kw>
<msg timestamp="20210126 13:19:24.582" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.582" starttime="20210126 13:19:24.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.583" starttime="20210126 13:19:24.583"></status>
</kw>
<msg timestamp="20210126 13:19:24.583" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:19:24.583" starttime="20210126 13:19:24.582"></status>
</kw>
<msg timestamp="20210126 13:19:24.583" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210126 13:19:24.583" starttime="20210126 13:19:24.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.584" starttime="20210126 13:19:24.583"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.584" critical="yes" starttime="20210126 13:19:24.579"></status>
</test>
<test id="s1-s3-s1-t5" name="Format ofs URL with path">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.586" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:19:24.586" starttime="20210126 13:19:24.586"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.587" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.587" starttime="20210126 13:19:24.586"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.587" starttime="20210126 13:19:24.585"></status>
</kw>
<msg timestamp="20210126 13:19:24.587" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.587" starttime="20210126 13:19:24.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.588" level="INFO">${first} = d</msg>
<status status="PASS" endtime="20210126 13:19:24.588" starttime="20210126 13:19:24.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.589" level="INFO">${result} = /dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.589" starttime="20210126 13:19:24.588"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.589" starttime="20210126 13:19:24.587"></status>
</kw>
<msg timestamp="20210126 13:19:24.589" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.589" starttime="20210126 13:19:24.587"></status>
</kw>
<msg timestamp="20210126 13:19:24.589" level="INFO">${result} = ofs://om/vol1/bucket1/dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.589" starttime="20210126 13:19:24.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om/vol1/bucket1/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.590" starttime="20210126 13:19:24.589"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.590" critical="yes" starttime="20210126 13:19:24.584"></status>
</test>
<test id="s1-s3-s1-t6" name="Format ofs URL with OM">
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
<arg>dir/file</arg>
<arg>om:1234</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.592" level="INFO">${last} = 4</msg>
<status status="PASS" endtime="20210126 13:19:24.592" starttime="20210126 13:19:24.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.592" level="INFO">${result} = om:1234/</msg>
<status status="PASS" endtime="20210126 13:19:24.592" starttime="20210126 13:19:24.592"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.593" starttime="20210126 13:19:24.591"></status>
</kw>
<msg timestamp="20210126 13:19:24.593" level="INFO">${om_with_trailing} = om:1234/</msg>
<status status="PASS" endtime="20210126 13:19:24.593" starttime="20210126 13:19:24.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.595" level="INFO">${first} = d</msg>
<status status="PASS" endtime="20210126 13:19:24.595" starttime="20210126 13:19:24.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.596" level="INFO">${result} = /dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.596" starttime="20210126 13:19:24.595"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.596" starttime="20210126 13:19:24.593"></status>
</kw>
<msg timestamp="20210126 13:19:24.596" level="INFO">${path_with_leading} = /dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.596" starttime="20210126 13:19:24.593"></status>
</kw>
<msg timestamp="20210126 13:19:24.596" level="INFO">${result} = ofs://om:1234/vol1/bucket1/dir/file</msg>
<status status="PASS" endtime="20210126 13:19:24.596" starttime="20210126 13:19:24.590"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>ofs://om:1234/vol1/bucket1/dir/file</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.597" starttime="20210126 13:19:24.596"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.597" critical="yes" starttime="20210126 13:19:24.590"></status>
</test>
<test id="s1-s3-s1-t7" name="Format FS URL with ofs scheme">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>ofs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.600" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:19:24.600" starttime="20210126 13:19:24.600"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.600" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.600" starttime="20210126 13:19:24.600"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.601" starttime="20210126 13:19:24.599"></status>
</kw>
<msg timestamp="20210126 13:19:24.601" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.601" starttime="20210126 13:19:24.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.601" starttime="20210126 13:19:24.601"></status>
</kw>
<msg timestamp="20210126 13:19:24.601" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:19:24.602" starttime="20210126 13:19:24.601"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.602" starttime="20210126 13:19:24.598"></status>
</kw>
<msg timestamp="20210126 13:19:24.602" level="INFO">${url} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210126 13:19:24.602" starttime="20210126 13:19:24.598"></status>
</kw>
<msg timestamp="20210126 13:19:24.602" level="INFO">${result} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210126 13:19:24.602" starttime="20210126 13:19:24.597"></status>
</kw>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.604" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:19:24.604" starttime="20210126 13:19:24.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.604" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.604" starttime="20210126 13:19:24.604"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.604" starttime="20210126 13:19:24.603"></status>
</kw>
<msg timestamp="20210126 13:19:24.605" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:19:24.605" starttime="20210126 13:19:24.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.605" starttime="20210126 13:19:24.605"></status>
</kw>
<msg timestamp="20210126 13:19:24.605" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:19:24.605" starttime="20210126 13:19:24.605"></status>
</kw>
<msg timestamp="20210126 13:19:24.606" level="INFO">${expected} = ofs://om/vol1/bucket1</msg>
<status status="PASS" endtime="20210126 13:19:24.606" starttime="20210126 13:19:24.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.606" starttime="20210126 13:19:24.606"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.606" critical="yes" starttime="20210126 13:19:24.597"></status>
</test>
<test id="s1-s3-s1-t8" name="Format FS URL with o3fs scheme">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>o3fs</arg>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.609" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 13:19:24.610" starttime="20210126 13:19:24.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.610" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.610" starttime="20210126 13:19:24.610"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.610" starttime="20210126 13:19:24.609"></status>
</kw>
<msg timestamp="20210126 13:19:24.610" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.610" starttime="20210126 13:19:24.608"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.611" starttime="20210126 13:19:24.608"></status>
</kw>
<msg timestamp="20210126 13:19:24.611" level="INFO">${url} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210126 13:19:24.611" starttime="20210126 13:19:24.608"></status>
</kw>
<msg timestamp="20210126 13:19:24.611" level="INFO">${result} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210126 13:19:24.611" starttime="20210126 13:19:24.607"></status>
</kw>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>vol1</arg>
<arg>bucket1</arg>
</arguments>
<assign>
<var>${expected}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.613" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 13:19:24.613" starttime="20210126 13:19:24.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.613" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.613" starttime="20210126 13:19:24.613"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.613" starttime="20210126 13:19:24.612"></status>
</kw>
<msg timestamp="20210126 13:19:24.613" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 13:19:24.613" starttime="20210126 13:19:24.611"></status>
</kw>
<msg timestamp="20210126 13:19:24.614" level="INFO">${expected} = o3fs://bucket1.vol1.om/</msg>
<status status="PASS" endtime="20210126 13:19:24.614" starttime="20210126 13:19:24.611"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.614" starttime="20210126 13:19:24.614"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.614" critical="yes" starttime="20210126 13:19:24.607"></status>
</test>
<test id="s1-s3-s1-t9" name="Format FS URL with unsupported scheme">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Format FS URL</arg>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>http</arg>
<arg>org</arg>
<arg>apache</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.617" level="FAIL">Unsupported FS scheme: http</msg>
<status status="FAIL" endtime="20210126 13:19:24.617" starttime="20210126 13:19:24.616"></status>
</kw>
<status status="FAIL" endtime="20210126 13:19:24.617" starttime="20210126 13:19:24.616"></status>
</kw>
<status status="FAIL" endtime="20210126 13:19:24.617" starttime="20210126 13:19:24.615"></status>
</kw>
<msg timestamp="20210126 13:19:24.617" level="INFO">${result} = Unsupported FS scheme: http</msg>
<status status="PASS" endtime="20210126 13:19:24.617" starttime="20210126 13:19:24.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>http</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.618" starttime="20210126 13:19:24.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>nsupported</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.618" starttime="20210126 13:19:24.618"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.618" critical="yes" starttime="20210126 13:19:24.615"></status>
</test>
<status status="PASS" endtime="20210126 13:19:24.619" starttime="20210126 13:19:24.553"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib/os_tests.robot" id="s1-s3-s2" name="Os Tests">
<test id="s1-s3-s2-t1" name="Execute">
<kw name="Execute" library="os">
<arguments>
<arg>echo 42</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:24.640" level="INFO">Running command 'echo 42 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:24.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:19:24.642" level="INFO">${output} = 42</msg>
<status status="PASS" endtime="20210126 13:19:24.642" starttime="20210126 13:19:24.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.642" level="INFO">42</msg>
<status status="PASS" endtime="20210126 13:19:24.642" starttime="20210126 13:19:24.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:19:24.643" starttime="20210126 13:19:24.643"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.643" starttime="20210126 13:19:24.635"></status>
</kw>
<msg timestamp="20210126 13:19:24.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:19:24.643" starttime="20210126 13:19:24.634"></status>
</kw>
<msg timestamp="20210126 13:19:24.643" level="INFO">${output} = 42</msg>
<status status="PASS" endtime="20210126 13:19:24.644" starttime="20210126 13:19:24.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>42</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.644" starttime="20210126 13:19:24.644"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.644" critical="yes" starttime="20210126 13:19:24.634"></status>
</test>
<test id="s1-s3-s2-t2" name="Execute failing command">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Execute</arg>
<arg>false</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>false</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:24.648" level="INFO">Running command 'false 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:24.649" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:19:24.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:19:24.649" starttime="20210126 13:19:24.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.650" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:19:24.650" starttime="20210126 13:19:24.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210126 13:19:24.651" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210126 13:19:24.651" starttime="20210126 13:19:24.650"></status>
</kw>
<status status="FAIL" endtime="20210126 13:19:24.651" starttime="20210126 13:19:24.646"></status>
</kw>
<msg timestamp="20210126 13:19:24.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210126 13:19:24.651" starttime="20210126 13:19:24.646"></status>
</kw>
<status status="FAIL" endtime="20210126 13:19:24.651" starttime="20210126 13:19:24.645"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.651" starttime="20210126 13:19:24.645"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.652" critical="yes" starttime="20210126 13:19:24.644"></status>
</test>
<test id="s1-s3-s2-t3" name="Execute And Ignore Error">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>echo 123 &amp;&amp; false</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:24.654" level="INFO">Running command 'echo 123 &amp;&amp; false 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:24.655" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:19:24.655" level="INFO">${output} = 123</msg>
<status status="PASS" endtime="20210126 13:19:24.656" starttime="20210126 13:19:24.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.656" level="INFO">123</msg>
<status status="PASS" endtime="20210126 13:19:24.656" starttime="20210126 13:19:24.656"></status>
</kw>
<msg timestamp="20210126 13:19:24.657" level="INFO">${output} = 123</msg>
<status status="PASS" endtime="20210126 13:19:24.657" starttime="20210126 13:19:24.653"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>123</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.657" starttime="20210126 13:19:24.657"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.657" critical="yes" starttime="20210126 13:19:24.652"></status>
</test>
<test id="s1-s3-s2-t4" name="Execute and checkrc">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo failure &amp;&amp; exit 1</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:24.660" level="INFO">Running command 'echo failure &amp;&amp; exit 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:24.661" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:19:24.661" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210126 13:19:24.661" starttime="20210126 13:19:24.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.662" level="INFO">failure</msg>
<status status="PASS" endtime="20210126 13:19:24.662" starttime="20210126 13:19:24.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:19:24.662" starttime="20210126 13:19:24.662"></status>
</kw>
<msg timestamp="20210126 13:19:24.662" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210126 13:19:24.662" starttime="20210126 13:19:24.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>failure</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.663" starttime="20210126 13:19:24.663"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.663" critical="yes" starttime="20210126 13:19:24.657"></status>
</test>
<test id="s1-s3-s2-t5" name="Execute and checkrc RC mismatch">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Execute and checkrc</arg>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>echo failure &amp;&amp; exit 3</arg>
<arg>1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:24.666" level="INFO">Running command 'echo failure &amp;&amp; exit 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:24.667" level="INFO">${rc} = 3</msg>
<msg timestamp="20210126 13:19:24.667" level="INFO">${output} = failure</msg>
<status status="PASS" endtime="20210126 13:19:24.667" starttime="20210126 13:19:24.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.668" level="INFO">failure</msg>
<status status="PASS" endtime="20210126 13:19:24.668" starttime="20210126 13:19:24.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:19:24.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210126 13:19:24.669" level="FAIL">3 != 1</msg>
<status status="FAIL" endtime="20210126 13:19:24.669" starttime="20210126 13:19:24.668"></status>
</kw>
<status status="FAIL" endtime="20210126 13:19:24.669" starttime="20210126 13:19:24.664"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.669" starttime="20210126 13:19:24.664"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.669" critical="yes" starttime="20210126 13:19:24.663"></status>
</test>
<status status="PASS" endtime="20210126 13:19:24.670" starttime="20210126 13:19:24.620"></status>
</suite>
<suite source="/opt/hadoop/smoketest/lib/string_tests.robot" id="s1-s3-s3" name="String Tests">
<test id="s1-s3-s3-t1" name="Ensure Leading without Leading">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>a/b</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.675" level="INFO">${first} = a</msg>
<status status="PASS" endtime="20210126 13:19:24.675" starttime="20210126 13:19:24.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.676" level="INFO">${result} = /a/b</msg>
<status status="PASS" endtime="20210126 13:19:24.676" starttime="20210126 13:19:24.675"></status>
</kw>
<msg timestamp="20210126 13:19:24.676" level="INFO">${result} = /a/b</msg>
<status status="PASS" endtime="20210126 13:19:24.676" starttime="20210126 13:19:24.674"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>/a/b</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.676" starttime="20210126 13:19:24.676"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.677" critical="yes" starttime="20210126 13:19:24.674"></status>
</test>
<test id="s1-s3-s3-t2" name="Ensure Leading with Leading">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>_</arg>
<arg>_a_b_c</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.678" level="INFO">${first} = _</msg>
<status status="PASS" endtime="20210126 13:19:24.678" starttime="20210126 13:19:24.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.678" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" endtime="20210126 13:19:24.679" starttime="20210126 13:19:24.678"></status>
</kw>
<msg timestamp="20210126 13:19:24.679" level="INFO">${result} = _a_b_c</msg>
<status status="PASS" endtime="20210126 13:19:24.679" starttime="20210126 13:19:24.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>_a_b_c</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.679" starttime="20210126 13:19:24.679"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.679" critical="yes" starttime="20210126 13:19:24.677"></status>
</test>
<test id="s1-s3-s3-t3" name="Ensure Leading for empty">
<kw name="Ensure Leading" library="string">
<arguments>
<arg>|</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:19:24.681" level="INFO">${first} = </msg>
<status status="PASS" endtime="20210126 13:19:24.681" starttime="20210126 13:19:24.680"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.681" level="INFO">${result} = |</msg>
<status status="PASS" endtime="20210126 13:19:24.681" starttime="20210126 13:19:24.681"></status>
</kw>
<msg timestamp="20210126 13:19:24.681" level="INFO">${result} = |</msg>
<status status="PASS" endtime="20210126 13:19:24.682" starttime="20210126 13:19:24.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>|</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.682" starttime="20210126 13:19:24.682"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.682" critical="yes" starttime="20210126 13:19:24.680"></status>
</test>
<test id="s1-s3-s3-t4" name="Ensure Trailing without Trailing">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>.</arg>
<arg>x.y.z</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.683" level="INFO">${last} = z</msg>
<status status="PASS" endtime="20210126 13:19:24.683" starttime="20210126 13:19:24.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.684" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" endtime="20210126 13:19:24.684" starttime="20210126 13:19:24.684"></status>
</kw>
<msg timestamp="20210126 13:19:24.684" level="INFO">${result} = x.y.z.</msg>
<status status="PASS" endtime="20210126 13:19:24.684" starttime="20210126 13:19:24.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>x.y.z.</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.685" starttime="20210126 13:19:24.684"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.685" critical="yes" starttime="20210126 13:19:24.682"></status>
</test>
<test id="s1-s3-s3-t5" name="Ensure Trailing with Trailing">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>x</arg>
<arg>axbxcx</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.686" level="INFO">${last} = x</msg>
<status status="PASS" endtime="20210126 13:19:24.686" starttime="20210126 13:19:24.686"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.687" level="INFO">${result} = axbxcx</msg>
<status status="PASS" endtime="20210126 13:19:24.687" starttime="20210126 13:19:24.686"></status>
</kw>
<msg timestamp="20210126 13:19:24.687" level="INFO">${result} = axbxcx</msg>
<status status="PASS" endtime="20210126 13:19:24.687" starttime="20210126 13:19:24.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>axbxcx</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.687" starttime="20210126 13:19:24.687"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.688" critical="yes" starttime="20210126 13:19:24.685"></status>
</test>
<test id="s1-s3-s3-t6" name="Ensure Trailing for empty">
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>=</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:19:24.689" level="INFO">${last} = </msg>
<status status="PASS" endtime="20210126 13:19:24.689" starttime="20210126 13:19:24.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:19:24.690" level="INFO">${result} = =</msg>
<status status="PASS" endtime="20210126 13:19:24.690" starttime="20210126 13:19:24.689"></status>
</kw>
<msg timestamp="20210126 13:19:24.690" level="INFO">${result} = =</msg>
<status status="PASS" endtime="20210126 13:19:24.690" starttime="20210126 13:19:24.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>=</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:24.690" starttime="20210126 13:19:24.690"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:24.691" critical="yes" starttime="20210126 13:19:24.688"></status>
</test>
<status status="PASS" endtime="20210126 13:19:24.691" starttime="20210126 13:19:24.671"></status>
</suite>
<status status="PASS" endtime="20210126 13:19:24.692" starttime="20210126 13:19:24.528"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozone-lib" id="s1-s4" name="Ozone-Lib">
<suite source="/opt/hadoop/smoketest/ozone-lib/shell_tests.robot" id="s1-s4-s1" name="Shell Tests">
<test id="s1-s4-s1-t1" name="Bucket Exists should not if No Such Volume">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/no-such-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:28.778" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/no-such-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:32.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:19:32.200" level="INFO">${output} = VOLUME_NOT_FOUND Volume no-such-volume is not found</msg>
<status status="PASS" endtime="20210126 13:19:32.201" starttime="20210126 13:19:28.774"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210126 13:19:32.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:19:32.202" starttime="20210126 13:19:32.201"></status>
</kw>
<msg timestamp="20210126 13:19:32.202" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210126 13:19:32.202" starttime="20210126 13:19:28.773"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:32.202" starttime="20210126 13:19:32.202"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:32.203" critical="yes" starttime="20210126 13:19:28.773"></status>
</test>
<test id="s1-s4-s1-t2" name="Bucket Exists should not if No Such Bucket">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:32.207" level="INFO">Running command 'ozone sh volume create o3://om/vol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:34.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:19:34.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:19:34.926" starttime="20210126 13:19:32.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:34.927" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:19:34.927" starttime="20210126 13:19:34.926"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:34.927" starttime="20210126 13:19:32.204"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/no-such-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:34.929" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:37.648" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:19:37.648" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 13:19:37.648" starttime="20210126 13:19:34.927"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210126 13:19:37.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:19:37.649" starttime="20210126 13:19:37.648"></status>
</kw>
<msg timestamp="20210126 13:19:37.649" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210126 13:19:37.649" starttime="20210126 13:19:34.927"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:37.650" starttime="20210126 13:19:37.649"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:37.650" critical="yes" starttime="20210126 13:19:32.203"></status>
</test>
<test id="s1-s4-s1-t3" name="Bucket Exists">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:37.654" level="INFO">Running command 'ozone sh bucket create o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:40.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:19:40.373" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:19:40.373" starttime="20210126 13:19:37.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:19:40.374" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:19:40.374" starttime="20210126 13:19:40.374"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:40.375" starttime="20210126 13:19:37.651"></status>
</kw>
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:40.377" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol1/bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:42.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:19:42.975" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:19:40....</msg>
<status status="PASS" endtime="20210126 13:19:42.976" starttime="20210126 13:19:40.375"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:42.977" starttime="20210126 13:19:42.976"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:42.977" starttime="20210126 13:19:42.977"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:42.977" starttime="20210126 13:19:42.977"></status>
</kw>
<msg timestamp="20210126 13:19:42.978" level="INFO">${exists} = True</msg>
<status status="PASS" endtime="20210126 13:19:42.978" starttime="20210126 13:19:40.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${TRUE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:42.979" starttime="20210126 13:19:42.978"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:42.979" critical="yes" starttime="20210126 13:19:37.651"></status>
</test>
<test id="s1-s4-s1-t4" name="Bucket Exists should not if No Such OM service">
<kw name="Bucket Exists" library="shell">
<arguments>
<arg>o3://no-such-host/any-volume/any-bucket</arg>
</arguments>
<assign>
<var>${exists}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:42.983" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://no-such-host/any-volume/any-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:19:58.029" level="INFO">${rc} = 124</msg>
<msg timestamp="20210126 13:19:58.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:19:58.029" starttime="20210126 13:19:42.981"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
</arguments>
<msg timestamp="20210126 13:19:58.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:19:58.030" starttime="20210126 13:19:58.030"></status>
</kw>
<msg timestamp="20210126 13:19:58.031" level="INFO">${exists} = False</msg>
<status status="PASS" endtime="20210126 13:19:58.031" starttime="20210126 13:19:42.981"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${exists}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:19:58.031" starttime="20210126 13:19:58.031"></status>
</kw>
<status status="PASS" endtime="20210126 13:19:58.031" critical="yes" starttime="20210126 13:19:42.980"></status>
</test>
<test id="s1-s4-s1-t5" name="Key Should Match Local File">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put o3://${OM_SERVICE_ID}/vol1/bucket/passwd /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:19:58.036" level="INFO">Running command 'ozone sh key put o3://om/vol1/bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:04.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:04.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:04.821" starttime="20210126 13:19:58.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:04.822" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:04.822" starttime="20210126 13:20:04.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:04.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:04.822" starttime="20210126 13:20:04.822"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:04.823" starttime="20210126 13:19:58.033"></status>
</kw>
<msg timestamp="20210126 13:20:04.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:04.823" starttime="20210126 13:19:58.033"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:04.823" starttime="20210126 13:19:58.032"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:20:04.824" level="INFO">${postfix} = 58685</msg>
<status status="PASS" endtime="20210126 13:20:04.824" starttime="20210126 13:20:04.824"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:20:04.825" level="INFO">${tmpfile} = /tmp/tempkey-58685</msg>
<status status="PASS" endtime="20210126 13:20:04.825" starttime="20210126 13:20:04.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:04.828" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-58685 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:09.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:09.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:09.488" starttime="20210126 13:20:04.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.489" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:09.489" starttime="20210126 13:20:09.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:09.490" starttime="20210126 13:20:09.490"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.490" starttime="20210126 13:20:04.826"></status>
</kw>
<msg timestamp="20210126 13:20:09.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:09.490" starttime="20210126 13:20:04.826"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.491" starttime="20210126 13:20:04.825"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:20:09.493" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-58685 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:09.495" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 13:20:09.495" starttime="20210126 13:20:09.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:09.499" level="INFO">Running command 'rm -f /tmp/tempkey-58685 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:09.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:09.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:09.501" starttime="20210126 13:20:09.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.502" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:09.502" starttime="20210126 13:20:09.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:09.503" starttime="20210126 13:20:09.502"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.503" starttime="20210126 13:20:09.497"></status>
</kw>
<msg timestamp="20210126 13:20:09.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:09.503" starttime="20210126 13:20:09.497"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.503" starttime="20210126 13:20:09.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:20:09.505" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 13:20:09.505" starttime="20210126 13:20:09.503"></status>
</kw>
<msg timestamp="20210126 13:20:09.505" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 13:20:09.505" starttime="20210126 13:20:04.824"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:09.506" starttime="20210126 13:20:09.505"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.506" starttime="20210126 13:20:04.823"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:09.506" critical="yes" starttime="20210126 13:19:58.032"></status>
</test>
<test id="s1-s4-s1-t6" name="Compare Key With Local File with Different File">
<kw name="Create Random File" library="os">
<assign>
<var>${random_file}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:20:09.508" level="INFO">${postfix} = 46020</msg>
<status status="PASS" endtime="20210126 13:20:09.508" starttime="20210126 13:20:09.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempfile-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:20:09.508" level="INFO">${tmpfile} = /tmp/tempfile-46020</msg>
<status status="PASS" endtime="20210126 13:20:09.508" starttime="20210126 13:20:09.508"></status>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<doc>Fails if the given path points to an existing file.</doc>
<arguments>
<arg>${tmpfile}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.509" html="yes" level="INFO">File '&lt;a href="file:///tmp/tempfile-46020"&gt;/tmp/tempfile-46020&lt;/a&gt;' does not exist.</msg>
<status status="PASS" endtime="20210126 13:20:09.509" starttime="20210126 13:20:09.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"Random string"</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20210126 13:20:09.509" level="INFO">${content} = "Random string"</msg>
<status status="PASS" endtime="20210126 13:20:09.509" starttime="20210126 13:20:09.509"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${tmpfile}</arg>
<arg>${content}</arg>
</arguments>
<msg timestamp="20210126 13:20:09.510" html="yes" level="INFO">Created file '&lt;a href="file:///tmp/tempfile-46020"&gt;/tmp/tempfile-46020&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20210126 13:20:09.510" starttime="20210126 13:20:09.509"></status>
</kw>
<msg timestamp="20210126 13:20:09.510" level="INFO">${random_file} = /tmp/tempfile-46020</msg>
<status status="PASS" endtime="20210126 13:20:09.510" starttime="20210126 13:20:09.507"></status>
</kw>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>${random_file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:20:09.511" level="INFO">${postfix} = 46896</msg>
<status status="PASS" endtime="20210126 13:20:09.512" starttime="20210126 13:20:09.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:20:09.512" level="INFO">${tmpfile} = /tmp/tempkey-46896</msg>
<status status="PASS" endtime="20210126 13:20:09.512" starttime="20210126 13:20:09.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:09.515" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-46896 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:13.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:13.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:13.910" starttime="20210126 13:20:09.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:13.911" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:13.911" starttime="20210126 13:20:13.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:13.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:13.911" starttime="20210126 13:20:13.911"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:13.911" starttime="20210126 13:20:09.513"></status>
</kw>
<msg timestamp="20210126 13:20:13.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:13.912" starttime="20210126 13:20:09.512"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:13.912" starttime="20210126 13:20:09.512"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:20:13.914" level="INFO">Running command 'diff -q /tmp/tempfile-46020 /tmp/tempkey-46896 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:13.916" level="INFO">${rc} = 1</msg>
<status status="PASS" endtime="20210126 13:20:13.916" starttime="20210126 13:20:13.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:13.919" level="INFO">Running command 'rm -f /tmp/tempkey-46896 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:13.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:13.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:13.921" starttime="20210126 13:20:13.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:13.922" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:13.922" starttime="20210126 13:20:13.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:13.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:13.922" starttime="20210126 13:20:13.922"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:13.923" starttime="20210126 13:20:13.917"></status>
</kw>
<msg timestamp="20210126 13:20:13.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:13.923" starttime="20210126 13:20:13.917"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:13.923" starttime="20210126 13:20:13.916"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:20:13.924" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20210126 13:20:13.924" starttime="20210126 13:20:13.923"></status>
</kw>
<msg timestamp="20210126 13:20:13.924" level="INFO">${matches} = False</msg>
<status status="PASS" endtime="20210126 13:20:13.924" starttime="20210126 13:20:09.511"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:13.924" starttime="20210126 13:20:13.924"></status>
</kw>
<kw type="teardown" name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${random_file}</arg>
</arguments>
<msg timestamp="20210126 13:20:13.925" html="yes" level="INFO">Removed file '&lt;a href="file:///tmp/tempfile-46020"&gt;/tmp/tempfile-46020&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20210126 13:20:13.925" starttime="20210126 13:20:13.925"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:13.925" critical="yes" starttime="20210126 13:20:09.507"></status>
</test>
<test id="s1-s4-s1-t7" name="Compare Key With Local File if File Does Not Exist">
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>o3://${OM_SERVICE_ID}/vol1/bucket/passwd</arg>
<arg>/no-such-file</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 13:20:13.927" level="INFO">${postfix} = 53751</msg>
<status status="PASS" endtime="20210126 13:20:13.927" starttime="20210126 13:20:13.927"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 13:20:13.928" level="INFO">${tmpfile} = /tmp/tempkey-53751</msg>
<status status="PASS" endtime="20210126 13:20:13.928" starttime="20210126 13:20:13.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:13.930" level="INFO">Running command 'ozone sh key get -f o3://om/vol1/bucket/passwd /tmp/tempkey-53751 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:18.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:18.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:18.010" starttime="20210126 13:20:13.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:18.011" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:18.011" starttime="20210126 13:20:18.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:18.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:18.012" starttime="20210126 13:20:18.011"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:18.012" starttime="20210126 13:20:13.928"></status>
</kw>
<msg timestamp="20210126 13:20:18.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:18.013" starttime="20210126 13:20:13.928"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:18.013" starttime="20210126 13:20:13.928"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 13:20:18.015" level="INFO">Running command 'diff -q /no-such-file /tmp/tempkey-53751 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:18.017" level="INFO">${rc} = 2</msg>
<status status="PASS" endtime="20210126 13:20:18.017" starttime="20210126 13:20:18.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:20:18.020" level="INFO">Running command 'rm -f /tmp/tempkey-53751 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:20:18.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:20:18.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:20:18.022" starttime="20210126 13:20:18.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:20:18.023" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:20:18.023" starttime="20210126 13:20:18.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:20:18.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:20:18.023" starttime="20210126 13:20:18.023"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:18.024" starttime="20210126 13:20:18.018"></status>
</kw>
<msg timestamp="20210126 13:20:18.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:20:18.024" starttime="20210126 13:20:18.018"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:18.024" starttime="20210126 13:20:18.017"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:20:18.025" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20210126 13:20:18.025" starttime="20210126 13:20:18.024"></status>
</kw>
<msg timestamp="20210126 13:20:18.025" level="INFO">${matches} = False</msg>
<status status="PASS" endtime="20210126 13:20:18.025" starttime="20210126 13:20:13.926"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${matches}</arg>
<arg>${FALSE}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:20:18.025" starttime="20210126 13:20:18.025"></status>
</kw>
<status status="PASS" endtime="20210126 13:20:18.026" critical="yes" starttime="20210126 13:20:13.926"></status>
</test>
<status status="PASS" endtime="20210126 13:20:18.027" starttime="20210126 13:19:28.750"></status>
</suite>
<status status="PASS" endtime="20210126 13:20:18.031" starttime="20210126 13:19:28.727"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s5" name="ozonefs-ofs-bucket">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:27.220" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:29.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:37:29.755" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210126 13:37:29.755" starttime="20210126 13:37:27.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:29.756" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210126 13:37:29.756" starttime="20210126 13:37:29.756"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:29.757" starttime="20210126 13:37:27.217"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:29.759" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:32.162" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 13:37:32.162" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210126 13:37:32.162" starttime="20210126 13:37:29.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:32.163" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" endtime="20210126 13:37:32.163" starttime="20210126 13:37:32.163"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:32.164" starttime="20210126 13:37:29.757"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:32.164" starttime="20210126 13:37:27.216"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:32.168" level="INFO">Running command 'ozone sh bucket create fstest1/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:34.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:34.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:34.697" starttime="20210126 13:37:32.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:34.698" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:34.698" starttime="20210126 13:37:34.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:34.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:34.698" starttime="20210126 13:37:34.698"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:34.699" starttime="20210126 13:37:32.165"></status>
</kw>
<msg timestamp="20210126 13:37:34.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:34.699" starttime="20210126 13:37:32.165"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:34.699" starttime="20210126 13:37:32.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:34.702" level="INFO">Running command 'ozone sh bucket create fstest1/bucket2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:37.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:37.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:37.278" starttime="20210126 13:37:34.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:37.279" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:37.279" starttime="20210126 13:37:37.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:37.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:37.280" starttime="20210126 13:37:37.280"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:37.281" starttime="20210126 13:37:34.700"></status>
</kw>
<msg timestamp="20210126 13:37:37.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:37.281" starttime="20210126 13:37:34.700"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:37.281" starttime="20210126 13:37:34.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:37.285" level="INFO">Running command 'ozone sh bucket create fstest2/bucket3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:39.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:39.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:39.670" starttime="20210126 13:37:37.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:39.671" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:39.671" starttime="20210126 13:37:39.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:39.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:39.672" starttime="20210126 13:37:39.671"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:39.672" starttime="20210126 13:37:37.282"></status>
</kw>
<msg timestamp="20210126 13:37:39.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:39.672" starttime="20210126 13:37:37.282"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:39.673" starttime="20210126 13:37:37.281"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:39.673" starttime="20210126 13:37:32.164"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:39.673" starttime="20210126 13:37:32.164"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:39.676" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:42.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:42.286" level="INFO">${output} = {
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:2...</msg>
<status status="PASS" endtime="20210126 13:37:42.286" starttime="20210126 13:37:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:42.287" level="INFO">{
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.773Z",
  "modificationTime" : "2021-01-26T13:20:24.773Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "42170-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-26T13:21:49.663Z",
  "modificationTime" : "2021-01-26T13:21:49.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-89255",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.757Z",
  "modificationTime" : "2021-01-26T13:20:24.757Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:34:50.074Z",
  "modificationTime" : "2021-01-26T13:34:50.074Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "89622-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:27:58.980Z",
  "modificationTime" : "2021-01-26T13:28:14.482Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:19:34.676Z",
  "modificationTime" : "2021-01-26T13:19:34.676Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-73381",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.782Z",
  "modificationTime" : "2021-01-26T13:20:24.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-26T13:34:47.527Z",
  "modificationTime" : "2021-01-26T13:34:47.527Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:19:21.657Z",
  "modificationTime" : "2021-01-26T13:19:21.657Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-23314",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.792Z",
  "modificationTime" : "2021-01-26T13:20:24.792Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "42170-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:21:47.217Z",
  "modificationTime" : "2021-01-26T13:21:47.217Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-26T13:34:44.965Z",
  "modificationTime" : "2021-01-26T13:34:44.965Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-60623",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.801Z",
  "modificationTime" : "2021-01-26T13:20:24.801Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-26T13:34:42.555Z",
  "modificationTime" : "2021-01-26T13:34:42.555Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "behdi",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-26T13:33:36.696Z",
  "modificationTime" : "2021-01-26T13:33:36.696Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210126 13:37:42.287" starttime="20210126 13:37:42.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:42.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:42.288" starttime="20210126 13:37:42.287"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:42.288" starttime="20210126 13:37:39.674"></status>
</kw>
<msg timestamp="20210126 13:37:42.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:42.288" starttime="20210126 13:37:39.674"></status>
</kw>
<msg timestamp="20210126 13:37:42.288" level="INFO">${result} = {
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:2...</msg>
<status status="PASS" endtime="20210126 13:37:42.288" starttime="20210126 13:37:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:42.289" starttime="20210126 13:37:42.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:42.289" starttime="20210126 13:37:42.289"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:42.290" starttime="20210126 13:37:42.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:42.293" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:44.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:44.869" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T1...</msg>
<status status="PASS" endtime="20210126 13:37:44.869" starttime="20210126 13:37:42.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:44.870" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:37:34.553Z",
  "modificationTime" : "2021-01-26T13:37:34.553Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:37:37.165Z",
  "modificationTime" : "2021-01-26T13:37:37.165Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:35:00.091Z",
  "modificationTime" : "2021-01-26T13:35:00.091Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:35:02.623Z",
  "modificationTime" : "2021-01-26T13:35:02.623Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 13:37:44.870" starttime="20210126 13:37:44.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:44.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:44.870" starttime="20210126 13:37:44.870"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.871" starttime="20210126 13:37:42.291"></status>
</kw>
<msg timestamp="20210126 13:37:44.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:44.871" starttime="20210126 13:37:42.290"></status>
</kw>
<msg timestamp="20210126 13:37:44.871" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T1...</msg>
<status status="PASS" endtime="20210126 13:37:44.871" starttime="20210126 13:37:42.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:44.872" starttime="20210126 13:37:44.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:44.872" starttime="20210126 13:37:44.872"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.872" starttime="20210126 13:37:39.673"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:37:44.876" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:37:44.876" starttime="20210126 13:37:44.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:37:44.876" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:37:44.876" starttime="20210126 13:37:44.876"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.876" starttime="20210126 13:37:44.875"></status>
</kw>
<msg timestamp="20210126 13:37:44.876" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:37:44.876" starttime="20210126 13:37:44.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:37:44.878" level="INFO">${first} = /</msg>
<status status="PASS" endtime="20210126 13:37:44.878" starttime="20210126 13:37:44.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:37:44.878" level="INFO">${result} = /</msg>
<status status="PASS" endtime="20210126 13:37:44.878" starttime="20210126 13:37:44.878"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.878" starttime="20210126 13:37:44.877"></status>
</kw>
<msg timestamp="20210126 13:37:44.879" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" endtime="20210126 13:37:44.879" starttime="20210126 13:37:44.877"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.879" starttime="20210126 13:37:44.874"></status>
</kw>
<msg timestamp="20210126 13:37:44.879" level="INFO">${url} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210126 13:37:44.879" starttime="20210126 13:37:44.873"></status>
</kw>
<msg timestamp="20210126 13:37:44.879" level="INFO">${BASE_URL} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210126 13:37:44.879" starttime="20210126 13:37:44.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210126 13:37:44.880" level="INFO">${BASE_URL} = ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210126 13:37:44.880" starttime="20210126 13:37:44.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210126 13:37:44.881" level="INFO">${DEEP_URL} = ofs://om/fstest1/bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" endtime="20210126 13:37:44.881" starttime="20210126 13:37:44.880"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.881" starttime="20210126 13:37:44.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210126 13:37:44.882" level="INFO">Completed setup for ofs tests with buckets in fstest1/bucket1-ofs using FS base URL: ofs://om/fstest1/bucket1-ofs/</msg>
<status status="PASS" endtime="20210126 13:37:44.882" starttime="20210126 13:37:44.881"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.882" starttime="20210126 13:37:27.216"></status>
</kw>
<test id="s1-s5-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:37:44.886" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:37:44.886" starttime="20210126 13:37:44.885"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:37:44.886" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:37:44.886" starttime="20210126 13:37:44.886"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.886" starttime="20210126 13:37:44.885"></status>
</kw>
<msg timestamp="20210126 13:37:44.887" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:37:44.887" starttime="20210126 13:37:44.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:44.887" starttime="20210126 13:37:44.887"></status>
</kw>
<msg timestamp="20210126 13:37:44.887" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:37:44.888" starttime="20210126 13:37:44.887"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:44.888" starttime="20210126 13:37:44.884"></status>
</kw>
<msg timestamp="20210126 13:37:44.888" level="INFO">${url} = ofs://om/fstest1/bucket1-ofs</msg>
<status status="PASS" endtime="20210126 13:37:44.888" starttime="20210126 13:37:44.883"></status>
</kw>
<msg timestamp="20210126 13:37:44.888" level="INFO">${root} = ofs://om/fstest1/bucket1-ofs</msg>
<status status="PASS" endtime="20210126 13:37:44.888" starttime="20210126 13:37:44.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:44.892" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:47.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:47.419" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:47.419" starttime="20210126 13:37:44.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:47.420" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:47.420" starttime="20210126 13:37:47.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:47.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:47.421" starttime="20210126 13:37:47.421"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:47.421" starttime="20210126 13:37:44.889"></status>
</kw>
<msg timestamp="20210126 13:37:47.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:47.422" starttime="20210126 13:37:44.889"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:47.422" starttime="20210126 13:37:44.889"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:47.422" critical="yes" starttime="20210126 13:37:44.882"></status>
</test>
<test id="s1-s5-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:37:47.427" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:37:47.427" starttime="20210126 13:37:47.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:37:47.427" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:37:47.427" starttime="20210126 13:37:47.427"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:47.427" starttime="20210126 13:37:47.426"></status>
</kw>
<msg timestamp="20210126 13:37:47.427" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:37:47.427" starttime="20210126 13:37:47.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:47.428" starttime="20210126 13:37:47.428"></status>
</kw>
<msg timestamp="20210126 13:37:47.428" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:37:47.428" starttime="20210126 13:37:47.428"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:47.429" starttime="20210126 13:37:47.425"></status>
</kw>
<msg timestamp="20210126 13:37:47.429" level="INFO">${url} = ofs://om/no-such-volume/bucket1-ofs</msg>
<status status="PASS" endtime="20210126 13:37:47.429" starttime="20210126 13:37:47.424"></status>
</kw>
<msg timestamp="20210126 13:37:47.429" level="INFO">${url} = ofs://om/no-such-volume/bucket1-ofs</msg>
<status status="PASS" endtime="20210126 13:37:47.429" starttime="20210126 13:37:47.423"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:47.432" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:50.024" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:37:50.024" level="INFO">${output} = ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:50.024" starttime="20210126 13:37:47.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:50.025" level="INFO">ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:50.025" starttime="20210126 13:37:50.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:50.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:50.026" starttime="20210126 13:37:50.025"></status>
</kw>
<msg timestamp="20210126 13:37:50.026" level="INFO">${result} = ls: `ofs://om/no-such-volume/bucket1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:50.026" starttime="20210126 13:37:47.429"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:50.027" starttime="20210126 13:37:50.027"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:50.028" critical="yes" starttime="20210126 13:37:47.423"></status>
</test>
<test id="s1-s5-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:37:50.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:37:50.032" starttime="20210126 13:37:50.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:37:50.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:37:50.033" starttime="20210126 13:37:50.032"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:50.033" starttime="20210126 13:37:50.031"></status>
</kw>
<msg timestamp="20210126 13:37:50.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:37:50.033" starttime="20210126 13:37:50.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:50.034" starttime="20210126 13:37:50.033"></status>
</kw>
<msg timestamp="20210126 13:37:50.034" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:37:50.034" starttime="20210126 13:37:50.033"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:50.034" starttime="20210126 13:37:50.030"></status>
</kw>
<msg timestamp="20210126 13:37:50.034" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210126 13:37:50.034" starttime="20210126 13:37:50.030"></status>
</kw>
<msg timestamp="20210126 13:37:50.034" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210126 13:37:50.034" starttime="20210126 13:37:50.029"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:50.037" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:52.673" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:37:52.673" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:52.673" starttime="20210126 13:37:50.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:52.674" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:52.675" starttime="20210126 13:37:52.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:52.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:52.675" starttime="20210126 13:37:52.675"></status>
</kw>
<msg timestamp="20210126 13:37:52.676" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:37:52.676" starttime="20210126 13:37:50.035"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:52.676" starttime="20210126 13:37:52.676"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:52.677" critical="yes" starttime="20210126 13:37:50.028"></status>
</test>
<test id="s1-s5-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:52.681" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:55.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:55.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:55.388" starttime="20210126 13:37:52.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:55.389" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:55.389" starttime="20210126 13:37:55.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:55.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:55.390" starttime="20210126 13:37:55.389"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:55.390" starttime="20210126 13:37:52.679"></status>
</kw>
<msg timestamp="20210126 13:37:55.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:55.390" starttime="20210126 13:37:52.678"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:55.390" starttime="20210126 13:37:52.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:55.394" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:57.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:57.959" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:37:57.959" starttime="20210126 13:37:55.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:57.960" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:37:57.960" starttime="20210126 13:37:57.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:57.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:57.960" starttime="20210126 13:37:57.960"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:57.961" starttime="20210126 13:37:55.391"></status>
</kw>
<msg timestamp="20210126 13:37:57.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:57.961" starttime="20210126 13:37:55.391"></status>
</kw>
<msg timestamp="20210126 13:37:57.961" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:37:57.961" starttime="20210126 13:37:55.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:57.962" starttime="20210126 13:37:57.961"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:57.962" critical="yes" starttime="20210126 13:37:52.677"></status>
</test>
<test id="s1-s5-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:57.966" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:02.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:02.312" level="INFO">${output} = 2021-01-26 13:38:00,751 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:00,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:38:02.312" starttime="20210126 13:37:57.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:02.313" level="INFO">2021-01-26 13:38:00,751 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:00,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:38:00,848 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:38:01,113 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:38:01,113 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3F28E1471D51-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:38:01,114 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:38:02.313" starttime="20210126 13:38:02.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:02.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:02.314" starttime="20210126 13:38:02.313"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:02.314" starttime="20210126 13:37:57.964"></status>
</kw>
<msg timestamp="20210126 13:38:02.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:02.314" starttime="20210126 13:37:57.964"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:02.314" starttime="20210126 13:37:57.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:02.318" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:05.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:05.178" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:05.178" starttime="20210126 13:38:02.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:05.179" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:05.179" starttime="20210126 13:38:05.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:05.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:05.179" starttime="20210126 13:38:05.179"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:05.180" starttime="20210126 13:38:02.315"></status>
</kw>
<msg timestamp="20210126 13:38:05.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:05.180" starttime="20210126 13:38:02.315"></status>
</kw>
<msg timestamp="20210126 13:38:05.180" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:05.180" starttime="20210126 13:38:02.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:05.181" starttime="20210126 13:38:05.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:05.184" level="INFO">Running command 'ozone sh key info fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:07.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:07.982" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210126 13:38:07.983" starttime="20210126 13:38:05.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:07.984" level="INFO">3</msg>
<status status="PASS" endtime="20210126 13:38:07.984" starttime="20210126 13:38:07.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:07.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:07.984" starttime="20210126 13:38:07.984"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:07.985" starttime="20210126 13:38:05.182"></status>
</kw>
<msg timestamp="20210126 13:38:07.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:07.985" starttime="20210126 13:38:05.181"></status>
</kw>
<msg timestamp="20210126 13:38:07.985" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210126 13:38:07.985" starttime="20210126 13:38:05.181"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:07.986" starttime="20210126 13:38:07.985"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:07.986" critical="yes" starttime="20210126 13:37:57.962"></status>
</test>
<test id="s1-s5-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:07.990" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:12.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:12.079" level="INFO">${output} = 2021-01-26 13:38:10,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:10,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:38:12.079" starttime="20210126 13:38:07.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:12.080" level="INFO">2021-01-26 13:38:10,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:10,732 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:38:10,732 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:38:10,956 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:38:10,957 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-385A177A7D7F-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:38:10,957 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:38:12.080" starttime="20210126 13:38:12.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:12.081" starttime="20210126 13:38:12.080"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:12.081" starttime="20210126 13:38:07.988"></status>
</kw>
<msg timestamp="20210126 13:38:12.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:12.081" starttime="20210126 13:38:07.988"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:12.081" starttime="20210126 13:38:07.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:12.085" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:14.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:14.826" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:14.827" starttime="20210126 13:38:12.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:14.828" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:14.828" starttime="20210126 13:38:14.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:14.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:14.828" starttime="20210126 13:38:14.828"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:14.829" starttime="20210126 13:38:12.082"></status>
</kw>
<msg timestamp="20210126 13:38:14.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:14.829" starttime="20210126 13:38:12.082"></status>
</kw>
<msg timestamp="20210126 13:38:14.829" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:14.829" starttime="20210126 13:38:12.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:14.830" starttime="20210126 13:38:14.829"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:14.830" critical="yes" starttime="20210126 13:38:07.986"></status>
</test>
<test id="s1-s5-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:14.835" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:17.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:17.438" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bu...</msg>
<status status="PASS" endtime="20210126 13:38:17.438" starttime="20210126 13:38:14.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:17.439" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:17.439" starttime="20210126 13:38:17.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:17.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:17.440" starttime="20210126 13:38:17.439"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:17.440" starttime="20210126 13:38:14.832"></status>
</kw>
<msg timestamp="20210126 13:38:17.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:17.440" starttime="20210126 13:38:14.832"></status>
</kw>
<msg timestamp="20210126 13:38:17.440" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bu...</msg>
<status status="PASS" endtime="20210126 13:38:17.440" starttime="20210126 13:38:14.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:17.441" starttime="20210126 13:38:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:17.441" starttime="20210126 13:38:17.441"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:17.441" critical="yes" starttime="20210126 13:38:14.830"></status>
</test>
<test id="s1-s5-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:17.447" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:20.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:20.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:38:20.166" starttime="20210126 13:38:17.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:20.167" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:38:20.167" starttime="20210126 13:38:20.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:20.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:20.168" starttime="20210126 13:38:20.167"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:20.168" starttime="20210126 13:38:17.444"></status>
</kw>
<msg timestamp="20210126 13:38:20.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:20.168" starttime="20210126 13:38:17.444"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:20.169" starttime="20210126 13:38:17.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:20.172" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:22.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:22.813" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:22.813" starttime="20210126 13:38:20.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:22.814" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:22.814" starttime="20210126 13:38:22.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:22.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:22.815" starttime="20210126 13:38:22.814"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:22.815" starttime="20210126 13:38:20.170"></status>
</kw>
<msg timestamp="20210126 13:38:22.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:22.815" starttime="20210126 13:38:20.169"></status>
</kw>
<msg timestamp="20210126 13:38:22.815" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:22.815" starttime="20210126 13:38:20.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:22.816" starttime="20210126 13:38:22.816"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:22.816" starttime="20210126 13:38:22.816"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:22.817" critical="yes" starttime="20210126 13:38:17.442"></status>
</test>
<test id="s1-s5-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:22.821" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:25.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:25.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:38:25.563" starttime="20210126 13:38:22.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:25.565" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:38:25.565" starttime="20210126 13:38:25.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:25.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:25.566" starttime="20210126 13:38:25.565"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:25.566" starttime="20210126 13:38:22.819"></status>
</kw>
<msg timestamp="20210126 13:38:25.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:25.566" starttime="20210126 13:38:22.818"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:25.566" starttime="20210126 13:38:22.818"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:25.570" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:29.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:29.665" level="INFO">${output} = 2021-01-26 13:38:28,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:28,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:38:29.665" starttime="20210126 13:38:25.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:29.666" level="INFO">2021-01-26 13:38:28,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:28,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:38:28,258 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:38:28,978 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:38:28,978 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-01704E9A4FF1-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:38:28,979 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:38:29.667" starttime="20210126 13:38:29.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:29.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:29.667" starttime="20210126 13:38:29.667"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:29.668" starttime="20210126 13:38:25.567"></status>
</kw>
<msg timestamp="20210126 13:38:29.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:29.668" starttime="20210126 13:38:25.567"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:29.668" starttime="20210126 13:38:25.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:29.671" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:32.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:32.362" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:32.362" starttime="20210126 13:38:29.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:32.363" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:32.363" starttime="20210126 13:38:32.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:32.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:32.363" starttime="20210126 13:38:32.363"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:32.364" starttime="20210126 13:38:29.669"></status>
</kw>
<msg timestamp="20210126 13:38:32.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:32.364" starttime="20210126 13:38:29.669"></status>
</kw>
<msg timestamp="20210126 13:38:32.364" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:32.364" starttime="20210126 13:38:29.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:32.365" starttime="20210126 13:38:32.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:32.368" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:35.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:35.235" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:35.235" starttime="20210126 13:38:32.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:35.236" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:35.236" starttime="20210126 13:38:35.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:35.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:35.237" starttime="20210126 13:38:35.237"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:35.237" starttime="20210126 13:38:32.365"></status>
</kw>
<msg timestamp="20210126 13:38:35.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:35.237" starttime="20210126 13:38:32.365"></status>
</kw>
<msg timestamp="20210126 13:38:35.238" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:35.238" starttime="20210126 13:38:32.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:35.238" starttime="20210126 13:38:35.238"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:35.239" starttime="20210126 13:38:35.238"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:35.239" critical="yes" starttime="20210126 13:38:22.817"></status>
</test>
<test id="s1-s5-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:35.244" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:39.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:39.066" level="INFO">${output} = 2021-01-26 13:38:37,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:38,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:38:39.066" starttime="20210126 13:38:35.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:39.067" level="INFO">2021-01-26 13:38:37,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:38:38,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:38:38,032 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210126 13:38:39.067" starttime="20210126 13:38:39.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:39.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:39.068" starttime="20210126 13:38:39.067"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:39.068" starttime="20210126 13:38:35.241"></status>
</kw>
<msg timestamp="20210126 13:38:39.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:39.068" starttime="20210126 13:38:35.241"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:39.069" starttime="20210126 13:38:35.240"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:39.070" critical="yes" starttime="20210126 13:38:35.240"></status>
</test>
<test id="s1-s5-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:39.074" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:41.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:41.655" level="INFO">${output} = Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:41.655" starttime="20210126 13:38:39.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:41.656" level="INFO">Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:38:41.656" starttime="20210126 13:38:41.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:41.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:41.657" starttime="20210126 13:38:41.656"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:41.657" starttime="20210126 13:38:39.072"></status>
</kw>
<msg timestamp="20210126 13:38:41.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:41.657" starttime="20210126 13:38:39.072"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:41.657" starttime="20210126 13:38:39.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:41.664" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:44.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:44.390" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:38:44.390" starttime="20210126 13:38:41.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:44.392" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:38:44.392" starttime="20210126 13:38:44.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:44.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:44.392" starttime="20210126 13:38:44.392"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:44.392" starttime="20210126 13:38:41.658"></status>
</kw>
<msg timestamp="20210126 13:38:44.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:44.393" starttime="20210126 13:38:41.658"></status>
</kw>
<msg timestamp="20210126 13:38:44.393" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:38:44.393" starttime="20210126 13:38:41.657"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:44.393" starttime="20210126 13:38:44.393"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:44.394" critical="yes" starttime="20210126 13:38:39.070"></status>
</test>
<test id="s1-s5-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:44.398" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:46.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:46.987" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:38:46.987" starttime="20210126 13:38:44.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:46.988" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:38:46.988" starttime="20210126 13:38:46.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:46.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:46.989" starttime="20210126 13:38:46.988"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:46.989" starttime="20210126 13:38:44.396"></status>
</kw>
<msg timestamp="20210126 13:38:46.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:46.989" starttime="20210126 13:38:44.395"></status>
</kw>
<msg timestamp="20210126 13:38:46.989" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:38:46.989" starttime="20210126 13:38:44.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:46.993" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:49.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:49.551" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:49.551" starttime="20210126 13:38:46.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:49.552" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:49.552" starttime="20210126 13:38:49.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:49.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:49.553" starttime="20210126 13:38:49.552"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:49.553" starttime="20210126 13:38:46.991"></status>
</kw>
<msg timestamp="20210126 13:38:49.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:49.553" starttime="20210126 13:38:46.990"></status>
</kw>
<msg timestamp="20210126 13:38:49.553" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:38:49.554" starttime="20210126 13:38:46.990"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:49.554" starttime="20210126 13:38:49.554"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:49.554" critical="yes" starttime="20210126 13:38:44.394"></status>
</test>
<test id="s1-s5-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:49.558" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:52.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:52.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:38:52.305" starttime="20210126 13:38:49.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:52.306" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:38:52.306" starttime="20210126 13:38:52.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:52.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:52.307" starttime="20210126 13:38:52.306"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:52.307" starttime="20210126 13:38:49.556"></status>
</kw>
<msg timestamp="20210126 13:38:52.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:52.307" starttime="20210126 13:38:49.556"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:52.308" starttime="20210126 13:38:49.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:52.311" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:54.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:54.708" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:38:54.708" starttime="20210126 13:38:52.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:54.709" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:38:54.710" starttime="20210126 13:38:54.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:54.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:54.710" starttime="20210126 13:38:54.710"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:54.711" starttime="20210126 13:38:52.308"></status>
</kw>
<msg timestamp="20210126 13:38:54.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:54.711" starttime="20210126 13:38:52.308"></status>
</kw>
<msg timestamp="20210126 13:38:54.711" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:38:54.711" starttime="20210126 13:38:52.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:38:54.712" starttime="20210126 13:38:54.711"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:38:54.712" critical="yes" starttime="20210126 13:38:49.555"></status>
</test>
<test id="s1-s5-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:54.717" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:38:57.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:38:57.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:38:57.454" starttime="20210126 13:38:54.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:38:57.455" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:38:57.455" starttime="20210126 13:38:57.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:38:57.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:38:57.455" starttime="20210126 13:38:57.455"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:57.455" starttime="20210126 13:38:54.715"></status>
</kw>
<msg timestamp="20210126 13:38:57.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:38:57.456" starttime="20210126 13:38:54.714"></status>
</kw>
<status status="PASS" endtime="20210126 13:38:57.456" starttime="20210126 13:38:54.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:38:57.459" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:00.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:00.142" level="INFO">${output} = 2021-01-26 13:38:59,920 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:00,048 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:39:00.142" starttime="20210126 13:38:57.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:00.143" level="INFO">2021-01-26 13:38:59,920 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:00,048 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210126 13:39:00.143" starttime="20210126 13:39:00.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:00.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:00.144" starttime="20210126 13:39:00.143"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:00.144" starttime="20210126 13:38:57.457"></status>
</kw>
<msg timestamp="20210126 13:39:00.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:00.144" starttime="20210126 13:38:57.456"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:00.145" starttime="20210126 13:38:57.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:00.148" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:03.289" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:39:03.289" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop
drwxrwx...</msg>
<status status="PASS" endtime="20210126 13:39:03.289" starttime="20210126 13:39:00.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:03.290" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900/fstest1
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900/fstest1/bucket1-ofs
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 1970-01-01 00:00 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/ofs/dir
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/.Trash/hadoop/Current
ls: Unable to get file status: volume: fstest1 bucket: bucket1-ofs key: .Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:37 ofs://om/fstest1/bucket1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:37 ofs://om/fstest1/bucket1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:37 ofs://om/fstest1/bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-26 13:38 ofs://om/fstest1/bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:39:03.291" starttime="20210126 13:39:03.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:03.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210126 13:39:03.291" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210126 13:39:03.292" starttime="20210126 13:39:03.291"></status>
</kw>
<status status="FAIL" endtime="20210126 13:39:03.292" starttime="20210126 13:39:00.146"></status>
</kw>
<msg timestamp="20210126 13:39:03.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210126 13:39:03.292" starttime="20210126 13:39:00.145"></status>
</kw>
<status status="FAIL" endtime="20210126 13:39:03.292" starttime="20210126 13:39:00.145"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210126 13:39:03.292" critical="yes" starttime="20210126 13:38:54.712">1 != 0</status>
</test>
<test id="s1-s5-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:03.297" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:05.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:05.871" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:05.871" starttime="20210126 13:39:03.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:05.872" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:05.872" starttime="20210126 13:39:05.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:05.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:05.873" starttime="20210126 13:39:05.872"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:05.873" starttime="20210126 13:39:03.295"></status>
</kw>
<msg timestamp="20210126 13:39:05.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:05.873" starttime="20210126 13:39:03.295"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:05.873" starttime="20210126 13:39:03.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:05.877" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:08.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:08.436" level="INFO">${output} = Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210126 13:39:08.436" starttime="20210126 13:39:05.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:08.437" level="INFO">Deleted ofs://om/fstest1/bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210126 13:39:08.437" starttime="20210126 13:39:08.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:08.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:08.438" starttime="20210126 13:39:08.437"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:08.438" starttime="20210126 13:39:05.874"></status>
</kw>
<msg timestamp="20210126 13:39:08.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:08.438" starttime="20210126 13:39:05.874"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:08.438" starttime="20210126 13:39:05.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:08.442" level="INFO">Running command 'ozone sh key list fstest1/bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:11.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:11.067" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/210126133900/
.Trash/hadoop/210126133900/fstest1/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/
.Trash/hadoo...</msg>
<status status="PASS" endtime="20210126 13:39:11.067" starttime="20210126 13:39:08.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.068" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/210126133900/
.Trash/hadoop/210126133900/fstest1/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/ofs/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/bucket1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:39:11.069" starttime="20210126 13:39:11.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:11.069" starttime="20210126 13:39:11.069"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.070" starttime="20210126 13:39:08.439"></status>
</kw>
<msg timestamp="20210126 13:39:11.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:11.070" starttime="20210126 13:39:08.439"></status>
</kw>
<msg timestamp="20210126 13:39:11.070" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/210126133900/
.Trash/hadoop/210126133900/fstest1/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/
.Trash/hadoop/210126133900/fstest1/bucket1-ofs/test/
.Trash/hadoo...</msg>
<status status="PASS" endtime="20210126 13:39:11.070" starttime="20210126 13:39:08.438"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:39:11.071" starttime="20210126 13:39:11.070"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:11.071" critical="yes" starttime="20210126 13:39:03.293"></status>
</test>
<test id="s1-s5-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:11.075" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:11.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:11.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:11.078" starttime="20210126 13:39:11.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.078" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:11.079" starttime="20210126 13:39:11.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:11.079" starttime="20210126 13:39:11.079"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.079" starttime="20210126 13:39:11.073"></status>
</kw>
<msg timestamp="20210126 13:39:11.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:11.080" starttime="20210126 13:39:11.073"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.080" starttime="20210126 13:39:11.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:11.083" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:11.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:11.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:11.086" starttime="20210126 13:39:11.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.086" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:11.086" starttime="20210126 13:39:11.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:11.087" starttime="20210126 13:39:11.087"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.087" starttime="20210126 13:39:11.081"></status>
</kw>
<msg timestamp="20210126 13:39:11.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:11.087" starttime="20210126 13:39:11.080"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.088" starttime="20210126 13:39:11.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:11.090" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:11.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:11.093" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:11.093" starttime="20210126 13:39:11.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.094" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:11.094" starttime="20210126 13:39:11.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:11.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:11.094" starttime="20210126 13:39:11.094"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.095" starttime="20210126 13:39:11.088"></status>
</kw>
<msg timestamp="20210126 13:39:11.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:11.095" starttime="20210126 13:39:11.088"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:11.095" starttime="20210126 13:39:11.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:11.098" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:13.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:13.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:13.967" starttime="20210126 13:39:11.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:13.968" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:13.968" starttime="20210126 13:39:13.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:13.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:13.969" starttime="20210126 13:39:13.968"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:13.969" starttime="20210126 13:39:11.096"></status>
</kw>
<msg timestamp="20210126 13:39:13.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:13.969" starttime="20210126 13:39:11.096"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:13.969" starttime="20210126 13:39:11.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:13.972" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:18.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:18.236" level="INFO">${output} = 2021-01-26 13:39:16,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:16,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:39:18.236" starttime="20210126 13:39:13.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:18.237" level="INFO">2021-01-26 13:39:16,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:16,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:39:16,848 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:39:17,111 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:39:17,112 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-663CF0E8C576-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:39:17,112 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:39:18.237" starttime="20210126 13:39:18.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:18.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:18.238" starttime="20210126 13:39:18.237"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:18.238" starttime="20210126 13:39:13.970"></status>
</kw>
<msg timestamp="20210126 13:39:18.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:18.238" starttime="20210126 13:39:13.970"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:18.238" starttime="20210126 13:39:13.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:18.242" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:22.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:22.336" level="INFO">${output} = 2021-01-26 13:39:20,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:20,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:39:22.336" starttime="20210126 13:39:18.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:22.337" level="INFO">2021-01-26 13:39:20,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:20,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:39:20,944 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:39:21,188 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:39:21,189 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8E50D227FBA4-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:39:21,190 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:39:22.337" starttime="20210126 13:39:22.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:22.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:22.338" starttime="20210126 13:39:22.337"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:22.338" starttime="20210126 13:39:18.239"></status>
</kw>
<msg timestamp="20210126 13:39:22.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:22.338" starttime="20210126 13:39:18.239"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:22.338" starttime="20210126 13:39:18.239"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:22.338" starttime="20210126 13:39:11.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:22.342" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:24.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:24.917" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1...</msg>
<status status="PASS" endtime="20210126 13:39:24.917" starttime="20210126 13:39:22.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:24.918" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210126 13:39:24.918" starttime="20210126 13:39:24.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:24.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:24.919" starttime="20210126 13:39:24.918"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:24.919" starttime="20210126 13:39:22.339"></status>
</kw>
<msg timestamp="20210126 13:39:24.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:24.919" starttime="20210126 13:39:22.339"></status>
</kw>
<msg timestamp="20210126 13:39:24.919" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/testdir1...</msg>
<status status="PASS" endtime="20210126 13:39:24.919" starttime="20210126 13:39:22.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:39:24.920" starttime="20210126 13:39:24.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:39:24.920" starttime="20210126 13:39:24.920"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:24.920" critical="yes" starttime="20210126 13:39:11.071"></status>
</test>
<test id="s1-s5-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:39:24.925" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:39:24.925" starttime="20210126 13:39:24.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:39:24.926" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:39:24.926" starttime="20210126 13:39:24.925"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:24.926" starttime="20210126 13:39:24.924"></status>
</kw>
<msg timestamp="20210126 13:39:24.926" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:39:24.926" starttime="20210126 13:39:24.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:39:24.927" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210126 13:39:24.927" starttime="20210126 13:39:24.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:39:24.928" level="INFO">${result} = /testdir2</msg>
<status status="PASS" endtime="20210126 13:39:24.928" starttime="20210126 13:39:24.927"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:24.928" starttime="20210126 13:39:24.926"></status>
</kw>
<msg timestamp="20210126 13:39:24.928" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" endtime="20210126 13:39:24.928" starttime="20210126 13:39:24.926"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:24.928" starttime="20210126 13:39:24.923"></status>
</kw>
<msg timestamp="20210126 13:39:24.929" level="INFO">${url} = ofs://om/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:39:24.929" starttime="20210126 13:39:24.922"></status>
</kw>
<msg timestamp="20210126 13:39:24.929" level="INFO">${target} = ofs://om/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:39:24.929" starttime="20210126 13:39:24.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:24.932" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:27.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:27.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:27.641" starttime="20210126 13:39:24.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:27.643" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:27.643" starttime="20210126 13:39:27.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:27.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:27.644" starttime="20210126 13:39:27.643"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:27.644" starttime="20210126 13:39:24.930"></status>
</kw>
<msg timestamp="20210126 13:39:27.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:27.644" starttime="20210126 13:39:24.929"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:27.644" starttime="20210126 13:39:24.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:27.647" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:31.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:31.859" level="INFO">${output} = 2021-01-26 13:39:30,305 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:30,363 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:39:31.859" starttime="20210126 13:39:27.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:31.860" level="INFO">2021-01-26 13:39:30,305 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:30,363 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:39:30,363 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:39:31,100 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:39:31,101 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C7993285BDE7-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:39:31,103 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:39:31.860" starttime="20210126 13:39:31.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:31.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:31.860" starttime="20210126 13:39:31.860"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:31.861" starttime="20210126 13:39:27.645"></status>
</kw>
<msg timestamp="20210126 13:39:31.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:31.861" starttime="20210126 13:39:27.645"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:31.861" starttime="20210126 13:39:27.644"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:31.865" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:34.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:34.600" level="INFO">${output} = 2021-01-26 13:39:34,384 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:34,501 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:39:34.600" starttime="20210126 13:39:31.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:34.601" level="INFO">2021-01-26 13:39:34,384 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:34,501 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/bucket2-ofs/.Trash/hadoop/Current/fstest1/bucket2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:39:34.601" starttime="20210126 13:39:34.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:34.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:34.601" starttime="20210126 13:39:34.601"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:34.602" starttime="20210126 13:39:31.862"></status>
</kw>
<msg timestamp="20210126 13:39:34.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:34.602" starttime="20210126 13:39:31.862"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:34.602" starttime="20210126 13:39:31.861"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:34.602" critical="yes" starttime="20210126 13:39:24.921"></status>
</test>
<test id="s1-s5-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:39:34.607" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:39:34.607" starttime="20210126 13:39:34.606"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:39:34.607" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:39:34.607" starttime="20210126 13:39:34.607"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:34.607" starttime="20210126 13:39:34.606"></status>
</kw>
<msg timestamp="20210126 13:39:34.607" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:39:34.608" starttime="20210126 13:39:34.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:39:34.609" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210126 13:39:34.609" starttime="20210126 13:39:34.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:39:34.610" level="INFO">${result} = /testdir3</msg>
<status status="PASS" endtime="20210126 13:39:34.610" starttime="20210126 13:39:34.609"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:34.610" starttime="20210126 13:39:34.608"></status>
</kw>
<msg timestamp="20210126 13:39:34.610" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" endtime="20210126 13:39:34.610" starttime="20210126 13:39:34.608"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:34.610" starttime="20210126 13:39:34.605"></status>
</kw>
<msg timestamp="20210126 13:39:34.610" level="INFO">${url} = ofs://om/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:39:34.610" starttime="20210126 13:39:34.604"></status>
</kw>
<msg timestamp="20210126 13:39:34.611" level="INFO">${target} = ofs://om/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:39:34.611" starttime="20210126 13:39:34.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:34.614" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:37.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:37.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:37.381" starttime="20210126 13:39:34.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:37.382" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:37.382" starttime="20210126 13:39:37.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:37.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:37.383" starttime="20210126 13:39:37.382"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:37.383" starttime="20210126 13:39:34.611"></status>
</kw>
<msg timestamp="20210126 13:39:37.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:37.383" starttime="20210126 13:39:34.611"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:37.383" starttime="20210126 13:39:34.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:37.387" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:41.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:41.772" level="INFO">${output} = 2021-01-26 13:39:40,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:40,228 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:39:41.772" starttime="20210126 13:39:37.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:41.774" level="INFO">2021-01-26 13:39:40,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:40,228 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:39:40,228 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:39:41,032 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:39:41,033 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-51D020C7D62A-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:39:41,034 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:39:41.774" starttime="20210126 13:39:41.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:41.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:41.774" starttime="20210126 13:39:41.774"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:41.774" starttime="20210126 13:39:37.384"></status>
</kw>
<msg timestamp="20210126 13:39:41.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:41.775" starttime="20210126 13:39:37.384"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:41.775" starttime="20210126 13:39:37.383"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:41.778" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:44.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:44.574" level="INFO">${output} = 2021-01-26 13:39:44,234 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:44,420 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:39:44.574" starttime="20210126 13:39:41.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:44.575" level="INFO">2021-01-26 13:39:44,234 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:39:44,420 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/bucket3-ofs/.Trash/hadoop/Current/fstest2/bucket3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:39:44.575" starttime="20210126 13:39:44.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:44.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:44.575" starttime="20210126 13:39:44.575"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:44.576" starttime="20210126 13:39:41.776"></status>
</kw>
<msg timestamp="20210126 13:39:44.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:44.576" starttime="20210126 13:39:41.776"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:44.576" starttime="20210126 13:39:41.775"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:44.576" critical="yes" starttime="20210126 13:39:34.603"></status>
</test>
<test id="s1-s5-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:44.581" level="INFO">Running command 'ozone sh key put fstest1/bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:49.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:49.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:49.003" starttime="20210126 13:39:44.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:49.004" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:49.004" starttime="20210126 13:39:49.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:49.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:49.004" starttime="20210126 13:39:49.004"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:49.005" starttime="20210126 13:39:44.578"></status>
</kw>
<msg timestamp="20210126 13:39:49.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:49.005" starttime="20210126 13:39:44.578"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:49.005" starttime="20210126 13:39:44.578"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:49.008" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:51.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:51.633" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:39:51.633" starttime="20210126 13:39:49.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:51.634" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:39:51.635" starttime="20210126 13:39:51.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:51.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:51.635" starttime="20210126 13:39:51.635"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:51.635" starttime="20210126 13:39:49.006"></status>
</kw>
<msg timestamp="20210126 13:39:51.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:51.636" starttime="20210126 13:39:49.006"></status>
</kw>
<msg timestamp="20210126 13:39:51.636" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:39 ofs://om/fstest1/bucket1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:39:51.636" starttime="20210126 13:39:49.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:39:51.636" starttime="20210126 13:39:51.636"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:51.637" critical="yes" starttime="20210126 13:39:44.577"></status>
</test>
<test id="s1-s5-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:51.640" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:54.285" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:39:54.285" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:39:54.285" starttime="20210126 13:39:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:54.287" level="INFO">copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:39:54.287" starttime="20210126 13:39:54.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:54.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:54.287" starttime="20210126 13:39:54.287"></status>
</kw>
<msg timestamp="20210126 13:39:54.287" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:39:54.288" starttime="20210126 13:39:51.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:39:54.288" starttime="20210126 13:39:54.288"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:54.288" critical="yes" starttime="20210126 13:39:51.637"></status>
</test>
<test id="s1-s5-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:54.292" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:54.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:54.294" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:39:54.295" starttime="20210126 13:39:54.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:54.295" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:39:54.295" starttime="20210126 13:39:54.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:54.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:54.296" starttime="20210126 13:39:54.296"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:54.296" starttime="20210126 13:39:54.290"></status>
</kw>
<msg timestamp="20210126 13:39:54.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:54.296" starttime="20210126 13:39:54.290"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:54.297" starttime="20210126 13:39:54.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:39:54.300" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:39:58.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:39:58.131" level="INFO">${output} = 2021-01-26 13:39:56,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:57,065 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:39:58.132" starttime="20210126 13:39:54.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:39:58.133" level="INFO">2021-01-26 13:39:56,970 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:39:57,065 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:39:57,065 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210126 13:39:58.133" starttime="20210126 13:39:58.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:39:58.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:39:58.133" starttime="20210126 13:39:58.133"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:58.134" starttime="20210126 13:39:54.298"></status>
</kw>
<msg timestamp="20210126 13:39:58.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:39:58.134" starttime="20210126 13:39:54.297"></status>
</kw>
<status status="PASS" endtime="20210126 13:39:58.134" starttime="20210126 13:39:54.297"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210126 13:39:58.134" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210126 13:39:58.135" starttime="20210126 13:39:58.134"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:39:58.135" critical="yes" starttime="20210126 13:39:54.289"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="FAIL" endtime="20210126 13:39:58.138" starttime="20210126 13:37:27.164"></status>
</suite>
<suite source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot" id="s1-s6" name="ozonefs-ofs-link">
<kw type="setup" name="Setup for FS test" library="setup">
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:40.139" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:42.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:42.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:42.710" starttime="20210126 13:34:40.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:42.711" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:42.711" starttime="20210126 13:34:42.710"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:42.711" starttime="20210126 13:34:40.136"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:42.713" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:45.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:45.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:45.031" starttime="20210126 13:34:42.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:45.032" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:45.032" starttime="20210126 13:34:45.031"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:45.032" starttime="20210126 13:34:42.711"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:45.032" starttime="20210126 13:34:40.135"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
</arguments>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:45.035" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:47.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:47.662" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:47.662" starttime="20210126 13:34:45.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:47.663" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:47.663" starttime="20210126 13:34:47.662"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:47.663" starttime="20210126 13:34:45.033"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:47.666" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:50.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:50.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:50.262" starttime="20210126 13:34:47.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:50.263" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:50.263" starttime="20210126 13:34:50.262"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:50.263" starttime="20210126 13:34:47.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:50.266" level="INFO">Running command 'ozone sh bucket create fstest1-src/link1-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:52.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:52.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:52.722" starttime="20210126 13:34:50.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:52.723" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:52.723" starttime="20210126 13:34:52.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:52.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:52.724" starttime="20210126 13:34:52.723"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:52.724" starttime="20210126 13:34:50.264"></status>
</kw>
<msg timestamp="20210126 13:34:52.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:52.724" starttime="20210126 13:34:50.264"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:52.724" starttime="20210126 13:34:50.263"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:52.727" level="INFO">Running command 'ozone sh bucket create fstest1-src/link2-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:55.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:55.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:55.144" starttime="20210126 13:34:52.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:55.145" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:55.145" starttime="20210126 13:34:55.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:55.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:55.145" starttime="20210126 13:34:55.145"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:55.146" starttime="20210126 13:34:52.725"></status>
</kw>
<msg timestamp="20210126 13:34:55.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:55.146" starttime="20210126 13:34:52.725"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:55.146" starttime="20210126 13:34:52.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:55.150" level="INFO">Running command 'ozone sh bucket create fstest2-src/link3-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:34:57.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:34:57.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:34:57.823" starttime="20210126 13:34:55.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:34:57.824" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:34:57.824" starttime="20210126 13:34:57.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:34:57.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:34:57.825" starttime="20210126 13:34:57.825"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:57.825" starttime="20210126 13:34:55.147"></status>
</kw>
<msg timestamp="20210126 13:34:57.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:34:57.825" starttime="20210126 13:34:55.147"></status>
</kw>
<status status="PASS" endtime="20210126 13:34:57.825" starttime="20210126 13:34:55.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:34:57.829" level="INFO">Running command 'ozone sh bucket link fstest1-src/link1-ofs-src fstest1/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:00.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:00.263" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:00.263" starttime="20210126 13:34:57.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:00.264" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:00.264" starttime="20210126 13:35:00.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:00.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:00.265" starttime="20210126 13:35:00.264"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:00.265" starttime="20210126 13:34:57.826"></status>
</kw>
<msg timestamp="20210126 13:35:00.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:00.265" starttime="20210126 13:34:57.826"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:00.265" starttime="20210126 13:34:57.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:00.269" level="INFO">Running command 'ozone sh bucket link fstest1-src/link2-ofs-src fstest1/link2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:02.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:02.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:02.758" starttime="20210126 13:35:00.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:02.759" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:02.759" starttime="20210126 13:35:02.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:02.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:02.759" starttime="20210126 13:35:02.759"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:02.759" starttime="20210126 13:35:00.266"></status>
</kw>
<msg timestamp="20210126 13:35:02.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:02.760" starttime="20210126 13:35:00.266"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:02.760" starttime="20210126 13:35:00.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:02.763" level="INFO">Running command 'ozone sh bucket link fstest2-src/link3-ofs-src fstest2/link3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:05.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:05.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:05.266" starttime="20210126 13:35:02.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:05.267" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:05.267" starttime="20210126 13:35:05.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:05.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:05.267" starttime="20210126 13:35:05.267"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:05.268" starttime="20210126 13:35:02.761"></status>
</kw>
<msg timestamp="20210126 13:35:05.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:05.268" starttime="20210126 13:35:02.761"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:05.268" starttime="20210126 13:35:02.760"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:05.268" starttime="20210126 13:34:45.033"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:05.268" starttime="20210126 13:34:45.032"></status>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:05.272" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:08.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:08.092" level="INFO">${output} = {
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:2...</msg>
<status status="PASS" endtime="20210126 13:35:08.092" starttime="20210126 13:35:05.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:08.093" level="INFO">{
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.773Z",
  "modificationTime" : "2021-01-26T13:20:24.773Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "42170-target",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 7,
  "creationTime" : "2021-01-26T13:21:49.663Z",
  "modificationTime" : "2021-01-26T13:21:49.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-89255",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.757Z",
  "modificationTime" : "2021-01-26T13:20:24.757Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:34:50.074Z",
  "modificationTime" : "2021-01-26T13:34:50.074Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "89622-rpcwoport2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:27:58.980Z",
  "modificationTime" : "2021-01-26T13:28:14.482Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:19:34.676Z",
  "modificationTime" : "2021-01-26T13:19:34.676Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-73381",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.782Z",
  "modificationTime" : "2021-01-26T13:20:24.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-26T13:34:47.527Z",
  "modificationTime" : "2021-01-26T13:34:47.527Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:19:21.657Z",
  "modificationTime" : "2021-01-26T13:19:21.657Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-23314",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.792Z",
  "modificationTime" : "2021-01-26T13:20:24.792Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "42170-source",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:21:47.217Z",
  "modificationTime" : "2021-01-26T13:21:47.217Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-01-26T13:34:44.965Z",
  "modificationTime" : "2021-01-26T13:34:44.965Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-60623",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:20:24.801Z",
  "modificationTime" : "2021-01-26T13:20:24.801Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-01-26T13:34:42.555Z",
  "modificationTime" : "2021-01-26T13:34:42.555Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "behdi",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : 100,
  "usedNamespace" : 4,
  "creationTime" : "2021-01-26T13:33:36.696Z",
  "modificationTime" : "2021-01-26T13:33:36.696Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20210126 13:35:08.093" starttime="20210126 13:35:08.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:08.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:08.093" starttime="20210126 13:35:08.093"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:08.094" starttime="20210126 13:35:05.269"></status>
</kw>
<msg timestamp="20210126 13:35:08.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:08.094" starttime="20210126 13:35:05.269"></status>
</kw>
<msg timestamp="20210126 13:35:08.094" level="INFO">${result} = {
  "metadata" : { },
  "name" : "vol-1-60980",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-01-26T13:2...</msg>
<status status="PASS" endtime="20210126 13:35:08.094" starttime="20210126 13:35:05.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOLUME}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:08.095" starttime="20210126 13:35:08.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${VOL2}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:08.095" starttime="20210126 13:35:08.095"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm@EXAMPLE\.COM)"</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:08.096" starttime="20210126 13:35:08.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${VOLUME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:08.099" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:10.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:10.882" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:...</msg>
<status status="PASS" endtime="20210126 13:35:10.882" starttime="20210126 13:35:08.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:10.883" level="INFO">{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:35:00.091Z",
  "modificationTime" : "2021-01-26T13:35:00.091Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:35:02.623Z",
  "modificationTime" : "2021-01-26T13:35:02.623Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 13:35:10.884" starttime="20210126 13:35:10.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:10.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:10.884" starttime="20210126 13:35:10.884"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.884" starttime="20210126 13:35:08.097"></status>
</kw>
<msg timestamp="20210126 13:35:10.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:10.885" starttime="20210126 13:35:08.097"></status>
</kw>
<msg timestamp="20210126 13:35:10.885" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T13:...</msg>
<status status="PASS" endtime="20210126 13:35:10.885" starttime="20210126 13:35:08.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:10.885" starttime="20210126 13:35:10.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:10.886" starttime="20210126 13:35:10.885"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.886" starttime="20210126 13:35:05.268"></status>
</kw>
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${BASE_URL}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:35:10.889" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:35:10.889" starttime="20210126 13:35:10.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:35:10.890" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:35:10.890" starttime="20210126 13:35:10.889"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.890" starttime="20210126 13:35:10.888"></status>
</kw>
<msg timestamp="20210126 13:35:10.890" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:35:10.890" starttime="20210126 13:35:10.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:35:10.891" level="INFO">${first} = /</msg>
<status status="PASS" endtime="20210126 13:35:10.891" starttime="20210126 13:35:10.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:35:10.892" level="INFO">${result} = /</msg>
<status status="PASS" endtime="20210126 13:35:10.892" starttime="20210126 13:35:10.891"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.892" starttime="20210126 13:35:10.891"></status>
</kw>
<msg timestamp="20210126 13:35:10.892" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" endtime="20210126 13:35:10.892" starttime="20210126 13:35:10.890"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.892" starttime="20210126 13:35:10.887"></status>
</kw>
<msg timestamp="20210126 13:35:10.892" level="INFO">${url} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210126 13:35:10.892" starttime="20210126 13:35:10.887"></status>
</kw>
<msg timestamp="20210126 13:35:10.893" level="INFO">${BASE_URL} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210126 13:35:10.893" starttime="20210126 13:35:10.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20210126 13:35:10.893" level="INFO">${BASE_URL} = ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210126 13:35:10.893" starttime="20210126 13:35:10.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
</arguments>
<msg timestamp="20210126 13:35:10.895" level="INFO">${DEEP_URL} = ofs://om/fstest1/link1-ofs/test/ofs/dir</msg>
<status status="PASS" endtime="20210126 13:35:10.895" starttime="20210126 13:35:10.893"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.895" starttime="20210126 13:35:10.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
</arguments>
<msg timestamp="20210126 13:35:10.896" level="INFO">Completed setup for ofs tests with links in fstest1/link1-ofs using FS base URL: ofs://om/fstest1/link1-ofs/</msg>
<status status="PASS" endtime="20210126 13:35:10.896" starttime="20210126 13:35:10.895"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.896" starttime="20210126 13:34:40.135"></status>
</kw>
<test id="s1-s6-t1" name="List root">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:35:10.900" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:35:10.900" starttime="20210126 13:35:10.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:35:10.901" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:35:10.901" starttime="20210126 13:35:10.900"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.901" starttime="20210126 13:35:10.899"></status>
</kw>
<msg timestamp="20210126 13:35:10.901" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:35:10.901" starttime="20210126 13:35:10.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:10.902" starttime="20210126 13:35:10.901"></status>
</kw>
<msg timestamp="20210126 13:35:10.902" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:35:10.902" starttime="20210126 13:35:10.901"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:10.902" starttime="20210126 13:35:10.898"></status>
</kw>
<msg timestamp="20210126 13:35:10.902" level="INFO">${url} = ofs://om/fstest1/link1-ofs</msg>
<status status="PASS" endtime="20210126 13:35:10.902" starttime="20210126 13:35:10.898"></status>
</kw>
<msg timestamp="20210126 13:35:10.902" level="INFO">${root} = ofs://om/fstest1/link1-ofs</msg>
<status status="PASS" endtime="20210126 13:35:10.903" starttime="20210126 13:35:10.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${root}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:10.906" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:13.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:13.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:13.557" starttime="20210126 13:35:10.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:13.559" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:13.559" starttime="20210126 13:35:13.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:13.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:13.559" starttime="20210126 13:35:13.559"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:13.559" starttime="20210126 13:35:10.903"></status>
</kw>
<msg timestamp="20210126 13:35:13.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:13.560" starttime="20210126 13:35:10.903"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:13.560" starttime="20210126 13:35:10.903"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:13.560" critical="yes" starttime="20210126 13:35:10.896"></status>
</test>
<test id="s1-s6-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:35:13.565" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:35:13.565" starttime="20210126 13:35:13.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:35:13.566" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:35:13.566" starttime="20210126 13:35:13.565"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:13.566" starttime="20210126 13:35:13.564"></status>
</kw>
<msg timestamp="20210126 13:35:13.566" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:35:13.566" starttime="20210126 13:35:13.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:13.567" starttime="20210126 13:35:13.566"></status>
</kw>
<msg timestamp="20210126 13:35:13.567" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:35:13.567" starttime="20210126 13:35:13.566"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:13.567" starttime="20210126 13:35:13.563"></status>
</kw>
<msg timestamp="20210126 13:35:13.567" level="INFO">${url} = ofs://om/no-such-volume/link1-ofs</msg>
<status status="PASS" endtime="20210126 13:35:13.567" starttime="20210126 13:35:13.562"></status>
</kw>
<msg timestamp="20210126 13:35:13.567" level="INFO">${url} = ofs://om/no-such-volume/link1-ofs</msg>
<status status="PASS" endtime="20210126 13:35:13.567" starttime="20210126 13:35:13.562"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:13.570" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:16.054" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:35:16.054" level="INFO">${output} = ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:16.054" starttime="20210126 13:35:13.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:16.055" level="INFO">ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:16.055" starttime="20210126 13:35:16.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:16.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:16.056" starttime="20210126 13:35:16.055"></status>
</kw>
<msg timestamp="20210126 13:35:16.056" level="INFO">${result} = ls: `ofs://om/no-such-volume/link1-ofs': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:16.056" starttime="20210126 13:35:13.568"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:16.057" starttime="20210126 13:35:16.056"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:16.057" critical="yes" starttime="20210126 13:35:13.561"></status>
</test>
<test id="s1-s6-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:35:16.062" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:35:16.062" starttime="20210126 13:35:16.062"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:35:16.063" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:35:16.063" starttime="20210126 13:35:16.062"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:16.063" starttime="20210126 13:35:16.061"></status>
</kw>
<msg timestamp="20210126 13:35:16.063" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:35:16.063" starttime="20210126 13:35:16.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:16.064" starttime="20210126 13:35:16.063"></status>
</kw>
<msg timestamp="20210126 13:35:16.064" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 13:35:16.064" starttime="20210126 13:35:16.063"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:16.064" starttime="20210126 13:35:16.060"></status>
</kw>
<msg timestamp="20210126 13:35:16.064" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210126 13:35:16.064" starttime="20210126 13:35:16.059"></status>
</kw>
<msg timestamp="20210126 13:35:16.065" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" endtime="20210126 13:35:16.065" starttime="20210126 13:35:16.059"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:16.067" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:18.647" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:35:18.648" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:18.648" starttime="20210126 13:35:16.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:18.649" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:18.649" starttime="20210126 13:35:18.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:18.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:18.649" starttime="20210126 13:35:18.649"></status>
</kw>
<msg timestamp="20210126 13:35:18.650" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" endtime="20210126 13:35:18.650" starttime="20210126 13:35:16.065"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:18.651" starttime="20210126 13:35:18.650"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:18.651" critical="yes" starttime="20210126 13:35:16.058"></status>
</test>
<test id="s1-s6-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:18.656" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:21.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:21.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:21.248" starttime="20210126 13:35:18.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:21.250" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:21.250" starttime="20210126 13:35:21.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:21.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:21.250" starttime="20210126 13:35:21.250"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:21.250" starttime="20210126 13:35:18.653"></status>
</kw>
<msg timestamp="20210126 13:35:21.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:21.251" starttime="20210126 13:35:18.653"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:21.251" starttime="20210126 13:35:18.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:21.255" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:23.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:23.832" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:35:23.832" starttime="20210126 13:35:21.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:23.833" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:35:23.833" starttime="20210126 13:35:23.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:23.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:23.834" starttime="20210126 13:35:23.834"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:23.834" starttime="20210126 13:35:21.252"></status>
</kw>
<msg timestamp="20210126 13:35:23.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:23.835" starttime="20210126 13:35:21.252"></status>
</kw>
<msg timestamp="20210126 13:35:23.835" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" endtime="20210126 13:35:23.835" starttime="20210126 13:35:21.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:23.835" starttime="20210126 13:35:23.835"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:23.835" critical="yes" starttime="20210126 13:35:18.651"></status>
</test>
<test id="s1-s6-t5" name="Copy from local">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:23.840" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:28.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:28.133" level="INFO">${output} = 2021-01-26 13:35:26,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:26,728 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:35:28.133" starttime="20210126 13:35:23.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:28.134" level="INFO">2021-01-26 13:35:26,630 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:26,728 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:35:26,728 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:35:26,960 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:35:26,961 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-02EDAA66E679-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:35:26,961 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:35:28.134" starttime="20210126 13:35:28.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:28.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:28.135" starttime="20210126 13:35:28.134"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:28.135" starttime="20210126 13:35:23.838"></status>
</kw>
<msg timestamp="20210126 13:35:28.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:28.135" starttime="20210126 13:35:23.837"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:28.135" starttime="20210126 13:35:23.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:28.139" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:30.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:30.921" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:30.921" starttime="20210126 13:35:28.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:30.922" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:30.922" starttime="20210126 13:35:30.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:30.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:30.923" starttime="20210126 13:35:30.922"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:30.923" starttime="20210126 13:35:28.136"></status>
</kw>
<msg timestamp="20210126 13:35:30.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:30.923" starttime="20210126 13:35:28.136"></status>
</kw>
<msg timestamp="20210126 13:35:30.924" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:30.924" starttime="20210126 13:35:28.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:30.924" starttime="20210126 13:35:30.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:30.928" level="INFO">Running command 'ozone sh key info fstest1/link1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:33.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:33.571" level="INFO">${output} = 3</msg>
<status status="PASS" endtime="20210126 13:35:33.571" starttime="20210126 13:35:30.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:33.572" level="INFO">3</msg>
<status status="PASS" endtime="20210126 13:35:33.572" starttime="20210126 13:35:33.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:33.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:33.573" starttime="20210126 13:35:33.572"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:33.573" starttime="20210126 13:35:30.925"></status>
</kw>
<msg timestamp="20210126 13:35:33.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:33.573" starttime="20210126 13:35:30.925"></status>
</kw>
<msg timestamp="20210126 13:35:33.573" level="INFO">${result} = 3</msg>
<status status="PASS" endtime="20210126 13:35:33.573" starttime="20210126 13:35:30.924"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:33.574" starttime="20210126 13:35:33.573"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:33.574" critical="yes" starttime="20210126 13:35:23.836"></status>
</test>
<test id="s1-s6-t6" name="Put">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:33.578" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:37.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:37.674" level="INFO">${output} = 2021-01-26 13:35:36,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:36,349 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:35:37.674" starttime="20210126 13:35:33.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:37.675" level="INFO">2021-01-26 13:35:36,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:36,349 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:35:36,350 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:35:36,611 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:35:36,612 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F35AF17A5F89-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:35:36,612 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:35:37.675" starttime="20210126 13:35:37.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:37.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:37.676" starttime="20210126 13:35:37.676"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:37.676" starttime="20210126 13:35:33.576"></status>
</kw>
<msg timestamp="20210126 13:35:37.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:37.677" starttime="20210126 13:35:33.576"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:37.677" starttime="20210126 13:35:33.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:37.680" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:40.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:40.451" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:40.451" starttime="20210126 13:35:37.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:40.452" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:40.453" starttime="20210126 13:35:40.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:40.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:40.453" starttime="20210126 13:35:40.453"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:40.453" starttime="20210126 13:35:37.678"></status>
</kw>
<msg timestamp="20210126 13:35:40.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:40.454" starttime="20210126 13:35:37.677"></status>
</kw>
<msg timestamp="20210126 13:35:40.454" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:40.454" starttime="20210126 13:35:37.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:40.454" starttime="20210126 13:35:40.454"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:40.455" critical="yes" starttime="20210126 13:35:33.575"></status>
</test>
<test id="s1-s6-t7" name="List">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:40.459" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:43.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:43.110" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link...</msg>
<status status="PASS" endtime="20210126 13:35:43.110" starttime="20210126 13:35:40.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:43.111" level="INFO">Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:43.111" starttime="20210126 13:35:43.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:43.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:43.112" starttime="20210126 13:35:43.111"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:43.112" starttime="20210126 13:35:40.457"></status>
</kw>
<msg timestamp="20210126 13:35:43.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:43.112" starttime="20210126 13:35:40.456"></status>
</kw>
<msg timestamp="20210126 13:35:43.112" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link...</msg>
<status status="PASS" endtime="20210126 13:35:43.112" starttime="20210126 13:35:40.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:43.113" starttime="20210126 13:35:43.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:43.113" starttime="20210126 13:35:43.113"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:43.113" critical="yes" starttime="20210126 13:35:40.455"></status>
</test>
<test id="s1-s6-t8" name="Move">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:43.118" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/link1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:45.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:45.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:45.744" starttime="20210126 13:35:43.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:45.745" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:45.745" starttime="20210126 13:35:45.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:45.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:45.746" starttime="20210126 13:35:45.746"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:45.746" starttime="20210126 13:35:43.116"></status>
</kw>
<msg timestamp="20210126 13:35:45.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:45.746" starttime="20210126 13:35:43.116"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:45.747" starttime="20210126 13:35:43.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:45.750" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:48.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:48.458" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:48.459" starttime="20210126 13:35:45.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:48.460" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:48.460" starttime="20210126 13:35:48.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:48.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:48.460" starttime="20210126 13:35:48.460"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:48.461" starttime="20210126 13:35:45.748"></status>
</kw>
<msg timestamp="20210126 13:35:48.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:48.461" starttime="20210126 13:35:45.747"></status>
</kw>
<msg timestamp="20210126 13:35:48.461" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:35:48.461" starttime="20210126 13:35:45.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:48.462" starttime="20210126 13:35:48.461"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:48.462" starttime="20210126 13:35:48.462"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:35:48.462" critical="yes" starttime="20210126 13:35:43.114"></status>
</test>
<test id="s1-s6-t9" name="Copy within FS">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:48.467" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:50.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:50.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:35:50.967" starttime="20210126 13:35:48.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:50.969" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:35:50.969" starttime="20210126 13:35:50.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:50.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:50.969" starttime="20210126 13:35:50.969"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:50.970" starttime="20210126 13:35:48.464"></status>
</kw>
<msg timestamp="20210126 13:35:50.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:50.970" starttime="20210126 13:35:48.464"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:50.970" starttime="20210126 13:35:48.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:50.973" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:55.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:55.390" level="INFO">${output} = 2021-01-26 13:35:53,797 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:53,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:35:55.390" starttime="20210126 13:35:50.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:55.391" level="INFO">2021-01-26 13:35:53,797 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:35:53,888 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:35:53,888 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:35:54,623 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:35:54,624 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BF410EF5EB6D-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:35:54,624 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:35:55.391" starttime="20210126 13:35:55.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:55.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:55.392" starttime="20210126 13:35:55.391"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:55.392" starttime="20210126 13:35:50.971"></status>
</kw>
<msg timestamp="20210126 13:35:55.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:55.392" starttime="20210126 13:35:50.971"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:55.393" starttime="20210126 13:35:50.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:55.396" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:35:57.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:35:57.971" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:57.971" starttime="20210126 13:35:55.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:35:57.973" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:57.973" starttime="20210126 13:35:57.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:35:57.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:35:57.973" starttime="20210126 13:35:57.973"></status>
</kw>
<status status="PASS" endtime="20210126 13:35:57.974" starttime="20210126 13:35:55.394"></status>
</kw>
<msg timestamp="20210126 13:35:57.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:35:57.974" starttime="20210126 13:35:55.393"></status>
</kw>
<msg timestamp="20210126 13:35:57.974" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:35:57.974" starttime="20210126 13:35:55.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:35:57.974" starttime="20210126 13:35:57.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:35:57.978" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:00.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:00.623" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:36:00.623" starttime="20210126 13:35:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:00.624" level="INFO">Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:36:00.624" starttime="20210126 13:36:00.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:00.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:00.625" starttime="20210126 13:36:00.624"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:00.625" starttime="20210126 13:35:57.975"></status>
</kw>
<msg timestamp="20210126 13:36:00.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:00.625" starttime="20210126 13:35:57.975"></status>
</kw>
<msg timestamp="20210126 13:36:00.626" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:36:00.626" starttime="20210126 13:35:57.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:00.626" starttime="20210126 13:36:00.626"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:00.627" starttime="20210126 13:36:00.626"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:00.627" critical="yes" starttime="20210126 13:35:48.463"></status>
</test>
<test id="s1-s6-t10" name="Cat file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:00.632" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:04.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:04.572" level="INFO">${output} = 2021-01-26 13:36:03,241 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:03,344 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:36:04.572" starttime="20210126 13:36:00.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:04.573" level="INFO">2021-01-26 13:36:03,241 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:03,344 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:36:03,344 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" endtime="20210126 13:36:04.573" starttime="20210126 13:36:04.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:04.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:04.574" starttime="20210126 13:36:04.574"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:04.574" starttime="20210126 13:36:00.630"></status>
</kw>
<msg timestamp="20210126 13:36:04.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:04.575" starttime="20210126 13:36:00.629"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:04.576" starttime="20210126 13:36:00.629"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:04.576" critical="yes" starttime="20210126 13:36:00.628"></status>
</test>
<test id="s1-s6-t11" name="Delete file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:04.581" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:07.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:07.290" level="INFO">${output} = Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:36:07.290" starttime="20210126 13:36:04.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:07.291" level="INFO">Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" endtime="20210126 13:36:07.291" starttime="20210126 13:36:07.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:07.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:07.292" starttime="20210126 13:36:07.291"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:07.292" starttime="20210126 13:36:04.578"></status>
</kw>
<msg timestamp="20210126 13:36:07.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:07.292" starttime="20210126 13:36:04.578"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:07.292" starttime="20210126 13:36:04.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:07.295" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:09.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:09.821" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:36:09.821" starttime="20210126 13:36:07.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:09.822" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:36:09.822" starttime="20210126 13:36:09.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:09.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:09.823" starttime="20210126 13:36:09.822"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:09.823" starttime="20210126 13:36:07.293"></status>
</kw>
<msg timestamp="20210126 13:36:09.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:09.823" starttime="20210126 13:36:07.293"></status>
</kw>
<msg timestamp="20210126 13:36:09.824" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" endtime="20210126 13:36:09.824" starttime="20210126 13:36:07.292"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:09.824" starttime="20210126 13:36:09.824"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:09.824" critical="yes" starttime="20210126 13:36:04.577"></status>
</test>
<test id="s1-s6-t12" name="Delete dir">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:09.831" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:12.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:12.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:12.556" starttime="20210126 13:36:09.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:12.557" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:12.558" starttime="20210126 13:36:12.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:12.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:12.558" starttime="20210126 13:36:12.558"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:12.558" starttime="20210126 13:36:09.827"></status>
</kw>
<msg timestamp="20210126 13:36:12.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:12.559" starttime="20210126 13:36:09.827"></status>
</kw>
<msg timestamp="20210126 13:36:12.559" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 13:36:12.559" starttime="20210126 13:36:09.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:12.562" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:15.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:15.197" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:36:15.197" starttime="20210126 13:36:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:15.198" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:36:15.198" starttime="20210126 13:36:15.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:15.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:15.199" starttime="20210126 13:36:15.198"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:15.199" starttime="20210126 13:36:12.560"></status>
</kw>
<msg timestamp="20210126 13:36:15.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:15.199" starttime="20210126 13:36:12.560"></status>
</kw>
<msg timestamp="20210126 13:36:15.200" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" endtime="20210126 13:36:15.200" starttime="20210126 13:36:12.559"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>subdir1</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:15.200" starttime="20210126 13:36:15.200"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:15.200" critical="yes" starttime="20210126 13:36:09.825"></status>
</test>
<test id="s1-s6-t13" name="Touch file">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:15.205" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:17.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:17.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:17.992" starttime="20210126 13:36:15.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:17.993" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:17.993" starttime="20210126 13:36:17.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:17.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:17.994" starttime="20210126 13:36:17.993"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:17.994" starttime="20210126 13:36:15.203"></status>
</kw>
<msg timestamp="20210126 13:36:17.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:17.994" starttime="20210126 13:36:15.203"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:17.994" starttime="20210126 13:36:15.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:17.998" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:20.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:20.297" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:36:20.297" starttime="20210126 13:36:17.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:20.298" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:36:20.298" starttime="20210126 13:36:20.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:20.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:20.299" starttime="20210126 13:36:20.299"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:20.299" starttime="20210126 13:36:17.995"></status>
</kw>
<msg timestamp="20210126 13:36:20.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:20.300" starttime="20210126 13:36:17.995"></status>
</kw>
<msg timestamp="20210126 13:36:20.300" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:36:20.300" starttime="20210126 13:36:17.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:20.300" starttime="20210126 13:36:20.300"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:20.301" critical="yes" starttime="20210126 13:36:15.201"></status>
</test>
<test id="s1-s6-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:20.306" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:23.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:23.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:23.049" starttime="20210126 13:36:20.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:23.050" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:23.051" starttime="20210126 13:36:23.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:23.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:23.051" starttime="20210126 13:36:23.051"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:23.051" starttime="20210126 13:36:20.303"></status>
</kw>
<msg timestamp="20210126 13:36:23.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:23.052" starttime="20210126 13:36:20.303"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:23.052" starttime="20210126 13:36:20.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:23.055" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:25.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:25.833" level="INFO">${output} = 2021-01-26 13:36:25,584 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:36:25,699 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:36:25.833" starttime="20210126 13:36:23.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:25.834" level="INFO">2021-01-26 13:36:25,584 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:36:25,699 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/link1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" endtime="20210126 13:36:25.834" starttime="20210126 13:36:25.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:25.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:25.835" starttime="20210126 13:36:25.835"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:25.835" starttime="20210126 13:36:23.053"></status>
</kw>
<msg timestamp="20210126 13:36:25.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:25.836" starttime="20210126 13:36:23.052"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:25.836" starttime="20210126 13:36:23.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:25.839" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/link1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:28.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:28.571" level="INFO">${output} = drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx ...</msg>
<status status="PASS" endtime="20210126 13:36:28.571" starttime="20210126 13:36:25.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:28.572" level="INFO">drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:35 ofs://om/fstest1/link1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:36:28.572" starttime="20210126 13:36:28.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:28.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:28.573" starttime="20210126 13:36:28.572"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:28.573" starttime="20210126 13:36:25.837"></status>
</kw>
<msg timestamp="20210126 13:36:28.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:28.573" starttime="20210126 13:36:25.836"></status>
</kw>
<msg timestamp="20210126 13:36:28.574" level="INFO">${result} = drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/.Trash/hadoop
drwxrwxrwx ...</msg>
<status status="PASS" endtime="20210126 13:36:28.574" starttime="20210126 13:36:25.836"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:28.574" starttime="20210126 13:36:28.574"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser/scm@EXAMPLE.COM</arg>
<arg>.Trash/root</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:28.575" starttime="20210126 13:36:28.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:28.575" starttime="20210126 13:36:28.575"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:28.575" critical="yes" starttime="20210126 13:36:20.301"></status>
</test>
<test id="s1-s6-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:28.580" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:31.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:31.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:31.095" starttime="20210126 13:36:28.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:31.096" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:31.096" starttime="20210126 13:36:31.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:31.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:31.097" starttime="20210126 13:36:31.097"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:31.097" starttime="20210126 13:36:28.578"></status>
</kw>
<msg timestamp="20210126 13:36:31.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:31.097" starttime="20210126 13:36:28.578"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:31.098" starttime="20210126 13:36:28.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:31.101" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:33.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:33.816" level="INFO">${output} = Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210126 13:36:33.816" starttime="20210126 13:36:31.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:33.817" level="INFO">Deleted ofs://om/fstest1/link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" endtime="20210126 13:36:33.817" starttime="20210126 13:36:33.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:33.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:33.818" starttime="20210126 13:36:33.817"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:33.818" starttime="20210126 13:36:31.098"></status>
</kw>
<msg timestamp="20210126 13:36:33.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:33.818" starttime="20210126 13:36:31.098"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:33.819" starttime="20210126 13:36:31.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:33.822" level="INFO">Running command 'ozone sh key list fstest1/link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:36.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:36.461" level="INFO">${output} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-...</msg>
<status status="PASS" endtime="20210126 13:36:36.461" starttime="20210126 13:36:33.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.462" level="INFO">.Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/
.Trash/hadoop/Current/fstest1/link1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" endtime="20210126 13:36:36.462" starttime="20210126 13:36:36.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:36.463" starttime="20210126 13:36:36.463"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.463" starttime="20210126 13:36:33.819"></status>
</kw>
<msg timestamp="20210126 13:36:36.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:36.463" starttime="20210126 13:36:33.819"></status>
</kw>
<msg timestamp="20210126 13:36:36.464" level="INFO">${result} = .Trash/
.Trash/hadoop/
.Trash/hadoop/Current/
.Trash/hadoop/Current/fstest1/
.Trash/hadoop/Current/fstest1/link1-ofs/
.Trash/hadoop/Current/fstest1/link1-ofs/test/
.Trash/hadoop/Current/fstest1/link1-...</msg>
<status status="PASS" endtime="20210126 13:36:36.464" starttime="20210126 13:36:33.819"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:36.464" starttime="20210126 13:36:36.464"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:36.465" critical="yes" starttime="20210126 13:36:28.576"></status>
</test>
<test id="s1-s6-t16" name="List recursively">
<kw type="setup" name="Setup localdir1">
<kw name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:36.469" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:36.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:36.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:36.471" starttime="20210126 13:36:36.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.472" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:36.472" starttime="20210126 13:36:36.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:36.473" starttime="20210126 13:36:36.472"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.473" starttime="20210126 13:36:36.466"></status>
</kw>
<msg timestamp="20210126 13:36:36.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:36.473" starttime="20210126 13:36:36.466"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.473" starttime="20210126 13:36:36.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>mkdir /tmp/localdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:36.477" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:36.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:36.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:36.479" starttime="20210126 13:36:36.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.480" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:36.480" starttime="20210126 13:36:36.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:36.481" starttime="20210126 13:36:36.480"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.481" starttime="20210126 13:36:36.474"></status>
</kw>
<msg timestamp="20210126 13:36:36.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:36.481" starttime="20210126 13:36:36.474"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.481" starttime="20210126 13:36:36.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:36.484" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:36.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:36.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:36.487" starttime="20210126 13:36:36.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.488" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:36.488" starttime="20210126 13:36:36.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:36.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:36.488" starttime="20210126 13:36:36.488"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.489" starttime="20210126 13:36:36.482"></status>
</kw>
<msg timestamp="20210126 13:36:36.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:36.489" starttime="20210126 13:36:36.482"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:36.489" starttime="20210126 13:36:36.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:36.492" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:39.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:39.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:39.278" starttime="20210126 13:36:36.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:39.279" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:39.279" starttime="20210126 13:36:39.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:39.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:39.280" starttime="20210126 13:36:39.279"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:39.280" starttime="20210126 13:36:36.490"></status>
</kw>
<msg timestamp="20210126 13:36:39.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:39.280" starttime="20210126 13:36:36.490"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:39.280" starttime="20210126 13:36:36.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:39.284" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:43.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:43.408" level="INFO">${output} = 2021-01-26 13:36:41,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:41,977 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:36:43.408" starttime="20210126 13:36:39.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:43.409" level="INFO">2021-01-26 13:36:41,857 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:41,977 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:36:41,977 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:36:42,236 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:36:42,236 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5CC32AF0F7CC-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:36:42,237 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:36:43.409" starttime="20210126 13:36:43.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:43.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:43.409" starttime="20210126 13:36:43.409"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:43.410" starttime="20210126 13:36:39.281"></status>
</kw>
<msg timestamp="20210126 13:36:43.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:43.410" starttime="20210126 13:36:39.281"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:43.410" starttime="20210126 13:36:39.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:43.414" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:47.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:47.500" level="INFO">${output} = 2021-01-26 13:36:46,035 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:46,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:36:47.500" starttime="20210126 13:36:43.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:47.501" level="INFO">2021-01-26 13:36:46,035 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:46,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:36:46,140 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:36:46,373 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:36:46,373 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-411258BE4D16-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:36:46,374 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:36:47.501" starttime="20210126 13:36:47.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:47.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:47.502" starttime="20210126 13:36:47.502"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:47.502" starttime="20210126 13:36:43.411"></status>
</kw>
<msg timestamp="20210126 13:36:47.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:47.503" starttime="20210126 13:36:43.411"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:47.503" starttime="20210126 13:36:43.410"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:47.503" starttime="20210126 13:36:36.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:47.506" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:50.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:50.248" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/loc...</msg>
<status status="PASS" endtime="20210126 13:36:50.248" starttime="20210126 13:36:47.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:50.249" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/localdir1
-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" endtime="20210126 13:36:50.249" starttime="20210126 13:36:50.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:50.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:50.249" starttime="20210126 13:36:50.249"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:50.250" starttime="20210126 13:36:47.504"></status>
</kw>
<msg timestamp="20210126 13:36:50.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:50.250" starttime="20210126 13:36:47.504"></status>
</kw>
<msg timestamp="20210126 13:36:50.250" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 13:36 ofs://om/fstest1/link1-ofs/testdir1/loc...</msg>
<status status="PASS" endtime="20210126 13:36:50.250" starttime="20210126 13:36:47.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:50.251" starttime="20210126 13:36:50.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:36:50.251" starttime="20210126 13:36:50.251"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:50.251" critical="yes" starttime="20210126 13:36:36.465"></status>
</test>
<test id="s1-s6-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:36:50.256" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:36:50.256" starttime="20210126 13:36:50.255"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:36:50.256" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:36:50.256" starttime="20210126 13:36:50.256"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:50.257" starttime="20210126 13:36:50.255"></status>
</kw>
<msg timestamp="20210126 13:36:50.257" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:36:50.257" starttime="20210126 13:36:50.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:36:50.258" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210126 13:36:50.258" starttime="20210126 13:36:50.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:36:50.259" level="INFO">${result} = /testdir2</msg>
<status status="PASS" endtime="20210126 13:36:50.259" starttime="20210126 13:36:50.258"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:50.259" starttime="20210126 13:36:50.257"></status>
</kw>
<msg timestamp="20210126 13:36:50.259" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" endtime="20210126 13:36:50.259" starttime="20210126 13:36:50.257"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:50.259" starttime="20210126 13:36:50.254"></status>
</kw>
<msg timestamp="20210126 13:36:50.259" level="INFO">${url} = ofs://om/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:36:50.259" starttime="20210126 13:36:50.253"></status>
</kw>
<msg timestamp="20210126 13:36:50.260" level="INFO">${target} = ofs://om/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:36:50.260" starttime="20210126 13:36:50.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:50.263" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:52.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:52.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:36:52.993" starttime="20210126 13:36:50.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:52.994" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:36:52.994" starttime="20210126 13:36:52.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:52.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:52.995" starttime="20210126 13:36:52.994"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:52.995" starttime="20210126 13:36:50.260"></status>
</kw>
<msg timestamp="20210126 13:36:52.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:52.995" starttime="20210126 13:36:50.260"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:52.995" starttime="20210126 13:36:50.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:52.999" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs//testdir1/localdir1 ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:57.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:57.176" level="INFO">${output} = 2021-01-26 13:36:55,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:55,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:36:57.176" starttime="20210126 13:36:52.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:57.177" level="INFO">2021-01-26 13:36:55,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:36:55,816 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:36:55,816 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:36:56,554 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:36:56,555 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D03E2988E1B4-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:36:56,556 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:36:57.177" starttime="20210126 13:36:57.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:57.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:57.178" starttime="20210126 13:36:57.178"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:57.178" starttime="20210126 13:36:52.997"></status>
</kw>
<msg timestamp="20210126 13:36:57.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:57.178" starttime="20210126 13:36:52.996"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:57.179" starttime="20210126 13:36:52.995"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:57.182" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:36:59.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:36:59.940" level="INFO">${output} = 2021-01-26 13:36:59,657 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:36:59,773 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:36:59.940" starttime="20210126 13:36:57.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:36:59.941" level="INFO">2021-01-26 13:36:59,657 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:36:59,773 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/link2-ofs/testdir2' to trash at: ofs://om/fstest1/link2-ofs/.Trash/hadoop/Current/fstest1/link2-ofs/testdir2</msg>
<status status="PASS" endtime="20210126 13:36:59.941" starttime="20210126 13:36:59.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:36:59.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:36:59.942" starttime="20210126 13:36:59.941"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:59.942" starttime="20210126 13:36:57.180"></status>
</kw>
<msg timestamp="20210126 13:36:59.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:36:59.942" starttime="20210126 13:36:57.180"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:59.943" starttime="20210126 13:36:57.179"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:36:59.943" critical="yes" starttime="20210126 13:36:50.252"></status>
</test>
<test id="s1-s6-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
</arguments>
<assign>
<var>${target}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 13:36:59.947" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 13:36:59.947" starttime="20210126 13:36:59.947"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:36:59.948" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 13:36:59.948" starttime="20210126 13:36:59.947"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:59.948" starttime="20210126 13:36:59.946"></status>
</kw>
<msg timestamp="20210126 13:36:59.948" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 13:36:59.948" starttime="20210126 13:36:59.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 13:36:59.950" level="INFO">${first} = t</msg>
<status status="PASS" endtime="20210126 13:36:59.950" starttime="20210126 13:36:59.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 13:36:59.950" level="INFO">${result} = /testdir3</msg>
<status status="PASS" endtime="20210126 13:36:59.950" starttime="20210126 13:36:59.950"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:59.950" starttime="20210126 13:36:59.949"></status>
</kw>
<msg timestamp="20210126 13:36:59.950" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" endtime="20210126 13:36:59.951" starttime="20210126 13:36:59.948"></status>
</kw>
<status status="PASS" endtime="20210126 13:36:59.951" starttime="20210126 13:36:59.945"></status>
</kw>
<msg timestamp="20210126 13:36:59.951" level="INFO">${url} = ofs://om/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:36:59.951" starttime="20210126 13:36:59.945"></status>
</kw>
<msg timestamp="20210126 13:36:59.951" level="INFO">${target} = ofs://om/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:36:59.951" starttime="20210126 13:36:59.944"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir -p ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:36:59.954" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:02.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:02.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:02.611" starttime="20210126 13:36:59.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:02.612" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:02.612" starttime="20210126 13:37:02.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:02.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:02.613" starttime="20210126 13:37:02.612"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:02.613" starttime="20210126 13:36:59.952"></status>
</kw>
<msg timestamp="20210126 13:37:02.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:02.613" starttime="20210126 13:36:59.952"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:02.614" starttime="20210126 13:36:59.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:02.618" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/link1-ofs//testdir1/localdir1 ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:06.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:06.935" level="INFO">${output} = 2021-01-26 13:37:05,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:37:05,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:37:06.935" starttime="20210126 13:37:02.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:06.936" level="INFO">2021-01-26 13:37:05,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:37:05,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:37:05,368 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-01-26 13:37:06,158 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 13:37:06,159 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3614ED4158A7-&gt;31c19faf-7418-4be8-b808-ff459f28de08
2021-01-26 13:37:06,159 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 13:37:06.936" starttime="20210126 13:37:06.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:06.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:06.937" starttime="20210126 13:37:06.936"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:06.937" starttime="20210126 13:37:02.614"></status>
</kw>
<msg timestamp="20210126 13:37:06.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:06.937" starttime="20210126 13:37:02.614"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:06.937" starttime="20210126 13:37:02.614"></status>
</kw>
<kw type="teardown" name="Execute" library="os">
<arguments>
<arg>ozone fs -rm -r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:06.941" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:09.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:09.606" level="INFO">${output} = 2021-01-26 13:37:09,340 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:37:09,446 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" endtime="20210126 13:37:09.606" starttime="20210126 13:37:06.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:09.607" level="INFO">2021-01-26 13:37:09,340 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-01-26 13:37:09,446 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/link3-ofs/testdir3' to trash at: ofs://om/fstest2/link3-ofs/.Trash/hadoop/Current/fstest2/link3-ofs/testdir3</msg>
<status status="PASS" endtime="20210126 13:37:09.607" starttime="20210126 13:37:09.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:09.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:09.607" starttime="20210126 13:37:09.607"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:09.608" starttime="20210126 13:37:06.939"></status>
</kw>
<msg timestamp="20210126 13:37:09.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:09.608" starttime="20210126 13:37:06.938"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:09.608" starttime="20210126 13:37:06.938"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:09.608" critical="yes" starttime="20210126 13:36:59.943"></status>
</test>
<test id="s1-s6-t19" name="List file created via shell">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:09.613" level="INFO">Running command 'ozone sh key put fstest1/link1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:14.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:14.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:14.181" starttime="20210126 13:37:09.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:14.182" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:14.182" starttime="20210126 13:37:14.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:14.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:14.183" starttime="20210126 13:37:14.182"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:14.183" starttime="20210126 13:37:09.611"></status>
</kw>
<msg timestamp="20210126 13:37:14.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:14.183" starttime="20210126 13:37:09.611"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:14.184" starttime="20210126 13:37:09.610"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:14.187" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:16.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:16.912" level="INFO">${output} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:37 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:37:16.912" starttime="20210126 13:37:14.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:16.913" level="INFO">-rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:37 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:37:16.913" starttime="20210126 13:37:16.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:16.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:16.914" starttime="20210126 13:37:16.914"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:16.914" starttime="20210126 13:37:14.185"></status>
</kw>
<msg timestamp="20210126 13:37:16.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:16.914" starttime="20210126 13:37:14.184"></status>
</kw>
<msg timestamp="20210126 13:37:16.915" level="INFO">${result} = -rw-rw-rw-   3 hadoop hadoop      17540 2021-01-26 13:37 ofs://om/fstest1/link1-ofs/ofs.txt</msg>
<status status="PASS" endtime="20210126 13:37:16.915" starttime="20210126 13:37:14.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:16.915" starttime="20210126 13:37:16.915"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:16.915" critical="yes" starttime="20210126 13:37:09.609"></status>
</test>
<test id="s1-s6-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:16.920" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:19.554" level="INFO">${rc} = 1</msg>
<msg timestamp="20210126 13:37:19.554" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:37:19.554" starttime="20210126 13:37:16.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:19.555" level="INFO">copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:37:19.555" starttime="20210126 13:37:19.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:19.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:19.555" starttime="20210126 13:37:19.555"></status>
</kw>
<msg timestamp="20210126 13:37:19.556" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" endtime="20210126 13:37:19.556" starttime="20210126 13:37:16.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>File exists</arg>
</arguments>
<status status="PASS" endtime="20210126 13:37:19.556" starttime="20210126 13:37:19.556"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:19.556" critical="yes" starttime="20210126 13:37:16.916"></status>
</test>
<test id="s1-s6-t21" name="Get file">
<kw type="setup" name="Execute" library="os">
<arguments>
<arg>rm -Rf /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:19.561" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:19.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:19.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 13:37:19.563" starttime="20210126 13:37:19.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:19.564" level="INFO"></msg>
<status status="PASS" endtime="20210126 13:37:19.564" starttime="20210126 13:37:19.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:19.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:19.565" starttime="20210126 13:37:19.565"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:19.565" starttime="20210126 13:37:19.559"></status>
</kw>
<msg timestamp="20210126 13:37:19.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:19.565" starttime="20210126 13:37:19.558"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:19.566" starttime="20210126 13:37:19.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 13:37:19.569" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/link1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 13:37:23.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 13:37:23.274" level="INFO">${output} = 2021-01-26 13:37:22,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:37:22,136 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 13:37:23.274" starttime="20210126 13:37:19.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 13:37:23.275" level="INFO">2021-01-26 13:37:22,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 13:37:22,136 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 13:37:22,136 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20210126 13:37:23.275" starttime="20210126 13:37:23.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 13:37:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 13:37:23.276" starttime="20210126 13:37:23.276"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:23.276" starttime="20210126 13:37:19.567"></status>
</kw>
<msg timestamp="20210126 13:37:23.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 13:37:23.276" starttime="20210126 13:37:19.566"></status>
</kw>
<status status="PASS" endtime="20210126 13:37:23.277" starttime="20210126 13:37:19.566"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>/tmp/GET.txt</arg>
</arguments>
<msg timestamp="20210126 13:37:23.277" html="yes" level="INFO">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20210126 13:37:23.277" starttime="20210126 13:37:23.277"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 13:37:23.277" critical="yes" starttime="20210126 13:37:19.557"></status>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" endtime="20210126 13:37:23.280" starttime="20210126 13:34:40.083"></status>
</suite>
<status status="FAIL" elapsedtime="1213756" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="100">Critical Tests</stat>
<stat fail="1" pass="100">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozone" pass="100">ozone</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="28">ozone.Basic</stat>
<stat fail="0" id="s1-s1-s1" name="Basic" pass="2">ozone.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="4">ozone.Basic.Getconf</stat>
<stat fail="0" id="s1-s1-s3" name="Links" pass="15">ozone.Basic.Links</stat>
<stat fail="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="1">ozone.Basic.Ozone-Shell-Single</stat>
<stat fail="0" id="s1-s1-s5" name="Ozone-Shell" pass="6">ozone.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Gdpr" pass="4">ozone.Gdpr</stat>
<stat fail="0" id="s1-s2-s1" name="Gdpr" pass="4">ozone.Gdpr.Gdpr</stat>
<stat fail="0" id="s1-s3" name="Lib" pass="20">ozone.Lib</stat>
<stat fail="0" id="s1-s3-s1" name="Fs Tests" pass="9">ozone.Lib.Fs Tests</stat>
<stat fail="0" id="s1-s3-s2" name="Os Tests" pass="5">ozone.Lib.Os Tests</stat>
<stat fail="0" id="s1-s3-s3" name="String Tests" pass="6">ozone.Lib.String Tests</stat>
<stat fail="0" id="s1-s4" name="Ozone-Lib" pass="7">ozone.Ozone-Lib</stat>
<stat fail="0" id="s1-s4-s1" name="Shell Tests" pass="7">ozone.Ozone-Lib.Shell Tests</stat>
<stat fail="1" id="s1-s5" name="ozonefs-ofs-bucket" pass="20">ozone.ozonefs-ofs-bucket</stat>
<stat fail="0" id="s1-s6" name="ozonefs-ofs-link" pass="21">ozone.ozonefs-ofs-link</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
