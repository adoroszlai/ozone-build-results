<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210126 07:04:26.364" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:47.832" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:00:51.207" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:00:51.207" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 07:00:51.207" starttime="20210126 07:00:47.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:00:51.208" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 07:00:51.208" starttime="20210126 07:00:51.207"></status>
</kw>
<msg timestamp="20210126 07:00:51.208" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 07:00:51.209" starttime="20210126 07:00:47.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:51.214" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:00:54.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:00:54.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:00:54.333" starttime="20210126 07:00:51.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:00:54.334" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:00:54.334" starttime="20210126 07:00:54.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:00:54.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:00:54.334" starttime="20210126 07:00:54.334"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:54.335" starttime="20210126 07:00:51.210"></status>
</kw>
<msg timestamp="20210126 07:00:54.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:00:54.335" starttime="20210126 07:00:51.210"></status>
</kw>
<msg timestamp="20210126 07:00:54.335" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 07:00:54.335" starttime="20210126 07:00:51.209"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 07:00:54.336" starttime="20210126 07:00:54.335"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:54.336" starttime="20210126 07:00:51.209"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:54.336" starttime="20210126 07:00:51.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:54.341" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:00:57.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:00:57.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:00:57.259" starttime="20210126 07:00:54.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:00:57.260" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:00:57.260" starttime="20210126 07:00:57.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:00:57.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:00:57.261" starttime="20210126 07:00:57.260"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:57.261" starttime="20210126 07:00:54.338"></status>
</kw>
<msg timestamp="20210126 07:00:57.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:00:57.261" starttime="20210126 07:00:54.338"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:57.262" starttime="20210126 07:00:54.337"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:57.262" starttime="20210126 07:00:54.336"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:57.262" starttime="20210126 07:00:54.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 07:00:57.262" starttime="20210126 07:00:57.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:57.265" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:00.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:00.320" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:00...</msg>
<status status="PASS" endtime="20210126 07:01:00.320" starttime="20210126 07:00:57.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:00.321" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:00:57.151Z",
  "modificationTime" : "2021-01-26T07:00:57.151Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 07:01:00.321" starttime="20210126 07:01:00.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:00.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:00.322" starttime="20210126 07:01:00.321"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:00.322" starttime="20210126 07:00:57.263"></status>
</kw>
<msg timestamp="20210126 07:01:00.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:00.322" starttime="20210126 07:00:57.263"></status>
</kw>
<msg timestamp="20210126 07:01:00.322" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:00...</msg>
<status status="PASS" endtime="20210126 07:01:00.323" starttime="20210126 07:00:57.262"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 07:01:00.323" starttime="20210126 07:01:00.323"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:01:00.327" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:01:00.327" starttime="20210126 07:01:00.327"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:01:00.328" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:01:00.328" starttime="20210126 07:01:00.328"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:00.328" starttime="20210126 07:01:00.326"></status>
</kw>
<msg timestamp="20210126 07:01:00.328" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:01:00.328" starttime="20210126 07:01:00.325"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:00.329" starttime="20210126 07:01:00.324"></status>
</kw>
<msg timestamp="20210126 07:01:00.329" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 07:01:00.329" starttime="20210126 07:01:00.324"></status>
</kw>
<msg timestamp="20210126 07:01:00.330" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 07:01:00.330" starttime="20210126 07:01:00.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:00.333" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:03.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:03.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:03.285" starttime="20210126 07:01:00.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:03.286" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:03.286" starttime="20210126 07:01:03.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:03.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:03.287" starttime="20210126 07:01:03.286"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:03.287" starttime="20210126 07:01:00.331"></status>
</kw>
<msg timestamp="20210126 07:01:03.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:03.287" starttime="20210126 07:01:00.330"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:03.287" starttime="20210126 07:01:00.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:03.291" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:09.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:09.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:09.967" starttime="20210126 07:01:03.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:09.968" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:09.968" starttime="20210126 07:01:09.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:09.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:09.969" starttime="20210126 07:01:09.969"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:09.969" starttime="20210126 07:01:03.288"></status>
</kw>
<msg timestamp="20210126 07:01:09.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:09.969" starttime="20210126 07:01:03.288"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:09.970" starttime="20210126 07:01:03.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:09.973" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:14.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:14.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:14.645" starttime="20210126 07:01:09.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:14.646" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:14.646" starttime="20210126 07:01:14.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:14.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:14.646" starttime="20210126 07:01:14.646"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:14.647" starttime="20210126 07:01:09.971"></status>
</kw>
<msg timestamp="20210126 07:01:14.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:14.647" starttime="20210126 07:01:09.970"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:14.647" starttime="20210126 07:01:09.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:14.652" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:19.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:19.949" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:19.949" starttime="20210126 07:01:14.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:19.949" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:19.950" starttime="20210126 07:01:19.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:19.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:19.950" starttime="20210126 07:01:19.950"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:19.950" starttime="20210126 07:01:14.648"></status>
</kw>
<msg timestamp="20210126 07:01:19.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:19.951" starttime="20210126 07:01:14.648"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:19.951" starttime="20210126 07:01:14.647"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:01:19.951" critical="yes" starttime="20210126 07:00:47.827"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:01:19.955" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:01:19.955" starttime="20210126 07:01:19.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:01:19.956" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.955"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.954"></status>
</kw>
<msg timestamp="20210126 07:01:19.956" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.954"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.953"></status>
</kw>
<msg timestamp="20210126 07:01:19.956" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.953"></status>
</kw>
<msg timestamp="20210126 07:01:19.956" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 07:01:19.956" starttime="20210126 07:01:19.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:19.960" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:22.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:22.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:22.923" starttime="20210126 07:01:19.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:22.924" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:22.924" starttime="20210126 07:01:22.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:22.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:22.925" starttime="20210126 07:01:22.924"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:22.925" starttime="20210126 07:01:19.957"></status>
</kw>
<msg timestamp="20210126 07:01:22.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:22.925" starttime="20210126 07:01:19.957"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:22.925" starttime="20210126 07:01:19.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:22.929" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:25.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:25.841" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:25.841" starttime="20210126 07:01:22.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:25.842" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:25.842" starttime="20210126 07:01:25.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:25.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:25.843" starttime="20210126 07:01:25.842"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:25.843" starttime="20210126 07:01:22.926"></status>
</kw>
<msg timestamp="20210126 07:01:25.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:25.843" starttime="20210126 07:01:22.926"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:25.844" starttime="20210126 07:01:22.925"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:01:25.844" critical="yes" starttime="20210126 07:01:19.952"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210126 07:01:25.845" starttime="20210126 07:00:47.782"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 07:03:10.055" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 07:03:10.055" starttime="20210126 07:03:10.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:10.055" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 07:03:10.055" starttime="20210126 07:03:10.055"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:10.056" starttime="20210126 07:03:10.054"></status>
</kw>
<msg timestamp="20210126 07:03:10.056" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 07:03:10.056" starttime="20210126 07:03:10.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:10.056" starttime="20210126 07:03:10.056"></status>
</kw>
<msg timestamp="20210126 07:03:10.057" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 07:03:10.057" starttime="20210126 07:03:10.056"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:10.057" starttime="20210126 07:03:10.053"></status>
</kw>
<msg timestamp="20210126 07:03:10.057" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:10.057" starttime="20210126 07:03:10.053"></status>
</kw>
<msg timestamp="20210126 07:03:10.057" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:10.057" starttime="20210126 07:03:10.052"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 07:03:10.058" level="INFO">${random} = 52234</msg>
<status status="PASS" endtime="20210126 07:03:10.058" starttime="20210126 07:03:10.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:10.063" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-52234 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:13.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:13.176" level="INFO">${output} = 2021-01-26 07:03:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:11 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 07:03:13.176" starttime="20210126 07:03:10.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:13.177" level="INFO">2021-01-26 07:03:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:11 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:03:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:03:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:03:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F833C0DDFCF-&gt;0cdb8374-787e-41e1-b239-5602db6a46fc
2021-01-26 07:03:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 07:03:13.177" starttime="20210126 07:03:13.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:13.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:13.177" starttime="20210126 07:03:13.177"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:13.178" starttime="20210126 07:03:10.058"></status>
</kw>
<msg timestamp="20210126 07:03:13.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:13.178" starttime="20210126 07:03:10.058"></status>
</kw>
<msg timestamp="20210126 07:03:13.178" level="INFO">${result} = 2021-01-26 07:03:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:11 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 07:03:13.178" starttime="20210126 07:03:10.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:13.181" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:14.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:14.805" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:03 ofs://om/volume1/bucket1/ozone-52234
-rw-...</msg>
<status status="PASS" endtime="20210126 07:03:14.805" starttime="20210126 07:03:13.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:14.806" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:03 ofs://om/volume1/bucket1/ozone-52234
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:01 ofs://om/volume1/bucket1/ozone-75962
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:02 ofs://om/volume1/bucket1/wordcount-ZC4X5lH0.txt</msg>
<status status="PASS" endtime="20210126 07:03:14.806" starttime="20210126 07:03:14.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:14.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:14.806" starttime="20210126 07:03:14.806"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:14.807" starttime="20210126 07:03:13.179"></status>
</kw>
<msg timestamp="20210126 07:03:14.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:14.807" starttime="20210126 07:03:13.179"></status>
</kw>
<msg timestamp="20210126 07:03:14.807" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:03 ofs://om/volume1/bucket1/ozone-52234
-rw-...</msg>
<status status="PASS" endtime="20210126 07:03:14.807" starttime="20210126 07:03:13.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:14.808" starttime="20210126 07:03:14.807"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:03:14.808" critical="yes" starttime="20210126 07:03:10.051"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 07:03:14.809" starttime="20210126 07:03:10.007"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:01:47.149" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:01:47.149" starttime="20210126 07:01:47.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:01:47.149" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:01:47.149" starttime="20210126 07:01:47.149"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:47.149" starttime="20210126 07:01:47.148"></status>
</kw>
<msg timestamp="20210126 07:01:47.150" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:01:47.150" starttime="20210126 07:01:47.148"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:47.150" starttime="20210126 07:01:47.147"></status>
</kw>
<msg timestamp="20210126 07:01:47.150" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:01:47.150" starttime="20210126 07:01:47.147"></status>
</kw>
<msg timestamp="20210126 07:01:47.150" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:01:47.150" starttime="20210126 07:01:47.146"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 07:01:47.150" level="INFO">${random} = 75962</msg>
<status status="PASS" endtime="20210126 07:01:47.150" starttime="20210126 07:01:47.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:47.154" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-75962 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:50.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:50.695" level="INFO">${output} = 2021-01-26 07:01:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 07:01:50.695" starttime="20210126 07:01:47.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:50.697" level="INFO">2021-01-26 07:01:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:01:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:01:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:01:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-65C17B622DC5-&gt;0de8199c-6d2f-4b54-b0c6-0b163cd24b13
2021-01-26 07:01:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 07:01:50.697" starttime="20210126 07:01:50.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:50.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:50.698" starttime="20210126 07:01:50.698"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:50.698" starttime="20210126 07:01:47.151"></status>
</kw>
<msg timestamp="20210126 07:01:50.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:50.698" starttime="20210126 07:01:47.151"></status>
</kw>
<msg timestamp="20210126 07:01:50.699" level="INFO">${result} = 2021-01-26 07:01:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 07:01:50.699" starttime="20210126 07:01:47.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:50.702" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:52.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:52.505" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:01 o3fs://bucket1.volume1.om/ozone-75962
dr...</msg>
<status status="PASS" endtime="20210126 07:01:52.506" starttime="20210126 07:01:50.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:52.507" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:01 o3fs://bucket1.volume1.om/ozone-75962
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 07:01:52.507" starttime="20210126 07:01:52.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:52.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:52.508" starttime="20210126 07:01:52.507"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:52.508" starttime="20210126 07:01:50.699"></status>
</kw>
<msg timestamp="20210126 07:01:52.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:52.508" starttime="20210126 07:01:50.699"></status>
</kw>
<msg timestamp="20210126 07:01:52.508" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 07:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 07:01 o3fs://bucket1.volume1.om/ozone-75962
dr...</msg>
<status status="PASS" endtime="20210126 07:01:52.508" starttime="20210126 07:01:50.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:01:52.509" starttime="20210126 07:01:52.509"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:01:52.509" critical="yes" starttime="20210126 07:01:47.145"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 07:01:52.519" starttime="20210126 07:01:47.106"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:42.586" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:42.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:42.588" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210126 07:01:42.588" starttime="20210126 07:01:42.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:42.589" level="INFO">rm</msg>
<status status="PASS" endtime="20210126 07:01:42.589" starttime="20210126 07:01:42.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:42.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:42.590" starttime="20210126 07:01:42.590"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:42.590" starttime="20210126 07:01:42.582"></status>
</kw>
<msg timestamp="20210126 07:01:42.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:42.590" starttime="20210126 07:01:42.582"></status>
</kw>
<msg timestamp="20210126 07:01:42.591" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210126 07:01:42.591" starttime="20210126 07:01:42.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:01:42.592" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:01:42.592" starttime="20210126 07:01:42.591"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:42.595" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:42.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:42.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:01:42.608" starttime="20210126 07:01:42.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:42.609" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:01:42.609" starttime="20210126 07:01:42.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:42.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:42.609" starttime="20210126 07:01:42.609"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:42.610" starttime="20210126 07:01:42.593"></status>
</kw>
<msg timestamp="20210126 07:01:42.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:42.610" starttime="20210126 07:01:42.593"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:42.610" starttime="20210126 07:01:42.592"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:42.610" starttime="20210126 07:01:42.592"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:42.610" starttime="20210126 07:01:42.581"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:01:42.610" critical="yes" starttime="20210126 07:01:42.580"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210126 07:01:42.611" starttime="20210126 07:01:42.540"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:43.456" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:00:43.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:00:43.459" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210126 07:00:43.459" starttime="20210126 07:00:43.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:00:43.460" level="INFO">om</msg>
<status status="PASS" endtime="20210126 07:00:43.460" starttime="20210126 07:00:43.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:00:43.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:00:43.460" starttime="20210126 07:00:43.460"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:43.460" starttime="20210126 07:00:43.453"></status>
</kw>
<msg timestamp="20210126 07:00:43.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:00:43.461" starttime="20210126 07:00:43.453"></status>
</kw>
<msg timestamp="20210126 07:00:43.461" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210126 07:00:43.461" starttime="20210126 07:00:43.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:00:43.461" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:00:43.461" starttime="20210126 07:00:43.461"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:00:43.465" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:00:43.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:00:43.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:00:43.473" starttime="20210126 07:00:43.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:00:43.474" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:00:43.474" starttime="20210126 07:00:43.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:00:43.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.474"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.463"></status>
</kw>
<msg timestamp="20210126 07:00:43.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.462"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.462"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.462"></status>
</kw>
<status status="PASS" endtime="20210126 07:00:43.475" starttime="20210126 07:00:43.452"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:00:43.475" critical="yes" starttime="20210126 07:00:43.451"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210126 07:00:43.476" starttime="20210126 07:00:43.409"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:19.341" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:19.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:19.347" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:19.348" starttime="20210126 07:03:19.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:19.348" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:19.348" starttime="20210126 07:03:19.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:19.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:19.349" starttime="20210126 07:03:19.349"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:19.349" starttime="20210126 07:03:19.337"></status>
</kw>
<msg timestamp="20210126 07:03:19.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:19.349" starttime="20210126 07:03:19.337"></status>
</kw>
<msg timestamp="20210126 07:03:19.349" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:19.349" starttime="20210126 07:03:19.336"></status>
</kw>
<msg timestamp="20210126 07:03:19.350" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:19.350" starttime="20210126 07:03:19.336"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 07:03:19.353" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 07:03:19.353" starttime="20210126 07:03:19.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:19.354" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 07:03:19.354" starttime="20210126 07:03:19.354"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:19.354" starttime="20210126 07:03:19.353"></status>
</kw>
<msg timestamp="20210126 07:03:19.354" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 07:03:19.354" starttime="20210126 07:03:19.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:19.355" starttime="20210126 07:03:19.355"></status>
</kw>
<msg timestamp="20210126 07:03:19.355" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 07:03:19.355" starttime="20210126 07:03:19.354"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:19.355" starttime="20210126 07:03:19.352"></status>
</kw>
<msg timestamp="20210126 07:03:19.355" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:19.355" starttime="20210126 07:03:19.350"></status>
</kw>
<msg timestamp="20210126 07:03:19.356" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:19.356" starttime="20210126 07:03:19.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:19.358" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:51.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:51.560" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:03:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:21 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 07:03:51.560" starttime="20210126 07:03:19.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:51.561" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:03:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:03:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:03:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:03:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0AD1888F60C4-&gt;0de8199c-6d2f-4b54-b0c6-0b163cd24b13
2021-01-26 07:03:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 07:03:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-546892BCB4AC-&gt;0cdb8374-787e-41e1-b239-5602db6a46fc
2021-01-26 07:03:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 07:03:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:03:22 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-01-26 07:03:22 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644602720, maxDate=1612249402720, sequenceNumber=3, masterKeyId=2))
2021-01-26 07:03:22 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 90 92 84 ec f3 2e 38 90 9a b6 8c f6 2e 40 03 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-26 07:03:22 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644602720, maxDate=1612249402720, sequenceNumber=3, masterKeyId=2)
2021-01-26 07:03:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 07:03:23 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 07:03:25 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 07:03:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611644399205_0003
2021-01-26 07:03:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644602720, maxDate=1612249402720, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 90 92 84 ec f3 2e 38 90 9a b6 8c f6 2e 40 03 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-26 07:03:26 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 07:03:26 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 07:03:26 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-26 07:03:26 INFO  YarnClientImpl:329 - Submitted application application_1611644399205_0003
2021-01-26 07:03:26 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611644399205_0003/
2021-01-26 07:03:26 INFO  Job:1614 - Running job: job_1611644399205_0003
2021-01-26 07:03:33 INFO  Job:1635 - Job job_1611644399205_0003 running in uber mode : false
2021-01-26 07:03:33 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 07:03:43 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 07:03:44 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 07:03:49 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 07:03:50 INFO  Job:1653 - Job job_1611644399205_0003 completed successfully
2021-01-26 07:03:51 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101069
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39034
		Total time spent by all reduces in occupied slots (ms)=6230
		Total time spent by all map tasks (ms)=19517
		Total time spent by all reduce tasks (ms)=3115
		Total vcore-milliseconds taken by all map tasks=19517
		Total vcore-milliseconds taken by all reduce tasks=3115
		Total megabyte-milliseconds taken by all map tasks=39970816
		Total megabyte-milliseconds taken by all reduce tasks=6379520
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=950
		CPU time spent (ms)=6490
		Physical memory (bytes) snapshot=1429073920
		Virtual memory (bytes) snapshot=14038659072
		Total committed heap usage (bytes)=1224736768
		Peak Map Physical memory (bytes)=399073280
		Peak Map Virtual memory (bytes)=3509792768
		Peak Reduce Physical memory (bytes)=310976512
		Peak Reduce Virtual memory (bytes)=3519258624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.767 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 07:03:51.562" starttime="20210126 07:03:51.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:51.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:51.562" starttime="20210126 07:03:51.562"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.562" starttime="20210126 07:03:19.356"></status>
</kw>
<msg timestamp="20210126 07:03:51.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:51.563" starttime="20210126 07:03:19.356"></status>
</kw>
<msg timestamp="20210126 07:03:51.563" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:03:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:21 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 07:03:51.563" starttime="20210126 07:03:19.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:51.563" starttime="20210126 07:03:51.563"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 07:03:51.564" critical="yes" starttime="20210126 07:03:19.335"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:51.568" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:51.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:51.572" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:51.572" starttime="20210126 07:03:51.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:51.573" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:51.573" starttime="20210126 07:03:51.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:51.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:51.573" starttime="20210126 07:03:51.573"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.574" starttime="20210126 07:03:51.566"></status>
</kw>
<msg timestamp="20210126 07:03:51.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:51.574" starttime="20210126 07:03:51.566"></status>
</kw>
<msg timestamp="20210126 07:03:51.574" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:51.574" starttime="20210126 07:03:51.565"></status>
</kw>
<msg timestamp="20210126 07:03:51.574" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:03:51.574" starttime="20210126 07:03:51.565"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 07:03:51.575" level="INFO">${random} = p72bh23X</msg>
<status status="PASS" endtime="20210126 07:03:51.575" starttime="20210126 07:03:51.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 07:03:51.578" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 07:03:51.578" starttime="20210126 07:03:51.577"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:51.578" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.578" starttime="20210126 07:03:51.578"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.578" starttime="20210126 07:03:51.577"></status>
</kw>
<msg timestamp="20210126 07:03:51.579" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.579" starttime="20210126 07:03:51.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:51.579" starttime="20210126 07:03:51.579"></status>
</kw>
<msg timestamp="20210126 07:03:51.579" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 07:03:51.579" starttime="20210126 07:03:51.579"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.580" starttime="20210126 07:03:51.576"></status>
</kw>
<msg timestamp="20210126 07:03:51.580" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:51.580" starttime="20210126 07:03:51.576"></status>
</kw>
<msg timestamp="20210126 07:03:51.580" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 07:03:51.580" starttime="20210126 07:03:51.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 07:03:51.583" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 07:03:51.583" starttime="20210126 07:03:51.582"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:51.583" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.583" starttime="20210126 07:03:51.583"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.583" starttime="20210126 07:03:51.582"></status>
</kw>
<msg timestamp="20210126 07:03:51.583" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.583" starttime="20210126 07:03:51.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:03:51.584" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210126 07:03:51.584" starttime="20210126 07:03:51.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:51.585" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210126 07:03:51.585" starttime="20210126 07:03:51.585"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.585" starttime="20210126 07:03:51.584"></status>
</kw>
<msg timestamp="20210126 07:03:51.585" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210126 07:03:51.585" starttime="20210126 07:03:51.583"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.585" starttime="20210126 07:03:51.581"></status>
</kw>
<msg timestamp="20210126 07:03:51.585" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 07:03:51.586" starttime="20210126 07:03:51.581"></status>
</kw>
<msg timestamp="20210126 07:03:51.586" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 07:03:51.586" starttime="20210126 07:03:51.580"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 07:03:51.588" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 07:03:51.588" starttime="20210126 07:03:51.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:51.589" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.589" starttime="20210126 07:03:51.588"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.589" starttime="20210126 07:03:51.588"></status>
</kw>
<msg timestamp="20210126 07:03:51.589" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 07:03:51.589" starttime="20210126 07:03:51.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:03:51.590" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210126 07:03:51.590" starttime="20210126 07:03:51.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:03:51.591" level="INFO">${result} = /wordcount-p72bh23X.txt</msg>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.590"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.589"></status>
</kw>
<msg timestamp="20210126 07:03:51.591" level="INFO">${path_with_leading} = /wordcount-p72bh23X.txt</msg>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.589"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.587"></status>
</kw>
<msg timestamp="20210126 07:03:51.591" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-p72bh23X.txt</msg>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.586"></status>
</kw>
<msg timestamp="20210126 07:03:51.591" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-p72bh23X.txt</msg>
<status status="PASS" endtime="20210126 07:03:51.591" starttime="20210126 07:03:51.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:03:51.594" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-p72bh23X.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:04:19.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:04:19.205" level="INFO">${output} = 2021-01-26 07:03:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:03:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
20...</msg>
<status status="PASS" endtime="20210126 07:04:19.205" starttime="20210126 07:03:51.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:04:19.206" level="INFO">2021-01-26 07:03:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:03:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-01-26 07:03:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644633470, maxDate=1612249433470, sequenceNumber=4, masterKeyId=2))
2021-01-26 07:03:53 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 82 86 ec f3 2e 38 b7 8a b8 8c f6 2e 40 04 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-26 07:03:53 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644633470, maxDate=1612249433470, sequenceNumber=4, masterKeyId=2)
2021-01-26 07:03:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 07:03:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:03:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:03:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:03:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:03:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F60A6F098626-&gt;0cdb8374-787e-41e1-b239-5602db6a46fc
2021-01-26 07:03:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 07:03:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 07:03:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-465C742B9890-&gt;0de8199c-6d2f-4b54-b0c6-0b163cd24b13
2021-01-26 07:03:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 07:03:54 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 07:03:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611644399205_0004
2021-01-26 07:03:56 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644633470, maxDate=1612249433470, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 82 86 ec f3 2e 38 b7 8a b8 8c f6 2e 40 04 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-26 07:03:56 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 07:03:56 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 07:03:56 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-26 07:03:57 INFO  YarnClientImpl:329 - Submitted application application_1611644399205_0004
2021-01-26 07:03:57 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611644399205_0004/
2021-01-26 07:03:57 INFO  Job:1614 - Running job: job_1611644399205_0004
2021-01-26 07:04:03 INFO  Job:1635 - Job job_1611644399205_0004 running in uber mode : false
2021-01-26 07:04:03 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 07:04:12 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 07:04:14 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 07:04:15 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 07:04:18 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 07:04:18 INFO  Job:1653 - Job job_1611644399205_0004 completed successfully
2021-01-26 07:04:18 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163735
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36540
		Total time spent by all reduces in occupied slots (ms)=6398
		Total time spent by all map tasks (ms)=18270
		Total time spent by all reduce tasks (ms)=3199
		Total vcore-milliseconds taken by all map tasks=18270
		Total vcore-milliseconds taken by all reduce tasks=3199
		Total megabyte-milliseconds taken by all map tasks=37416960
		Total megabyte-milliseconds taken by all reduce tasks=6551552
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1217
		CPU time spent (ms)=6650
		Physical memory (bytes) snapshot=1641701376
		Virtual memory (bytes) snapshot=14044684288
		Total committed heap usage (bytes)=1496317952
		Peak Map Physical memory (bytes)=551542784
		Peak Map Virtual memory (bytes)=3507449856
		Peak Reduce Physical memory (bytes)=317112320
		Peak Reduce Virtual memory (bytes)=3528544256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 07:04:19.206" starttime="20210126 07:04:19.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:04:19.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:04:19.207" starttime="20210126 07:04:19.207"></status>
</kw>
<status status="PASS" endtime="20210126 07:04:19.207" starttime="20210126 07:03:51.592"></status>
</kw>
<msg timestamp="20210126 07:04:19.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:04:19.207" starttime="20210126 07:03:51.592"></status>
</kw>
<msg timestamp="20210126 07:04:19.208" level="INFO">${output} = 2021-01-26 07:03:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:03:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
20...</msg>
<status status="PASS" endtime="20210126 07:04:19.208" starttime="20210126 07:03:51.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 07:04:19.208" starttime="20210126 07:04:19.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 07:04:19.209" starttime="20210126 07:04:19.208"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 07:04:19.209" critical="yes" starttime="20210126 07:03:51.564"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 07:04:19.210" starttime="20210126 07:03:19.290"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:56.853" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:01:56.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:01:56.859" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:01:56.859" starttime="20210126 07:01:56.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:01:56.860" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:01:56.860" starttime="20210126 07:01:56.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:01:56.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:01:56.861" starttime="20210126 07:01:56.860"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:56.861" starttime="20210126 07:01:56.849"></status>
</kw>
<msg timestamp="20210126 07:01:56.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:01:56.861" starttime="20210126 07:01:56.849"></status>
</kw>
<msg timestamp="20210126 07:01:56.861" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:01:56.861" starttime="20210126 07:01:56.849"></status>
</kw>
<msg timestamp="20210126 07:01:56.861" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:01:56.861" starttime="20210126 07:01:56.848"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:01:56.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:01:56.865" starttime="20210126 07:01:56.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:01:56.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:01:56.866" starttime="20210126 07:01:56.865"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:56.866" starttime="20210126 07:01:56.864"></status>
</kw>
<msg timestamp="20210126 07:01:56.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:01:56.866" starttime="20210126 07:01:56.864"></status>
</kw>
<status status="PASS" endtime="20210126 07:01:56.866" starttime="20210126 07:01:56.863"></status>
</kw>
<msg timestamp="20210126 07:01:56.866" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:01:56.866" starttime="20210126 07:01:56.862"></status>
</kw>
<msg timestamp="20210126 07:01:56.867" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:01:56.867" starttime="20210126 07:01:56.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:01:56.869" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:02:34.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:02:34.296" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:01:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:58 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 07:02:34.296" starttime="20210126 07:01:56.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:02:34.298" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:01:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:01:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:01:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:01:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CED994E7BBE7-&gt;0cdb8374-787e-41e1-b239-5602db6a46fc
2021-01-26 07:01:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 07:01:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-26D75EC3303B-&gt;0de8199c-6d2f-4b54-b0c6-0b163cd24b13
2021-01-26 07:01:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 07:02:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:02:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-01-26 07:02:03 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644523120, maxDate=1612249323120, sequenceNumber=1, masterKeyId=2))
2021-01-26 07:02:03 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f2 a2 ff eb f3 2e 38 f2 aa b1 8c f6 2e 40 01 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-26 07:02:03 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644523120, maxDate=1612249323120, sequenceNumber=1, masterKeyId=2)
2021-01-26 07:02:06 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 07:02:06 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 07:02:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611644399205_0001
2021-01-26 07:02:06 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644523120, maxDate=1612249323120, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f2 a2 ff eb f3 2e 38 f2 aa b1 8c f6 2e 40 01 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-26 07:02:06 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 07:02:06 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 07:02:06 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-26 07:02:08 INFO  YarnClientImpl:329 - Submitted application application_1611644399205_0001
2021-01-26 07:02:08 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611644399205_0001/
2021-01-26 07:02:08 INFO  Job:1614 - Running job: job_1611644399205_0001
2021-01-26 07:02:17 INFO  Job:1635 - Job job_1611644399205_0001 running in uber mode : false
2021-01-26 07:02:17 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 07:02:27 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 07:02:28 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 07:02:32 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 07:02:33 INFO  Job:1653 - Job job_1611644399205_0001 completed successfully
2021-01-26 07:02:33 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40660
		Total time spent by all reduces in occupied slots (ms)=6550
		Total time spent by all map tasks (ms)=20330
		Total time spent by all reduce tasks (ms)=3275
		Total vcore-milliseconds taken by all map tasks=20330
		Total vcore-milliseconds taken by all reduce tasks=3275
		Total megabyte-milliseconds taken by all map tasks=41635840
		Total megabyte-milliseconds taken by all reduce tasks=6707200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=987
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1402626048
		Virtual memory (bytes) snapshot=14024671232
		Total committed heap usage (bytes)=1205862400
		Peak Map Physical memory (bytes)=387190784
		Peak Map Virtual memory (bytes)=3507408896
		Peak Reduce Physical memory (bytes)=318808064
		Peak Reduce Virtual memory (bytes)=3527245824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.318 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 07:02:34.298" starttime="20210126 07:02:34.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:02:34.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:02:34.299" starttime="20210126 07:02:34.298"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.299" starttime="20210126 07:01:56.867"></status>
</kw>
<msg timestamp="20210126 07:02:34.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:02:34.299" starttime="20210126 07:01:56.867"></status>
</kw>
<msg timestamp="20210126 07:02:34.300" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 07:01:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:01:58 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 07:02:34.300" starttime="20210126 07:01:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 07:02:34.300" starttime="20210126 07:02:34.300"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 07:02:34.300" critical="yes" starttime="20210126 07:01:56.848"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:02:34.305" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:02:34.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:02:34.311" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:02:34.311" starttime="20210126 07:02:34.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:02:34.312" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:02:34.312" starttime="20210126 07:02:34.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:02:34.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:02:34.312" starttime="20210126 07:02:34.312"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.313" starttime="20210126 07:02:34.303"></status>
</kw>
<msg timestamp="20210126 07:02:34.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:02:34.313" starttime="20210126 07:02:34.302"></status>
</kw>
<msg timestamp="20210126 07:02:34.313" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:02:34.313" starttime="20210126 07:02:34.302"></status>
</kw>
<msg timestamp="20210126 07:02:34.313" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 07:02:34.313" starttime="20210126 07:02:34.302"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 07:02:34.314" level="INFO">${random} = ZC4X5lH0</msg>
<status status="PASS" endtime="20210126 07:02:34.314" starttime="20210126 07:02:34.313"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:02:34.317" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:02:34.317" starttime="20210126 07:02:34.317"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:02:34.318" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.318" starttime="20210126 07:02:34.317"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.318" starttime="20210126 07:02:34.316"></status>
</kw>
<msg timestamp="20210126 07:02:34.318" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.318" starttime="20210126 07:02:34.316"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.318" starttime="20210126 07:02:34.315"></status>
</kw>
<msg timestamp="20210126 07:02:34.318" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:02:34.318" starttime="20210126 07:02:34.315"></status>
</kw>
<msg timestamp="20210126 07:02:34.319" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 07:02:34.319" starttime="20210126 07:02:34.314"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:02:34.321" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:02:34.322" starttime="20210126 07:02:34.321"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:02:34.322" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.322" starttime="20210126 07:02:34.322"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.322" starttime="20210126 07:02:34.321"></status>
</kw>
<msg timestamp="20210126 07:02:34.322" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.322" starttime="20210126 07:02:34.320"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.323" starttime="20210126 07:02:34.320"></status>
</kw>
<msg timestamp="20210126 07:02:34.323" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 07:02:34.323" starttime="20210126 07:02:34.319"></status>
</kw>
<msg timestamp="20210126 07:02:34.323" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 07:02:34.323" starttime="20210126 07:02:34.319"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 07:02:34.326" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 07:02:34.326" starttime="20210126 07:02:34.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:02:34.326" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.326" starttime="20210126 07:02:34.326"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.326" starttime="20210126 07:02:34.325"></status>
</kw>
<msg timestamp="20210126 07:02:34.326" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 07:02:34.327" starttime="20210126 07:02:34.325"></status>
</kw>
<status status="PASS" endtime="20210126 07:02:34.327" starttime="20210126 07:02:34.324"></status>
</kw>
<msg timestamp="20210126 07:02:34.327" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ZC4X5lH0.txt</msg>
<status status="PASS" endtime="20210126 07:02:34.327" starttime="20210126 07:02:34.324"></status>
</kw>
<msg timestamp="20210126 07:02:34.327" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ZC4X5lH0.txt</msg>
<status status="PASS" endtime="20210126 07:02:34.327" starttime="20210126 07:02:34.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:02:34.330" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ZC4X5lH0.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:03:04.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:03:04.645" level="INFO">${output} = 2021-01-26 07:02:36 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:02:36 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
20...</msg>
<status status="PASS" endtime="20210126 07:03:04.645" starttime="20210126 07:02:34.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:03:04.646" level="INFO">2021-01-26 07:02:36 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:02:36 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-01-26 07:02:36 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644556538, maxDate=1612249356538, sequenceNumber=2, masterKeyId=2))
2021-01-26 07:02:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9e a9 81 ec f3 2e 38 9e b1 b3 8c f6 2e 40 02 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-26 07:02:36 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644556538, maxDate=1612249356538, sequenceNumber=2, masterKeyId=2)
2021-01-26 07:02:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 07:02:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 07:02:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:02:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 07:02:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:02:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FE1D51B0428B-&gt;0de8199c-6d2f-4b54-b0c6-0b163cd24b13
2021-01-26 07:02:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 07:02:37 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 07:02:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7FCE5E9E27D4-&gt;0cdb8374-787e-41e1-b239-5602db6a46fc
2021-01-26 07:02:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 07:02:38 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 07:02:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611644399205_0002
2021-01-26 07:02:40 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611644556538, maxDate=1612249356538, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9e a9 81 ec f3 2e 38 9e b1 b3 8c f6 2e 40 02 48 01 5a 0d 31 39 37 37 35 38 31 33 35 36 32 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-26 07:02:41 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 07:02:41 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 07:02:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-26 07:02:41 INFO  YarnClientImpl:329 - Submitted application application_1611644399205_0002
2021-01-26 07:02:41 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611644399205_0002/
2021-01-26 07:02:41 INFO  Job:1614 - Running job: job_1611644399205_0002
2021-01-26 07:02:49 INFO  Job:1635 - Job job_1611644399205_0002 running in uber mode : false
2021-01-26 07:02:49 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 07:02:58 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 07:02:59 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 07:03:00 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 07:03:03 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 07:03:04 INFO  Job:1653 - Job job_1611644399205_0002 completed successfully
2021-01-26 07:03:04 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163819
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40178
		Total time spent by all reduces in occupied slots (ms)=6728
		Total time spent by all map tasks (ms)=20089
		Total time spent by all reduce tasks (ms)=3364
		Total vcore-milliseconds taken by all map tasks=20089
		Total vcore-milliseconds taken by all reduce tasks=3364
		Total megabyte-milliseconds taken by all map tasks=41142272
		Total megabyte-milliseconds taken by all reduce tasks=6889472
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1448
		CPU time spent (ms)=7280
		Physical memory (bytes) snapshot=1641795584
		Virtual memory (bytes) snapshot=14051614720
		Total committed heap usage (bytes)=1442840576
		Peak Map Physical memory (bytes)=551624704
		Peak Map Virtual memory (bytes)=3510480896
		Peak Reduce Physical memory (bytes)=324894720
		Peak Reduce Virtual memory (bytes)=3527237632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 07:03:04.647" starttime="20210126 07:03:04.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:03:04.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:03:04.647" starttime="20210126 07:03:04.647"></status>
</kw>
<status status="PASS" endtime="20210126 07:03:04.648" starttime="20210126 07:02:34.328"></status>
</kw>
<msg timestamp="20210126 07:03:04.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:03:04.648" starttime="20210126 07:02:34.328"></status>
</kw>
<msg timestamp="20210126 07:03:04.648" level="INFO">${output} = 2021-01-26 07:02:36 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-26 07:02:36 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
20...</msg>
<status status="PASS" endtime="20210126 07:03:04.648" starttime="20210126 07:02:34.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:04.649" starttime="20210126 07:03:04.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 07:03:04.649" starttime="20210126 07:03:04.649"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 07:03:04.649" critical="yes" starttime="20210126 07:02:34.301"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 07:03:04.650" starttime="20210126 07:01:56.803"></status>
</suite>
<status status="PASS" elapsedtime="176183" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
