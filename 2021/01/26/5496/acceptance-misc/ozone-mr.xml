<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210126 06:45:36.858" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:35.158" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:37.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 06:33:37.059" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:33:37.059" starttime="20210126 06:33:35.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:37.060" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:33:37.060" starttime="20210126 06:33:37.060"></status>
</kw>
<msg timestamp="20210126 06:33:37.061" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:33:37.061" starttime="20210126 06:33:35.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:37.066" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:38.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:38.983" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:38.983" starttime="20210126 06:33:37.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:38.984" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:38.984" starttime="20210126 06:33:38.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:38.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:38.985" starttime="20210126 06:33:38.984"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:38.985" starttime="20210126 06:33:37.063"></status>
</kw>
<msg timestamp="20210126 06:33:38.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:38.985" starttime="20210126 06:33:37.063"></status>
</kw>
<msg timestamp="20210126 06:33:38.986" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 06:33:38.986" starttime="20210126 06:33:37.062"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 06:33:38.986" starttime="20210126 06:33:38.986"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:38.986" starttime="20210126 06:33:37.062"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:38.986" starttime="20210126 06:33:37.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:38.996" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:40.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:40.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:40.894" starttime="20210126 06:33:38.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:40.895" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:40.896" starttime="20210126 06:33:40.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:40.896" starttime="20210126 06:33:40.896"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:40.896" starttime="20210126 06:33:38.988"></status>
</kw>
<msg timestamp="20210126 06:33:40.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:40.897" starttime="20210126 06:33:38.988"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:40.897" starttime="20210126 06:33:38.987"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:40.897" starttime="20210126 06:33:38.987"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:40.897" starttime="20210126 06:33:38.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 06:33:40.897" starttime="20210126 06:33:40.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:40.901" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:42.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:42.859" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:33...</msg>
<status status="PASS" endtime="20210126 06:33:42.859" starttime="20210126 06:33:40.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:42.860" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:33:40.850Z",
  "modificationTime" : "2021-01-26T06:33:40.850Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 06:33:42.860" starttime="20210126 06:33:42.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:42.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:42.860" starttime="20210126 06:33:42.860"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:42.861" starttime="20210126 06:33:40.899"></status>
</kw>
<msg timestamp="20210126 06:33:42.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:42.861" starttime="20210126 06:33:40.898"></status>
</kw>
<msg timestamp="20210126 06:33:42.861" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:33...</msg>
<status status="PASS" endtime="20210126 06:33:42.861" starttime="20210126 06:33:40.898"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 06:33:42.861" starttime="20210126 06:33:42.861"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:33:42.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:33:42.865" starttime="20210126 06:33:42.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:33:42.865" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.865"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.864"></status>
</kw>
<msg timestamp="20210126 06:33:42.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.864"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.863"></status>
</kw>
<msg timestamp="20210126 06:33:42.866" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.862"></status>
</kw>
<msg timestamp="20210126 06:33:42.866" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:33:42.866" starttime="20210126 06:33:42.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:42.869" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:44.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:44.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:44.895" starttime="20210126 06:33:42.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:44.897" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:44.897" starttime="20210126 06:33:44.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:44.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:44.897" starttime="20210126 06:33:44.897"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:44.897" starttime="20210126 06:33:42.867"></status>
</kw>
<msg timestamp="20210126 06:33:44.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:44.898" starttime="20210126 06:33:42.867"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:44.898" starttime="20210126 06:33:42.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:44.901" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:49.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:49.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:49.252" starttime="20210126 06:33:44.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:49.253" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:49.253" starttime="20210126 06:33:49.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:49.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:49.254" starttime="20210126 06:33:49.253"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:49.254" starttime="20210126 06:33:44.899"></status>
</kw>
<msg timestamp="20210126 06:33:49.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:49.254" starttime="20210126 06:33:44.899"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:49.254" starttime="20210126 06:33:44.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:49.258" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:52.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:52.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:52.803" starttime="20210126 06:33:49.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:52.804" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:52.804" starttime="20210126 06:33:52.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:52.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:52.804" starttime="20210126 06:33:52.804"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:52.805" starttime="20210126 06:33:49.255"></status>
</kw>
<msg timestamp="20210126 06:33:52.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:52.805" starttime="20210126 06:33:49.255"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:52.805" starttime="20210126 06:33:49.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:52.809" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:56.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:56.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:56.177" starttime="20210126 06:33:52.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:56.178" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:56.178" starttime="20210126 06:33:56.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:56.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:56.179" starttime="20210126 06:33:56.178"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:56.179" starttime="20210126 06:33:52.806"></status>
</kw>
<msg timestamp="20210126 06:33:56.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:56.179" starttime="20210126 06:33:52.806"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:56.179" starttime="20210126 06:33:52.805"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:33:56.180" critical="yes" starttime="20210126 06:33:35.148"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:33:56.184" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:33:56.184" starttime="20210126 06:33:56.184"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:33:56.185" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:33:56.185" starttime="20210126 06:33:56.184"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:56.185" starttime="20210126 06:33:56.183"></status>
</kw>
<msg timestamp="20210126 06:33:56.185" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:33:56.185" starttime="20210126 06:33:56.183"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:56.185" starttime="20210126 06:33:56.182"></status>
</kw>
<msg timestamp="20210126 06:33:56.186" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:33:56.186" starttime="20210126 06:33:56.182"></status>
</kw>
<msg timestamp="20210126 06:33:56.186" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:33:56.186" starttime="20210126 06:33:56.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:56.189" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:58.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:58.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:58.055" starttime="20210126 06:33:56.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:58.056" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:58.056" starttime="20210126 06:33:58.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:58.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:58.057" starttime="20210126 06:33:58.056"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:58.057" starttime="20210126 06:33:56.187"></status>
</kw>
<msg timestamp="20210126 06:33:58.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:58.057" starttime="20210126 06:33:56.186"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:58.057" starttime="20210126 06:33:56.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:33:58.060" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:33:59.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:33:59.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:33:59.879" starttime="20210126 06:33:58.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:33:59.880" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:33:59.880" starttime="20210126 06:33:59.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:33:59.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:33:59.881" starttime="20210126 06:33:59.880"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:59.881" starttime="20210126 06:33:58.058"></status>
</kw>
<msg timestamp="20210126 06:33:59.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:33:59.881" starttime="20210126 06:33:58.058"></status>
</kw>
<status status="PASS" endtime="20210126 06:33:59.882" starttime="20210126 06:33:58.057"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:33:59.882" critical="yes" starttime="20210126 06:33:56.180"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210126 06:33:59.883" starttime="20210126 06:33:35.099"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:35:29.214" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:35:29.214" starttime="20210126 06:35:29.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:35:29.215" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:35:29.215" starttime="20210126 06:35:29.214"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:29.215" starttime="20210126 06:35:29.213"></status>
</kw>
<msg timestamp="20210126 06:35:29.215" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:35:29.215" starttime="20210126 06:35:29.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:35:29.216" starttime="20210126 06:35:29.216"></status>
</kw>
<msg timestamp="20210126 06:35:29.216" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:35:29.216" starttime="20210126 06:35:29.215"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:29.216" starttime="20210126 06:35:29.212"></status>
</kw>
<msg timestamp="20210126 06:35:29.216" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:35:29.216" starttime="20210126 06:35:29.212"></status>
</kw>
<msg timestamp="20210126 06:35:29.217" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:35:29.217" starttime="20210126 06:35:29.211"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:35:29.217" level="INFO">${random} = 75219</msg>
<status status="PASS" endtime="20210126 06:35:29.217" starttime="20210126 06:35:29.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:35:29.222" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-75219 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:35:32.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:35:32.212" level="INFO">${output} = 2021-01-26 06:35:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 ...</msg>
<status status="PASS" endtime="20210126 06:35:32.212" starttime="20210126 06:35:29.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:35:32.213" level="INFO">2021-01-26 06:35:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:35:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:35:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:35:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C3386DA01B2-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:35:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 06:35:32.213" starttime="20210126 06:35:32.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:35:32.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:35:32.214" starttime="20210126 06:35:32.213"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:32.214" starttime="20210126 06:35:29.218"></status>
</kw>
<msg timestamp="20210126 06:35:32.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:35:32.214" starttime="20210126 06:35:29.218"></status>
</kw>
<msg timestamp="20210126 06:35:32.214" level="INFO">${result} = 2021-01-26 06:35:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 ...</msg>
<status status="PASS" endtime="20210126 06:35:32.214" starttime="20210126 06:35:29.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:35:32.218" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:35:33.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:35:33.650" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 ofs://om/volume1/bucket1/ozone-45466
-rw-...</msg>
<status status="PASS" endtime="20210126 06:35:33.650" starttime="20210126 06:35:32.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:35:33.651" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 ofs://om/volume1/bucket1/ozone-45466
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:35 ofs://om/volume1/bucket1/ozone-75219
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:35 ofs://om/volume1/bucket1/wordcount-BFQHZLcd.txt</msg>
<status status="PASS" endtime="20210126 06:35:33.651" starttime="20210126 06:35:33.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:35:33.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:35:33.652" starttime="20210126 06:35:33.651"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:33.652" starttime="20210126 06:35:32.215"></status>
</kw>
<msg timestamp="20210126 06:35:33.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:35:33.652" starttime="20210126 06:35:32.215"></status>
</kw>
<msg timestamp="20210126 06:35:33.652" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 ofs://om/volume1/bucket1/ozone-45466
-rw-...</msg>
<status status="PASS" endtime="20210126 06:35:33.652" starttime="20210126 06:35:32.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:35:33.653" starttime="20210126 06:35:33.652"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:35:33.653" critical="yes" starttime="20210126 06:35:29.211"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:35:33.654" starttime="20210126 06:35:29.165"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:34:04.301" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:34:04.301" starttime="20210126 06:34:04.300"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:34:04.301" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:34:04.301" starttime="20210126 06:34:04.301"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:04.301" starttime="20210126 06:34:04.300"></status>
</kw>
<msg timestamp="20210126 06:34:04.302" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:34:04.302" starttime="20210126 06:34:04.300"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:04.302" starttime="20210126 06:34:04.299"></status>
</kw>
<msg timestamp="20210126 06:34:04.302" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:04.302" starttime="20210126 06:34:04.298"></status>
</kw>
<msg timestamp="20210126 06:34:04.302" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:04.302" starttime="20210126 06:34:04.298"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:34:04.303" level="INFO">${random} = 45466</msg>
<status status="PASS" endtime="20210126 06:34:04.303" starttime="20210126 06:34:04.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:04.307" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-45466 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:34:07.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:34:07.533" level="INFO">${output} = 2021-01-26 06:34:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 ...</msg>
<status status="PASS" endtime="20210126 06:34:07.533" starttime="20210126 06:34:04.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:34:07.535" level="INFO">2021-01-26 06:34:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:34:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:34:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:34:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-925837BBC903-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:34:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 06:34:07.535" starttime="20210126 06:34:07.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:34:07.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:34:07.536" starttime="20210126 06:34:07.535"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:07.536" starttime="20210126 06:34:04.303"></status>
</kw>
<msg timestamp="20210126 06:34:07.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:34:07.536" starttime="20210126 06:34:04.303"></status>
</kw>
<msg timestamp="20210126 06:34:07.536" level="INFO">${result} = 2021-01-26 06:34:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 ...</msg>
<status status="PASS" endtime="20210126 06:34:07.536" starttime="20210126 06:34:04.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:07.539" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:34:08.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:34:08.893" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 o3fs://bucket1.volume1.om/ozone-45466
dr...</msg>
<status status="PASS" endtime="20210126 06:34:08.893" starttime="20210126 06:34:07.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:34:08.894" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 o3fs://bucket1.volume1.om/ozone-45466
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:34:08.894" starttime="20210126 06:34:08.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:34:08.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:34:08.895" starttime="20210126 06:34:08.895"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:08.895" starttime="20210126 06:34:07.537"></status>
</kw>
<msg timestamp="20210126 06:34:08.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:34:08.895" starttime="20210126 06:34:07.537"></status>
</kw>
<msg timestamp="20210126 06:34:08.896" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-26 06:34 o3fs://bucket1.volume1.om/ozone-45466
dr...</msg>
<status status="PASS" endtime="20210126 06:34:08.896" starttime="20210126 06:34:07.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:34:08.896" starttime="20210126 06:34:08.896"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:34:08.896" critical="yes" starttime="20210126 06:34:04.297"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:34:08.897" starttime="20210126 06:34:04.253"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:35:37.622" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:35:37.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:35:37.629" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:35:37.629" starttime="20210126 06:35:37.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:35:37.630" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:35:37.630" starttime="20210126 06:35:37.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:35:37.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:35:37.630" starttime="20210126 06:35:37.630"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:37.630" starttime="20210126 06:35:37.619"></status>
</kw>
<msg timestamp="20210126 06:35:37.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:35:37.631" starttime="20210126 06:35:37.618"></status>
</kw>
<msg timestamp="20210126 06:35:37.631" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:35:37.631" starttime="20210126 06:35:37.618"></status>
</kw>
<msg timestamp="20210126 06:35:37.631" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:35:37.631" starttime="20210126 06:35:37.618"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:35:37.635" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:35:37.635" starttime="20210126 06:35:37.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:35:37.636" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:35:37.636" starttime="20210126 06:35:37.636"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:37.636" starttime="20210126 06:35:37.635"></status>
</kw>
<msg timestamp="20210126 06:35:37.636" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:35:37.636" starttime="20210126 06:35:37.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:35:37.637" starttime="20210126 06:35:37.637"></status>
</kw>
<msg timestamp="20210126 06:35:37.637" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:35:37.637" starttime="20210126 06:35:37.636"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:37.638" starttime="20210126 06:35:37.634"></status>
</kw>
<msg timestamp="20210126 06:35:37.638" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:35:37.638" starttime="20210126 06:35:37.632"></status>
</kw>
<msg timestamp="20210126 06:35:37.638" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:35:37.638" starttime="20210126 06:35:37.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:35:37.641" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:36:13.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:36:13.628" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:35:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210126 06:36:13.628" starttime="20210126 06:35:37.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:36:13.629" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:35:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:35:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:35:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:35:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83FDB5FEB576-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:35:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 06:35:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8301C6D20938-&gt;bf0866d7-af50-4f5a-94b5-59e775990222
2021-01-26 06:35:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 06:35:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:35:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:35:43 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-26 06:35:43 INFO  JobSubmitter:198 - number of splits:3
2021-01-26 06:35:43 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611642783409_0003
2021-01-26 06:35:43 INFO  YarnClientImpl:273 - Submitted application application_1611642783409_0003
2021-01-26 06:35:43 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611642783409_0003/
2021-01-26 06:35:43 INFO  Job:1339 - Running job: job_1611642783409_0003
2021-01-26 06:35:48 INFO  Job:1360 - Job job_1611642783409_0003 running in uber mode : false
2021-01-26 06:35:48 INFO  Job:1367 -  map 0% reduce 0%
2021-01-26 06:35:54 INFO  Job:1367 -  map 33% reduce 0%
2021-01-26 06:35:59 INFO  Job:1367 -  map 67% reduce 0%
2021-01-26 06:36:03 INFO  Job:1367 -  map 100% reduce 0%
2021-01-26 06:36:07 INFO  Job:1367 -  map 100% reduce 100%
2021-01-26 06:36:13 INFO  Job:1378 - Job job_1611642783409_0003 completed successfully
2021-01-26 06:36:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32864
		Total time spent by all reduces in occupied slots (ms)=12536
		Total time spent by all map tasks (ms)=8216
		Total time spent by all reduce tasks (ms)=3134
		Total vcore-milliseconds taken by all map tasks=8216
		Total vcore-milliseconds taken by all reduce tasks=3134
		Total megabyte-milliseconds taken by all map tasks=33652736
		Total megabyte-milliseconds taken by all reduce tasks=12836864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=526
		CPU time spent (ms)=5460
		Physical memory (bytes) snapshot=1149816832
		Virtual memory (bytes) snapshot=15763402752
		Total committed heap usage (bytes)=1066401792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.286 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 06:36:13.629" starttime="20210126 06:36:13.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:36:13.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:36:13.630" starttime="20210126 06:36:13.629"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.630" starttime="20210126 06:35:37.639"></status>
</kw>
<msg timestamp="20210126 06:36:13.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:36:13.630" starttime="20210126 06:35:37.638"></status>
</kw>
<msg timestamp="20210126 06:36:13.630" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:35:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:35:39 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210126 06:36:13.631" starttime="20210126 06:35:37.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:36:13.631" starttime="20210126 06:36:13.631"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:36:13.631" critical="yes" starttime="20210126 06:35:37.617"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:36:13.636" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:36:13.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:36:13.640" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:36:13.640" starttime="20210126 06:36:13.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:36:13.641" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:36:13.641" starttime="20210126 06:36:13.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:36:13.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:36:13.642" starttime="20210126 06:36:13.641"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.642" starttime="20210126 06:36:13.634"></status>
</kw>
<msg timestamp="20210126 06:36:13.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:36:13.642" starttime="20210126 06:36:13.633"></status>
</kw>
<msg timestamp="20210126 06:36:13.643" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:36:13.643" starttime="20210126 06:36:13.633"></status>
</kw>
<msg timestamp="20210126 06:36:13.643" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:36:13.643" starttime="20210126 06:36:13.633"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:36:13.643" level="INFO">${random} = w7LHLXAi</msg>
<status status="PASS" endtime="20210126 06:36:13.643" starttime="20210126 06:36:13.643"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:36:13.647" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:36:13.647" starttime="20210126 06:36:13.646"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:36:13.647" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.647" starttime="20210126 06:36:13.647"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.648" starttime="20210126 06:36:13.646"></status>
</kw>
<msg timestamp="20210126 06:36:13.648" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.648" starttime="20210126 06:36:13.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:36:13.649" starttime="20210126 06:36:13.648"></status>
</kw>
<msg timestamp="20210126 06:36:13.649" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:36:13.649" starttime="20210126 06:36:13.648"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.649" starttime="20210126 06:36:13.645"></status>
</kw>
<msg timestamp="20210126 06:36:13.649" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:36:13.649" starttime="20210126 06:36:13.644"></status>
</kw>
<msg timestamp="20210126 06:36:13.649" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:36:13.649" starttime="20210126 06:36:13.644"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:36:13.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:36:13.652" starttime="20210126 06:36:13.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:36:13.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.653" starttime="20210126 06:36:13.652"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.653" starttime="20210126 06:36:13.651"></status>
</kw>
<msg timestamp="20210126 06:36:13.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.653" starttime="20210126 06:36:13.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:36:13.654" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210126 06:36:13.654" starttime="20210126 06:36:13.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:36:13.655" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210126 06:36:13.655" starttime="20210126 06:36:13.655"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.655" starttime="20210126 06:36:13.653"></status>
</kw>
<msg timestamp="20210126 06:36:13.655" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210126 06:36:13.655" starttime="20210126 06:36:13.653"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.655" starttime="20210126 06:36:13.650"></status>
</kw>
<msg timestamp="20210126 06:36:13.656" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:36:13.656" starttime="20210126 06:36:13.650"></status>
</kw>
<msg timestamp="20210126 06:36:13.656" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:36:13.656" starttime="20210126 06:36:13.649"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:36:13.659" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:36:13.659" starttime="20210126 06:36:13.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:36:13.659" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.659" starttime="20210126 06:36:13.659"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.659" starttime="20210126 06:36:13.658"></status>
</kw>
<msg timestamp="20210126 06:36:13.660" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:36:13.660" starttime="20210126 06:36:13.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:36:13.661" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210126 06:36:13.661" starttime="20210126 06:36:13.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:36:13.661" level="INFO">${result} = /wordcount-w7LHLXAi.txt</msg>
<status status="PASS" endtime="20210126 06:36:13.661" starttime="20210126 06:36:13.661"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.661" starttime="20210126 06:36:13.660"></status>
</kw>
<msg timestamp="20210126 06:36:13.662" level="INFO">${path_with_leading} = /wordcount-w7LHLXAi.txt</msg>
<status status="PASS" endtime="20210126 06:36:13.662" starttime="20210126 06:36:13.660"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:13.662" starttime="20210126 06:36:13.657"></status>
</kw>
<msg timestamp="20210126 06:36:13.662" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-w7LHLXAi.txt</msg>
<status status="PASS" endtime="20210126 06:36:13.662" starttime="20210126 06:36:13.656"></status>
</kw>
<msg timestamp="20210126 06:36:13.662" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-w7LHLXAi.txt</msg>
<status status="PASS" endtime="20210126 06:36:13.662" starttime="20210126 06:36:13.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:36:13.665" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-w7LHLXAi.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:36:44.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:36:44.206" level="INFO">${output} = 2021-01-26 06:36:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:36:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210126 06:36:44.206" starttime="20210126 06:36:13.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:36:44.207" level="INFO">2021-01-26 06:36:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:36:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:36:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:36:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:36:15 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:36:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:36:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA6A7BBE3300-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:36:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:36:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-26 06:36:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CEA43295876D-&gt;bf0866d7-af50-4f5a-94b5-59e775990222
2021-01-26 06:36:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:36:19 INFO  JobSubmitter:198 - number of splits:3
2021-01-26 06:36:19 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611642783409_0004
2021-01-26 06:36:19 INFO  YarnClientImpl:273 - Submitted application application_1611642783409_0004
2021-01-26 06:36:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611642783409_0004/
2021-01-26 06:36:19 INFO  Job:1339 - Running job: job_1611642783409_0004
2021-01-26 06:36:25 INFO  Job:1360 - Job job_1611642783409_0004 running in uber mode : false
2021-01-26 06:36:25 INFO  Job:1367 -  map 0% reduce 0%
2021-01-26 06:36:31 INFO  Job:1367 -  map 33% reduce 0%
2021-01-26 06:36:35 INFO  Job:1367 -  map 67% reduce 0%
2021-01-26 06:36:39 INFO  Job:1367 -  map 100% reduce 0%
2021-01-26 06:36:42 INFO  Job:1367 -  map 100% reduce 100%
2021-01-26 06:36:43 INFO  Job:1378 - Job job_1611642783409_0004 completed successfully
2021-01-26 06:36:43 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32100
		Total time spent by all reduces in occupied slots (ms)=12108
		Total time spent by all map tasks (ms)=8025
		Total time spent by all reduce tasks (ms)=3027
		Total vcore-milliseconds taken by all map tasks=8025
		Total vcore-milliseconds taken by all reduce tasks=3027
		Total megabyte-milliseconds taken by all map tasks=32870400
		Total megabyte-milliseconds taken by all reduce tasks=12398592
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=5440
		Physical memory (bytes) snapshot=1157951488
		Virtual memory (bytes) snapshot=15775154176
		Total committed heap usage (bytes)=1061683200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 06:36:44.207" starttime="20210126 06:36:44.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:36:44.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:36:44.208" starttime="20210126 06:36:44.207"></status>
</kw>
<status status="PASS" endtime="20210126 06:36:44.208" starttime="20210126 06:36:13.663"></status>
</kw>
<msg timestamp="20210126 06:36:44.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:36:44.208" starttime="20210126 06:36:13.663"></status>
</kw>
<msg timestamp="20210126 06:36:44.209" level="INFO">${output} = 2021-01-26 06:36:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:36:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210126 06:36:44.209" starttime="20210126 06:36:13.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:36:44.209" starttime="20210126 06:36:44.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:36:44.209" starttime="20210126 06:36:44.209"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:36:44.210" critical="yes" starttime="20210126 06:36:13.632"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:36:44.211" starttime="20210126 06:35:37.573"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:12.872" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:34:12.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:34:12.877" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:12.877" starttime="20210126 06:34:12.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:34:12.878" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:12.878" starttime="20210126 06:34:12.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:34:12.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:34:12.878" starttime="20210126 06:34:12.878"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:12.878" starttime="20210126 06:34:12.868"></status>
</kw>
<msg timestamp="20210126 06:34:12.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:34:12.878" starttime="20210126 06:34:12.868"></status>
</kw>
<msg timestamp="20210126 06:34:12.879" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:12.879" starttime="20210126 06:34:12.868"></status>
</kw>
<msg timestamp="20210126 06:34:12.879" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:12.879" starttime="20210126 06:34:12.868"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:34:12.882" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:34:12.882" starttime="20210126 06:34:12.882"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:34:12.883" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:34:12.883" starttime="20210126 06:34:12.883"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:12.883" starttime="20210126 06:34:12.882"></status>
</kw>
<msg timestamp="20210126 06:34:12.883" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:34:12.883" starttime="20210126 06:34:12.881"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:12.883" starttime="20210126 06:34:12.881"></status>
</kw>
<msg timestamp="20210126 06:34:12.883" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:12.884" starttime="20210126 06:34:12.880"></status>
</kw>
<msg timestamp="20210126 06:34:12.884" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:12.884" starttime="20210126 06:34:12.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:12.886" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:34:52.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:34:52.291" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:34:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:14 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210126 06:34:52.291" starttime="20210126 06:34:12.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:34:52.309" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:34:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:34:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:34:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:34:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B0EEF2D38C6D-&gt;bf0866d7-af50-4f5a-94b5-59e775990222
2021-01-26 06:34:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 06:34:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D532B69AAD9-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:34:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 06:34:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:34:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-26 06:34:16 INFO  JobSubmitter:198 - number of splits:3
2021-01-26 06:34:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611642783409_0001
2021-01-26 06:34:19 INFO  YarnClientImpl:273 - Submitted application application_1611642783409_0001
2021-01-26 06:34:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611642783409_0001/
2021-01-26 06:34:19 INFO  Job:1339 - Running job: job_1611642783409_0001
2021-01-26 06:34:27 INFO  Job:1360 - Job job_1611642783409_0001 running in uber mode : false
2021-01-26 06:34:27 INFO  Job:1367 -  map 0% reduce 0%
2021-01-26 06:34:33 INFO  Job:1367 -  map 33% reduce 0%
2021-01-26 06:34:38 INFO  Job:1367 -  map 67% reduce 0%
2021-01-26 06:34:42 INFO  Job:1367 -  map 100% reduce 0%
2021-01-26 06:34:48 INFO  Job:1367 -  map 100% reduce 100%
2021-01-26 06:34:51 INFO  Job:1378 - Job job_1611642783409_0001 completed successfully
2021-01-26 06:34:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32580
		Total time spent by all reduces in occupied slots (ms)=22928
		Total time spent by all map tasks (ms)=8145
		Total time spent by all reduce tasks (ms)=5732
		Total vcore-milliseconds taken by all map tasks=8145
		Total vcore-milliseconds taken by all reduce tasks=5732
		Total megabyte-milliseconds taken by all map tasks=33361920
		Total megabyte-milliseconds taken by all reduce tasks=23478272
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=510
		CPU time spent (ms)=5120
		Physical memory (bytes) snapshot=1145667584
		Virtual memory (bytes) snapshot=15762927616
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.179 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 06:34:52.310" starttime="20210126 06:34:52.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:34:52.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:34:52.313" starttime="20210126 06:34:52.311"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.314" starttime="20210126 06:34:12.884"></status>
</kw>
<msg timestamp="20210126 06:34:52.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:34:52.315" starttime="20210126 06:34:12.884"></status>
</kw>
<msg timestamp="20210126 06:34:52.316" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:34:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:14 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210126 06:34:52.316" starttime="20210126 06:34:12.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:34:52.317" starttime="20210126 06:34:52.316"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:34:52.318" critical="yes" starttime="20210126 06:34:12.867"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:52.329" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:34:52.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:34:52.340" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:52.340" starttime="20210126 06:34:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:34:52.342" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:52.343" starttime="20210126 06:34:52.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:34:52.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:34:52.344" starttime="20210126 06:34:52.343"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.345" starttime="20210126 06:34:52.324"></status>
</kw>
<msg timestamp="20210126 06:34:52.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:34:52.345" starttime="20210126 06:34:52.323"></status>
</kw>
<msg timestamp="20210126 06:34:52.346" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:52.346" starttime="20210126 06:34:52.322"></status>
</kw>
<msg timestamp="20210126 06:34:52.347" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210126 06:34:52.347" starttime="20210126 06:34:52.321"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:34:52.348" level="INFO">${random} = BFQHZLcd</msg>
<status status="PASS" endtime="20210126 06:34:52.348" starttime="20210126 06:34:52.347"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:34:52.357" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:34:52.357" starttime="20210126 06:34:52.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:34:52.359" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.359" starttime="20210126 06:34:52.358"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.359" starttime="20210126 06:34:52.355"></status>
</kw>
<msg timestamp="20210126 06:34:52.360" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.360" starttime="20210126 06:34:52.354"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.361" starttime="20210126 06:34:52.352"></status>
</kw>
<msg timestamp="20210126 06:34:52.361" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:52.361" starttime="20210126 06:34:52.350"></status>
</kw>
<msg timestamp="20210126 06:34:52.361" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:34:52.361" starttime="20210126 06:34:52.348"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:34:52.370" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:34:52.370" starttime="20210126 06:34:52.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:34:52.371" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.371" starttime="20210126 06:34:52.370"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.372" starttime="20210126 06:34:52.368"></status>
</kw>
<msg timestamp="20210126 06:34:52.372" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.372" starttime="20210126 06:34:52.367"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.373" starttime="20210126 06:34:52.365"></status>
</kw>
<msg timestamp="20210126 06:34:52.373" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:34:52.373" starttime="20210126 06:34:52.363"></status>
</kw>
<msg timestamp="20210126 06:34:52.374" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:34:52.374" starttime="20210126 06:34:52.362"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:34:52.382" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:34:52.382" starttime="20210126 06:34:52.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:34:52.384" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.384" starttime="20210126 06:34:52.383"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.384" starttime="20210126 06:34:52.380"></status>
</kw>
<msg timestamp="20210126 06:34:52.385" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:34:52.385" starttime="20210126 06:34:52.379"></status>
</kw>
<status status="PASS" endtime="20210126 06:34:52.385" starttime="20210126 06:34:52.377"></status>
</kw>
<msg timestamp="20210126 06:34:52.386" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-BFQHZLcd.txt</msg>
<status status="PASS" endtime="20210126 06:34:52.386" starttime="20210126 06:34:52.376"></status>
</kw>
<msg timestamp="20210126 06:34:52.386" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-BFQHZLcd.txt</msg>
<status status="PASS" endtime="20210126 06:34:52.386" starttime="20210126 06:34:52.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:34:52.394" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-BFQHZLcd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:35:25.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:35:25.198" level="INFO">${output} = 2021-01-26 06:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210126 06:35:25.198" starttime="20210126 06:34:52.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:35:25.199" level="INFO">2021-01-26 06:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:34:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:34:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-26 06:34:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-26 06:34:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:34:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-12428CD34BD7-&gt;4b1211ab-103e-4829-b91a-5e77c895fb50
2021-01-26 06:34:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:34:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-26 06:34:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95580732067D-&gt;bf0866d7-af50-4f5a-94b5-59e775990222
2021-01-26 06:34:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:34:56 INFO  JobSubmitter:198 - number of splits:3
2021-01-26 06:34:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611642783409_0002
2021-01-26 06:34:56 INFO  YarnClientImpl:273 - Submitted application application_1611642783409_0002
2021-01-26 06:34:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611642783409_0002/
2021-01-26 06:34:56 INFO  Job:1339 - Running job: job_1611642783409_0002
2021-01-26 06:35:03 INFO  Job:1360 - Job job_1611642783409_0002 running in uber mode : false
2021-01-26 06:35:03 INFO  Job:1367 -  map 0% reduce 0%
2021-01-26 06:35:09 INFO  Job:1367 -  map 33% reduce 0%
2021-01-26 06:35:14 INFO  Job:1367 -  map 67% reduce 0%
2021-01-26 06:35:17 INFO  Job:1367 -  map 100% reduce 0%
2021-01-26 06:35:21 INFO  Job:1367 -  map 100% reduce 100%
2021-01-26 06:35:24 INFO  Job:1378 - Job job_1611642783409_0002 completed successfully
2021-01-26 06:35:24 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33492
		Total time spent by all reduces in occupied slots (ms)=12084
		Total time spent by all map tasks (ms)=8373
		Total time spent by all reduce tasks (ms)=3021
		Total vcore-milliseconds taken by all map tasks=8373
		Total vcore-milliseconds taken by all reduce tasks=3021
		Total megabyte-milliseconds taken by all map tasks=34295808
		Total megabyte-milliseconds taken by all reduce tasks=12374016
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=491
		CPU time spent (ms)=5770
		Physical memory (bytes) snapshot=1192026112
		Virtual memory (bytes) snapshot=15783497728
		Total committed heap usage (bytes)=1058537472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 06:35:25.199" starttime="20210126 06:35:25.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:35:25.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:35:25.200" starttime="20210126 06:35:25.199"></status>
</kw>
<status status="PASS" endtime="20210126 06:35:25.200" starttime="20210126 06:34:52.389"></status>
</kw>
<msg timestamp="20210126 06:35:25.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:35:25.200" starttime="20210126 06:34:52.388"></status>
</kw>
<msg timestamp="20210126 06:35:25.201" level="INFO">${output} = 2021-01-26 06:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-26 06:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210126 06:35:25.201" starttime="20210126 06:34:52.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:35:25.201" starttime="20210126 06:35:25.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:35:25.201" starttime="20210126 06:35:25.201"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:35:25.202" critical="yes" starttime="20210126 06:34:52.319"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:35:25.203" starttime="20210126 06:34:12.828"></status>
</suite>
<status status="PASS" elapsedtime="172930" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:45.353" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:47.399" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 06:37:47.399" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:37:47.399" starttime="20210126 06:37:45.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:47.400" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:37:47.400" starttime="20210126 06:37:47.399"></status>
</kw>
<msg timestamp="20210126 06:37:47.400" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:37:47.400" starttime="20210126 06:37:45.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:47.406" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:49.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:37:49.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:37:49.229" starttime="20210126 06:37:47.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:49.231" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:37:49.231" starttime="20210126 06:37:49.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:37:49.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:37:49.231" starttime="20210126 06:37:49.231"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:49.232" starttime="20210126 06:37:47.402"></status>
</kw>
<msg timestamp="20210126 06:37:49.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:37:49.232" starttime="20210126 06:37:47.402"></status>
</kw>
<msg timestamp="20210126 06:37:49.232" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 06:37:49.232" starttime="20210126 06:37:47.401"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 06:37:49.232" starttime="20210126 06:37:49.232"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:49.233" starttime="20210126 06:37:47.401"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:49.233" starttime="20210126 06:37:47.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:49.236" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:51.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:37:51.004" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:37:51.004" starttime="20210126 06:37:49.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:51.005" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:37:51.005" starttime="20210126 06:37:51.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:37:51.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:37:51.005" starttime="20210126 06:37:51.005"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:49.234"></status>
</kw>
<msg timestamp="20210126 06:37:51.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:49.234"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:49.233"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:49.233"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:49.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 06:37:51.006" starttime="20210126 06:37:51.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:51.009" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:52.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:37:52.817" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:37...</msg>
<status status="PASS" endtime="20210126 06:37:52.817" starttime="20210126 06:37:51.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:52.818" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:37:50.962Z",
  "modificationTime" : "2021-01-26T06:37:50.962Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 06:37:52.818" starttime="20210126 06:37:52.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:37:52.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:37:52.819" starttime="20210126 06:37:52.819"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:52.819" starttime="20210126 06:37:51.007"></status>
</kw>
<msg timestamp="20210126 06:37:52.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:37:52.819" starttime="20210126 06:37:51.007"></status>
</kw>
<msg timestamp="20210126 06:37:52.820" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:37...</msg>
<status status="PASS" endtime="20210126 06:37:52.820" starttime="20210126 06:37:51.007"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 06:37:52.820" starttime="20210126 06:37:52.820"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:37:52.823" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:37:52.823" starttime="20210126 06:37:52.823"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:37:52.823" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:37:52.823" starttime="20210126 06:37:52.823"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:52.824" starttime="20210126 06:37:52.822"></status>
</kw>
<msg timestamp="20210126 06:37:52.824" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:37:52.824" starttime="20210126 06:37:52.822"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:52.824" starttime="20210126 06:37:52.821"></status>
</kw>
<msg timestamp="20210126 06:37:52.824" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:37:52.824" starttime="20210126 06:37:52.821"></status>
</kw>
<msg timestamp="20210126 06:37:52.824" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:37:52.824" starttime="20210126 06:37:52.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:52.827" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:54.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:37:54.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:37:54.479" starttime="20210126 06:37:52.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:54.480" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:37:54.480" starttime="20210126 06:37:54.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:37:54.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:37:54.480" starttime="20210126 06:37:54.480"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:54.481" starttime="20210126 06:37:52.825"></status>
</kw>
<msg timestamp="20210126 06:37:54.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:37:54.481" starttime="20210126 06:37:52.825"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:54.481" starttime="20210126 06:37:52.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:54.484" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:37:58.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:37:58.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:37:58.620" starttime="20210126 06:37:54.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:37:58.621" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:37:58.621" starttime="20210126 06:37:58.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:37:58.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:37:58.622" starttime="20210126 06:37:58.622"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:58.622" starttime="20210126 06:37:54.482"></status>
</kw>
<msg timestamp="20210126 06:37:58.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:37:58.622" starttime="20210126 06:37:54.482"></status>
</kw>
<status status="PASS" endtime="20210126 06:37:58.623" starttime="20210126 06:37:54.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:37:58.626" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:01.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:01.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:38:01.716" starttime="20210126 06:37:58.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:01.717" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:38:01.717" starttime="20210126 06:38:01.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:01.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:01.718" starttime="20210126 06:38:01.717"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:01.718" starttime="20210126 06:37:58.623"></status>
</kw>
<msg timestamp="20210126 06:38:01.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:01.718" starttime="20210126 06:37:58.623"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:01.718" starttime="20210126 06:37:58.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:01.722" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:04.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:04.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:38:04.918" starttime="20210126 06:38:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:04.919" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:38:04.919" starttime="20210126 06:38:04.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:04.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:04.919" starttime="20210126 06:38:04.919"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:04.919" starttime="20210126 06:38:01.719"></status>
</kw>
<msg timestamp="20210126 06:38:04.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:04.920" starttime="20210126 06:38:01.719"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:04.920" starttime="20210126 06:38:01.718"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:38:04.920" critical="yes" starttime="20210126 06:37:45.348"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:38:04.924" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:38:04.924" starttime="20210126 06:38:04.924"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:38:04.925" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.924"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.923"></status>
</kw>
<msg timestamp="20210126 06:38:04.925" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.923"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.922"></status>
</kw>
<msg timestamp="20210126 06:38:04.925" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.922"></status>
</kw>
<msg timestamp="20210126 06:38:04.925" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:38:04.925" starttime="20210126 06:38:04.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:04.928" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:06.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:06.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:38:06.839" starttime="20210126 06:38:04.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:06.840" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:38:06.840" starttime="20210126 06:38:06.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:06.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:06.840" starttime="20210126 06:38:06.840"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:06.841" starttime="20210126 06:38:04.926"></status>
</kw>
<msg timestamp="20210126 06:38:06.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:06.841" starttime="20210126 06:38:04.926"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:06.841" starttime="20210126 06:38:04.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:06.844" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:08.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:08.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:38:08.542" starttime="20210126 06:38:06.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:08.543" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:38:08.543" starttime="20210126 06:38:08.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:08.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:08.544" starttime="20210126 06:38:08.543"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:08.544" starttime="20210126 06:38:06.842"></status>
</kw>
<msg timestamp="20210126 06:38:08.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:08.544" starttime="20210126 06:38:06.842"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:08.545" starttime="20210126 06:38:06.841"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:38:08.545" critical="yes" starttime="20210126 06:38:04.920"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210126 06:38:08.546" starttime="20210126 06:37:45.299"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:39:43.541" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:39:43.541" starttime="20210126 06:39:43.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:39:43.541" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:39:43.541" starttime="20210126 06:39:43.541"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:43.542" starttime="20210126 06:39:43.540"></status>
</kw>
<msg timestamp="20210126 06:39:43.542" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:39:43.542" starttime="20210126 06:39:43.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:43.543" starttime="20210126 06:39:43.542"></status>
</kw>
<msg timestamp="20210126 06:39:43.543" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:39:43.543" starttime="20210126 06:39:43.542"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:43.543" starttime="20210126 06:39:43.539"></status>
</kw>
<msg timestamp="20210126 06:39:43.543" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:39:43.543" starttime="20210126 06:39:43.538"></status>
</kw>
<msg timestamp="20210126 06:39:43.543" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:39:43.543" starttime="20210126 06:39:43.537"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:39:43.544" level="INFO">${random} = 53318</msg>
<status status="PASS" endtime="20210126 06:39:43.544" starttime="20210126 06:39:43.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:43.549" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-53318 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:46.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:46.602" level="INFO">${output} = 2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:46.602" starttime="20210126 06:39:43.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:46.603" level="INFO">2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:39:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:39:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:39:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:39:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:39:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B82F4E22987-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:39:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:39:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:39:46.603" starttime="20210126 06:39:46.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:46.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:46.604" starttime="20210126 06:39:46.603"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:46.604" starttime="20210126 06:39:43.544"></status>
</kw>
<msg timestamp="20210126 06:39:46.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:46.604" starttime="20210126 06:39:43.544"></status>
</kw>
<msg timestamp="20210126 06:39:46.604" level="INFO">${result} = 2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:46.605" starttime="20210126 06:39:43.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:46.608" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:48.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:48.188" level="INFO">${output} = 2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:48.188" starttime="20210126 06:39:46.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:48.189" level="INFO">2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:48 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:37 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-26 06:39 ofs://om/volume1/bucket1/ozone-53318
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-26 06:38 ofs://om/volume1/bucket1/ozone-74591
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:39 ofs://om/volume1/bucket1/wordcount-r3Zhajwd.txt
2021-01-26 06:39:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:39:48.189" starttime="20210126 06:39:48.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:48.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:48.190" starttime="20210126 06:39:48.189"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:48.190" starttime="20210126 06:39:46.605"></status>
</kw>
<msg timestamp="20210126 06:39:48.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:48.190" starttime="20210126 06:39:46.605"></status>
</kw>
<msg timestamp="20210126 06:39:48.190" level="INFO">${result} = 2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:48.191" starttime="20210126 06:39:46.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:48.191" starttime="20210126 06:39:48.191"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:39:48.191" critical="yes" starttime="20210126 06:39:43.537"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:39:48.192" starttime="20210126 06:39:43.492"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:38:12.557" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:38:12.557" starttime="20210126 06:38:12.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:38:12.558" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:38:12.558" starttime="20210126 06:38:12.557"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:12.558" starttime="20210126 06:38:12.556"></status>
</kw>
<msg timestamp="20210126 06:38:12.558" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:38:12.558" starttime="20210126 06:38:12.556"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:12.558" starttime="20210126 06:38:12.555"></status>
</kw>
<msg timestamp="20210126 06:38:12.558" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:38:12.558" starttime="20210126 06:38:12.555"></status>
</kw>
<msg timestamp="20210126 06:38:12.558" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:38:12.559" starttime="20210126 06:38:12.554"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:38:12.559" level="INFO">${random} = 74591</msg>
<status status="PASS" endtime="20210126 06:38:12.559" starttime="20210126 06:38:12.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:12.563" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-74591 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:15.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:15.721" level="INFO">${output} = 2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:38:15.721" starttime="20210126 06:38:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:15.723" level="INFO">2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:38:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:38:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:38:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:38:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:38:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DF7560B3086B-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:38:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:38:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:38:15.723" starttime="20210126 06:38:15.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:15.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:15.724" starttime="20210126 06:38:15.723"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:15.724" starttime="20210126 06:38:12.560"></status>
</kw>
<msg timestamp="20210126 06:38:15.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:15.724" starttime="20210126 06:38:12.560"></status>
</kw>
<msg timestamp="20210126 06:38:15.724" level="INFO">${result} = 2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:38:15.724" starttime="20210126 06:38:12.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:15.728" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:17.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:17.261" level="INFO">${output} = 2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:38:17.262" starttime="20210126 06:38:15.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:17.263" level="INFO">2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:17 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:37 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-26 06:38 o3fs://bucket1.volume1.om/ozone-74591
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:38 o3fs://bucket1.volume1.om/user
2021-01-26 06:38:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:38:17.263" starttime="20210126 06:38:17.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:17.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:17.263" starttime="20210126 06:38:17.263"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:17.263" starttime="20210126 06:38:15.725"></status>
</kw>
<msg timestamp="20210126 06:38:17.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:17.264" starttime="20210126 06:38:15.725"></status>
</kw>
<msg timestamp="20210126 06:38:17.264" level="INFO">${result} = 2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:38:17.264" starttime="20210126 06:38:15.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:38:17.264" starttime="20210126 06:38:17.264"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:38:17.265" critical="yes" starttime="20210126 06:38:12.553"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:38:17.265" starttime="20210126 06:38:12.506"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:52.352" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:52.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:52.357" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:52.357" starttime="20210126 06:39:52.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:52.358" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:52.358" starttime="20210126 06:39:52.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:52.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:52.358" starttime="20210126 06:39:52.358"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:52.359" starttime="20210126 06:39:52.348"></status>
</kw>
<msg timestamp="20210126 06:39:52.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:52.359" starttime="20210126 06:39:52.348"></status>
</kw>
<msg timestamp="20210126 06:39:52.359" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:52.359" starttime="20210126 06:39:52.348"></status>
</kw>
<msg timestamp="20210126 06:39:52.359" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:52.359" starttime="20210126 06:39:52.347"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:39:52.363" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:39:52.363" starttime="20210126 06:39:52.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:39:52.364" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:39:52.364" starttime="20210126 06:39:52.364"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:52.364" starttime="20210126 06:39:52.363"></status>
</kw>
<msg timestamp="20210126 06:39:52.364" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:39:52.364" starttime="20210126 06:39:52.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:52.365" starttime="20210126 06:39:52.365"></status>
</kw>
<msg timestamp="20210126 06:39:52.365" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:39:52.365" starttime="20210126 06:39:52.364"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:52.365" starttime="20210126 06:39:52.362"></status>
</kw>
<msg timestamp="20210126 06:39:52.366" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:39:52.366" starttime="20210126 06:39:52.360"></status>
</kw>
<msg timestamp="20210126 06:39:52.366" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:39:52.366" starttime="20210126 06:39:52.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:52.369" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:40:26.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:40:26.436" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39...</msg>
<status status="PASS" endtime="20210126 06:40:26.436" starttime="20210126 06:39:52.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:40:26.437" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:39:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:39:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:39:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:39:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:39:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8DA71AB740B9-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:39:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 06:39:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D3F5FE0C9EE5-&gt;58289b9d-20da-40e6-96eb-b037e729d48a
2021-01-26 06:39:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:39:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:39:58 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:39:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643044611_0003
2021-01-26 06:39:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:58 INFO  Configuration:2752 - resource-types.xml not found
2021-01-26 06:39:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-26 06:39:58 INFO  YarnClientImpl:324 - Submitted application application_1611643044611_0003
2021-01-26 06:39:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611643044611_0003/
2021-01-26 06:39:58 INFO  Job:1619 - Running job: job_1611643044611_0003
2021-01-26 06:40:05 INFO  Job:1640 - Job job_1611643044611_0003 running in uber mode : false
2021-01-26 06:40:05 INFO  Job:1647 -  map 0% reduce 0%
2021-01-26 06:40:10 INFO  Job:1647 -  map 33% reduce 0%
2021-01-26 06:40:15 INFO  Job:1647 -  map 67% reduce 0%
2021-01-26 06:40:20 INFO  Job:1647 -  map 100% reduce 0%
2021-01-26 06:40:25 INFO  Job:1647 -  map 100% reduce 100%
2021-01-26 06:40:25 INFO  Job:1658 - Job job_1611643044611_0003 completed successfully
2021-01-26 06:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32144
		Total time spent by all reduces in occupied slots (ms)=12652
		Total time spent by all map tasks (ms)=8036
		Total time spent by all reduce tasks (ms)=3163
		Total vcore-milliseconds taken by all map tasks=8036
		Total vcore-milliseconds taken by all reduce tasks=3163
		Total megabyte-milliseconds taken by all map tasks=32915456
		Total megabyte-milliseconds taken by all reduce tasks=12955648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=529
		CPU time spent (ms)=5380
		Physical memory (bytes) snapshot=1236402176
		Virtual memory (bytes) snapshot=15799259136
		Total committed heap usage (bytes)=1082654720
		Peak Map Physical memory (bytes)=310566912
		Peak Map Virtual memory (bytes)=3945103360
		Peak Reduce Physical memory (bytes)=310534144
		Peak Reduce Virtual memory (bytes)=3971317760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.401 seconds
2021-01-26 06:40:25 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-26 06:40:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:40:26.437" starttime="20210126 06:40:26.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:40:26.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:40:26.438" starttime="20210126 06:40:26.437"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.438" starttime="20210126 06:39:52.367"></status>
</kw>
<msg timestamp="20210126 06:40:26.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:40:26.438" starttime="20210126 06:39:52.366"></status>
</kw>
<msg timestamp="20210126 06:40:26.439" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39...</msg>
<status status="PASS" endtime="20210126 06:40:26.439" starttime="20210126 06:39:52.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:40:26.439" starttime="20210126 06:40:26.439"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:40:26.439" critical="yes" starttime="20210126 06:39:52.347"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:40:26.444" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:40:26.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:40:26.449" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:40:26.449" starttime="20210126 06:40:26.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:40:26.450" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:40:26.450" starttime="20210126 06:40:26.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:40:26.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:40:26.450" starttime="20210126 06:40:26.450"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.450" starttime="20210126 06:40:26.442"></status>
</kw>
<msg timestamp="20210126 06:40:26.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:40:26.451" starttime="20210126 06:40:26.442"></status>
</kw>
<msg timestamp="20210126 06:40:26.451" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:40:26.451" starttime="20210126 06:40:26.441"></status>
</kw>
<msg timestamp="20210126 06:40:26.451" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:40:26.451" starttime="20210126 06:40:26.441"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:40:26.451" level="INFO">${random} = dLs1pWRm</msg>
<status status="PASS" endtime="20210126 06:40:26.452" starttime="20210126 06:40:26.451"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:40:26.455" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:40:26.455" starttime="20210126 06:40:26.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:40:26.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.455" starttime="20210126 06:40:26.455"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.455" starttime="20210126 06:40:26.454"></status>
</kw>
<msg timestamp="20210126 06:40:26.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.455" starttime="20210126 06:40:26.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:40:26.456" starttime="20210126 06:40:26.456"></status>
</kw>
<msg timestamp="20210126 06:40:26.456" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:40:26.456" starttime="20210126 06:40:26.455"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.456" starttime="20210126 06:40:26.453"></status>
</kw>
<msg timestamp="20210126 06:40:26.456" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:40:26.456" starttime="20210126 06:40:26.452"></status>
</kw>
<msg timestamp="20210126 06:40:26.457" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:40:26.457" starttime="20210126 06:40:26.452"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:40:26.459" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:40:26.459" starttime="20210126 06:40:26.459"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:40:26.460" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.460" starttime="20210126 06:40:26.460"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.460" starttime="20210126 06:40:26.459"></status>
</kw>
<msg timestamp="20210126 06:40:26.460" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.460" starttime="20210126 06:40:26.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:40:26.461" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210126 06:40:26.461" starttime="20210126 06:40:26.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:40:26.462" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210126 06:40:26.462" starttime="20210126 06:40:26.462"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.462" starttime="20210126 06:40:26.461"></status>
</kw>
<msg timestamp="20210126 06:40:26.462" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210126 06:40:26.462" starttime="20210126 06:40:26.460"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.462" starttime="20210126 06:40:26.458"></status>
</kw>
<msg timestamp="20210126 06:40:26.463" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:40:26.463" starttime="20210126 06:40:26.457"></status>
</kw>
<msg timestamp="20210126 06:40:26.463" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:40:26.463" starttime="20210126 06:40:26.457"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:40:26.465" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:40:26.465" starttime="20210126 06:40:26.465"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:40:26.466" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.466" starttime="20210126 06:40:26.465"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.466" starttime="20210126 06:40:26.465"></status>
</kw>
<msg timestamp="20210126 06:40:26.466" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:40:26.466" starttime="20210126 06:40:26.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:40:26.467" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210126 06:40:26.467" starttime="20210126 06:40:26.467"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:40:26.468" level="INFO">${result} = /wordcount-dLs1pWRm.txt</msg>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.467"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.466"></status>
</kw>
<msg timestamp="20210126 06:40:26.468" level="INFO">${path_with_leading} = /wordcount-dLs1pWRm.txt</msg>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.466"></status>
</kw>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.464"></status>
</kw>
<msg timestamp="20210126 06:40:26.468" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-dLs1pWRm.txt</msg>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.463"></status>
</kw>
<msg timestamp="20210126 06:40:26.468" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-dLs1pWRm.txt</msg>
<status status="PASS" endtime="20210126 06:40:26.468" starttime="20210126 06:40:26.463"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:40:26.472" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-dLs1pWRm.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:41:00.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:41:00.325" level="INFO">${output} = 2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:41:00.325" starttime="20210126 06:40:26.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:41:00.326" level="INFO">2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-26 06:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:40:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:40:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:40:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:40:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:40:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-81C85DB24787-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:40:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:40:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:40:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1AA4916C21A9-&gt;58289b9d-20da-40e6-96eb-b037e729d48a
2021-01-26 06:40:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:40:29 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:40:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643044611_0004
2021-01-26 06:40:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:32 INFO  Configuration:2752 - resource-types.xml not found
2021-01-26 06:40:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-26 06:40:32 INFO  YarnClientImpl:324 - Submitted application application_1611643044611_0004
2021-01-26 06:40:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611643044611_0004/
2021-01-26 06:40:32 INFO  Job:1619 - Running job: job_1611643044611_0004
2021-01-26 06:40:39 INFO  Job:1640 - Job job_1611643044611_0004 running in uber mode : false
2021-01-26 06:40:39 INFO  Job:1647 -  map 0% reduce 0%
2021-01-26 06:40:45 INFO  Job:1647 -  map 33% reduce 0%
2021-01-26 06:40:49 INFO  Job:1647 -  map 67% reduce 0%
2021-01-26 06:40:54 INFO  Job:1647 -  map 100% reduce 0%
2021-01-26 06:40:58 INFO  Job:1647 -  map 100% reduce 100%
2021-01-26 06:40:59 INFO  Job:1658 - Job job_1611643044611_0004 completed successfully
2021-01-26 06:40:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34260
		Total time spent by all reduces in occupied slots (ms)=11664
		Total time spent by all map tasks (ms)=8565
		Total time spent by all reduce tasks (ms)=2916
		Total vcore-milliseconds taken by all map tasks=8565
		Total vcore-milliseconds taken by all reduce tasks=2916
		Total megabyte-milliseconds taken by all map tasks=35082240
		Total megabyte-milliseconds taken by all reduce tasks=11943936
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=5430
		Physical memory (bytes) snapshot=1220616192
		Virtual memory (bytes) snapshot=15780102144
		Total committed heap usage (bytes)=1071644672
		Peak Map Physical memory (bytes)=318205952
		Peak Map Virtual memory (bytes)=3946450944
		Peak Reduce Physical memory (bytes)=308187136
		Peak Reduce Virtual memory (bytes)=3965841408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-26 06:41:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:41:00.326" starttime="20210126 06:41:00.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:41:00.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:41:00.327" starttime="20210126 06:41:00.326"></status>
</kw>
<status status="PASS" endtime="20210126 06:41:00.327" starttime="20210126 06:40:26.469"></status>
</kw>
<msg timestamp="20210126 06:41:00.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:41:00.327" starttime="20210126 06:40:26.469"></status>
</kw>
<msg timestamp="20210126 06:41:00.328" level="INFO">${output} = 2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:40:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:41:00.328" starttime="20210126 06:40:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:41:00.328" starttime="20210126 06:41:00.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:41:00.329" starttime="20210126 06:41:00.328"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:41:00.329" critical="yes" starttime="20210126 06:40:26.440"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:41:00.330" starttime="20210126 06:39:52.302"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:21.372" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:38:21.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:38:21.377" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:38:21.377" starttime="20210126 06:38:21.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:38:21.378" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:38:21.378" starttime="20210126 06:38:21.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:38:21.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:38:21.378" starttime="20210126 06:38:21.378"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:21.379" starttime="20210126 06:38:21.368"></status>
</kw>
<msg timestamp="20210126 06:38:21.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:38:21.379" starttime="20210126 06:38:21.368"></status>
</kw>
<msg timestamp="20210126 06:38:21.379" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:38:21.379" starttime="20210126 06:38:21.368"></status>
</kw>
<msg timestamp="20210126 06:38:21.379" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:38:21.379" starttime="20210126 06:38:21.367"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:38:21.383" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:38:21.383" starttime="20210126 06:38:21.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:38:21.383" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:38:21.383" starttime="20210126 06:38:21.383"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:21.384" starttime="20210126 06:38:21.382"></status>
</kw>
<msg timestamp="20210126 06:38:21.384" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:38:21.384" starttime="20210126 06:38:21.382"></status>
</kw>
<status status="PASS" endtime="20210126 06:38:21.384" starttime="20210126 06:38:21.381"></status>
</kw>
<msg timestamp="20210126 06:38:21.384" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:38:21.384" starttime="20210126 06:38:21.380"></status>
</kw>
<msg timestamp="20210126 06:38:21.384" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:38:21.384" starttime="20210126 06:38:21.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:38:21.387" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:01.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:01.110" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38...</msg>
<status status="PASS" endtime="20210126 06:39:01.110" starttime="20210126 06:38:21.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:01.111" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:23 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:38:23 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:38:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:38:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:38:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:38:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0945A2B8C094-&gt;58289b9d-20da-40e6-96eb-b037e729d48a
2021-01-26 06:38:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-26 06:38:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-26AA6D2BED27-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:38:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 06:38:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-26 06:38:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:24 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:38:27 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:38:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643044611_0001
2021-01-26 06:38:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:38:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:27 INFO  Configuration:2752 - resource-types.xml not found
2021-01-26 06:38:27 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-26 06:38:27 INFO  YarnClientImpl:324 - Submitted application application_1611643044611_0001
2021-01-26 06:38:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611643044611_0001/
2021-01-26 06:38:28 INFO  Job:1619 - Running job: job_1611643044611_0001
2021-01-26 06:38:37 INFO  Job:1640 - Job job_1611643044611_0001 running in uber mode : false
2021-01-26 06:38:37 INFO  Job:1647 -  map 0% reduce 0%
2021-01-26 06:38:43 INFO  Job:1647 -  map 33% reduce 0%
2021-01-26 06:38:47 INFO  Job:1647 -  map 67% reduce 0%
2021-01-26 06:38:53 INFO  Job:1647 -  map 100% reduce 0%
2021-01-26 06:38:57 INFO  Job:1647 -  map 100% reduce 100%
2021-01-26 06:39:00 INFO  Job:1658 - Job job_1611643044611_0001 completed successfully
2021-01-26 06:39:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:00 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32772
		Total time spent by all reduces in occupied slots (ms)=12636
		Total time spent by all map tasks (ms)=8193
		Total time spent by all reduce tasks (ms)=3159
		Total vcore-milliseconds taken by all map tasks=8193
		Total vcore-milliseconds taken by all reduce tasks=3159
		Total megabyte-milliseconds taken by all map tasks=33558528
		Total megabyte-milliseconds taken by all reduce tasks=12939264
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=538
		CPU time spent (ms)=5260
		Physical memory (bytes) snapshot=1228365824
		Virtual memory (bytes) snapshot=15783129088
		Total committed heap usage (bytes)=1075838976
		Peak Map Physical memory (bytes)=317427712
		Peak Map Virtual memory (bytes)=3946717184
		Peak Reduce Physical memory (bytes)=308330496
		Peak Reduce Virtual memory (bytes)=3964846080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.402 seconds
2021-01-26 06:39:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:00 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-26 06:39:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:39:01.111" starttime="20210126 06:39:01.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:01.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:01.112" starttime="20210126 06:39:01.112"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.112" starttime="20210126 06:38:21.385"></status>
</kw>
<msg timestamp="20210126 06:39:01.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:01.112" starttime="20210126 06:38:21.385"></status>
</kw>
<msg timestamp="20210126 06:39:01.113" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:38...</msg>
<status status="PASS" endtime="20210126 06:39:01.113" starttime="20210126 06:38:21.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:01.113" starttime="20210126 06:39:01.113"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:39:01.113" critical="yes" starttime="20210126 06:38:21.367"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:01.119" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:01.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:01.125" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:01.125" starttime="20210126 06:39:01.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:01.125" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:01.125" starttime="20210126 06:39:01.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:01.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:01.126" starttime="20210126 06:39:01.126"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.126" starttime="20210126 06:39:01.116"></status>
</kw>
<msg timestamp="20210126 06:39:01.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:01.127" starttime="20210126 06:39:01.116"></status>
</kw>
<msg timestamp="20210126 06:39:01.127" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:01.127" starttime="20210126 06:39:01.116"></status>
</kw>
<msg timestamp="20210126 06:39:01.127" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210126 06:39:01.127" starttime="20210126 06:39:01.115"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:39:01.127" level="INFO">${random} = r3Zhajwd</msg>
<status status="PASS" endtime="20210126 06:39:01.128" starttime="20210126 06:39:01.127"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:39:01.131" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:39:01.131" starttime="20210126 06:39:01.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:39:01.132" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.132" starttime="20210126 06:39:01.131"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.132" starttime="20210126 06:39:01.130"></status>
</kw>
<msg timestamp="20210126 06:39:01.132" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.132" starttime="20210126 06:39:01.130"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.133" starttime="20210126 06:39:01.129"></status>
</kw>
<msg timestamp="20210126 06:39:01.133" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:39:01.133" starttime="20210126 06:39:01.128"></status>
</kw>
<msg timestamp="20210126 06:39:01.133" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:39:01.133" starttime="20210126 06:39:01.128"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:39:01.136" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:39:01.136" starttime="20210126 06:39:01.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:39:01.137" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.137" starttime="20210126 06:39:01.136"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.137" starttime="20210126 06:39:01.135"></status>
</kw>
<msg timestamp="20210126 06:39:01.137" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.137" starttime="20210126 06:39:01.135"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.139" starttime="20210126 06:39:01.134"></status>
</kw>
<msg timestamp="20210126 06:39:01.139" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:39:01.139" starttime="20210126 06:39:01.134"></status>
</kw>
<msg timestamp="20210126 06:39:01.139" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:39:01.139" starttime="20210126 06:39:01.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:39:01.142" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:39:01.142" starttime="20210126 06:39:01.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:39:01.142" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.142" starttime="20210126 06:39:01.142"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.142" starttime="20210126 06:39:01.141"></status>
</kw>
<msg timestamp="20210126 06:39:01.142" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:39:01.142" starttime="20210126 06:39:01.141"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:01.143" starttime="20210126 06:39:01.140"></status>
</kw>
<msg timestamp="20210126 06:39:01.143" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-r3Zhajwd.txt</msg>
<status status="PASS" endtime="20210126 06:39:01.143" starttime="20210126 06:39:01.140"></status>
</kw>
<msg timestamp="20210126 06:39:01.143" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-r3Zhajwd.txt</msg>
<status status="PASS" endtime="20210126 06:39:01.143" starttime="20210126 06:39:01.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:39:01.146" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-r3Zhajwd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:39:39.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:39:39.404" level="INFO">${output} = 2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:39.404" starttime="20210126 06:39:01.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:39:39.405" level="INFO">2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-26 06:39:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:39:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-26 06:39:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-26 06:39:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:39:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:39:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:39:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EE9068D31116-&gt;58289b9d-20da-40e6-96eb-b037e729d48a
2021-01-26 06:39:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:39:06 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:39:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C088AAE6580-&gt;de925322-9bed-42af-b866-ada22a6a417e
2021-01-26 06:39:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:39:07 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:39:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643044611_0002
2021-01-26 06:39:07 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:39:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:07 INFO  Configuration:2752 - resource-types.xml not found
2021-01-26 06:39:07 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-26 06:39:07 INFO  YarnClientImpl:324 - Submitted application application_1611643044611_0002
2021-01-26 06:39:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611643044611_0002/
2021-01-26 06:39:07 INFO  Job:1619 - Running job: job_1611643044611_0002
2021-01-26 06:39:13 INFO  Job:1640 - Job job_1611643044611_0002 running in uber mode : false
2021-01-26 06:39:13 INFO  Job:1647 -  map 0% reduce 0%
2021-01-26 06:39:19 INFO  Job:1647 -  map 33% reduce 0%
2021-01-26 06:39:24 INFO  Job:1647 -  map 67% reduce 0%
2021-01-26 06:39:28 INFO  Job:1647 -  map 100% reduce 0%
2021-01-26 06:39:35 INFO  Job:1647 -  map 100% reduce 100%
2021-01-26 06:39:38 INFO  Job:1658 - Job job_1611643044611_0002 completed successfully
2021-01-26 06:39:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35108
		Total time spent by all reduces in occupied slots (ms)=22076
		Total time spent by all map tasks (ms)=8777
		Total time spent by all reduce tasks (ms)=5519
		Total vcore-milliseconds taken by all map tasks=8777
		Total vcore-milliseconds taken by all reduce tasks=5519
		Total megabyte-milliseconds taken by all map tasks=35950592
		Total megabyte-milliseconds taken by all reduce tasks=22605824
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=5660
		Physical memory (bytes) snapshot=1230282752
		Virtual memory (bytes) snapshot=15780352000
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=316112896
		Peak Map Virtual memory (bytes)=3948212224
		Peak Reduce Physical memory (bytes)=305537024
		Peak Reduce Virtual memory (bytes)=3963142144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-26 06:39:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210126 06:39:39.405" starttime="20210126 06:39:39.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:39:39.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:39:39.406" starttime="20210126 06:39:39.405"></status>
</kw>
<status status="PASS" endtime="20210126 06:39:39.406" starttime="20210126 06:39:01.144"></status>
</kw>
<msg timestamp="20210126 06:39:39.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:39:39.406" starttime="20210126 06:39:01.143"></status>
</kw>
<msg timestamp="20210126 06:39:39.407" level="INFO">${output} = 2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-26 06:39:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210126 06:39:39.407" starttime="20210126 06:39:01.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:39.407" starttime="20210126 06:39:39.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:39:39.408" starttime="20210126 06:39:39.407"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:39:39.408" critical="yes" starttime="20210126 06:39:01.115"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:39:39.409" starttime="20210126 06:38:21.322"></status>
</suite>
<status status="PASS" elapsedtime="178821" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:04.851" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:07.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 06:42:07.690" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:42:07.691" starttime="20210126 06:42:04.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:07.692" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:42:07.692" starttime="20210126 06:42:07.691"></status>
</kw>
<msg timestamp="20210126 06:42:07.692" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210126 06:42:07.692" starttime="20210126 06:42:04.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:07.697" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:10.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:10.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:10.318" starttime="20210126 06:42:07.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:10.319" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:10.319" starttime="20210126 06:42:10.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:10.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:10.320" starttime="20210126 06:42:10.319"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:10.320" starttime="20210126 06:42:07.694"></status>
</kw>
<msg timestamp="20210126 06:42:10.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:10.320" starttime="20210126 06:42:07.694"></status>
</kw>
<msg timestamp="20210126 06:42:10.321" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210126 06:42:10.321" starttime="20210126 06:42:07.693"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210126 06:42:10.321" starttime="20210126 06:42:10.321"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:10.321" starttime="20210126 06:42:07.693"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:10.321" starttime="20210126 06:42:07.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:10.325" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:12.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:12.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:12.781" starttime="20210126 06:42:10.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:12.782" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:12.783" starttime="20210126 06:42:12.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:12.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:12.783" starttime="20210126 06:42:12.783"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:12.783" starttime="20210126 06:42:10.323"></status>
</kw>
<msg timestamp="20210126 06:42:12.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:12.784" starttime="20210126 06:42:10.323"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:12.784" starttime="20210126 06:42:10.322"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:12.784" starttime="20210126 06:42:10.322"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:12.784" starttime="20210126 06:42:10.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 06:42:12.784" starttime="20210126 06:42:12.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:12.788" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:15.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:15.463" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:42...</msg>
<status status="PASS" endtime="20210126 06:42:15.463" starttime="20210126 06:42:12.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:15.464" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:42:12.690Z",
  "modificationTime" : "2021-01-26T06:42:12.690Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 06:42:15.464" starttime="20210126 06:42:15.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:15.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:15.464" starttime="20210126 06:42:15.464"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:15.465" starttime="20210126 06:42:12.785"></status>
</kw>
<msg timestamp="20210126 06:42:15.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:15.465" starttime="20210126 06:42:12.785"></status>
</kw>
<msg timestamp="20210126 06:42:15.465" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T06:42...</msg>
<status status="PASS" endtime="20210126 06:42:15.465" starttime="20210126 06:42:12.784"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 06:42:15.465" starttime="20210126 06:42:15.465"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:42:15.469" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:42:15.469" starttime="20210126 06:42:15.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:42:15.469" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:42:15.469" starttime="20210126 06:42:15.469"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:15.469" starttime="20210126 06:42:15.468"></status>
</kw>
<msg timestamp="20210126 06:42:15.469" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:42:15.469" starttime="20210126 06:42:15.468"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:15.470" starttime="20210126 06:42:15.467"></status>
</kw>
<msg timestamp="20210126 06:42:15.470" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:42:15.470" starttime="20210126 06:42:15.466"></status>
</kw>
<msg timestamp="20210126 06:42:15.470" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210126 06:42:15.470" starttime="20210126 06:42:15.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:15.472" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:18.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:18.309" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:18.309" starttime="20210126 06:42:15.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:18.310" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:18.310" starttime="20210126 06:42:18.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:18.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:18.310" starttime="20210126 06:42:18.310"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:18.310" starttime="20210126 06:42:15.470"></status>
</kw>
<msg timestamp="20210126 06:42:18.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:18.311" starttime="20210126 06:42:15.470"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:18.311" starttime="20210126 06:42:15.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:18.314" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:24.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:24.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:24.069" starttime="20210126 06:42:18.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:24.070" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:24.070" starttime="20210126 06:42:24.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:24.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:24.071" starttime="20210126 06:42:24.070"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:24.071" starttime="20210126 06:42:18.312"></status>
</kw>
<msg timestamp="20210126 06:42:24.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:24.071" starttime="20210126 06:42:18.312"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:24.071" starttime="20210126 06:42:18.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:24.074" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:28.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:28.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:28.327" starttime="20210126 06:42:24.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:28.328" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:28.328" starttime="20210126 06:42:28.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:28.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:28.329" starttime="20210126 06:42:28.328"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:28.329" starttime="20210126 06:42:24.072"></status>
</kw>
<msg timestamp="20210126 06:42:28.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:28.329" starttime="20210126 06:42:24.072"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:28.329" starttime="20210126 06:42:24.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:28.332" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:32.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:32.621" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:32.621" starttime="20210126 06:42:28.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:32.622" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:32.622" starttime="20210126 06:42:32.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:32.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:32.623" starttime="20210126 06:42:32.622"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:32.623" starttime="20210126 06:42:28.330"></status>
</kw>
<msg timestamp="20210126 06:42:32.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:32.623" starttime="20210126 06:42:28.330"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:32.623" starttime="20210126 06:42:28.329"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:42:32.624" critical="yes" starttime="20210126 06:42:04.842"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:42:32.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:42:32.628" starttime="20210126 06:42:32.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:42:32.629" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.628"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.627"></status>
</kw>
<msg timestamp="20210126 06:42:32.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.627"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.626"></status>
</kw>
<msg timestamp="20210126 06:42:32.629" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.625"></status>
</kw>
<msg timestamp="20210126 06:42:32.629" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:42:32.629" starttime="20210126 06:42:32.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:32.632" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:35.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:35.194" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:35.194" starttime="20210126 06:42:32.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:35.195" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:35.196" starttime="20210126 06:42:35.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:35.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:35.196" starttime="20210126 06:42:35.196"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:35.196" starttime="20210126 06:42:32.630"></status>
</kw>
<msg timestamp="20210126 06:42:35.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:35.196" starttime="20210126 06:42:32.630"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:35.197" starttime="20210126 06:42:32.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:35.200" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:37.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:37.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 06:42:37.973" starttime="20210126 06:42:35.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:37.974" level="INFO"></msg>
<status status="PASS" endtime="20210126 06:42:37.974" starttime="20210126 06:42:37.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:37.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:37.975" starttime="20210126 06:42:37.974"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:37.975" starttime="20210126 06:42:35.197"></status>
</kw>
<msg timestamp="20210126 06:42:37.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:37.975" starttime="20210126 06:42:35.197"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:37.975" starttime="20210126 06:42:35.197"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 06:42:37.976" critical="yes" starttime="20210126 06:42:32.624"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210126 06:42:37.977" starttime="20210126 06:42:04.798"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:44:11.565" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:44:11.565" starttime="20210126 06:44:11.564"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:11.566" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:44:11.566" starttime="20210126 06:44:11.565"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:11.566" starttime="20210126 06:44:11.564"></status>
</kw>
<msg timestamp="20210126 06:44:11.566" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:44:11.566" starttime="20210126 06:44:11.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:11.567" starttime="20210126 06:44:11.566"></status>
</kw>
<msg timestamp="20210126 06:44:11.567" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:44:11.567" starttime="20210126 06:44:11.566"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:11.567" starttime="20210126 06:44:11.563"></status>
</kw>
<msg timestamp="20210126 06:44:11.567" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:11.567" starttime="20210126 06:44:11.562"></status>
</kw>
<msg timestamp="20210126 06:44:11.567" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:11.567" starttime="20210126 06:44:11.562"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:44:11.568" level="INFO">${random} = 43519</msg>
<status status="PASS" endtime="20210126 06:44:11.568" starttime="20210126 06:44:11.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:11.574" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-43519 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:14.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:14.672" level="INFO">${output} = 2021-01-26 06:44:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 06:44:14.672" starttime="20210126 06:44:11.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:14.674" level="INFO">2021-01-26 06:44:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:44:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:44:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:44:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C805FD437B41-&gt;d4594ad6-1544-458f-bfad-ce752debf257
2021-01-26 06:44:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 06:44:14.674" starttime="20210126 06:44:14.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:14.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:14.674" starttime="20210126 06:44:14.674"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:14.675" starttime="20210126 06:44:11.569"></status>
</kw>
<msg timestamp="20210126 06:44:14.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:14.675" starttime="20210126 06:44:11.568"></status>
</kw>
<msg timestamp="20210126 06:44:14.675" level="INFO">${result} = 2021-01-26 06:44:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 06:44:14.675" starttime="20210126 06:44:11.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:14.679" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:16.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:16.355" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:44 ofs://om/volume1/bucket1/ozone-43519
-rw-...</msg>
<status status="PASS" endtime="20210126 06:44:16.356" starttime="20210126 06:44:14.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:16.357" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:44 ofs://om/volume1/bucket1/ozone-43519
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:42 ofs://om/volume1/bucket1/ozone-65827
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:43 ofs://om/volume1/bucket1/wordcount-5hVD8KF9.txt</msg>
<status status="PASS" endtime="20210126 06:44:16.357" starttime="20210126 06:44:16.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:16.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:16.357" starttime="20210126 06:44:16.357"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:16.358" starttime="20210126 06:44:14.676"></status>
</kw>
<msg timestamp="20210126 06:44:16.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:16.358" starttime="20210126 06:44:14.676"></status>
</kw>
<msg timestamp="20210126 06:44:16.358" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:44 ofs://om/volume1/bucket1/ozone-43519
-rw-...</msg>
<status status="PASS" endtime="20210126 06:44:16.358" starttime="20210126 06:44:14.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:16.358" starttime="20210126 06:44:16.358"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:44:16.359" critical="yes" starttime="20210126 06:44:11.561"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:44:16.360" starttime="20210126 06:44:11.508"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:42:41.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:42:41.993" starttime="20210126 06:42:41.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:42:41.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:42:41.993" starttime="20210126 06:42:41.993"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:41.993" starttime="20210126 06:42:41.992"></status>
</kw>
<msg timestamp="20210126 06:42:41.993" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:42:41.993" starttime="20210126 06:42:41.991"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:41.994" starttime="20210126 06:42:41.991"></status>
</kw>
<msg timestamp="20210126 06:42:41.994" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:42:41.994" starttime="20210126 06:42:41.990"></status>
</kw>
<msg timestamp="20210126 06:42:41.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:42:41.994" starttime="20210126 06:42:41.989"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:42:41.994" level="INFO">${random} = 65827</msg>
<status status="PASS" endtime="20210126 06:42:41.995" starttime="20210126 06:42:41.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:41.999" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-65827 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:45.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:45.264" level="INFO">${output} = 2021-01-26 06:42:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 06:42:45.264" starttime="20210126 06:42:41.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:45.266" level="INFO">2021-01-26 06:42:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:42:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:42:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:42:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3AB6B8934058-&gt;a911bf71-fb0b-46e3-b167-c20cf30d5943
2021-01-26 06:42:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210126 06:42:45.266" starttime="20210126 06:42:45.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:45.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:45.267" starttime="20210126 06:42:45.267"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:45.267" starttime="20210126 06:42:41.995"></status>
</kw>
<msg timestamp="20210126 06:42:45.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:45.267" starttime="20210126 06:42:41.995"></status>
</kw>
<msg timestamp="20210126 06:42:45.268" level="INFO">${result} = 2021-01-26 06:42:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210126 06:42:45.268" starttime="20210126 06:42:41.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:45.271" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:46.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:46.731" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:42 o3fs://bucket1.volume1.om/ozone-65827
dr...</msg>
<status status="PASS" endtime="20210126 06:42:46.731" starttime="20210126 06:42:45.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:46.732" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:42 o3fs://bucket1.volume1.om/ozone-65827
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210126 06:42:46.732" starttime="20210126 06:42:46.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:46.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:46.733" starttime="20210126 06:42:46.732"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:46.733" starttime="20210126 06:42:45.269"></status>
</kw>
<msg timestamp="20210126 06:42:46.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:46.733" starttime="20210126 06:42:45.268"></status>
</kw>
<msg timestamp="20210126 06:42:46.733" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-26 06:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-26 06:42 o3fs://bucket1.volume1.om/ozone-65827
dr...</msg>
<status status="PASS" endtime="20210126 06:42:46.733" starttime="20210126 06:42:45.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:42:46.734" starttime="20210126 06:42:46.733"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 06:42:46.734" critical="yes" starttime="20210126 06:42:41.988"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210126 06:42:46.735" starttime="20210126 06:42:41.942"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:20.554" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:20.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:20.559" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:20.559" starttime="20210126 06:44:20.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:20.560" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:20.560" starttime="20210126 06:44:20.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:20.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:20.561" starttime="20210126 06:44:20.560"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:20.561" starttime="20210126 06:44:20.550"></status>
</kw>
<msg timestamp="20210126 06:44:20.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:20.561" starttime="20210126 06:44:20.550"></status>
</kw>
<msg timestamp="20210126 06:44:20.561" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:20.561" starttime="20210126 06:44:20.550"></status>
</kw>
<msg timestamp="20210126 06:44:20.561" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:20.561" starttime="20210126 06:44:20.549"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:44:20.566" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:44:20.566" starttime="20210126 06:44:20.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:20.566" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:44:20.566" starttime="20210126 06:44:20.566"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:20.566" starttime="20210126 06:44:20.565"></status>
</kw>
<msg timestamp="20210126 06:44:20.566" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:44:20.566" starttime="20210126 06:44:20.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:20.567" starttime="20210126 06:44:20.567"></status>
</kw>
<msg timestamp="20210126 06:44:20.567" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:44:20.567" starttime="20210126 06:44:20.567"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:20.568" starttime="20210126 06:44:20.564"></status>
</kw>
<msg timestamp="20210126 06:44:20.568" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:20.568" starttime="20210126 06:44:20.562"></status>
</kw>
<msg timestamp="20210126 06:44:20.568" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:20.568" starttime="20210126 06:44:20.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:20.571" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:54.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:54.783" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:44:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:22 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 06:44:54.783" starttime="20210126 06:44:20.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:54.784" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:44:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:22 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:44:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:44:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:44:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-497CDF1E64CC-&gt;d4594ad6-1544-458f-bfad-ce752debf257
2021-01-26 06:44:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-26 06:44:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:44:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:44:23 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:44:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AAD11C6FF49C-&gt;a911bf71-fb0b-46e3-b167-c20cf30d5943
2021-01-26 06:44:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:44:26 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:44:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643300219_0003
2021-01-26 06:44:26 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:44:26 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 06:44:26 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 06:44:26 INFO  YarnClientImpl:329 - Submitted application application_1611643300219_0003
2021-01-26 06:44:26 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611643300219_0003/
2021-01-26 06:44:26 INFO  Job:1614 - Running job: job_1611643300219_0003
2021-01-26 06:44:32 INFO  Job:1635 - Job job_1611643300219_0003 running in uber mode : false
2021-01-26 06:44:32 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 06:44:39 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 06:44:44 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 06:44:49 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 06:44:53 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 06:44:54 INFO  Job:1653 - Job job_1611643300219_0003 completed successfully
2021-01-26 06:44:54 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091541
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33248
		Total time spent by all reduces in occupied slots (ms)=12400
		Total time spent by all map tasks (ms)=8312
		Total time spent by all reduce tasks (ms)=3100
		Total vcore-milliseconds taken by all map tasks=8312
		Total vcore-milliseconds taken by all reduce tasks=3100
		Total megabyte-milliseconds taken by all map tasks=34045952
		Total megabyte-milliseconds taken by all reduce tasks=12697600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=590
		CPU time spent (ms)=5900
		Physical memory (bytes) snapshot=1515438080
		Virtual memory (bytes) snapshot=15804157952
		Total committed heap usage (bytes)=1808793600
		Peak Map Physical memory (bytes)=378245120
		Peak Map Virtual memory (bytes)=3950587904
		Peak Reduce Physical memory (bytes)=395698176
		Peak Reduce Virtual memory (bytes)=3969843200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.034 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 06:44:54.784" starttime="20210126 06:44:54.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:54.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:54.785" starttime="20210126 06:44:54.784"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.785" starttime="20210126 06:44:20.569"></status>
</kw>
<msg timestamp="20210126 06:44:54.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:54.785" starttime="20210126 06:44:20.569"></status>
</kw>
<msg timestamp="20210126 06:44:54.785" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:44:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:22 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 06:44:54.785" starttime="20210126 06:44:20.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:54.786" starttime="20210126 06:44:54.786"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:44:54.786" critical="yes" starttime="20210126 06:44:20.549"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:54.791" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:54.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:54.795" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:54.795" starttime="20210126 06:44:54.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:54.796" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:54.796" starttime="20210126 06:44:54.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:54.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:54.797" starttime="20210126 06:44:54.796"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.797" starttime="20210126 06:44:54.789"></status>
</kw>
<msg timestamp="20210126 06:44:54.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:54.797" starttime="20210126 06:44:54.789"></status>
</kw>
<msg timestamp="20210126 06:44:54.797" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:54.797" starttime="20210126 06:44:54.788"></status>
</kw>
<msg timestamp="20210126 06:44:54.797" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:44:54.797" starttime="20210126 06:44:54.788"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:44:54.798" level="INFO">${random} = ruyiNm61</msg>
<status status="PASS" endtime="20210126 06:44:54.798" starttime="20210126 06:44:54.797"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:44:54.801" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:44:54.801" starttime="20210126 06:44:54.801"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:54.801" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.801" starttime="20210126 06:44:54.801"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.801" starttime="20210126 06:44:54.800"></status>
</kw>
<msg timestamp="20210126 06:44:54.802" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.802" starttime="20210126 06:44:54.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:54.802" starttime="20210126 06:44:54.802"></status>
</kw>
<msg timestamp="20210126 06:44:54.802" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210126 06:44:54.802" starttime="20210126 06:44:54.802"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.803" starttime="20210126 06:44:54.799"></status>
</kw>
<msg timestamp="20210126 06:44:54.803" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:54.803" starttime="20210126 06:44:54.799"></status>
</kw>
<msg timestamp="20210126 06:44:54.803" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210126 06:44:54.803" starttime="20210126 06:44:54.798"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:44:54.806" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:44:54.806" starttime="20210126 06:44:54.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:54.806" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.806" starttime="20210126 06:44:54.806"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.806" starttime="20210126 06:44:54.805"></status>
</kw>
<msg timestamp="20210126 06:44:54.807" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.807" starttime="20210126 06:44:54.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:44:54.809" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210126 06:44:54.809" starttime="20210126 06:44:54.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:54.809" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210126 06:44:54.809" starttime="20210126 06:44:54.809"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.810" starttime="20210126 06:44:54.808"></status>
</kw>
<msg timestamp="20210126 06:44:54.810" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210126 06:44:54.810" starttime="20210126 06:44:54.807"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.810" starttime="20210126 06:44:54.804"></status>
</kw>
<msg timestamp="20210126 06:44:54.810" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:44:54.810" starttime="20210126 06:44:54.804"></status>
</kw>
<msg timestamp="20210126 06:44:54.810" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210126 06:44:54.810" starttime="20210126 06:44:54.803"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210126 06:44:54.813" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210126 06:44:54.813" starttime="20210126 06:44:54.812"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:54.813" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.813" starttime="20210126 06:44:54.813"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.813" starttime="20210126 06:44:54.812"></status>
</kw>
<msg timestamp="20210126 06:44:54.813" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210126 06:44:54.813" starttime="20210126 06:44:54.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:44:54.815" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210126 06:44:54.815" starttime="20210126 06:44:54.814"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:44:54.815" level="INFO">${result} = /wordcount-ruyiNm61.txt</msg>
<status status="PASS" endtime="20210126 06:44:54.815" starttime="20210126 06:44:54.815"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.815" starttime="20210126 06:44:54.814"></status>
</kw>
<msg timestamp="20210126 06:44:54.815" level="INFO">${path_with_leading} = /wordcount-ruyiNm61.txt</msg>
<status status="PASS" endtime="20210126 06:44:54.815" starttime="20210126 06:44:54.814"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:54.815" starttime="20210126 06:44:54.811"></status>
</kw>
<msg timestamp="20210126 06:44:54.816" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ruyiNm61.txt</msg>
<status status="PASS" endtime="20210126 06:44:54.816" starttime="20210126 06:44:54.811"></status>
</kw>
<msg timestamp="20210126 06:44:54.816" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ruyiNm61.txt</msg>
<status status="PASS" endtime="20210126 06:44:54.816" starttime="20210126 06:44:54.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:44:54.819" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ruyiNm61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:45:30.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:45:30.814" level="INFO">${output} = 2021-01-26 06:44:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:44:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210126 06:45:30.814" starttime="20210126 06:44:54.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:45:30.816" level="INFO">2021-01-26 06:44:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:44:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:44:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:44:56 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:44:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:44:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:44:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-58707159727A-&gt;d4594ad6-1544-458f-bfad-ce752debf257
2021-01-26 06:44:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:45:00 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:45:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB1D4C345583-&gt;a911bf71-fb0b-46e3-b167-c20cf30d5943
2021-01-26 06:45:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:45:00 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:45:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643300219_0004
2021-01-26 06:45:00 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:45:00 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 06:45:00 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 06:45:00 INFO  YarnClientImpl:329 - Submitted application application_1611643300219_0004
2021-01-26 06:45:00 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611643300219_0004/
2021-01-26 06:45:00 INFO  Job:1614 - Running job: job_1611643300219_0004
2021-01-26 06:45:07 INFO  Job:1635 - Job job_1611643300219_0004 running in uber mode : false
2021-01-26 06:45:07 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 06:45:13 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 06:45:18 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 06:45:23 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 06:45:27 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 06:45:30 INFO  Job:1653 - Job job_1611643300219_0004 completed successfully
2021-01-26 06:45:30 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34532
		Total time spent by all reduces in occupied slots (ms)=12296
		Total time spent by all map tasks (ms)=8633
		Total time spent by all reduce tasks (ms)=3074
		Total vcore-milliseconds taken by all map tasks=8633
		Total vcore-milliseconds taken by all reduce tasks=3074
		Total megabyte-milliseconds taken by all map tasks=35360768
		Total megabyte-milliseconds taken by all reduce tasks=12591104
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=542
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1521266688
		Virtual memory (bytes) snapshot=15804235776
		Total committed heap usage (bytes)=1808793600
		Peak Map Physical memory (bytes)=378478592
		Peak Map Virtual memory (bytes)=3946373120
		Peak Reduce Physical memory (bytes)=395681792
		Peak Reduce Virtual memory (bytes)=3969478656
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 06:45:30.816" starttime="20210126 06:45:30.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:45:30.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:45:30.816" starttime="20210126 06:45:30.816"></status>
</kw>
<status status="PASS" endtime="20210126 06:45:30.816" starttime="20210126 06:44:54.817"></status>
</kw>
<msg timestamp="20210126 06:45:30.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:45:30.817" starttime="20210126 06:44:54.816"></status>
</kw>
<msg timestamp="20210126 06:45:30.817" level="INFO">${output} = 2021-01-26 06:44:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:44:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210126 06:45:30.817" starttime="20210126 06:44:54.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:45:30.817" starttime="20210126 06:45:30.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:45:30.818" starttime="20210126 06:45:30.818"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:45:30.818" critical="yes" starttime="20210126 06:44:54.787"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:45:30.819" starttime="20210126 06:44:20.504"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:50.779" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:42:50.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:42:50.785" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:42:50.785" starttime="20210126 06:42:50.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:42:50.786" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:42:50.786" starttime="20210126 06:42:50.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:42:50.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:42:50.786" starttime="20210126 06:42:50.786"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:50.787" starttime="20210126 06:42:50.775"></status>
</kw>
<msg timestamp="20210126 06:42:50.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:42:50.787" starttime="20210126 06:42:50.775"></status>
</kw>
<msg timestamp="20210126 06:42:50.787" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:42:50.787" starttime="20210126 06:42:50.775"></status>
</kw>
<msg timestamp="20210126 06:42:50.787" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:42:50.787" starttime="20210126 06:42:50.774"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:42:50.791" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:42:50.791" starttime="20210126 06:42:50.791"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:42:50.792" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:42:50.792" starttime="20210126 06:42:50.792"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:50.792" starttime="20210126 06:42:50.791"></status>
</kw>
<msg timestamp="20210126 06:42:50.792" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:42:50.792" starttime="20210126 06:42:50.790"></status>
</kw>
<status status="PASS" endtime="20210126 06:42:50.793" starttime="20210126 06:42:50.790"></status>
</kw>
<msg timestamp="20210126 06:42:50.793" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:42:50.793" starttime="20210126 06:42:50.788"></status>
</kw>
<msg timestamp="20210126 06:42:50.793" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:42:50.793" starttime="20210126 06:42:50.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:42:50.796" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:43:30.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:43:30.716" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:42:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:52 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 06:43:30.716" starttime="20210126 06:42:50.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:43:30.717" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:42:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:42:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:42:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:42:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8AFD23F635BF-&gt;a911bf71-fb0b-46e3-b167-c20cf30d5943
2021-01-26 06:42:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-26 06:42:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-981A189BB68B-&gt;d4594ad6-1544-458f-bfad-ce752debf257
2021-01-26 06:42:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-26 06:42:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:42:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:42:57 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:42:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643300219_0001
2021-01-26 06:42:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:42:57 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 06:42:57 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 06:42:57 INFO  YarnClientImpl:329 - Submitted application application_1611643300219_0001
2021-01-26 06:42:57 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611643300219_0001/
2021-01-26 06:42:57 INFO  Job:1614 - Running job: job_1611643300219_0001
2021-01-26 06:43:06 INFO  Job:1635 - Job job_1611643300219_0001 running in uber mode : false
2021-01-26 06:43:06 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 06:43:12 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 06:43:16 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 06:43:22 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 06:43:27 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 06:43:30 INFO  Job:1653 - Job job_1611643300219_0001 completed successfully
2021-01-26 06:43:30 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091753
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34840
		Total time spent by all reduces in occupied slots (ms)=12948
		Total time spent by all map tasks (ms)=8710
		Total time spent by all reduce tasks (ms)=3237
		Total vcore-milliseconds taken by all map tasks=8710
		Total vcore-milliseconds taken by all reduce tasks=3237
		Total megabyte-milliseconds taken by all map tasks=35676160
		Total megabyte-milliseconds taken by all reduce tasks=13258752
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=5980
		Physical memory (bytes) snapshot=1499635712
		Virtual memory (bytes) snapshot=15805501440
		Total committed heap usage (bytes)=1754267648
		Peak Map Physical memory (bytes)=378712064
		Peak Map Virtual memory (bytes)=3947667456
		Peak Reduce Physical memory (bytes)=401145856
		Peak Reduce Virtual memory (bytes)=3975479296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.096 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210126 06:43:30.717" starttime="20210126 06:43:30.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:43:30.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:43:30.718" starttime="20210126 06:43:30.717"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.718" starttime="20210126 06:42:50.794"></status>
</kw>
<msg timestamp="20210126 06:43:30.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:43:30.718" starttime="20210126 06:42:50.793"></status>
</kw>
<msg timestamp="20210126 06:43:30.719" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-26 06:42:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:42:52 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210126 06:43:30.719" starttime="20210126 06:42:50.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:43:30.719" starttime="20210126 06:43:30.719"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:43:30.719" critical="yes" starttime="20210126 06:42:50.774"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:43:30.724" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:43:30.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:43:30.729" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:43:30.729" starttime="20210126 06:43:30.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:43:30.729" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:43:30.729" starttime="20210126 06:43:30.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:43:30.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:43:30.730" starttime="20210126 06:43:30.730"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.730" starttime="20210126 06:43:30.722"></status>
</kw>
<msg timestamp="20210126 06:43:30.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:43:30.731" starttime="20210126 06:43:30.722"></status>
</kw>
<msg timestamp="20210126 06:43:30.732" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:43:30.732" starttime="20210126 06:43:30.721"></status>
</kw>
<msg timestamp="20210126 06:43:30.732" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210126 06:43:30.732" starttime="20210126 06:43:30.721"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 06:43:30.732" level="INFO">${random} = 5hVD8KF9</msg>
<status status="PASS" endtime="20210126 06:43:30.732" starttime="20210126 06:43:30.732"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:43:30.736" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:43:30.736" starttime="20210126 06:43:30.736"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:43:30.737" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.736"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.735"></status>
</kw>
<msg timestamp="20210126 06:43:30.737" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.735"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.734"></status>
</kw>
<msg timestamp="20210126 06:43:30.737" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.733"></status>
</kw>
<msg timestamp="20210126 06:43:30.737" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210126 06:43:30.737" starttime="20210126 06:43:30.733"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:43:30.740" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:43:30.740" starttime="20210126 06:43:30.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:43:30.741" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.741" starttime="20210126 06:43:30.740"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.741" starttime="20210126 06:43:30.739"></status>
</kw>
<msg timestamp="20210126 06:43:30.741" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.741" starttime="20210126 06:43:30.739"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.741" starttime="20210126 06:43:30.739"></status>
</kw>
<msg timestamp="20210126 06:43:30.741" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:43:30.741" starttime="20210126 06:43:30.738"></status>
</kw>
<msg timestamp="20210126 06:43:30.742" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210126 06:43:30.742" starttime="20210126 06:43:30.738"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210126 06:43:30.744" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210126 06:43:30.744" starttime="20210126 06:43:30.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 06:43:30.745" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.745" starttime="20210126 06:43:30.745"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.745" starttime="20210126 06:43:30.744"></status>
</kw>
<msg timestamp="20210126 06:43:30.745" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210126 06:43:30.745" starttime="20210126 06:43:30.743"></status>
</kw>
<status status="PASS" endtime="20210126 06:43:30.745" starttime="20210126 06:43:30.743"></status>
</kw>
<msg timestamp="20210126 06:43:30.745" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-5hVD8KF9.txt</msg>
<status status="PASS" endtime="20210126 06:43:30.746" starttime="20210126 06:43:30.742"></status>
</kw>
<msg timestamp="20210126 06:43:30.746" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-5hVD8KF9.txt</msg>
<status status="PASS" endtime="20210126 06:43:30.746" starttime="20210126 06:43:30.742"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 06:43:30.749" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-5hVD8KF9.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 06:44:07.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 06:44:07.500" level="INFO">${output} = 2021-01-26 06:43:32 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:43:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210126 06:44:07.500" starttime="20210126 06:43:30.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 06:44:07.501" level="INFO">2021-01-26 06:43:32 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:43:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-26 06:43:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-26 06:43:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-26 06:43:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-26 06:43:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 06:43:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B64F9DF01D28-&gt;d4594ad6-1544-458f-bfad-ce752debf257
2021-01-26 06:43:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:43:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-26 06:43:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4085B4E4D48C-&gt;a911bf71-fb0b-46e3-b167-c20cf30d5943
2021-01-26 06:43:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 06:43:36 INFO  JobSubmitter:202 - number of splits:3
2021-01-26 06:43:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611643300219_0002
2021-01-26 06:43:36 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-26 06:43:36 INFO  Configuration:2795 - resource-types.xml not found
2021-01-26 06:43:36 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-26 06:43:36 INFO  YarnClientImpl:329 - Submitted application application_1611643300219_0002
2021-01-26 06:43:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611643300219_0002/
2021-01-26 06:43:36 INFO  Job:1614 - Running job: job_1611643300219_0002
2021-01-26 06:43:42 INFO  Job:1635 - Job job_1611643300219_0002 running in uber mode : false
2021-01-26 06:43:42 INFO  Job:1642 -  map 0% reduce 0%
2021-01-26 06:43:48 INFO  Job:1642 -  map 33% reduce 0%
2021-01-26 06:43:53 INFO  Job:1642 -  map 67% reduce 0%
2021-01-26 06:43:58 INFO  Job:1642 -  map 100% reduce 0%
2021-01-26 06:44:04 INFO  Job:1642 -  map 100% reduce 100%
2021-01-26 06:44:07 INFO  Job:1653 - Job job_1611643300219_0002 completed successfully
2021-01-26 06:44:07 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33604
		Total time spent by all reduces in occupied slots (ms)=14096
		Total time spent by all map tasks (ms)=8401
		Total time spent by all reduce tasks (ms)=3524
		Total vcore-milliseconds taken by all map tasks=8401
		Total vcore-milliseconds taken by all reduce tasks=3524
		Total megabyte-milliseconds taken by all map tasks=34410496
		Total megabyte-milliseconds taken by all reduce tasks=14434304
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=5910
		Physical memory (bytes) snapshot=1490321408
		Virtual memory (bytes) snapshot=15782789120
		Total committed heap usage (bytes)=1781006336
		Peak Map Physical memory (bytes)=374902784
		Peak Map Virtual memory (bytes)=3944476672
		Peak Reduce Physical memory (bytes)=401342464
		Peak Reduce Virtual memory (bytes)=3969495040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210126 06:44:07.502" starttime="20210126 06:44:07.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 06:44:07.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 06:44:07.502" starttime="20210126 06:44:07.502"></status>
</kw>
<status status="PASS" endtime="20210126 06:44:07.502" starttime="20210126 06:43:30.747"></status>
</kw>
<msg timestamp="20210126 06:44:07.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 06:44:07.503" starttime="20210126 06:43:30.746"></status>
</kw>
<msg timestamp="20210126 06:44:07.503" level="INFO">${output} = 2021-01-26 06:43:32 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.8:8032
2021-01-26 06:43:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210126 06:44:07.503" starttime="20210126 06:43:30.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:07.503" starttime="20210126 06:44:07.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210126 06:44:07.504" starttime="20210126 06:44:07.504"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210126 06:44:07.504" critical="yes" starttime="20210126 06:43:30.720"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210126 06:44:07.505" starttime="20210126 06:42:50.727"></status>
</suite>
<status status="PASS" elapsedtime="189917" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="541668" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
