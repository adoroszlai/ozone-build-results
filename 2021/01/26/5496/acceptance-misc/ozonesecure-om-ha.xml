<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210126 07:09:57.947" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:38.998" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:06:50.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:06:50.054" level="INFO">${output} = 2021-01-26 07:06:40,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:40,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:50.054" starttime="20210126 07:06:38.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:06:50.055" level="INFO">2021-01-26 07:06:40,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:40,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:06:40,528 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-26 07:06:40,640 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-26 07:06:40,651 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:41,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:42,559 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:06:42,655 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:43,540 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-26 07:06:43,655 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:43,928 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-26 07:06:44,656 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:45,658 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:46,000 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-26 07:06:46,356 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-26 07:06:46,356 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5D536F29C84C-&gt;eab4ac11-4cf7-4b1f-96b8-4b0dd4030c8b
2021-01-26 07:06:46,357 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-26 07:06:46,658 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:47,658 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:48,659 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:49,659 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-26 07:06:49,708 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=4604.688694, max=4604.688694, mean=4604.688694, stddev=0.0, median=4604.688694, p75=4604.688694, p95=4604.688694, p98=4604.688694, p99=4604.688694, p999=4604.688694, mean_rate=0.1812542398663266, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2021-01-26 07:06:49,708 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-01-26 07:06:49,710 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-26 07:06:49,710 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210126 07:06:50.055" starttime="20210126 07:06:50.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:06:50.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:06:50.057" starttime="20210126 07:06:50.055"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:50.059" starttime="20210126 07:06:38.994"></status>
</kw>
<msg timestamp="20210126 07:06:50.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:06:50.059" starttime="20210126 07:06:38.994"></status>
</kw>
<msg timestamp="20210126 07:06:50.059" level="INFO">${result} = 2021-01-26 07:06:40,427 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:40,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:50.059" starttime="20210126 07:06:38.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:06:50.060" starttime="20210126 07:06:50.060"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:06:50.060" critical="yes" starttime="20210126 07:06:38.993"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:50.065" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:06:54.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:06:54.385" level="INFO">${output} = 2021-01-26 07:06:51,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:51,726 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:54.385" starttime="20210126 07:06:50.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:06:54.386" level="INFO">2021-01-26 07:06:51,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:51,726 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:06:51,726 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-26 07:06:51,864 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-26 07:06:51,874 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:52,880 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:52,922 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:06:53,410 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:06:53,880 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-26 07:06:54,334 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=254.091726, max=254.091726, mean=254.091726, stddev=0.0, median=254.091726, p75=254.091726, p95=254.091726, p98=254.091726, p99=254.091726, p999=254.091726, mean_rate=0.9707640278683208, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-26 07:06:54,335 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-26 07:06:54,335 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-26 07:06:54,335 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210126 07:06:54.386" starttime="20210126 07:06:54.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:06:54.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:06:54.386" starttime="20210126 07:06:54.386"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:54.387" starttime="20210126 07:06:50.063"></status>
</kw>
<msg timestamp="20210126 07:06:54.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:06:54.387" starttime="20210126 07:06:50.063"></status>
</kw>
<msg timestamp="20210126 07:06:54.387" level="INFO">${result} = 2021-01-26 07:06:51,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:51,726 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:54.387" starttime="20210126 07:06:50.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:06:54.388" starttime="20210126 07:06:54.387"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:06:54.388" critical="yes" starttime="20210126 07:06:50.061"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:54.393" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:06:58.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:06:58.579" level="INFO">${output} = 2021-01-26 07:06:55,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:56,030 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:58.579" starttime="20210126 07:06:54.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:06:58.580" level="INFO">2021-01-26 07:06:55,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:56,030 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:06:56,030 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-26 07:06:56,184 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-26 07:06:56,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:57,134 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:06:57,211 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:06:57,576 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:06:58,211 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-26 07:06:58,519 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=121.954145, max=121.954145, mean=121.954145, stddev=0.0, median=121.954145, p75=121.954145, p95=121.954145, p98=121.954145, p99=121.954145, p999=121.954145, mean_rate=0.9676594022527117, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-26 07:06:58,526 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-26 07:06:58,527 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-26 07:06:58,530 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210126 07:06:58.582" starttime="20210126 07:06:58.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:06:58.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:06:58.583" starttime="20210126 07:06:58.583"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:58.583" starttime="20210126 07:06:54.390"></status>
</kw>
<msg timestamp="20210126 07:06:58.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:06:58.584" starttime="20210126 07:06:54.390"></status>
</kw>
<msg timestamp="20210126 07:06:58.584" level="INFO">${result} = 2021-01-26 07:06:55,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:06:56,030 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:06:58.584" starttime="20210126 07:06:54.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:06:58.585" starttime="20210126 07:06:58.584"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:06:58.585" critical="yes" starttime="20210126 07:06:54.389"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210126 07:06:58.586" starttime="20210126 07:06:38.978"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:58.595" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:04.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:04.171" level="INFO">${output} = 2021-01-26 07:06:59,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:07:00,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:07:04.171" starttime="20210126 07:06:58.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:04.172" level="INFO">2021-01-26 07:06:59,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:07:00,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-26 07:07:00,014 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-26 07:07:00,178 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-26 07:07:00,192 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:07:01,018 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-26 07:07:01,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:07:02,193 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-26 07:07:02,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-26 07:07:03,196 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-26 07:07:03,823 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=44.113361, max=44.113361, mean=44.113361, stddev=0.0, median=44.113361, p75=44.113361, p95=44.113361, p98=44.113361, p99=44.113361, p999=44.113361, mean_rate=0.9832235447405899, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-26 07:07:03,827 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-01-26 07:07:03,835 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-26 07:07:03,835 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210126 07:07:04.172" starttime="20210126 07:07:04.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:04.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:04.174" starttime="20210126 07:07:04.172"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:04.174" starttime="20210126 07:06:58.593"></status>
</kw>
<msg timestamp="20210126 07:07:04.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:04.174" starttime="20210126 07:06:58.592"></status>
</kw>
<msg timestamp="20210126 07:07:04.174" level="INFO">${result} = 2021-01-26 07:06:59,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-26 07:07:00,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210126 07:07:04.174" starttime="20210126 07:06:58.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:07:04.175" starttime="20210126 07:07:04.175"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210126 07:07:04.175" critical="yes" starttime="20210126 07:06:58.591"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210126 07:07:04.176" starttime="20210126 07:06:58.588"></status>
</suite>
<status status="PASS" endtime="20210126 07:07:04.177" starttime="20210126 07:06:38.954"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:34.143" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:06:34.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:06:34.145" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:06:34.145" starttime="20210126 07:06:34.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:06:34.146" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:06:34.146" starttime="20210126 07:06:34.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:06:34.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:06:34.147" starttime="20210126 07:06:34.146"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:34.147" starttime="20210126 07:06:34.137"></status>
</kw>
<msg timestamp="20210126 07:06:34.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:06:34.147" starttime="20210126 07:06:34.136"></status>
</kw>
<msg timestamp="20210126 07:06:34.147" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:06:34.147" starttime="20210126 07:06:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:06:34.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:06:34.148" starttime="20210126 07:06:34.147"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:06:34.151" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:06:34.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:06:34.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:06:34.167" starttime="20210126 07:06:34.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:06:34.167" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:06:34.167" starttime="20210126 07:06:34.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:06:34.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:06:34.168" starttime="20210126 07:06:34.168"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:34.168" starttime="20210126 07:06:34.149"></status>
</kw>
<msg timestamp="20210126 07:06:34.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:06:34.168" starttime="20210126 07:06:34.149"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:34.168" starttime="20210126 07:06:34.148"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:34.168" starttime="20210126 07:06:34.148"></status>
</kw>
<status status="PASS" endtime="20210126 07:06:34.169" starttime="20210126 07:06:34.135"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:06:34.169" critical="yes" starttime="20210126 07:06:34.135"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210126 07:06:34.169" starttime="20210126 07:06:34.089"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210126 07:07:08.851" level="INFO">${random} = 04817</msg>
<status status="PASS" endtime="20210126 07:07:08.851" starttime="20210126 07:07:08.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210126 07:07:08.852" level="INFO">${source} = 04817-source</msg>
<status status="PASS" endtime="20210126 07:07:08.852" starttime="20210126 07:07:08.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210126 07:07:08.853" level="INFO">${target} = 04817-target</msg>
<status status="PASS" endtime="20210126 07:07:08.853" starttime="20210126 07:07:08.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:08.857" level="INFO">Running command 'ozone sh volume create 04817-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:11.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:11.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:11.533" starttime="20210126 07:07:08.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:11.534" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:11.534" starttime="20210126 07:07:11.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:11.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:11.535" starttime="20210126 07:07:11.534"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:11.535" starttime="20210126 07:07:08.853"></status>
</kw>
<msg timestamp="20210126 07:07:11.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:11.535" starttime="20210126 07:07:08.853"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:11.535" starttime="20210126 07:07:08.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:11.538" level="INFO">Running command 'ozone sh volume create 04817-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:14.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:14.441" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:14.441" starttime="20210126 07:07:11.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:14.442" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:14.442" starttime="20210126 07:07:14.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:14.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:14.443" starttime="20210126 07:07:14.442"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:14.444" starttime="20210126 07:07:11.536"></status>
</kw>
<msg timestamp="20210126 07:07:14.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:14.444" starttime="20210126 07:07:11.536"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:14.444" starttime="20210126 07:07:11.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:14.448" level="INFO">Running command 'ozone sh bucket create 04817-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:18.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:18.123" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:18.123" starttime="20210126 07:07:14.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:18.124" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:18.124" starttime="20210126 07:07:18.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:18.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:18.125" starttime="20210126 07:07:18.124"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:18.125" starttime="20210126 07:07:14.445"></status>
</kw>
<msg timestamp="20210126 07:07:18.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:18.125" starttime="20210126 07:07:14.445"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:18.125" starttime="20210126 07:07:14.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:18.128" level="INFO">Running command 'ozone sh key put 04817-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:22.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:22.871" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:22.871" starttime="20210126 07:07:18.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:22.872" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:22.872" starttime="20210126 07:07:22.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:22.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:22.872" starttime="20210126 07:07:22.872"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:22.872" starttime="20210126 07:07:18.126"></status>
</kw>
<msg timestamp="20210126 07:07:22.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:22.873" starttime="20210126 07:07:18.126"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:22.873" starttime="20210126 07:07:18.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:22.876" level="INFO">Running command 'ozone sh bucket create 04817-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:25.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:25.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:25.879" starttime="20210126 07:07:22.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:25.880" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:25.880" starttime="20210126 07:07:25.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:25.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:25.880" starttime="20210126 07:07:25.880"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:25.881" starttime="20210126 07:07:22.874"></status>
</kw>
<msg timestamp="20210126 07:07:25.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:25.881" starttime="20210126 07:07:22.873"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:25.881" starttime="20210126 07:07:22.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:25.884" level="INFO">Running command 'ozone sh bucket link 04817-source/readable-bucket 04817-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:28.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:28.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:28.598" starttime="20210126 07:07:25.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:28.605" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:28.605" starttime="20210126 07:07:28.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:28.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:28.606" starttime="20210126 07:07:28.605"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:28.606" starttime="20210126 07:07:25.882"></status>
</kw>
<msg timestamp="20210126 07:07:28.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:28.606" starttime="20210126 07:07:25.882"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:28.606" starttime="20210126 07:07:25.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:28.609" level="INFO">Running command 'ozone sh bucket link 04817-source/readable-bucket 04817-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:31.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:31.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:31.524" starttime="20210126 07:07:28.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:31.525" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:31.525" starttime="20210126 07:07:31.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:31.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:31.526" starttime="20210126 07:07:31.526"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:31.526" starttime="20210126 07:07:28.607"></status>
</kw>
<msg timestamp="20210126 07:07:31.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:31.527" starttime="20210126 07:07:28.607"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:31.527" starttime="20210126 07:07:28.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:31.530" level="INFO">Running command 'ozone sh bucket link 04817-source/unreadable-bucket 04817-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:34.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:34.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:34.289" starttime="20210126 07:07:31.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:34.290" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:34.290" starttime="20210126 07:07:34.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:34.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:34.291" starttime="20210126 07:07:34.290"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:34.291" starttime="20210126 07:07:31.528"></status>
</kw>
<msg timestamp="20210126 07:07:34.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:34.291" starttime="20210126 07:07:31.527"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:34.291" starttime="20210126 07:07:31.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:34.294" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04817-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:37.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:37.409" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:37.409" starttime="20210126 07:07:34.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:37.410" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:37.410" starttime="20210126 07:07:37.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:37.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:37.410" starttime="20210126 07:07:37.410"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:37.412" starttime="20210126 07:07:34.292"></status>
</kw>
<msg timestamp="20210126 07:07:37.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:37.415" starttime="20210126 07:07:34.292"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:37.416" starttime="20210126 07:07:34.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:37.420" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 04817-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:40.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:40.556" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:40.556" starttime="20210126 07:07:37.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:40.557" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:40.557" starttime="20210126 07:07:40.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:40.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:40.558" starttime="20210126 07:07:40.557"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:40.558" starttime="20210126 07:07:37.417"></status>
</kw>
<msg timestamp="20210126 07:07:40.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:40.558" starttime="20210126 07:07:37.416"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:40.558" starttime="20210126 07:07:37.416"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:40.563" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 04817-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:43.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:43.611" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:43.611" starttime="20210126 07:07:40.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:43.612" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:43.612" starttime="20210126 07:07:43.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:43.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:43.613" starttime="20210126 07:07:43.612"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:43.613" starttime="20210126 07:07:40.559"></status>
</kw>
<msg timestamp="20210126 07:07:43.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:43.613" starttime="20210126 07:07:40.559"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:43.613" starttime="20210126 07:07:40.559"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:43.616" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04817-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:46.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:46.511" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:46.511" starttime="20210126 07:07:43.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:46.512" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:46.512" starttime="20210126 07:07:46.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:46.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:46.512" starttime="20210126 07:07:46.512"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:46.512" starttime="20210126 07:07:43.614"></status>
</kw>
<msg timestamp="20210126 07:07:46.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:46.513" starttime="20210126 07:07:43.614"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:46.513" starttime="20210126 07:07:43.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:46.516" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04817-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:49.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:49.485" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:49.486" starttime="20210126 07:07:46.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.487" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:07:49.487" starttime="20210126 07:07:49.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:49.487" starttime="20210126 07:07:49.487"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:46.514"></status>
</kw>
<msg timestamp="20210126 07:07:49.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:46.513"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:46.513"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:14.444"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:14.444"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.488" starttime="20210126 07:07:08.850"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:49.494" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:49.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:49.496" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:07:49.496" starttime="20210126 07:07:49.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.497" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:07:49.497" starttime="20210126 07:07:49.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:49.498" starttime="20210126 07:07:49.498"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.498" starttime="20210126 07:07:49.492"></status>
</kw>
<msg timestamp="20210126 07:07:49.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:49.498" starttime="20210126 07:07:49.491"></status>
</kw>
<msg timestamp="20210126 07:07:49.499" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:07:49.499" starttime="20210126 07:07:49.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:07:49.500" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:07:49.500" starttime="20210126 07:07:49.499"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:49.503" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:49.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:49.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:49.513" starttime="20210126 07:07:49.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.514" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:49.514" starttime="20210126 07:07:49.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:49.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:49.515" starttime="20210126 07:07:49.515"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.515" starttime="20210126 07:07:49.501"></status>
</kw>
<msg timestamp="20210126 07:07:49.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:49.515" starttime="20210126 07:07:49.501"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.516" starttime="20210126 07:07:49.500"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.516" starttime="20210126 07:07:49.500"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.516" starttime="20210126 07:07:49.490"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:49.516" starttime="20210126 07:07:49.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:49.519" level="INFO">Running command 'ozone sh bucket link 04817-source/no-such-bucket 04817-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:52.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:52.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:52.377" starttime="20210126 07:07:49.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:52.378" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:52.378" starttime="20210126 07:07:52.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:52.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:52.379" starttime="20210126 07:07:52.379"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:52.379" starttime="20210126 07:07:49.517"></status>
</kw>
<msg timestamp="20210126 07:07:52.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:52.380" starttime="20210126 07:07:49.516"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:52.380" starttime="20210126 07:07:49.516"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:52.387" level="INFO">Running command 'ozone sh key list 04817-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:54.942" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:07:54.942" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 07:07:54.942" starttime="20210126 07:07:52.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:54.943" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 07:07:54.943" starttime="20210126 07:07:54.943"></status>
</kw>
<msg timestamp="20210126 07:07:54.944" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210126 07:07:54.944" starttime="20210126 07:07:52.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210126 07:07:54.944" starttime="20210126 07:07:54.944"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:07:54.944" critical="yes" starttime="20210126 07:07:49.489"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:54.949" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:54.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:54.951" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:07:54.952" starttime="20210126 07:07:54.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:54.952" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:07:54.952" starttime="20210126 07:07:54.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:54.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:54.953" starttime="20210126 07:07:54.953"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.953" starttime="20210126 07:07:54.947"></status>
</kw>
<msg timestamp="20210126 07:07:54.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:54.953" starttime="20210126 07:07:54.947"></status>
</kw>
<msg timestamp="20210126 07:07:54.954" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:07:54.954" starttime="20210126 07:07:54.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:07:54.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:07:54.954" starttime="20210126 07:07:54.954"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:54.958" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:54.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:54.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:54.973" starttime="20210126 07:07:54.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:54.974" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:54.974" starttime="20210126 07:07:54.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:54.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:54.974" starttime="20210126 07:07:54.974"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.974" starttime="20210126 07:07:54.955"></status>
</kw>
<msg timestamp="20210126 07:07:54.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:54.975" starttime="20210126 07:07:54.955"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.975" starttime="20210126 07:07:54.955"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.975" starttime="20210126 07:07:54.954"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.975" starttime="20210126 07:07:54.946"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:54.975" starttime="20210126 07:07:54.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:54.978" level="INFO">Running command 'ozone sh bucket link 04817-source/bucket1 04817-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:07:57.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:07:57.971" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:07:57.971" starttime="20210126 07:07:54.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:07:57.972" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:07:57.972" starttime="20210126 07:07:57.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:07:57.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:07:57.973" starttime="20210126 07:07:57.973"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:57.973" starttime="20210126 07:07:54.976"></status>
</kw>
<msg timestamp="20210126 07:07:57.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:07:57.973" starttime="20210126 07:07:54.976"></status>
</kw>
<status status="PASS" endtime="20210126 07:07:57.973" starttime="20210126 07:07:54.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:07:57.977" level="INFO">Running command 'ozone sh bucket create 04817-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:00.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:00.676" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:00.676" starttime="20210126 07:07:57.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:00.677" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:00.677" starttime="20210126 07:08:00.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:00.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:00.678" starttime="20210126 07:08:00.678"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:00.678" starttime="20210126 07:07:57.975"></status>
</kw>
<msg timestamp="20210126 07:08:00.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:00.679" starttime="20210126 07:07:57.974"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:00.679" starttime="20210126 07:07:57.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:00.682" level="INFO">Running command 'ozone sh key put 04817-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:05.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:05.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:05.563" starttime="20210126 07:08:00.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:05.564" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:05.564" starttime="20210126 07:08:05.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:05.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:05.564" starttime="20210126 07:08:05.564"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:05.565" starttime="20210126 07:08:00.680"></status>
</kw>
<msg timestamp="20210126 07:08:05.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:05.565" starttime="20210126 07:08:00.679"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:05.565" starttime="20210126 07:08:00.679"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 07:08:05.568" level="INFO">${postfix} = 17449</msg>
<status status="PASS" endtime="20210126 07:08:05.568" starttime="20210126 07:08:05.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 07:08:05.568" level="INFO">${tmpfile} = /tmp/tempkey-17449</msg>
<status status="PASS" endtime="20210126 07:08:05.568" starttime="20210126 07:08:05.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:05.571" level="INFO">Running command 'ozone sh key get -f 04817-target/link1/key1 /tmp/tempkey-17449 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:09.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:09.741" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:09.741" starttime="20210126 07:08:05.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.742" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:09.742" starttime="20210126 07:08:09.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:09.743" starttime="20210126 07:08:09.743"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.743" starttime="20210126 07:08:05.569"></status>
</kw>
<msg timestamp="20210126 07:08:09.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:09.743" starttime="20210126 07:08:05.569"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.743" starttime="20210126 07:08:05.568"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 07:08:09.745" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-17449 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:09.748" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 07:08:09.748" starttime="20210126 07:08:09.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:09.752" level="INFO">Running command 'rm -f /tmp/tempkey-17449 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:09.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:09.754" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:09.754" starttime="20210126 07:08:09.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.755" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:09.755" starttime="20210126 07:08:09.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:09.755" starttime="20210126 07:08:09.755"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.755" starttime="20210126 07:08:09.750"></status>
</kw>
<msg timestamp="20210126 07:08:09.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:09.755" starttime="20210126 07:08:09.749"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.756" starttime="20210126 07:08:09.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:08:09.756" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 07:08:09.756" starttime="20210126 07:08:09.756"></status>
</kw>
<msg timestamp="20210126 07:08:09.756" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 07:08:09.756" starttime="20210126 07:08:05.567"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:09.757" starttime="20210126 07:08:09.756"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.757" starttime="20210126 07:08:05.566"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:09.757" critical="yes" starttime="20210126 07:07:54.945"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:09.761" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:09.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:09.763" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:09.763" starttime="20210126 07:08:09.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.764" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:09.764" starttime="20210126 07:08:09.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:09.764" starttime="20210126 07:08:09.764"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.765" starttime="20210126 07:08:09.759"></status>
</kw>
<msg timestamp="20210126 07:08:09.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:09.765" starttime="20210126 07:08:09.759"></status>
</kw>
<msg timestamp="20210126 07:08:09.765" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:09.765" starttime="20210126 07:08:09.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:09.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:09.765" starttime="20210126 07:08:09.765"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:09.768" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:09.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:09.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:09.784" starttime="20210126 07:08:09.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.785" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:09.785" starttime="20210126 07:08:09.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:09.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.785"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.767"></status>
</kw>
<msg timestamp="20210126 07:08:09.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.766"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.766"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.766"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.758"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:09.786" starttime="20210126 07:08:09.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:09.789" level="INFO">Running command 'ozone sh key put 04817-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:14.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:14.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:14.439" starttime="20210126 07:08:09.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:14.440" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:14.440" starttime="20210126 07:08:14.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:14.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:14.440" starttime="20210126 07:08:14.440"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:14.441" starttime="20210126 07:08:09.787"></status>
</kw>
<msg timestamp="20210126 07:08:14.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:14.441" starttime="20210126 07:08:09.787"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:14.441" starttime="20210126 07:08:09.787"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 07:08:14.442" level="INFO">${postfix} = 94983</msg>
<status status="PASS" endtime="20210126 07:08:14.442" starttime="20210126 07:08:14.442"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 07:08:14.443" level="INFO">${tmpfile} = /tmp/tempkey-94983</msg>
<status status="PASS" endtime="20210126 07:08:14.443" starttime="20210126 07:08:14.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:14.446" level="INFO">Running command 'ozone sh key get -f 04817-source/bucket1/key2 /tmp/tempkey-94983 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:18.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:18.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:18.856" starttime="20210126 07:08:14.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.857" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:18.857" starttime="20210126 07:08:18.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:18.858" starttime="20210126 07:08:18.857"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.858" starttime="20210126 07:08:14.444"></status>
</kw>
<msg timestamp="20210126 07:08:18.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:18.858" starttime="20210126 07:08:14.444"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.858" starttime="20210126 07:08:14.443"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 07:08:18.860" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-94983 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:18.863" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 07:08:18.863" starttime="20210126 07:08:18.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:18.866" level="INFO">Running command 'rm -f /tmp/tempkey-94983 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:18.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:18.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:18.868" starttime="20210126 07:08:18.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.868" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:18.868" starttime="20210126 07:08:18.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:18.869" starttime="20210126 07:08:18.869"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.869" starttime="20210126 07:08:18.864"></status>
</kw>
<msg timestamp="20210126 07:08:18.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:18.869" starttime="20210126 07:08:18.863"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.869" starttime="20210126 07:08:18.863"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:08:18.870" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 07:08:18.870" starttime="20210126 07:08:18.870"></status>
</kw>
<msg timestamp="20210126 07:08:18.870" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 07:08:18.870" starttime="20210126 07:08:14.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:18.871" starttime="20210126 07:08:18.870"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.871" starttime="20210126 07:08:14.441"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:18.871" critical="yes" starttime="20210126 07:08:09.758"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:18.876" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:18.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:18.878" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:18.878" starttime="20210126 07:08:18.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.878" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:18.878" starttime="20210126 07:08:18.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:18.879" starttime="20210126 07:08:18.879"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.879" starttime="20210126 07:08:18.874"></status>
</kw>
<msg timestamp="20210126 07:08:18.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:18.879" starttime="20210126 07:08:18.874"></status>
</kw>
<msg timestamp="20210126 07:08:18.879" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:18.879" starttime="20210126 07:08:18.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:18.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:18.880" starttime="20210126 07:08:18.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:18.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:18.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:18.899" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:18.899" starttime="20210126 07:08:18.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.900" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:18.900" starttime="20210126 07:08:18.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:18.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.900"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.881"></status>
</kw>
<msg timestamp="20210126 07:08:18.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.881"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.880"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.880"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.873"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:18.901" starttime="20210126 07:08:18.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:18.905" level="INFO">Running command 'ozone sh key list 04817-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:21.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:21.654" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:21.654" starttime="20210126 07:08:18.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:21.655" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:21.655" starttime="20210126 07:08:21.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:21.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:21.656" starttime="20210126 07:08:21.656"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:21.657" starttime="20210126 07:08:18.902"></status>
</kw>
<msg timestamp="20210126 07:08:21.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:21.657" starttime="20210126 07:08:18.902"></status>
</kw>
<msg timestamp="20210126 07:08:21.657" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:21.657" starttime="20210126 07:08:18.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:21.660" level="INFO">Running command 'ozone sh key list 04817-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:24.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:24.486" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:24.486" starttime="20210126 07:08:21.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.487" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:24.487" starttime="20210126 07:08:24.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:24.488" starttime="20210126 07:08:24.487"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.488" starttime="20210126 07:08:21.658"></status>
</kw>
<msg timestamp="20210126 07:08:24.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:24.488" starttime="20210126 07:08:21.658"></status>
</kw>
<msg timestamp="20210126 07:08:24.488" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210126 07:08:24.488" starttime="20210126 07:08:21.657"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:24.489" starttime="20210126 07:08:24.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:24.489" starttime="20210126 07:08:24.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:24.490" starttime="20210126 07:08:24.489"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:24.490" critical="yes" starttime="20210126 07:08:18.872"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:24.494" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:24.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:24.496" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:24.496" starttime="20210126 07:08:24.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.497" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:24.497" starttime="20210126 07:08:24.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:24.498" starttime="20210126 07:08:24.497"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.498" starttime="20210126 07:08:24.492"></status>
</kw>
<msg timestamp="20210126 07:08:24.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:24.498" starttime="20210126 07:08:24.492"></status>
</kw>
<msg timestamp="20210126 07:08:24.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:24.498" starttime="20210126 07:08:24.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:24.499" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:24.499" starttime="20210126 07:08:24.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:24.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:24.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:24.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:24.517" starttime="20210126 07:08:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.518" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:24.518" starttime="20210126 07:08:24.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:24.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.518"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.500"></status>
</kw>
<msg timestamp="20210126 07:08:24.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.500"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.499"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.499"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.491"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:24.519" starttime="20210126 07:08:24.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:24.523" level="INFO">Running command 'ozone sh key delete 04817-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:27.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:27.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:27.115" starttime="20210126 07:08:24.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:27.116" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:27.116" starttime="20210126 07:08:27.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:27.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:27.116" starttime="20210126 07:08:27.116"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:27.117" starttime="20210126 07:08:24.520"></status>
</kw>
<msg timestamp="20210126 07:08:27.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:27.117" starttime="20210126 07:08:24.520"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:27.117" starttime="20210126 07:08:24.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:27.120" level="INFO">Running command 'ozone sh key list 04817-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:29.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:29.687" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210126 07:08:29.687" starttime="20210126 07:08:27.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.688" level="INFO">key1</msg>
<status status="PASS" endtime="20210126 07:08:29.688" starttime="20210126 07:08:29.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:29.689" starttime="20210126 07:08:29.688"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.689" starttime="20210126 07:08:27.118"></status>
</kw>
<msg timestamp="20210126 07:08:29.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:29.689" starttime="20210126 07:08:27.118"></status>
</kw>
<msg timestamp="20210126 07:08:29.689" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210126 07:08:29.689" starttime="20210126 07:08:27.117"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:29.690" starttime="20210126 07:08:29.689"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:29.690" critical="yes" starttime="20210126 07:08:24.490"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:29.694" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:29.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:29.696" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:29.696" starttime="20210126 07:08:29.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.697" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:29.697" starttime="20210126 07:08:29.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:29.698" starttime="20210126 07:08:29.697"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.698" starttime="20210126 07:08:29.692"></status>
</kw>
<msg timestamp="20210126 07:08:29.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:29.698" starttime="20210126 07:08:29.692"></status>
</kw>
<msg timestamp="20210126 07:08:29.698" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:29.698" starttime="20210126 07:08:29.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:29.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:29.699" starttime="20210126 07:08:29.699"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:29.702" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:29.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:29.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:29.719" starttime="20210126 07:08:29.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.719" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:29.720" starttime="20210126 07:08:29.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:29.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:29.720" starttime="20210126 07:08:29.720"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.720" starttime="20210126 07:08:29.700"></status>
</kw>
<msg timestamp="20210126 07:08:29.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:29.720" starttime="20210126 07:08:29.700"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.721" starttime="20210126 07:08:29.699"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.721" starttime="20210126 07:08:29.699"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.721" starttime="20210126 07:08:29.691"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:29.721" starttime="20210126 07:08:29.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:29.724" level="INFO">Running command 'ozone sh bucket list 04817-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:32.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:32.676" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210126 07:08:32.676" starttime="20210126 07:08:29.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.677" level="INFO">{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:52.223Z",
  "modificationTime" : "2021-01-26T07:07:52.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:34.190Z",
  "modificationTime" : "2021-01-26T07:07:49.390Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:57.836Z",
  "modificationTime" : "2021-01-26T07:07:57.836Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:28.513Z",
  "modificationTime" : "2021-01-26T07:07:46.349Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:31.399Z",
  "modificationTime" : "2021-01-26T07:07:31.399Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 07:08:32.677" starttime="20210126 07:08:32.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:32.678" starttime="20210126 07:08:32.677"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.678" starttime="20210126 07:08:29.722"></status>
</kw>
<msg timestamp="20210126 07:08:32.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:32.678" starttime="20210126 07:08:29.721"></status>
</kw>
<msg timestamp="20210126 07:08:32.679" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210126 07:08:32.679" starttime="20210126 07:08:29.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:32.679" starttime="20210126 07:08:32.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:32.680" starttime="20210126 07:08:32.679"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:32.680" critical="yes" starttime="20210126 07:08:29.690"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:32.685" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:32.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:32.687" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:32.687" starttime="20210126 07:08:32.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.688" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:32.688" starttime="20210126 07:08:32.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:32.689" starttime="20210126 07:08:32.688"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.689" starttime="20210126 07:08:32.682"></status>
</kw>
<msg timestamp="20210126 07:08:32.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:32.689" starttime="20210126 07:08:32.682"></status>
</kw>
<msg timestamp="20210126 07:08:32.689" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:32.689" starttime="20210126 07:08:32.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:32.690" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:32.690" starttime="20210126 07:08:32.689"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:32.695" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:32.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:32.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:32.703" starttime="20210126 07:08:32.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.704" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:32.704" starttime="20210126 07:08:32.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:32.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.704"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.691"></status>
</kw>
<msg timestamp="20210126 07:08:32.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.691"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.691"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.690"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.681"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:32.705" starttime="20210126 07:08:32.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:32.708" level="INFO">Running command 'ozone sh bucket info 04817-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:35.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:35.656" level="INFO">${output} = 04817-source bucket1</msg>
<status status="PASS" endtime="20210126 07:08:35.656" starttime="20210126 07:08:32.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.657" level="INFO">04817-source bucket1</msg>
<status status="PASS" endtime="20210126 07:08:35.657" starttime="20210126 07:08:35.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:35.658" starttime="20210126 07:08:35.657"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.658" starttime="20210126 07:08:32.706"></status>
</kw>
<msg timestamp="20210126 07:08:35.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:35.658" starttime="20210126 07:08:32.706"></status>
</kw>
<msg timestamp="20210126 07:08:35.658" level="INFO">${result} = 04817-source bucket1</msg>
<status status="PASS" endtime="20210126 07:08:35.658" starttime="20210126 07:08:32.705"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:35.659" starttime="20210126 07:08:35.658"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:35.659" critical="yes" starttime="20210126 07:08:32.680"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:35.664" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:35.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:35.666" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:35.666" starttime="20210126 07:08:35.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.667" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:35.667" starttime="20210126 07:08:35.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:35.667" starttime="20210126 07:08:35.667"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.668" starttime="20210126 07:08:35.661"></status>
</kw>
<msg timestamp="20210126 07:08:35.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:35.668" starttime="20210126 07:08:35.661"></status>
</kw>
<msg timestamp="20210126 07:08:35.668" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:35.668" starttime="20210126 07:08:35.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:35.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:35.668" starttime="20210126 07:08:35.668"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:35.671" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:35.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:35.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:35.688" starttime="20210126 07:08:35.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.690" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:35.690" starttime="20210126 07:08:35.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:35.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.690"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.669"></status>
</kw>
<msg timestamp="20210126 07:08:35.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.669"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.669"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.669"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.660"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:35.691" starttime="20210126 07:08:35.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:35.694" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 04817-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:38.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:38.570" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:08:38.570" starttime="20210126 07:08:35.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:38.571" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:08:38.571" starttime="20210126 07:08:38.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:38.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:38.572" starttime="20210126 07:08:38.571"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:38.572" starttime="20210126 07:08:35.692"></status>
</kw>
<msg timestamp="20210126 07:08:38.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:38.572" starttime="20210126 07:08:35.692"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:38.572" starttime="20210126 07:08:35.691"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:38.576" level="INFO">Running command 'ozone sh bucket getacl 04817-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:41.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:41.455" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 07:08:41.455" starttime="20210126 07:08:38.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:41.456" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 07:08:41.456" starttime="20210126 07:08:41.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:41.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:41.457" starttime="20210126 07:08:41.456"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:41.457" starttime="20210126 07:08:38.574"></status>
</kw>
<msg timestamp="20210126 07:08:41.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:41.457" starttime="20210126 07:08:38.574"></status>
</kw>
<msg timestamp="20210126 07:08:41.457" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210126 07:08:41.457" starttime="20210126 07:08:38.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:41.458" starttime="20210126 07:08:41.458"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:41.458" starttime="20210126 07:08:38.572"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:41.462" level="INFO">Running command 'ozone sh bucket getacl 04817-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:44.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:44.382" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:44.383" starttime="20210126 07:08:41.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:44.383" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:44.384" starttime="20210126 07:08:44.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:44.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:44.384" starttime="20210126 07:08:44.384"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:44.384" starttime="20210126 07:08:41.460"></status>
</kw>
<msg timestamp="20210126 07:08:44.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:44.385" starttime="20210126 07:08:41.460"></status>
</kw>
<msg timestamp="20210126 07:08:44.385" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210126 07:08:44.385" starttime="20210126 07:08:41.459"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:44.385" starttime="20210126 07:08:44.385"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:44.385" starttime="20210126 07:08:41.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:44.389" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 04817-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:47.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:47.268" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:08:47.268" starttime="20210126 07:08:44.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:47.269" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210126 07:08:47.269" starttime="20210126 07:08:47.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:47.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:47.270" starttime="20210126 07:08:47.270"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:47.270" starttime="20210126 07:08:44.386"></status>
</kw>
<msg timestamp="20210126 07:08:47.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:47.271" starttime="20210126 07:08:44.386"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:47.271" starttime="20210126 07:08:44.385"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:47.275" level="INFO">Running command 'ozone sh bucket getacl 04817-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:50.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:50.399" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:50.399" starttime="20210126 07:08:47.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:50.401" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:50.401" starttime="20210126 07:08:50.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:50.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:50.401" starttime="20210126 07:08:50.401"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:50.401" starttime="20210126 07:08:47.272"></status>
</kw>
<msg timestamp="20210126 07:08:50.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:50.402" starttime="20210126 07:08:47.272"></status>
</kw>
<msg timestamp="20210126 07:08:50.402" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210126 07:08:50.402" starttime="20210126 07:08:47.272"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:50.402" starttime="20210126 07:08:50.402"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:50.403" starttime="20210126 07:08:47.271"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:50.406" level="INFO">Running command 'ozone sh bucket getacl 04817-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:53.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:53.284" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210126 07:08:53.284" starttime="20210126 07:08:50.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.285" level="INFO">READ</msg>
<status status="PASS" endtime="20210126 07:08:53.285" starttime="20210126 07:08:53.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:53.286" starttime="20210126 07:08:53.285"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.286" starttime="20210126 07:08:50.404"></status>
</kw>
<msg timestamp="20210126 07:08:53.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:53.286" starttime="20210126 07:08:50.404"></status>
</kw>
<msg timestamp="20210126 07:08:53.286" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210126 07:08:53.286" starttime="20210126 07:08:50.403"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:53.287" starttime="20210126 07:08:53.286"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.287" starttime="20210126 07:08:50.403"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:08:53.287" critical="yes" starttime="20210126 07:08:35.659"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:53.293" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:53.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:53.295" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:08:53.295" starttime="20210126 07:08:53.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.296" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:08:53.296" starttime="20210126 07:08:53.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:53.297" starttime="20210126 07:08:53.296"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.297" starttime="20210126 07:08:53.291"></status>
</kw>
<msg timestamp="20210126 07:08:53.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:53.297" starttime="20210126 07:08:53.290"></status>
</kw>
<msg timestamp="20210126 07:08:53.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:08:53.297" starttime="20210126 07:08:53.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:08:53.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:08:53.298" starttime="20210126 07:08:53.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:53.301" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:53.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:53.310" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:53.310" starttime="20210126 07:08:53.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.311" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:53.311" starttime="20210126 07:08:53.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:53.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:53.311" starttime="20210126 07:08:53.311"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.299"></status>
</kw>
<msg timestamp="20210126 07:08:53.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.299"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.298"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.298"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.289"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:53.312" starttime="20210126 07:08:53.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:53.315" level="INFO">Running command 'ozone sh bucket link 04817-source/bucket2 04817-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:55.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:08:55.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:08:55.979" starttime="20210126 07:08:53.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:55.980" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:08:55.981" starttime="20210126 07:08:55.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:08:55.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:08:55.981" starttime="20210126 07:08:55.981"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:55.981" starttime="20210126 07:08:53.313"></status>
</kw>
<msg timestamp="20210126 07:08:55.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:08:55.982" starttime="20210126 07:08:53.313"></status>
</kw>
<status status="PASS" endtime="20210126 07:08:55.982" starttime="20210126 07:08:53.312"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:55.984" level="INFO">Running command 'ozone sh bucket create 04817-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:08:58.789" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:08:58.789" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:08:58.789" starttime="20210126 07:08:55.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:08:58.790" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:08:58.790" starttime="20210126 07:08:58.790"></status>
</kw>
<msg timestamp="20210126 07:08:58.791" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:08:58.791" starttime="20210126 07:08:55.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210126 07:08:58.791" starttime="20210126 07:08:58.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:08:58.795" level="INFO">Running command 'ozone sh bucket create 04817-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:01.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:01.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:01.590" starttime="20210126 07:08:58.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:01.591" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:01.591" starttime="20210126 07:09:01.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:01.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:01.592" starttime="20210126 07:09:01.591"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:01.592" starttime="20210126 07:08:58.792"></status>
</kw>
<msg timestamp="20210126 07:09:01.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:01.592" starttime="20210126 07:08:58.792"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:01.592" starttime="20210126 07:08:58.791"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:01.595" level="INFO">Running command 'ozone sh bucket link 04817-source/bucket1 04817-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:09:04.554" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:09:04.554" starttime="20210126 07:09:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.555" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:09:04.555" starttime="20210126 07:09:04.554"></status>
</kw>
<msg timestamp="20210126 07:09:04.555" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210126 07:09:04.555" starttime="20210126 07:09:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:04.556" starttime="20210126 07:09:04.556"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:04.556" critical="yes" starttime="20210126 07:08:53.288"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.561" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:04.563" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:04.563" starttime="20210126 07:09:04.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.564" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:04.564" starttime="20210126 07:09:04.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:04.564" starttime="20210126 07:09:04.564"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.564" starttime="20210126 07:09:04.558"></status>
</kw>
<msg timestamp="20210126 07:09:04.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:04.565" starttime="20210126 07:09:04.558"></status>
</kw>
<msg timestamp="20210126 07:09:04.565" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:04.565" starttime="20210126 07:09:04.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:04.565" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:04.565" starttime="20210126 07:09:04.565"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.568" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:04.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:04.578" starttime="20210126 07:09:04.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.579" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:04.579" starttime="20210126 07:09:04.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:04.579" starttime="20210126 07:09:04.579"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.567"></status>
</kw>
<msg timestamp="20210126 07:09:04.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.566"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.566"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.565"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.558"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.580" starttime="20210126 07:09:04.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.584" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:04.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:04.587" starttime="20210126 07:09:04.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.588" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:04.588" starttime="20210126 07:09:04.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:04.588" starttime="20210126 07:09:04.588"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.589" starttime="20210126 07:09:04.582"></status>
</kw>
<msg timestamp="20210126 07:09:04.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:04.589" starttime="20210126 07:09:04.582"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.589" starttime="20210126 07:09:04.581"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.592" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:04.594" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:04.594" starttime="20210126 07:09:04.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.595" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:04.595" starttime="20210126 07:09:04.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:04.595" starttime="20210126 07:09:04.595"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.596" starttime="20210126 07:09:04.590"></status>
</kw>
<msg timestamp="20210126 07:09:04.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:04.596" starttime="20210126 07:09:04.590"></status>
</kw>
<msg timestamp="20210126 07:09:04.596" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:04.596" starttime="20210126 07:09:04.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:04.596" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:04.597" starttime="20210126 07:09:04.596"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.599" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:04.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:04.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:04.608" starttime="20210126 07:09:04.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.609" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:04.609" starttime="20210126 07:09:04.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:04.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:04.610" starttime="20210126 07:09:04.609"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.610" starttime="20210126 07:09:04.598"></status>
</kw>
<msg timestamp="20210126 07:09:04.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:04.610" starttime="20210126 07:09:04.597"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.610" starttime="20210126 07:09:04.597"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.610" starttime="20210126 07:09:04.597"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.611" starttime="20210126 07:09:04.589"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:04.611" starttime="20210126 07:09:04.589"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:04.612" level="INFO">Running command 'ozone sh key list 04817-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.535" level="INFO">${output} = {
  "volumeName" : "04817-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-26T07:07:20.921Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210126 07:09:07.535" starttime="20210126 07:09:04.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.536" level="INFO">{
  "volumeName" : "04817-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-26T07:07:20.921Z",
  "modificationTime" : "2021-01-26T07:07:22.454Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210126 07:09:07.536" starttime="20210126 07:09:07.536"></status>
</kw>
<msg timestamp="20210126 07:09:07.537" level="INFO">${result} = {
  "volumeName" : "04817-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-26T07:07:20.921Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210126 07:09:07.537" starttime="20210126 07:09:04.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:07.537" starttime="20210126 07:09:07.537"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.537" starttime="20210126 07:09:04.581"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.537" starttime="20210126 07:09:04.580"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:07.537" critical="yes" starttime="20210126 07:09:04.557"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.543" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.545" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:07.545" starttime="20210126 07:09:07.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.546" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:07.546" starttime="20210126 07:09:07.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:07.546" starttime="20210126 07:09:07.546"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.546" starttime="20210126 07:09:07.540"></status>
</kw>
<msg timestamp="20210126 07:09:07.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:07.547" starttime="20210126 07:09:07.540"></status>
</kw>
<msg timestamp="20210126 07:09:07.547" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:07.547" starttime="20210126 07:09:07.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:07.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:07.547" starttime="20210126 07:09:07.547"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.551" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:07.560" starttime="20210126 07:09:07.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.560" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:07.560" starttime="20210126 07:09:07.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:07.561" starttime="20210126 07:09:07.560"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.561" starttime="20210126 07:09:07.548"></status>
</kw>
<msg timestamp="20210126 07:09:07.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:07.561" starttime="20210126 07:09:07.548"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.562" starttime="20210126 07:09:07.548"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.562" starttime="20210126 07:09:07.548"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.562" starttime="20210126 07:09:07.539"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.562" starttime="20210126 07:09:07.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.566" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:07.568" starttime="20210126 07:09:07.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.569" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:07.569" starttime="20210126 07:09:07.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:07.570" starttime="20210126 07:09:07.569"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.570" starttime="20210126 07:09:07.564"></status>
</kw>
<msg timestamp="20210126 07:09:07.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:07.570" starttime="20210126 07:09:07.564"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.570" starttime="20210126 07:09:07.563"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.573" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.575" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:07.575" starttime="20210126 07:09:07.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.576" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:07.576" starttime="20210126 07:09:07.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:07.576" starttime="20210126 07:09:07.576"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.577" starttime="20210126 07:09:07.571"></status>
</kw>
<msg timestamp="20210126 07:09:07.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:07.577" starttime="20210126 07:09:07.571"></status>
</kw>
<msg timestamp="20210126 07:09:07.577" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:07.577" starttime="20210126 07:09:07.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:07.577" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:07.578" starttime="20210126 07:09:07.577"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.580" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:07.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:07.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:07.589" starttime="20210126 07:09:07.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.590" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:07.590" starttime="20210126 07:09:07.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:07.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:07.591" starttime="20210126 07:09:07.590"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.591" starttime="20210126 07:09:07.579"></status>
</kw>
<msg timestamp="20210126 07:09:07.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:07.591" starttime="20210126 07:09:07.578"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.591" starttime="20210126 07:09:07.578"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.591" starttime="20210126 07:09:07.578"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.592" starttime="20210126 07:09:07.570"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:07.592" starttime="20210126 07:09:07.570"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:07.594" level="INFO">Running command 'ozone sh key list 04817-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:09:10.277" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 04817-target unreadable-link null</msg>
<status status="PASS" endtime="20210126 07:09:10.277" starttime="20210126 07:09:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.278" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 04817-target unreadable-link null</msg>
<status status="PASS" endtime="20210126 07:09:10.278" starttime="20210126 07:09:10.278"></status>
</kw>
<msg timestamp="20210126 07:09:10.279" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 04817-target unreadable-link null</msg>
<status status="PASS" endtime="20210126 07:09:10.279" starttime="20210126 07:09:07.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:10.279" starttime="20210126 07:09:10.279"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.279" starttime="20210126 07:09:07.562"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.280" starttime="20210126 07:09:07.562"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:10.280" critical="yes" starttime="20210126 07:09:07.538"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.288" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:10.290" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:10.290" starttime="20210126 07:09:10.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.291" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:10.291" starttime="20210126 07:09:10.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:10.291" starttime="20210126 07:09:10.291"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.292" starttime="20210126 07:09:10.285"></status>
</kw>
<msg timestamp="20210126 07:09:10.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:10.292" starttime="20210126 07:09:10.285"></status>
</kw>
<msg timestamp="20210126 07:09:10.292" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:10.292" starttime="20210126 07:09:10.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:10.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:10.293" starttime="20210126 07:09:10.292"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.296" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:10.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:10.306" starttime="20210126 07:09:10.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.307" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:10.307" starttime="20210126 07:09:10.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:10.307" starttime="20210126 07:09:10.307"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.294"></status>
</kw>
<msg timestamp="20210126 07:09:10.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.294"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.294"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.293"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.284"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.308" starttime="20210126 07:09:10.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.312" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:10.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:10.315" starttime="20210126 07:09:10.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.315" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:10.315" starttime="20210126 07:09:10.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:10.316" starttime="20210126 07:09:10.316"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.316" starttime="20210126 07:09:10.310"></status>
</kw>
<msg timestamp="20210126 07:09:10.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:10.316" starttime="20210126 07:09:10.309"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.317" starttime="20210126 07:09:10.309"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.320" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:10.322" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:10.322" starttime="20210126 07:09:10.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.323" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:10.323" starttime="20210126 07:09:10.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:10.324" starttime="20210126 07:09:10.323"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.324" starttime="20210126 07:09:10.318"></status>
</kw>
<msg timestamp="20210126 07:09:10.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:10.324" starttime="20210126 07:09:10.318"></status>
</kw>
<msg timestamp="20210126 07:09:10.324" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:10.324" starttime="20210126 07:09:10.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:10.325" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:10.325" starttime="20210126 07:09:10.324"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.328" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:10.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:10.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:10.338" starttime="20210126 07:09:10.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.338" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:10.338" starttime="20210126 07:09:10.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:10.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:10.339" starttime="20210126 07:09:10.338"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.339" starttime="20210126 07:09:10.326"></status>
</kw>
<msg timestamp="20210126 07:09:10.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:10.339" starttime="20210126 07:09:10.326"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.340" starttime="20210126 07:09:10.326"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.340" starttime="20210126 07:09:10.325"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.340" starttime="20210126 07:09:10.317"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:10.340" starttime="20210126 07:09:10.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:10.343" level="INFO">Running command 'ozone sh bucket info 04817-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:13.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:13.285" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210126 07:09:13.285" starttime="20210126 07:09:10.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:13.286" level="INFO">{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:34.190Z",
  "modificationTime" : "2021-01-26T07:07:49.390Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 07:09:13.286" starttime="20210126 07:09:13.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:13.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:13.287" starttime="20210126 07:09:13.287"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:13.287" starttime="20210126 07:09:10.340"></status>
</kw>
<msg timestamp="20210126 07:09:13.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:13.288" starttime="20210126 07:09:10.340"></status>
</kw>
<msg timestamp="20210126 07:09:13.288" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210126 07:09:13.288" starttime="20210126 07:09:10.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:13.288" starttime="20210126 07:09:13.288"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:13.289" starttime="20210126 07:09:13.288"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:13.291" level="INFO">Running command 'ozone sh key list 04817-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:16.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:09:16.322" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 04817-source unreadable-bucket </msg>
<status status="PASS" endtime="20210126 07:09:16.322" starttime="20210126 07:09:13.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:16.323" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 04817-source unreadable-bucket </msg>
<status status="PASS" endtime="20210126 07:09:16.323" starttime="20210126 07:09:16.322"></status>
</kw>
<msg timestamp="20210126 07:09:16.323" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 04817-source unreadable-bucket </msg>
<status status="PASS" endtime="20210126 07:09:16.323" starttime="20210126 07:09:13.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:16.324" starttime="20210126 07:09:16.323"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.324" starttime="20210126 07:09:10.309"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.324" starttime="20210126 07:09:10.308"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:16.324" critical="yes" starttime="20210126 07:09:10.283"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:16.330" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:16.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:16.332" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:16.332" starttime="20210126 07:09:16.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:16.333" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:16.333" starttime="20210126 07:09:16.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:16.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:16.334" starttime="20210126 07:09:16.333"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.334" starttime="20210126 07:09:16.327"></status>
</kw>
<msg timestamp="20210126 07:09:16.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:16.334" starttime="20210126 07:09:16.327"></status>
</kw>
<msg timestamp="20210126 07:09:16.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:16.334" starttime="20210126 07:09:16.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:16.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:16.335" starttime="20210126 07:09:16.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:16.338" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:16.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:16.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:16.348" starttime="20210126 07:09:16.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:16.348" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:16.349" starttime="20210126 07:09:16.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:16.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:16.349" starttime="20210126 07:09:16.349"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.349" starttime="20210126 07:09:16.336"></status>
</kw>
<msg timestamp="20210126 07:09:16.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:16.350" starttime="20210126 07:09:16.336"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.350" starttime="20210126 07:09:16.335"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.350" starttime="20210126 07:09:16.335"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.350" starttime="20210126 07:09:16.326"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:16.350" starttime="20210126 07:09:16.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:16.354" level="INFO">Running command 'ozone sh bucket link 04817-target/loop1 04817-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:19.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:19.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:19.421" starttime="20210126 07:09:16.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:19.423" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:19.423" starttime="20210126 07:09:19.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:19.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:19.423" starttime="20210126 07:09:19.423"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:19.423" starttime="20210126 07:09:16.351"></status>
</kw>
<msg timestamp="20210126 07:09:19.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:19.424" starttime="20210126 07:09:16.351"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:19.424" starttime="20210126 07:09:16.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:19.427" level="INFO">Running command 'ozone sh bucket link 04817-target/loop2 04817-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:22.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:22.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:22.475" starttime="20210126 07:09:19.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:22.476" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:22.476" starttime="20210126 07:09:22.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:22.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:22.477" starttime="20210126 07:09:22.476"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:22.477" starttime="20210126 07:09:19.425"></status>
</kw>
<msg timestamp="20210126 07:09:22.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:22.477" starttime="20210126 07:09:19.425"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:22.477" starttime="20210126 07:09:19.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:22.481" level="INFO">Running command 'ozone sh bucket link 04817-target/loop3 04817-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:25.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:25.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:25.515" starttime="20210126 07:09:22.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:25.516" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:25.517" starttime="20210126 07:09:25.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:25.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:25.517" starttime="20210126 07:09:25.517"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:25.518" starttime="20210126 07:09:22.478"></status>
</kw>
<msg timestamp="20210126 07:09:25.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:25.518" starttime="20210126 07:09:22.478"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:25.518" starttime="20210126 07:09:22.477"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:25.520" level="INFO">Running command 'ozone sh key list 04817-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:28.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20210126 07:09:28.883" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 07:09:28.883" starttime="20210126 07:09:25.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:28.884" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 07:09:28.884" starttime="20210126 07:09:28.883"></status>
</kw>
<msg timestamp="20210126 07:09:28.884" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210126 07:09:28.884" starttime="20210126 07:09:25.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:28.884" starttime="20210126 07:09:28.884"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:28.885" critical="yes" starttime="20210126 07:09:16.325"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:28.890" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:28.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:28.893" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:28.893" starttime="20210126 07:09:28.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:28.893" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:28.894" starttime="20210126 07:09:28.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:28.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:28.894" starttime="20210126 07:09:28.894"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:28.894" starttime="20210126 07:09:28.888"></status>
</kw>
<msg timestamp="20210126 07:09:28.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:28.895" starttime="20210126 07:09:28.888"></status>
</kw>
<msg timestamp="20210126 07:09:28.895" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:28.895" starttime="20210126 07:09:28.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:28.895" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:28.896" starttime="20210126 07:09:28.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:28.899" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:29.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:29.002" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:29.002" starttime="20210126 07:09:28.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:29.003" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:29.003" starttime="20210126 07:09:29.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:29.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:29.004" starttime="20210126 07:09:29.003"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:29.004" starttime="20210126 07:09:28.897"></status>
</kw>
<msg timestamp="20210126 07:09:29.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:29.004" starttime="20210126 07:09:28.897"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:29.005" starttime="20210126 07:09:28.896"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:29.005" starttime="20210126 07:09:28.896"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:29.005" starttime="20210126 07:09:28.887"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:29.005" starttime="20210126 07:09:28.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:29.008" level="INFO">Running command 'ozone sh bucket link 04817-source/bucket1 04817-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:31.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:31.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:31.961" starttime="20210126 07:09:29.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:31.962" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:31.962" starttime="20210126 07:09:31.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:31.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:31.963" starttime="20210126 07:09:31.962"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:31.963" starttime="20210126 07:09:29.006"></status>
</kw>
<msg timestamp="20210126 07:09:31.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:31.963" starttime="20210126 07:09:29.006"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:31.963" starttime="20210126 07:09:29.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:31.966" level="INFO">Running command 'ozone sh key put 04817-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:36.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:36.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:36.527" starttime="20210126 07:09:31.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:36.528" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:36.528" starttime="20210126 07:09:36.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:36.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:36.528" starttime="20210126 07:09:36.528"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:36.529" starttime="20210126 07:09:31.964"></status>
</kw>
<msg timestamp="20210126 07:09:36.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:36.529" starttime="20210126 07:09:31.964"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:36.529" starttime="20210126 07:09:31.964"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210126 07:09:36.531" level="INFO">${postfix} = 28629</msg>
<status status="PASS" endtime="20210126 07:09:36.531" starttime="20210126 07:09:36.530"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210126 07:09:36.531" level="INFO">${tmpfile} = /tmp/tempkey-28629</msg>
<status status="PASS" endtime="20210126 07:09:36.531" starttime="20210126 07:09:36.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:36.535" level="INFO">Running command 'ozone sh key get -f 04817-target/link1/key3 /tmp/tempkey-28629 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:41.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:41.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:41.040" starttime="20210126 07:09:36.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.041" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:41.041" starttime="20210126 07:09:41.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:41.042" starttime="20210126 07:09:41.041"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.042" starttime="20210126 07:09:36.532"></status>
</kw>
<msg timestamp="20210126 07:09:41.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:41.042" starttime="20210126 07:09:36.532"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.042" starttime="20210126 07:09:36.532"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210126 07:09:41.044" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-28629 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:41.047" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210126 07:09:41.047" starttime="20210126 07:09:41.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:41.050" level="INFO">Running command 'rm -f /tmp/tempkey-28629 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:41.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:41.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:41.052" starttime="20210126 07:09:41.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.053" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:41.053" starttime="20210126 07:09:41.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:41.054" starttime="20210126 07:09:41.053"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.054" starttime="20210126 07:09:41.048"></status>
</kw>
<msg timestamp="20210126 07:09:41.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:41.054" starttime="20210126 07:09:41.048"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.054" starttime="20210126 07:09:41.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210126 07:09:41.055" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210126 07:09:41.055" starttime="20210126 07:09:41.054"></status>
</kw>
<msg timestamp="20210126 07:09:41.055" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210126 07:09:41.055" starttime="20210126 07:09:36.530"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:41.055" starttime="20210126 07:09:41.055"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.056" starttime="20210126 07:09:36.529"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:41.056" critical="yes" starttime="20210126 07:09:28.886"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:41.061" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:41.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:41.063" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210126 07:09:41.063" starttime="20210126 07:09:41.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.064" level="INFO">scm</msg>
<status status="PASS" endtime="20210126 07:09:41.064" starttime="20210126 07:09:41.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:41.065" starttime="20210126 07:09:41.065"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.066" starttime="20210126 07:09:41.059"></status>
</kw>
<msg timestamp="20210126 07:09:41.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:41.066" starttime="20210126 07:09:41.059"></status>
</kw>
<msg timestamp="20210126 07:09:41.066" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210126 07:09:41.066" starttime="20210126 07:09:41.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210126 07:09:41.067" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210126 07:09:41.067" starttime="20210126 07:09:41.066"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:41.070" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:41.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:41.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:41.080" starttime="20210126 07:09:41.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.083" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:41.083" starttime="20210126 07:09:41.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:41.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.083"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.068"></status>
</kw>
<msg timestamp="20210126 07:09:41.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.068"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.067"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.067"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.058"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:41.084" starttime="20210126 07:09:41.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:41.088" level="INFO">Running command 'ozone sh bucket delete 04817-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:43.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:43.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210126 07:09:43.628" starttime="20210126 07:09:41.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:43.629" level="INFO"></msg>
<status status="PASS" endtime="20210126 07:09:43.629" starttime="20210126 07:09:43.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:43.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:43.629" starttime="20210126 07:09:43.629"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:43.630" starttime="20210126 07:09:41.085"></status>
</kw>
<msg timestamp="20210126 07:09:43.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:43.630" starttime="20210126 07:09:41.085"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:43.630" starttime="20210126 07:09:41.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:43.633" level="INFO">Running command 'ozone sh bucket list 04817-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:46.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:46.889" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T...</msg>
<status status="PASS" endtime="20210126 07:09:46.889" starttime="20210126 07:09:43.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:46.890" level="INFO">{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:09:01.462Z",
  "modificationTime" : "2021-01-26T07:09:01.462Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:52.223Z",
  "modificationTime" : "2021-01-26T07:07:52.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:34.190Z",
  "modificationTime" : "2021-01-26T07:07:49.390Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:08:55.866Z",
  "modificationTime" : "2021-01-26T07:08:55.866Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:09:31.809Z",
  "modificationTime" : "2021-01-26T07:09:31.809Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:09:25.323Z",
  "modificationTime" : "2021-01-26T07:09:25.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:09:19.347Z",
  "modificationTime" : "2021-01-26T07:09:19.347Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:09:22.311Z",
  "modificationTime" : "2021-01-26T07:09:22.311Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:28.513Z",
  "modificationTime" : "2021-01-26T07:07:46.349Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T07:07:31.399Z",
  "modificationTime" : "2021-01-26T07:07:31.399Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04817-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210126 07:09:46.890" starttime="20210126 07:09:46.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:46.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:46.891" starttime="20210126 07:09:46.890"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:46.891" starttime="20210126 07:09:43.631"></status>
</kw>
<msg timestamp="20210126 07:09:46.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:46.891" starttime="20210126 07:09:43.631"></status>
</kw>
<msg timestamp="20210126 07:09:46.892" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "04817-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-26T...</msg>
<status status="PASS" endtime="20210126 07:09:46.892" starttime="20210126 07:09:43.630"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:46.892" starttime="20210126 07:09:46.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210126 07:09:46.896" level="INFO">Running command 'ozone sh key list 04817-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210126 07:09:49.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210126 07:09:49.951" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210126 07:09:49.951" starttime="20210126 07:09:46.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210126 07:09:49.952" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210126 07:09:49.952" starttime="20210126 07:09:49.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210126 07:09:49.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210126 07:09:49.953" starttime="20210126 07:09:49.952"></status>
</kw>
<status status="PASS" endtime="20210126 07:09:49.953" starttime="20210126 07:09:46.893"></status>
</kw>
<msg timestamp="20210126 07:09:49.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210126 07:09:49.953" starttime="20210126 07:09:46.893"></status>
</kw>
<msg timestamp="20210126 07:09:49.953" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210126 07:09:49.953" starttime="20210126 07:09:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210126 07:09:49.954" starttime="20210126 07:09:49.953"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210126 07:09:49.954" critical="yes" starttime="20210126 07:09:41.057"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210126 07:09:49.957" starttime="20210126 07:07:08.802"></status>
</suite>
<status status="PASS" elapsedtime="186458" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
