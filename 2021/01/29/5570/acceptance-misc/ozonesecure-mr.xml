<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210129 11:04:29.901" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:09.191" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:13.234" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:00:13.234" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 11:00:13.234" starttime="20210129 11:00:09.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:13.235" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 11:00:13.235" starttime="20210129 11:00:13.234"></status>
</kw>
<msg timestamp="20210129 11:00:13.235" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 11:00:13.235" starttime="20210129 11:00:09.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:13.241" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:17.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:17.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:17.095" starttime="20210129 11:00:13.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:17.096" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:17.096" starttime="20210129 11:00:17.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:17.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:17.097" starttime="20210129 11:00:17.096"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:17.098" starttime="20210129 11:00:13.237"></status>
</kw>
<msg timestamp="20210129 11:00:17.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:17.098" starttime="20210129 11:00:13.237"></status>
</kw>
<msg timestamp="20210129 11:00:17.098" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210129 11:00:17.098" starttime="20210129 11:00:13.236"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210129 11:00:17.099" starttime="20210129 11:00:17.099"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:17.099" starttime="20210129 11:00:13.236"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:17.100" starttime="20210129 11:00:13.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:17.104" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:20.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:20.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:20.641" starttime="20210129 11:00:17.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:20.642" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:20.642" starttime="20210129 11:00:20.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:20.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:20.643" starttime="20210129 11:00:20.642"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:20.643" starttime="20210129 11:00:17.102"></status>
</kw>
<msg timestamp="20210129 11:00:20.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:20.643" starttime="20210129 11:00:17.102"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:20.643" starttime="20210129 11:00:17.101"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:20.644" starttime="20210129 11:00:17.100"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:20.644" starttime="20210129 11:00:17.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 11:00:20.644" starttime="20210129 11:00:20.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:20.649" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:24.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:24.497" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:00...</msg>
<status status="PASS" endtime="20210129 11:00:24.497" starttime="20210129 11:00:20.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:24.498" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:00:20.415Z",
  "modificationTime" : "2021-01-29T11:00:20.415Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 11:00:24.499" starttime="20210129 11:00:24.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:24.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:24.499" starttime="20210129 11:00:24.499"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:24.499" starttime="20210129 11:00:20.646"></status>
</kw>
<msg timestamp="20210129 11:00:24.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:24.500" starttime="20210129 11:00:20.645"></status>
</kw>
<msg timestamp="20210129 11:00:24.500" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:00...</msg>
<status status="PASS" endtime="20210129 11:00:24.500" starttime="20210129 11:00:20.644"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210129 11:00:24.501" starttime="20210129 11:00:24.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:00:24.505" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:00:24.505" starttime="20210129 11:00:24.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:00:24.505" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:00:24.505" starttime="20210129 11:00:24.505"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:24.506" starttime="20210129 11:00:24.503"></status>
</kw>
<msg timestamp="20210129 11:00:24.506" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:00:24.506" starttime="20210129 11:00:24.503"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:24.506" starttime="20210129 11:00:24.502"></status>
</kw>
<msg timestamp="20210129 11:00:24.507" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 11:00:24.507" starttime="20210129 11:00:24.501"></status>
</kw>
<msg timestamp="20210129 11:00:24.507" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 11:00:24.507" starttime="20210129 11:00:24.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:24.511" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:28.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:28.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:28.029" starttime="20210129 11:00:24.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:28.030" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:28.031" starttime="20210129 11:00:28.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:28.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:28.031" starttime="20210129 11:00:28.031"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:28.031" starttime="20210129 11:00:24.508"></status>
</kw>
<msg timestamp="20210129 11:00:28.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:28.032" starttime="20210129 11:00:24.508"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:28.032" starttime="20210129 11:00:24.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:28.036" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:36.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:36.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:36.795" starttime="20210129 11:00:28.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:36.796" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:36.796" starttime="20210129 11:00:36.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:36.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:36.797" starttime="20210129 11:00:36.797"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:36.797" starttime="20210129 11:00:28.033"></status>
</kw>
<msg timestamp="20210129 11:00:36.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:36.798" starttime="20210129 11:00:28.033"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:36.798" starttime="20210129 11:00:28.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:36.801" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:42.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:42.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:42.525" starttime="20210129 11:00:36.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:42.527" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:42.527" starttime="20210129 11:00:42.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:42.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:42.528" starttime="20210129 11:00:42.527"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:42.528" starttime="20210129 11:00:36.799"></status>
</kw>
<msg timestamp="20210129 11:00:42.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:42.528" starttime="20210129 11:00:36.799"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:42.528" starttime="20210129 11:00:36.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:42.532" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:48.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:48.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:48.487" starttime="20210129 11:00:42.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:48.488" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:48.488" starttime="20210129 11:00:48.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:48.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:48.489" starttime="20210129 11:00:48.488"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:48.489" starttime="20210129 11:00:42.530"></status>
</kw>
<msg timestamp="20210129 11:00:48.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:48.489" starttime="20210129 11:00:42.529"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:48.489" starttime="20210129 11:00:42.529"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:00:48.490" critical="yes" starttime="20210129 11:00:09.186"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:00:48.496" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:00:48.496" starttime="20210129 11:00:48.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:00:48.497" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:00:48.497" starttime="20210129 11:00:48.496"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:48.497" starttime="20210129 11:00:48.495"></status>
</kw>
<msg timestamp="20210129 11:00:48.497" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:00:48.497" starttime="20210129 11:00:48.494"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:48.497" starttime="20210129 11:00:48.493"></status>
</kw>
<msg timestamp="20210129 11:00:48.497" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 11:00:48.497" starttime="20210129 11:00:48.493"></status>
</kw>
<msg timestamp="20210129 11:00:48.498" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 11:00:48.498" starttime="20210129 11:00:48.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:48.501" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:52.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:52.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:52.242" starttime="20210129 11:00:48.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:52.243" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:52.243" starttime="20210129 11:00:52.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:52.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:52.244" starttime="20210129 11:00:52.243"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:52.244" starttime="20210129 11:00:48.499"></status>
</kw>
<msg timestamp="20210129 11:00:52.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:52.245" starttime="20210129 11:00:48.499"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:52.245" starttime="20210129 11:00:48.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:52.249" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:55.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:55.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:55.746" starttime="20210129 11:00:52.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:55.747" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:55.747" starttime="20210129 11:00:55.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:55.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:55.748" starttime="20210129 11:00:55.747"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:55.748" starttime="20210129 11:00:52.246"></status>
</kw>
<msg timestamp="20210129 11:00:55.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:55.748" starttime="20210129 11:00:52.246"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:55.748" starttime="20210129 11:00:52.245"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:00:55.749" critical="yes" starttime="20210129 11:00:48.491"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210129 11:00:55.750" starttime="20210129 11:00:09.121"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 11:02:53.364" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 11:02:53.364" starttime="20210129 11:02:53.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:02:53.365" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 11:02:53.365" starttime="20210129 11:02:53.365"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:53.365" starttime="20210129 11:02:53.363"></status>
</kw>
<msg timestamp="20210129 11:02:53.366" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 11:02:53.366" starttime="20210129 11:02:53.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:02:53.367" starttime="20210129 11:02:53.366"></status>
</kw>
<msg timestamp="20210129 11:02:53.367" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 11:02:53.367" starttime="20210129 11:02:53.366"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:53.367" starttime="20210129 11:02:53.362"></status>
</kw>
<msg timestamp="20210129 11:02:53.367" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:02:53.367" starttime="20210129 11:02:53.361"></status>
</kw>
<msg timestamp="20210129 11:02:53.368" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:02:53.368" starttime="20210129 11:02:53.360"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 11:02:53.368" level="INFO">${random} = 45282</msg>
<status status="PASS" endtime="20210129 11:02:53.368" starttime="20210129 11:02:53.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:02:53.374" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-45282 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:02:57.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:02:57.183" level="INFO">${output} = 2021-01-29 11:02:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:02:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 11:02:57.183" starttime="20210129 11:02:53.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:02:57.184" level="INFO">2021-01-29 11:02:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:02:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:02:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:02:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:02:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D8BBDFB1FAFC-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:02:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 11:02:57.184" starttime="20210129 11:02:57.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:02:57.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:02:57.185" starttime="20210129 11:02:57.184"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:57.185" starttime="20210129 11:02:53.369"></status>
</kw>
<msg timestamp="20210129 11:02:57.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:02:57.185" starttime="20210129 11:02:53.369"></status>
</kw>
<msg timestamp="20210129 11:02:57.186" level="INFO">${result} = 2021-01-29 11:02:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:02:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 11:02:57.186" starttime="20210129 11:02:53.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:02:57.190" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:02:59.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:02:59.234" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 ofs://om/volume1/bucket1/ozone-22563
-rw-...</msg>
<status status="PASS" endtime="20210129 11:02:59.234" starttime="20210129 11:02:57.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:02:59.235" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 ofs://om/volume1/bucket1/ozone-22563
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:02 ofs://om/volume1/bucket1/ozone-45282
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:02 ofs://om/volume1/bucket1/wordcount-IouEFncz.txt</msg>
<status status="PASS" endtime="20210129 11:02:59.235" starttime="20210129 11:02:59.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:02:59.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:02:59.236" starttime="20210129 11:02:59.235"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:59.236" starttime="20210129 11:02:57.187"></status>
</kw>
<msg timestamp="20210129 11:02:59.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:02:59.237" starttime="20210129 11:02:57.186"></status>
</kw>
<msg timestamp="20210129 11:02:59.237" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 ofs://om/volume1/bucket1/ozone-22563
-rw-...</msg>
<status status="PASS" endtime="20210129 11:02:59.237" starttime="20210129 11:02:57.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:02:59.238" starttime="20210129 11:02:59.237"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:02:59.238" critical="yes" starttime="20210129 11:02:53.359"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 11:02:59.239" starttime="20210129 11:02:53.293"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:01:22.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:01:22.154" starttime="20210129 11:01:22.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:01:22.155" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:01:22.155" starttime="20210129 11:01:22.154"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:22.155" starttime="20210129 11:01:22.153"></status>
</kw>
<msg timestamp="20210129 11:01:22.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:01:22.155" starttime="20210129 11:01:22.153"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:22.156" starttime="20210129 11:01:22.152"></status>
</kw>
<msg timestamp="20210129 11:01:22.156" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:01:22.156" starttime="20210129 11:01:22.151"></status>
</kw>
<msg timestamp="20210129 11:01:22.156" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:01:22.156" starttime="20210129 11:01:22.150"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 11:01:22.157" level="INFO">${random} = 22563</msg>
<status status="PASS" endtime="20210129 11:01:22.157" starttime="20210129 11:01:22.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:22.162" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-22563 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:01:26.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:01:26.091" level="INFO">${output} = 2021-01-29 11:01:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 11:01:26.091" starttime="20210129 11:01:22.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:01:26.093" level="INFO">2021-01-29 11:01:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:01:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:01:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:01:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4B1CD3AC555-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:01:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 11:01:26.093" starttime="20210129 11:01:26.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:01:26.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:01:26.094" starttime="20210129 11:01:26.093"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:26.094" starttime="20210129 11:01:22.158"></status>
</kw>
<msg timestamp="20210129 11:01:26.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:01:26.094" starttime="20210129 11:01:22.158"></status>
</kw>
<msg timestamp="20210129 11:01:26.095" level="INFO">${result} = 2021-01-29 11:01:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 11:01:26.095" starttime="20210129 11:01:22.157"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:26.099" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:01:28.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:01:28.096" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 o3fs://bucket1.volume1.om/ozone-22563
dr...</msg>
<status status="PASS" endtime="20210129 11:01:28.096" starttime="20210129 11:01:26.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:01:28.097" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 o3fs://bucket1.volume1.om/ozone-22563
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 11:01:28.097" starttime="20210129 11:01:28.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:01:28.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:01:28.098" starttime="20210129 11:01:28.097"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:28.098" starttime="20210129 11:01:26.096"></status>
</kw>
<msg timestamp="20210129 11:01:28.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:01:28.098" starttime="20210129 11:01:26.096"></status>
</kw>
<msg timestamp="20210129 11:01:28.098" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 11:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 11:01 o3fs://bucket1.volume1.om/ozone-22563
dr...</msg>
<status status="PASS" endtime="20210129 11:01:28.098" starttime="20210129 11:01:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:01:28.099" starttime="20210129 11:01:28.099"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:01:28.099" critical="yes" starttime="20210129 11:01:22.149"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 11:01:28.100" starttime="20210129 11:01:22.084"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:16.991" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:01:16.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:01:16.993" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210129 11:01:16.993" starttime="20210129 11:01:16.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:01:16.994" level="INFO">rm</msg>
<status status="PASS" endtime="20210129 11:01:16.994" starttime="20210129 11:01:16.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:01:16.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:01:16.995" starttime="20210129 11:01:16.995"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:16.996" starttime="20210129 11:01:16.986"></status>
</kw>
<msg timestamp="20210129 11:01:16.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:01:16.996" starttime="20210129 11:01:16.986"></status>
</kw>
<msg timestamp="20210129 11:01:16.996" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210129 11:01:16.996" starttime="20210129 11:01:16.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:01:16.998" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:01:16.998" starttime="20210129 11:01:16.996"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:17.002" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:01:17.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:01:17.021" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:01:17.021" starttime="20210129 11:01:17.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:01:17.022" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:01:17.022" starttime="20210129 11:01:17.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:01:17.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:01:17.023" starttime="20210129 11:01:17.022"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:17.023" starttime="20210129 11:01:16.999"></status>
</kw>
<msg timestamp="20210129 11:01:17.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:01:17.023" starttime="20210129 11:01:16.999"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:17.023" starttime="20210129 11:01:16.998"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:17.024" starttime="20210129 11:01:16.998"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:17.024" starttime="20210129 11:01:16.985"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:01:17.024" critical="yes" starttime="20210129 11:01:16.984"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210129 11:01:17.025" starttime="20210129 11:01:16.931"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:04.052" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:04.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:04.055" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210129 11:00:04.055" starttime="20210129 11:00:04.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:04.056" level="INFO">om</msg>
<status status="PASS" endtime="20210129 11:00:04.056" starttime="20210129 11:00:04.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:04.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:04.056" starttime="20210129 11:00:04.056"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:04.057" starttime="20210129 11:00:04.047"></status>
</kw>
<msg timestamp="20210129 11:00:04.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:04.057" starttime="20210129 11:00:04.047"></status>
</kw>
<msg timestamp="20210129 11:00:04.057" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210129 11:00:04.057" starttime="20210129 11:00:04.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:00:04.058" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:00:04.058" starttime="20210129 11:00:04.057"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:00:04.062" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:00:04.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:00:04.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:00:04.078" starttime="20210129 11:00:04.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:00:04.079" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:00:04.079" starttime="20210129 11:00:04.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:00:04.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:00:04.080" starttime="20210129 11:00:04.079"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:04.080" starttime="20210129 11:00:04.060"></status>
</kw>
<msg timestamp="20210129 11:00:04.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:00:04.081" starttime="20210129 11:00:04.059"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:04.081" starttime="20210129 11:00:04.059"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:04.081" starttime="20210129 11:00:04.058"></status>
</kw>
<status status="PASS" endtime="20210129 11:00:04.081" starttime="20210129 11:00:04.045"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:00:04.082" critical="yes" starttime="20210129 11:00:04.044"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210129 11:00:04.083" starttime="20210129 11:00:03.983"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:03:04.365" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:03:04.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:03:04.371" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:04.371" starttime="20210129 11:03:04.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:03:04.372" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:04.372" starttime="20210129 11:03:04.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:03:04.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:03:04.372" starttime="20210129 11:03:04.372"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:04.373" starttime="20210129 11:03:04.361"></status>
</kw>
<msg timestamp="20210129 11:03:04.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:03:04.373" starttime="20210129 11:03:04.361"></status>
</kw>
<msg timestamp="20210129 11:03:04.373" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:04.373" starttime="20210129 11:03:04.360"></status>
</kw>
<msg timestamp="20210129 11:03:04.373" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:04.373" starttime="20210129 11:03:04.360"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 11:03:04.378" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 11:03:04.378" starttime="20210129 11:03:04.378"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:04.379" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 11:03:04.379" starttime="20210129 11:03:04.378"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:04.379" starttime="20210129 11:03:04.377"></status>
</kw>
<msg timestamp="20210129 11:03:04.379" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 11:03:04.379" starttime="20210129 11:03:04.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:03:04.380" starttime="20210129 11:03:04.380"></status>
</kw>
<msg timestamp="20210129 11:03:04.380" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 11:03:04.380" starttime="20210129 11:03:04.379"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:04.381" starttime="20210129 11:03:04.376"></status>
</kw>
<msg timestamp="20210129 11:03:04.381" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:03:04.381" starttime="20210129 11:03:04.374"></status>
</kw>
<msg timestamp="20210129 11:03:04.381" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:03:04.381" starttime="20210129 11:03:04.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:03:04.385" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:03:45.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:03:45.909" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:03:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:03:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 11:03:45.909" starttime="20210129 11:03:04.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:03:45.910" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:03:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:03:06 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:03:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:03:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:03:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08D174A00A0D-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:03:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-29 11:03:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FF7C5A3047E5-&gt;2a0f3995-f1cf-472d-82d4-87dcce86bb84
2021-01-29 11:03:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-29 11:03:10 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:03:10 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-29 11:03:10 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918190839, maxDate=1612522990839, sequenceNumber=3, masterKeyId=2))
2021-01-29 11:03:10 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c d1 be ee f4 2e 38 8c d9 f0 8e f7 2e 40 03 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-29 11:03:10 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918190839, maxDate=1612522990839, sequenceNumber=3, masterKeyId=2)
2021-01-29 11:03:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 11:03:11 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 11:03:11 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 11:03:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611917951327_0003
2021-01-29 11:03:11 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c d1 be ee f4 2e 38 8c d9 f0 8e f7 2e 40 03 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918190839, maxDate=1612522990839, sequenceNumber=3, masterKeyId=2)]
2021-01-29 11:03:12 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 11:03:12 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 11:03:12 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-29 11:03:12 INFO  YarnClientImpl:329 - Submitted application application_1611917951327_0003
2021-01-29 11:03:12 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611917951327_0003/
2021-01-29 11:03:12 INFO  Job:1614 - Running job: job_1611917951327_0003
2021-01-29 11:03:20 INFO  Job:1635 - Job job_1611917951327_0003 running in uber mode : false
2021-01-29 11:03:21 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 11:03:30 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 11:03:32 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 11:03:33 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 11:03:42 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 11:03:45 INFO  Job:1653 - Job job_1611917951327_0003 completed successfully
2021-01-29 11:03:45 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101057
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43748
		Total time spent by all reduces in occupied slots (ms)=18294
		Total time spent by all map tasks (ms)=21874
		Total time spent by all reduce tasks (ms)=9147
		Total vcore-milliseconds taken by all map tasks=21874
		Total vcore-milliseconds taken by all reduce tasks=9147
		Total megabyte-milliseconds taken by all map tasks=44797952
		Total megabyte-milliseconds taken by all reduce tasks=18733056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1141
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1492475904
		Virtual memory (bytes) snapshot=14029156352
		Total committed heap usage (bytes)=1258815488
		Peak Map Physical memory (bytes)=390279168
		Peak Map Virtual memory (bytes)=3510771712
		Peak Reduce Physical memory (bytes)=327561216
		Peak Reduce Virtual memory (bytes)=3528159232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.024 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 11:03:45.911" starttime="20210129 11:03:45.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:03:45.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:03:45.911" starttime="20210129 11:03:45.911"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.912" starttime="20210129 11:03:04.383"></status>
</kw>
<msg timestamp="20210129 11:03:45.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:03:45.912" starttime="20210129 11:03:04.382"></status>
</kw>
<msg timestamp="20210129 11:03:45.912" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:03:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:03:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 11:03:45.912" starttime="20210129 11:03:04.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 11:03:45.914" starttime="20210129 11:03:45.913"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 11:03:45.915" critical="yes" starttime="20210129 11:03:04.359"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:03:45.920" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:03:45.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:03:45.926" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:45.926" starttime="20210129 11:03:45.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:03:45.927" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:45.927" starttime="20210129 11:03:45.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:03:45.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:03:45.928" starttime="20210129 11:03:45.927"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.928" starttime="20210129 11:03:45.918"></status>
</kw>
<msg timestamp="20210129 11:03:45.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:03:45.929" starttime="20210129 11:03:45.917"></status>
</kw>
<msg timestamp="20210129 11:03:45.929" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:45.929" starttime="20210129 11:03:45.917"></status>
</kw>
<msg timestamp="20210129 11:03:45.929" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:03:45.930" starttime="20210129 11:03:45.917"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 11:03:45.930" level="INFO">${random} = us6vb09r</msg>
<status status="PASS" endtime="20210129 11:03:45.930" starttime="20210129 11:03:45.930"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 11:03:45.934" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 11:03:45.934" starttime="20210129 11:03:45.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:45.935" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.935" starttime="20210129 11:03:45.934"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.935" starttime="20210129 11:03:45.933"></status>
</kw>
<msg timestamp="20210129 11:03:45.935" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.935" starttime="20210129 11:03:45.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:03:45.936" starttime="20210129 11:03:45.936"></status>
</kw>
<msg timestamp="20210129 11:03:45.936" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 11:03:45.936" starttime="20210129 11:03:45.935"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.937" starttime="20210129 11:03:45.932"></status>
</kw>
<msg timestamp="20210129 11:03:45.937" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:03:45.937" starttime="20210129 11:03:45.931"></status>
</kw>
<msg timestamp="20210129 11:03:45.937" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 11:03:45.937" starttime="20210129 11:03:45.930"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 11:03:45.941" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 11:03:45.941" starttime="20210129 11:03:45.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:45.941" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.941" starttime="20210129 11:03:45.941"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.942" starttime="20210129 11:03:45.940"></status>
</kw>
<msg timestamp="20210129 11:03:45.942" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.942" starttime="20210129 11:03:45.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:03:45.943" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210129 11:03:45.943" starttime="20210129 11:03:45.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:45.944" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210129 11:03:45.944" starttime="20210129 11:03:45.943"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.944" starttime="20210129 11:03:45.942"></status>
</kw>
<msg timestamp="20210129 11:03:45.945" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210129 11:03:45.945" starttime="20210129 11:03:45.942"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.945" starttime="20210129 11:03:45.938"></status>
</kw>
<msg timestamp="20210129 11:03:45.945" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 11:03:45.945" starttime="20210129 11:03:45.938"></status>
</kw>
<msg timestamp="20210129 11:03:45.945" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 11:03:45.945" starttime="20210129 11:03:45.937"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 11:03:45.949" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 11:03:45.949" starttime="20210129 11:03:45.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:45.950" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.950" starttime="20210129 11:03:45.949"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.950" starttime="20210129 11:03:45.948"></status>
</kw>
<msg timestamp="20210129 11:03:45.950" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 11:03:45.950" starttime="20210129 11:03:45.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:03:45.952" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210129 11:03:45.952" starttime="20210129 11:03:45.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:03:45.952" level="INFO">${result} = /wordcount-us6vb09r.txt</msg>
<status status="PASS" endtime="20210129 11:03:45.952" starttime="20210129 11:03:45.952"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.952" starttime="20210129 11:03:45.951"></status>
</kw>
<msg timestamp="20210129 11:03:45.952" level="INFO">${path_with_leading} = /wordcount-us6vb09r.txt</msg>
<status status="PASS" endtime="20210129 11:03:45.953" starttime="20210129 11:03:45.950"></status>
</kw>
<status status="PASS" endtime="20210129 11:03:45.953" starttime="20210129 11:03:45.947"></status>
</kw>
<msg timestamp="20210129 11:03:45.953" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-us6vb09r.txt</msg>
<status status="PASS" endtime="20210129 11:03:45.953" starttime="20210129 11:03:45.946"></status>
</kw>
<msg timestamp="20210129 11:03:45.953" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-us6vb09r.txt</msg>
<status status="PASS" endtime="20210129 11:03:45.953" starttime="20210129 11:03:45.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:03:45.957" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-us6vb09r.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:04:21.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:04:21.237" level="INFO">${output} = 2021-01-29 11:03:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:03:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210129 11:04:21.237" starttime="20210129 11:03:45.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:04:21.238" level="INFO">2021-01-29 11:03:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:03:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-29 11:03:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918228289, maxDate=1612523028289, sequenceNumber=4, masterKeyId=2))
2021-01-29 11:03:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 f5 c0 ee f4 2e 38 e7 fd f2 8e f7 2e 40 04 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-29 11:03:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918228289, maxDate=1612523028289, sequenceNumber=4, masterKeyId=2)
2021-01-29 11:03:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 11:03:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:03:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:03:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:03:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:03:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E1E8F29EECD-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:03:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 11:03:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 11:03:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1036C4088DF-&gt;2a0f3995-f1cf-472d-82d4-87dcce86bb84
2021-01-29 11:03:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 11:03:50 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 11:03:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611917951327_0004
2021-01-29 11:03:50 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 f5 c0 ee f4 2e 38 e7 fd f2 8e f7 2e 40 04 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918228289, maxDate=1612523028289, sequenceNumber=4, masterKeyId=2)]
2021-01-29 11:03:50 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 11:03:50 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 11:03:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-29 11:03:51 INFO  YarnClientImpl:329 - Submitted application application_1611917951327_0004
2021-01-29 11:03:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611917951327_0004/
2021-01-29 11:03:51 INFO  Job:1614 - Running job: job_1611917951327_0004
2021-01-29 11:03:59 INFO  Job:1635 - Job job_1611917951327_0004 running in uber mode : false
2021-01-29 11:03:59 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 11:04:10 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 11:04:12 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 11:04:17 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 11:04:20 INFO  Job:1653 - Job job_1611917951327_0004 completed successfully
2021-01-29 11:04:20 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50970
		Total time spent by all reduces in occupied slots (ms)=8134
		Total time spent by all map tasks (ms)=25485
		Total time spent by all reduce tasks (ms)=4067
		Total vcore-milliseconds taken by all map tasks=25485
		Total vcore-milliseconds taken by all reduce tasks=4067
		Total megabyte-milliseconds taken by all map tasks=52193280
		Total megabyte-milliseconds taken by all reduce tasks=8329216
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1044
		CPU time spent (ms)=8590
		Physical memory (bytes) snapshot=1466765312
		Virtual memory (bytes) snapshot=14056996864
		Total committed heap usage (bytes)=1263009792
		Peak Map Physical memory (bytes)=395681792
		Peak Map Virtual memory (bytes)=3510919168
		Peak Reduce Physical memory (bytes)=317960192
		Peak Reduce Virtual memory (bytes)=3526094848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 11:04:21.239" starttime="20210129 11:04:21.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:04:21.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:04:21.239" starttime="20210129 11:04:21.239"></status>
</kw>
<status status="PASS" endtime="20210129 11:04:21.240" starttime="20210129 11:03:45.954"></status>
</kw>
<msg timestamp="20210129 11:04:21.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:04:21.240" starttime="20210129 11:03:45.954"></status>
</kw>
<msg timestamp="20210129 11:04:21.241" level="INFO">${output} = 2021-01-29 11:03:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:03:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210129 11:04:21.241" starttime="20210129 11:03:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 11:04:21.241" starttime="20210129 11:04:21.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 11:04:21.242" starttime="20210129 11:04:21.242"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 11:04:21.242" critical="yes" starttime="20210129 11:03:45.916"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 11:04:21.244" starttime="20210129 11:03:04.296"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:33.273" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:01:33.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:01:33.279" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:01:33.279" starttime="20210129 11:01:33.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:01:33.280" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:01:33.280" starttime="20210129 11:01:33.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:01:33.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:01:33.281" starttime="20210129 11:01:33.281"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:33.282" starttime="20210129 11:01:33.269"></status>
</kw>
<msg timestamp="20210129 11:01:33.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:01:33.282" starttime="20210129 11:01:33.268"></status>
</kw>
<msg timestamp="20210129 11:01:33.282" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:01:33.282" starttime="20210129 11:01:33.268"></status>
</kw>
<msg timestamp="20210129 11:01:33.283" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:01:33.283" starttime="20210129 11:01:33.267"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:01:33.288" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:01:33.288" starttime="20210129 11:01:33.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:01:33.289" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:01:33.289" starttime="20210129 11:01:33.289"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:33.289" starttime="20210129 11:01:33.287"></status>
</kw>
<msg timestamp="20210129 11:01:33.289" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:01:33.289" starttime="20210129 11:01:33.286"></status>
</kw>
<status status="PASS" endtime="20210129 11:01:33.290" starttime="20210129 11:01:33.286"></status>
</kw>
<msg timestamp="20210129 11:01:33.290" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:01:33.290" starttime="20210129 11:01:33.284"></status>
</kw>
<msg timestamp="20210129 11:01:33.290" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:01:33.290" starttime="20210129 11:01:33.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:01:33.293" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:02:14.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:02:14.123" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:01:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 11:02:14.123" starttime="20210129 11:01:33.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:02:14.125" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:01:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:01:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:01:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:01:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4B489B10737-&gt;2a0f3995-f1cf-472d-82d4-87dcce86bb84
2021-01-29 11:01:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-29 11:01:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DACB923F3886-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:01:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-29 11:01:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:01:37 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-29 11:01:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918098182, maxDate=1612522898182, sequenceNumber=1, masterKeyId=2))
2021-01-29 11:01:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 de f6 b8 ee f4 2e 38 de fe ea 8e f7 2e 40 01 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-29 11:01:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918098182, maxDate=1612522898182, sequenceNumber=1, masterKeyId=2)
2021-01-29 11:01:38 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 11:01:38 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 11:01:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611917951327_0001
2021-01-29 11:01:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 de f6 b8 ee f4 2e 38 de fe ea 8e f7 2e 40 01 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918098182, maxDate=1612522898182, sequenceNumber=1, masterKeyId=2)]
2021-01-29 11:01:39 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 11:01:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 11:01:39 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-29 11:01:40 INFO  YarnClientImpl:329 - Submitted application application_1611917951327_0001
2021-01-29 11:01:41 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611917951327_0001/
2021-01-29 11:01:41 INFO  Job:1614 - Running job: job_1611917951327_0001
2021-01-29 11:01:52 INFO  Job:1635 - Job job_1611917951327_0001 running in uber mode : false
2021-01-29 11:01:52 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 11:02:03 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 11:02:04 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 11:02:05 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 11:02:10 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 11:02:13 INFO  Job:1653 - Job job_1611917951327_0001 completed successfully
2021-01-29 11:02:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101277
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49318
		Total time spent by all reduces in occupied slots (ms)=7546
		Total time spent by all map tasks (ms)=24659
		Total time spent by all reduce tasks (ms)=3773
		Total vcore-milliseconds taken by all map tasks=24659
		Total vcore-milliseconds taken by all reduce tasks=3773
		Total megabyte-milliseconds taken by all map tasks=50501632
		Total megabyte-milliseconds taken by all reduce tasks=7727104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1417
		CPU time spent (ms)=7520
		Physical memory (bytes) snapshot=1589243904
		Virtual memory (bytes) snapshot=14052294656
		Total committed heap usage (bytes)=1399324672
		Peak Map Physical memory (bytes)=547377152
		Peak Map Virtual memory (bytes)=3509702656
		Peak Reduce Physical memory (bytes)=318836736
		Peak Reduce Virtual memory (bytes)=3526737920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.702 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 11:02:14.126" starttime="20210129 11:02:14.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:02:14.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:02:14.128" starttime="20210129 11:02:14.126"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.129" starttime="20210129 11:01:33.291"></status>
</kw>
<msg timestamp="20210129 11:02:14.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:02:14.129" starttime="20210129 11:01:33.291"></status>
</kw>
<msg timestamp="20210129 11:02:14.129" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 11:01:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:01:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 11:02:14.129" starttime="20210129 11:01:33.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 11:02:14.130" starttime="20210129 11:02:14.130"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 11:02:14.130" critical="yes" starttime="20210129 11:01:33.267"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:02:14.138" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:02:14.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:02:14.143" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:02:14.143" starttime="20210129 11:02:14.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:02:14.144" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:02:14.144" starttime="20210129 11:02:14.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:02:14.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:02:14.145" starttime="20210129 11:02:14.145"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.145" starttime="20210129 11:02:14.135"></status>
</kw>
<msg timestamp="20210129 11:02:14.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:02:14.145" starttime="20210129 11:02:14.135"></status>
</kw>
<msg timestamp="20210129 11:02:14.146" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:02:14.146" starttime="20210129 11:02:14.134"></status>
</kw>
<msg timestamp="20210129 11:02:14.146" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 11:02:14.146" starttime="20210129 11:02:14.133"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 11:02:14.147" level="INFO">${random} = IouEFncz</msg>
<status status="PASS" endtime="20210129 11:02:14.147" starttime="20210129 11:02:14.146"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:02:14.152" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:02:14.152" starttime="20210129 11:02:14.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:02:14.153" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.153" starttime="20210129 11:02:14.152"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.153" starttime="20210129 11:02:14.151"></status>
</kw>
<msg timestamp="20210129 11:02:14.153" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.153" starttime="20210129 11:02:14.150"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.154" starttime="20210129 11:02:14.149"></status>
</kw>
<msg timestamp="20210129 11:02:14.154" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:02:14.154" starttime="20210129 11:02:14.148"></status>
</kw>
<msg timestamp="20210129 11:02:14.154" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 11:02:14.154" starttime="20210129 11:02:14.147"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:02:14.158" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:02:14.158" starttime="20210129 11:02:14.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:02:14.159" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.159" starttime="20210129 11:02:14.158"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.159" starttime="20210129 11:02:14.157"></status>
</kw>
<msg timestamp="20210129 11:02:14.159" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.159" starttime="20210129 11:02:14.156"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.159" starttime="20210129 11:02:14.156"></status>
</kw>
<msg timestamp="20210129 11:02:14.159" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 11:02:14.159" starttime="20210129 11:02:14.155"></status>
</kw>
<msg timestamp="20210129 11:02:14.160" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 11:02:14.160" starttime="20210129 11:02:14.155"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 11:02:14.164" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 11:02:14.164" starttime="20210129 11:02:14.163"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:02:14.164" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.164" starttime="20210129 11:02:14.164"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.165" starttime="20210129 11:02:14.162"></status>
</kw>
<msg timestamp="20210129 11:02:14.165" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 11:02:14.165" starttime="20210129 11:02:14.162"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:14.165" starttime="20210129 11:02:14.161"></status>
</kw>
<msg timestamp="20210129 11:02:14.165" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-IouEFncz.txt</msg>
<status status="PASS" endtime="20210129 11:02:14.165" starttime="20210129 11:02:14.160"></status>
</kw>
<msg timestamp="20210129 11:02:14.166" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-IouEFncz.txt</msg>
<status status="PASS" endtime="20210129 11:02:14.166" starttime="20210129 11:02:14.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:02:14.169" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-IouEFncz.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:02:47.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:02:47.285" level="INFO">${output} = 2021-01-29 11:02:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:02:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210129 11:02:47.285" starttime="20210129 11:02:14.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:02:47.286" level="INFO">2021-01-29 11:02:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:02:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-29 11:02:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918136821, maxDate=1612522936821, sequenceNumber=2, masterKeyId=2))
2021-01-29 11:02:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff aa bb ee f4 2e 38 ff b2 ed 8e f7 2e 40 02 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-29 11:02:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918136821, maxDate=1612522936821, sequenceNumber=2, masterKeyId=2)
2021-01-29 11:02:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 11:02:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 11:02:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:02:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 11:02:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:02:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-281C6A6199EE-&gt;2a0f3995-f1cf-472d-82d4-87dcce86bb84
2021-01-29 11:02:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 11:02:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 11:02:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7025B247842-&gt;239cce7f-f8c0-42fc-9eb7-bec91a8a646d
2021-01-29 11:02:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 11:02:19 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 11:02:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611917951327_0002
2021-01-29 11:02:20 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff aa bb ee f4 2e 38 ff b2 ed 8e f7 2e 40 02 48 01 5a 0d 32 32 31 37 33 33 33 34 34 31 33 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611918136821, maxDate=1612522936821, sequenceNumber=2, masterKeyId=2)]
2021-01-29 11:02:20 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 11:02:20 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 11:02:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-29 11:02:21 INFO  YarnClientImpl:329 - Submitted application application_1611917951327_0002
2021-01-29 11:02:21 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611917951327_0002/
2021-01-29 11:02:21 INFO  Job:1614 - Running job: job_1611917951327_0002
2021-01-29 11:02:29 INFO  Job:1635 - Job job_1611917951327_0002 running in uber mode : false
2021-01-29 11:02:29 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 11:02:39 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 11:02:40 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 11:02:41 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 11:02:45 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 11:02:46 INFO  Job:1653 - Job job_1611917951327_0002 completed successfully
2021-01-29 11:02:46 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44680
		Total time spent by all reduces in occupied slots (ms)=7562
		Total time spent by all map tasks (ms)=22340
		Total time spent by all reduce tasks (ms)=3781
		Total vcore-milliseconds taken by all map tasks=22340
		Total vcore-milliseconds taken by all reduce tasks=3781
		Total megabyte-milliseconds taken by all map tasks=45752320
		Total megabyte-milliseconds taken by all reduce tasks=7743488
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1447
		CPU time spent (ms)=7340
		Physical memory (bytes) snapshot=1618710528
		Virtual memory (bytes) snapshot=14029946880
		Total committed heap usage (bytes)=1455423488
		Peak Map Physical memory (bytes)=549834752
		Peak Map Virtual memory (bytes)=3513774080
		Peak Reduce Physical memory (bytes)=320385024
		Peak Reduce Virtual memory (bytes)=3529957376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 11:02:47.286" starttime="20210129 11:02:47.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:02:47.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:02:47.287" starttime="20210129 11:02:47.286"></status>
</kw>
<status status="PASS" endtime="20210129 11:02:47.287" starttime="20210129 11:02:14.167"></status>
</kw>
<msg timestamp="20210129 11:02:47.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:02:47.288" starttime="20210129 11:02:14.167"></status>
</kw>
<msg timestamp="20210129 11:02:47.288" level="INFO">${output} = 2021-01-29 11:02:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.7:8032
2021-01-29 11:02:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210129 11:02:47.288" starttime="20210129 11:02:14.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 11:02:47.289" starttime="20210129 11:02:47.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 11:02:47.289" starttime="20210129 11:02:47.289"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 11:02:47.290" critical="yes" starttime="20210129 11:02:14.131"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 11:02:47.291" starttime="20210129 11:01:33.205"></status>
</suite>
<status status="PASS" elapsedtime="209819" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
