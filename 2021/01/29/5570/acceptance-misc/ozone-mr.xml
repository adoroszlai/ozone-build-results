<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210129 10:43:28.540" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:40.391" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:42.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 10:29:42.686" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:29:42.686" starttime="20210129 10:29:40.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:42.687" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:29:42.687" starttime="20210129 10:29:42.686"></status>
</kw>
<msg timestamp="20210129 10:29:42.688" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:29:42.688" starttime="20210129 10:29:40.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:42.693" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:45.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:29:45.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:29:45.240" starttime="20210129 10:29:42.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:45.241" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:29:45.241" starttime="20210129 10:29:45.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:29:45.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:29:45.242" starttime="20210129 10:29:45.241"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:45.242" starttime="20210129 10:29:42.690"></status>
</kw>
<msg timestamp="20210129 10:29:45.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:29:45.243" starttime="20210129 10:29:42.689"></status>
</kw>
<msg timestamp="20210129 10:29:45.243" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210129 10:29:45.243" starttime="20210129 10:29:42.689"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210129 10:29:45.243" starttime="20210129 10:29:45.243"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:45.244" starttime="20210129 10:29:42.688"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:45.244" starttime="20210129 10:29:42.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:45.249" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:29:47.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:29:47.209" starttime="20210129 10:29:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:47.210" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:29:47.210" starttime="20210129 10:29:47.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:29:47.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:29:47.212" starttime="20210129 10:29:47.211"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:47.212" starttime="20210129 10:29:45.246"></status>
</kw>
<msg timestamp="20210129 10:29:47.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:29:47.212" starttime="20210129 10:29:45.245"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:47.213" starttime="20210129 10:29:45.245"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:47.213" starttime="20210129 10:29:45.244"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:47.213" starttime="20210129 10:29:45.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 10:29:47.213" starttime="20210129 10:29:47.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:47.218" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:49.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:29:49.480" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:29...</msg>
<status status="PASS" endtime="20210129 10:29:49.480" starttime="20210129 10:29:47.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:49.481" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:29:47.187Z",
  "modificationTime" : "2021-01-29T10:29:47.187Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 10:29:49.482" starttime="20210129 10:29:49.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:29:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:29:49.482" starttime="20210129 10:29:49.482"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:49.483" starttime="20210129 10:29:47.215"></status>
</kw>
<msg timestamp="20210129 10:29:49.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:29:49.483" starttime="20210129 10:29:47.214"></status>
</kw>
<msg timestamp="20210129 10:29:49.483" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:29...</msg>
<status status="PASS" endtime="20210129 10:29:49.483" starttime="20210129 10:29:47.214"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210129 10:29:49.484" starttime="20210129 10:29:49.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:29:49.488" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:29:49.488" starttime="20210129 10:29:49.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:29:49.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:29:49.488" starttime="20210129 10:29:49.488"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:49.489" starttime="20210129 10:29:49.487"></status>
</kw>
<msg timestamp="20210129 10:29:49.489" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:29:49.489" starttime="20210129 10:29:49.486"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:49.489" starttime="20210129 10:29:49.485"></status>
</kw>
<msg timestamp="20210129 10:29:49.489" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:29:49.489" starttime="20210129 10:29:49.485"></status>
</kw>
<msg timestamp="20210129 10:29:49.490" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:29:49.490" starttime="20210129 10:29:49.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:49.493" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:51.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:29:51.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:29:51.639" starttime="20210129 10:29:49.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:51.640" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:29:51.640" starttime="20210129 10:29:51.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:29:51.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:29:51.641" starttime="20210129 10:29:51.640"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:51.641" starttime="20210129 10:29:49.491"></status>
</kw>
<msg timestamp="20210129 10:29:51.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:29:51.641" starttime="20210129 10:29:49.490"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:51.642" starttime="20210129 10:29:49.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:51.646" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:29:56.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:29:56.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:29:56.972" starttime="20210129 10:29:51.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:29:56.974" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:29:56.974" starttime="20210129 10:29:56.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:29:56.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:29:56.974" starttime="20210129 10:29:56.974"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:56.975" starttime="20210129 10:29:51.643"></status>
</kw>
<msg timestamp="20210129 10:29:56.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:29:56.975" starttime="20210129 10:29:51.643"></status>
</kw>
<status status="PASS" endtime="20210129 10:29:56.975" starttime="20210129 10:29:51.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:29:56.979" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:01.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:01.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:30:01.139" starttime="20210129 10:29:56.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:01.140" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:30:01.140" starttime="20210129 10:30:01.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:01.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:01.141" starttime="20210129 10:30:01.141"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:01.142" starttime="20210129 10:29:56.977"></status>
</kw>
<msg timestamp="20210129 10:30:01.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:01.142" starttime="20210129 10:29:56.976"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:01.142" starttime="20210129 10:29:56.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:01.146" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:05.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:05.448" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:30:05.448" starttime="20210129 10:30:01.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:05.450" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:30:05.450" starttime="20210129 10:30:05.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:05.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:05.451" starttime="20210129 10:30:05.450"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:05.451" starttime="20210129 10:30:01.143"></status>
</kw>
<msg timestamp="20210129 10:30:05.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:05.451" starttime="20210129 10:30:01.143"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:05.452" starttime="20210129 10:30:01.142"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:30:05.452" critical="yes" starttime="20210129 10:29:40.386"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:30:05.458" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:30:05.458" starttime="20210129 10:30:05.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:30:05.458" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:30:05.458" starttime="20210129 10:30:05.458"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:05.459" starttime="20210129 10:30:05.457"></status>
</kw>
<msg timestamp="20210129 10:30:05.459" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:30:05.459" starttime="20210129 10:30:05.456"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:05.459" starttime="20210129 10:30:05.455"></status>
</kw>
<msg timestamp="20210129 10:30:05.459" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:30:05.459" starttime="20210129 10:30:05.455"></status>
</kw>
<msg timestamp="20210129 10:30:05.460" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:30:05.460" starttime="20210129 10:30:05.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:05.463" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:07.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:07.778" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:30:07.778" starttime="20210129 10:30:05.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:07.779" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:30:07.779" starttime="20210129 10:30:07.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:07.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:07.780" starttime="20210129 10:30:07.779"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:07.780" starttime="20210129 10:30:05.461"></status>
</kw>
<msg timestamp="20210129 10:30:07.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:07.781" starttime="20210129 10:30:05.460"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:07.781" starttime="20210129 10:30:05.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:07.785" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:10.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:10.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:30:10.001" starttime="20210129 10:30:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:10.002" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:30:10.003" starttime="20210129 10:30:10.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:10.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:10.005" starttime="20210129 10:30:10.004"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:10.007" starttime="20210129 10:30:07.782"></status>
</kw>
<msg timestamp="20210129 10:30:10.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:10.007" starttime="20210129 10:30:07.782"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:10.007" starttime="20210129 10:30:07.781"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:30:10.007" critical="yes" starttime="20210129 10:30:05.453"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210129 10:30:10.009" starttime="20210129 10:29:40.320"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:31:50.847" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:31:50.847" starttime="20210129 10:31:50.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:31:50.848" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:31:50.848" starttime="20210129 10:31:50.848"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:50.849" starttime="20210129 10:31:50.846"></status>
</kw>
<msg timestamp="20210129 10:31:50.849" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:31:50.849" starttime="20210129 10:31:50.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:31:50.850" starttime="20210129 10:31:50.849"></status>
</kw>
<msg timestamp="20210129 10:31:50.850" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:31:50.850" starttime="20210129 10:31:50.849"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:50.850" starttime="20210129 10:31:50.845"></status>
</kw>
<msg timestamp="20210129 10:31:50.851" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:31:50.851" starttime="20210129 10:31:50.845"></status>
</kw>
<msg timestamp="20210129 10:31:50.851" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:31:50.851" starttime="20210129 10:31:50.844"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:31:50.852" level="INFO">${random} = 76382</msg>
<status status="PASS" endtime="20210129 10:31:50.852" starttime="20210129 10:31:50.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:31:50.857" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-76382 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:31:56.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:31:56.733" level="INFO">${output} = 2021-01-29 10:31:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:31:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 ...</msg>
<status status="PASS" endtime="20210129 10:31:56.733" starttime="20210129 10:31:50.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:31:56.734" level="INFO">2021-01-29 10:31:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:31:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:31:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:31:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:31:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A31DB5213E04-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:31:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 10:31:56.734" starttime="20210129 10:31:56.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:31:56.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:31:56.735" starttime="20210129 10:31:56.734"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:56.735" starttime="20210129 10:31:50.853"></status>
</kw>
<msg timestamp="20210129 10:31:56.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:31:56.735" starttime="20210129 10:31:50.853"></status>
</kw>
<msg timestamp="20210129 10:31:56.735" level="INFO">${result} = 2021-01-29 10:31:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:31:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 ...</msg>
<status status="PASS" endtime="20210129 10:31:56.735" starttime="20210129 10:31:50.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:31:56.739" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:31:58.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:31:58.493" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 ofs://om/volume1/bucket1/ozone-47164
-rw-...</msg>
<status status="PASS" endtime="20210129 10:31:58.493" starttime="20210129 10:31:56.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:31:58.495" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 ofs://om/volume1/bucket1/ozone-47164
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:31 ofs://om/volume1/bucket1/ozone-76382
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:30 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:31 ofs://om/volume1/bucket1/wordcount-GcJOnwZ8.txt</msg>
<status status="PASS" endtime="20210129 10:31:58.495" starttime="20210129 10:31:58.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:31:58.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:31:58.495" starttime="20210129 10:31:58.495"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:58.496" starttime="20210129 10:31:56.736"></status>
</kw>
<msg timestamp="20210129 10:31:58.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:31:58.496" starttime="20210129 10:31:56.736"></status>
</kw>
<msg timestamp="20210129 10:31:58.496" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 ofs://om/volume1/bucket1/ozone-47164
-rw-...</msg>
<status status="PASS" endtime="20210129 10:31:58.496" starttime="20210129 10:31:56.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:31:58.497" starttime="20210129 10:31:58.496"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:31:58.497" critical="yes" starttime="20210129 10:31:50.843"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:31:58.498" starttime="20210129 10:31:50.782"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:30:14.937" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:30:14.937" starttime="20210129 10:30:14.936"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:30:14.937" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.937"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.936"></status>
</kw>
<msg timestamp="20210129 10:30:14.938" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.935"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.935"></status>
</kw>
<msg timestamp="20210129 10:30:14.938" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.934"></status>
</kw>
<msg timestamp="20210129 10:30:14.938" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:30:14.938" starttime="20210129 10:30:14.933"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:30:14.939" level="INFO">${random} = 47164</msg>
<status status="PASS" endtime="20210129 10:30:14.939" starttime="20210129 10:30:14.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:14.944" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-47164 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:18.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:18.376" level="INFO">${output} = 2021-01-29 10:30:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 ...</msg>
<status status="PASS" endtime="20210129 10:30:18.376" starttime="20210129 10:30:14.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:18.379" level="INFO">2021-01-29 10:30:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:30:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:30:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:30:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C25686AE20D7-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:30:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 10:30:18.379" starttime="20210129 10:30:18.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:18.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:18.380" starttime="20210129 10:30:18.379"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:18.380" starttime="20210129 10:30:14.940"></status>
</kw>
<msg timestamp="20210129 10:30:18.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:18.380" starttime="20210129 10:30:14.940"></status>
</kw>
<msg timestamp="20210129 10:30:18.380" level="INFO">${result} = 2021-01-29 10:30:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 ...</msg>
<status status="PASS" endtime="20210129 10:30:18.380" starttime="20210129 10:30:14.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:18.384" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:20.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:20.179" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 o3fs://bucket1.volume1.om/ozone-47164
dr...</msg>
<status status="PASS" endtime="20210129 10:30:20.179" starttime="20210129 10:30:18.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:20.180" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 o3fs://bucket1.volume1.om/ozone-47164
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:30 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:30:20.180" starttime="20210129 10:30:20.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:20.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:20.181" starttime="20210129 10:30:20.181"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:20.181" starttime="20210129 10:30:18.382"></status>
</kw>
<msg timestamp="20210129 10:30:20.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:20.182" starttime="20210129 10:30:18.381"></status>
</kw>
<msg timestamp="20210129 10:30:20.182" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-29 10:30 o3fs://bucket1.volume1.om/ozone-47164
dr...</msg>
<status status="PASS" endtime="20210129 10:30:20.182" starttime="20210129 10:30:18.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:30:20.182" starttime="20210129 10:30:20.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:30:20.183" critical="yes" starttime="20210129 10:30:14.932"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:30:20.185" starttime="20210129 10:30:14.871"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:32:03.236" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:32:03.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:32:03.243" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:03.243" starttime="20210129 10:32:03.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:32:03.244" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:03.244" starttime="20210129 10:32:03.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:32:03.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:32:03.245" starttime="20210129 10:32:03.244"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:03.245" starttime="20210129 10:32:03.232"></status>
</kw>
<msg timestamp="20210129 10:32:03.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:32:03.245" starttime="20210129 10:32:03.232"></status>
</kw>
<msg timestamp="20210129 10:32:03.246" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:03.246" starttime="20210129 10:32:03.232"></status>
</kw>
<msg timestamp="20210129 10:32:03.246" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:03.246" starttime="20210129 10:32:03.231"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:32:03.251" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:32:03.251" starttime="20210129 10:32:03.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:03.251" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:32:03.251" starttime="20210129 10:32:03.251"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:03.251" starttime="20210129 10:32:03.250"></status>
</kw>
<msg timestamp="20210129 10:32:03.252" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:32:03.252" starttime="20210129 10:32:03.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:32:03.253" starttime="20210129 10:32:03.252"></status>
</kw>
<msg timestamp="20210129 10:32:03.253" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:32:03.253" starttime="20210129 10:32:03.252"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:03.253" starttime="20210129 10:32:03.248"></status>
</kw>
<msg timestamp="20210129 10:32:03.253" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:32:03.253" starttime="20210129 10:32:03.247"></status>
</kw>
<msg timestamp="20210129 10:32:03.254" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:32:03.254" starttime="20210129 10:32:03.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:32:03.257" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:32:42.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:32:42.842" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:32:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:32:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210129 10:32:42.842" starttime="20210129 10:32:03.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:32:42.843" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:32:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:32:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:32:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:32:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:32:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F83FA25B7693-&gt;f417731b-1bdd-48d0-b025-3a3398c813fb
2021-01-29 10:32:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-29 10:32:06 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:32:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:32:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-29 10:32:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A92D6A6E586-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:32:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:32:09 INFO  JobSubmitter:198 - number of splits:3
2021-01-29 10:32:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611916143010_0003
2021-01-29 10:32:09 INFO  YarnClientImpl:273 - Submitted application application_1611916143010_0003
2021-01-29 10:32:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611916143010_0003/
2021-01-29 10:32:09 INFO  Job:1339 - Running job: job_1611916143010_0003
2021-01-29 10:32:18 INFO  Job:1360 - Job job_1611916143010_0003 running in uber mode : false
2021-01-29 10:32:18 INFO  Job:1367 -  map 0% reduce 0%
2021-01-29 10:32:24 INFO  Job:1367 -  map 33% reduce 0%
2021-01-29 10:32:29 INFO  Job:1367 -  map 67% reduce 0%
2021-01-29 10:32:34 INFO  Job:1367 -  map 100% reduce 0%
2021-01-29 10:32:38 INFO  Job:1367 -  map 100% reduce 100%
2021-01-29 10:32:42 INFO  Job:1378 - Job job_1611916143010_0003 completed successfully
2021-01-29 10:32:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610701
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40184
		Total time spent by all reduces in occupied slots (ms)=14600
		Total time spent by all map tasks (ms)=10046
		Total time spent by all reduce tasks (ms)=3650
		Total vcore-milliseconds taken by all map tasks=10046
		Total vcore-milliseconds taken by all reduce tasks=3650
		Total megabyte-milliseconds taken by all map tasks=41148416
		Total megabyte-milliseconds taken by all reduce tasks=14950400
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=532
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1145868288
		Virtual memory (bytes) snapshot=15764578304
		Total committed heap usage (bytes)=1026031616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.91 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 10:32:42.843" starttime="20210129 10:32:42.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:32:42.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:32:42.844" starttime="20210129 10:32:42.843"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.844" starttime="20210129 10:32:03.255"></status>
</kw>
<msg timestamp="20210129 10:32:42.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:32:42.845" starttime="20210129 10:32:03.254"></status>
</kw>
<msg timestamp="20210129 10:32:42.845" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:32:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:32:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210129 10:32:42.845" starttime="20210129 10:32:03.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:32:42.846" starttime="20210129 10:32:42.845"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:32:42.846" critical="yes" starttime="20210129 10:32:03.230"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:32:42.851" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:32:42.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:32:42.856" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:42.856" starttime="20210129 10:32:42.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:32:42.858" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:42.858" starttime="20210129 10:32:42.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:32:42.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:32:42.859" starttime="20210129 10:32:42.858"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.859" starttime="20210129 10:32:42.848"></status>
</kw>
<msg timestamp="20210129 10:32:42.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:32:42.859" starttime="20210129 10:32:42.848"></status>
</kw>
<msg timestamp="20210129 10:32:42.860" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:42.860" starttime="20210129 10:32:42.847"></status>
</kw>
<msg timestamp="20210129 10:32:42.860" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:32:42.860" starttime="20210129 10:32:42.847"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:32:42.861" level="INFO">${random} = bK6KWfSZ</msg>
<status status="PASS" endtime="20210129 10:32:42.861" starttime="20210129 10:32:42.860"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:32:42.865" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:32:42.865" starttime="20210129 10:32:42.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:42.865" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.865" starttime="20210129 10:32:42.865"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.866" starttime="20210129 10:32:42.864"></status>
</kw>
<msg timestamp="20210129 10:32:42.866" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.866" starttime="20210129 10:32:42.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:32:42.867" starttime="20210129 10:32:42.866"></status>
</kw>
<msg timestamp="20210129 10:32:42.867" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:32:42.867" starttime="20210129 10:32:42.866"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.867" starttime="20210129 10:32:42.862"></status>
</kw>
<msg timestamp="20210129 10:32:42.867" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:32:42.867" starttime="20210129 10:32:42.862"></status>
</kw>
<msg timestamp="20210129 10:32:42.868" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:32:42.868" starttime="20210129 10:32:42.861"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:32:42.871" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:32:42.871" starttime="20210129 10:32:42.871"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:42.872" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.872" starttime="20210129 10:32:42.872"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.872" starttime="20210129 10:32:42.870"></status>
</kw>
<msg timestamp="20210129 10:32:42.872" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.872" starttime="20210129 10:32:42.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:32:42.874" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210129 10:32:42.874" starttime="20210129 10:32:42.873"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:42.875" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210129 10:32:42.875" starttime="20210129 10:32:42.874"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.875" starttime="20210129 10:32:42.873"></status>
</kw>
<msg timestamp="20210129 10:32:42.875" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210129 10:32:42.875" starttime="20210129 10:32:42.872"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.875" starttime="20210129 10:32:42.869"></status>
</kw>
<msg timestamp="20210129 10:32:42.875" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:32:42.875" starttime="20210129 10:32:42.868"></status>
</kw>
<msg timestamp="20210129 10:32:42.876" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:32:42.876" starttime="20210129 10:32:42.868"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:32:42.880" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:32:42.880" starttime="20210129 10:32:42.879"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:42.881" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.881" starttime="20210129 10:32:42.880"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.881" starttime="20210129 10:32:42.878"></status>
</kw>
<msg timestamp="20210129 10:32:42.882" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:32:42.882" starttime="20210129 10:32:42.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:32:42.884" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210129 10:32:42.884" starttime="20210129 10:32:42.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:32:42.885" level="INFO">${result} = /wordcount-bK6KWfSZ.txt</msg>
<status status="PASS" endtime="20210129 10:32:42.885" starttime="20210129 10:32:42.884"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.885" starttime="20210129 10:32:42.882"></status>
</kw>
<msg timestamp="20210129 10:32:42.885" level="INFO">${path_with_leading} = /wordcount-bK6KWfSZ.txt</msg>
<status status="PASS" endtime="20210129 10:32:42.885" starttime="20210129 10:32:42.882"></status>
</kw>
<status status="PASS" endtime="20210129 10:32:42.886" starttime="20210129 10:32:42.877"></status>
</kw>
<msg timestamp="20210129 10:32:42.886" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-bK6KWfSZ.txt</msg>
<status status="PASS" endtime="20210129 10:32:42.886" starttime="20210129 10:32:42.876"></status>
</kw>
<msg timestamp="20210129 10:32:42.886" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-bK6KWfSZ.txt</msg>
<status status="PASS" endtime="20210129 10:32:42.886" starttime="20210129 10:32:42.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:32:42.889" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-bK6KWfSZ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:33:18.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:33:18.713" level="INFO">${output} = 2021-01-29 10:32:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:32:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210129 10:33:18.713" starttime="20210129 10:32:42.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:33:18.714" level="INFO">2021-01-29 10:32:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:32:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:32:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:32:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:32:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:32:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:32:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AED6E718AD1E-&gt;f417731b-1bdd-48d0-b025-3a3398c813fb
2021-01-29 10:32:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:32:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-29 10:32:46 INFO  JobSubmitter:198 - number of splits:3
2021-01-29 10:32:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EFEB57E4D086-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:32:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:32:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611916143010_0004
2021-01-29 10:32:46 INFO  YarnClientImpl:273 - Submitted application application_1611916143010_0004
2021-01-29 10:32:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611916143010_0004/
2021-01-29 10:32:46 INFO  Job:1339 - Running job: job_1611916143010_0004
2021-01-29 10:32:54 INFO  Job:1360 - Job job_1611916143010_0004 running in uber mode : false
2021-01-29 10:32:54 INFO  Job:1367 -  map 0% reduce 0%
2021-01-29 10:33:01 INFO  Job:1367 -  map 33% reduce 0%
2021-01-29 10:33:06 INFO  Job:1367 -  map 67% reduce 0%
2021-01-29 10:33:11 INFO  Job:1367 -  map 100% reduce 0%
2021-01-29 10:33:15 INFO  Job:1367 -  map 100% reduce 100%
2021-01-29 10:33:18 INFO  Job:1378 - Job job_1611916143010_0004 completed successfully
2021-01-29 10:33:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40820
		Total time spent by all reduces in occupied slots (ms)=14636
		Total time spent by all map tasks (ms)=10205
		Total time spent by all reduce tasks (ms)=3659
		Total vcore-milliseconds taken by all map tasks=10205
		Total vcore-milliseconds taken by all reduce tasks=3659
		Total megabyte-milliseconds taken by all map tasks=41799680
		Total megabyte-milliseconds taken by all reduce tasks=14987264
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1136558080
		Virtual memory (bytes) snapshot=15753666560
		Total committed heap usage (bytes)=1060634624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 10:33:18.714" starttime="20210129 10:33:18.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:33:18.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:33:18.715" starttime="20210129 10:33:18.714"></status>
</kw>
<status status="PASS" endtime="20210129 10:33:18.715" starttime="20210129 10:32:42.887"></status>
</kw>
<msg timestamp="20210129 10:33:18.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:33:18.715" starttime="20210129 10:32:42.887"></status>
</kw>
<msg timestamp="20210129 10:33:18.716" level="INFO">${output} = 2021-01-29 10:32:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:32:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210129 10:33:18.716" starttime="20210129 10:32:42.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:33:18.716" starttime="20210129 10:33:18.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:33:18.717" starttime="20210129 10:33:18.716"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:33:18.717" critical="yes" starttime="20210129 10:32:42.846"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:33:18.718" starttime="20210129 10:32:03.170"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:24.834" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:30:24.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:30:24.840" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:30:24.840" starttime="20210129 10:30:24.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:30:24.841" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:30:24.841" starttime="20210129 10:30:24.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:30:24.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:30:24.842" starttime="20210129 10:30:24.841"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:24.842" starttime="20210129 10:30:24.829"></status>
</kw>
<msg timestamp="20210129 10:30:24.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:30:24.842" starttime="20210129 10:30:24.829"></status>
</kw>
<msg timestamp="20210129 10:30:24.843" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:30:24.843" starttime="20210129 10:30:24.828"></status>
</kw>
<msg timestamp="20210129 10:30:24.843" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:30:24.843" starttime="20210129 10:30:24.828"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:30:24.848" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:30:24.849" starttime="20210129 10:30:24.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:30:24.849" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:30:24.849" starttime="20210129 10:30:24.849"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:24.849" starttime="20210129 10:30:24.847"></status>
</kw>
<msg timestamp="20210129 10:30:24.850" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:30:24.850" starttime="20210129 10:30:24.846"></status>
</kw>
<status status="PASS" endtime="20210129 10:30:24.850" starttime="20210129 10:30:24.846"></status>
</kw>
<msg timestamp="20210129 10:30:24.850" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:30:24.850" starttime="20210129 10:30:24.844"></status>
</kw>
<msg timestamp="20210129 10:30:24.850" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:30:24.850" starttime="20210129 10:30:24.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:30:24.853" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:31:07.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:31:07.874" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:30:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210129 10:31:07.874" starttime="20210129 10:30:24.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:31:07.875" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:30:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:30:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:30:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:30:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79012CF8C714-&gt;f417731b-1bdd-48d0-b025-3a3398c813fb
2021-01-29 10:30:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-29 10:30:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CDD6D94C1348-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:30:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-29 10:30:28 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:30:28 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-29 10:30:28 INFO  JobSubmitter:198 - number of splits:3
2021-01-29 10:30:29 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611916143010_0001
2021-01-29 10:30:29 INFO  YarnClientImpl:273 - Submitted application application_1611916143010_0001
2021-01-29 10:30:29 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611916143010_0001/
2021-01-29 10:30:29 INFO  Job:1339 - Running job: job_1611916143010_0001
2021-01-29 10:30:39 INFO  Job:1360 - Job job_1611916143010_0001 running in uber mode : false
2021-01-29 10:30:39 INFO  Job:1367 -  map 0% reduce 0%
2021-01-29 10:30:47 INFO  Job:1367 -  map 33% reduce 0%
2021-01-29 10:30:52 INFO  Job:1367 -  map 67% reduce 0%
2021-01-29 10:30:57 INFO  Job:1367 -  map 100% reduce 0%
2021-01-29 10:31:04 INFO  Job:1367 -  map 100% reduce 100%
2021-01-29 10:31:07 INFO  Job:1378 - Job job_1611916143010_0001 completed successfully
2021-01-29 10:31:07 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42564
		Total time spent by all reduces in occupied slots (ms)=25484
		Total time spent by all map tasks (ms)=10641
		Total time spent by all reduce tasks (ms)=6371
		Total vcore-milliseconds taken by all map tasks=10641
		Total vcore-milliseconds taken by all reduce tasks=6371
		Total megabyte-milliseconds taken by all map tasks=43585536
		Total megabyte-milliseconds taken by all reduce tasks=26095616
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=671
		CPU time spent (ms)=7090
		Physical memory (bytes) snapshot=1185837056
		Virtual memory (bytes) snapshot=15794888704
		Total committed heap usage (bytes)=1026555904
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.114 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 10:31:07.875" starttime="20210129 10:31:07.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:31:07.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:31:07.876" starttime="20210129 10:31:07.875"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.876" starttime="20210129 10:30:24.851"></status>
</kw>
<msg timestamp="20210129 10:31:07.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:31:07.876" starttime="20210129 10:30:24.851"></status>
</kw>
<msg timestamp="20210129 10:31:07.877" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:30:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:30:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210129 10:31:07.877" starttime="20210129 10:30:24.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:31:07.877" starttime="20210129 10:31:07.877"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:31:07.877" critical="yes" starttime="20210129 10:30:24.827"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:31:07.883" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:31:07.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:31:07.890" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:31:07.890" starttime="20210129 10:31:07.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:31:07.890" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:31:07.890" starttime="20210129 10:31:07.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:31:07.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:31:07.891" starttime="20210129 10:31:07.891"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.891" starttime="20210129 10:31:07.881"></status>
</kw>
<msg timestamp="20210129 10:31:07.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:31:07.891" starttime="20210129 10:31:07.881"></status>
</kw>
<msg timestamp="20210129 10:31:07.892" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:31:07.892" starttime="20210129 10:31:07.880"></status>
</kw>
<msg timestamp="20210129 10:31:07.892" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210129 10:31:07.892" starttime="20210129 10:31:07.880"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:31:07.893" level="INFO">${random} = GcJOnwZ8</msg>
<status status="PASS" endtime="20210129 10:31:07.893" starttime="20210129 10:31:07.892"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:31:07.896" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:31:07.896" starttime="20210129 10:31:07.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:31:07.897" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.897" starttime="20210129 10:31:07.897"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.897" starttime="20210129 10:31:07.895"></status>
</kw>
<msg timestamp="20210129 10:31:07.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.897" starttime="20210129 10:31:07.895"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.898" starttime="20210129 10:31:07.894"></status>
</kw>
<msg timestamp="20210129 10:31:07.898" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:31:07.898" starttime="20210129 10:31:07.894"></status>
</kw>
<msg timestamp="20210129 10:31:07.898" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:31:07.898" starttime="20210129 10:31:07.893"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:31:07.901" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:31:07.901" starttime="20210129 10:31:07.901"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:31:07.902" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.902" starttime="20210129 10:31:07.902"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.902" starttime="20210129 10:31:07.901"></status>
</kw>
<msg timestamp="20210129 10:31:07.902" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.902" starttime="20210129 10:31:07.900"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.903" starttime="20210129 10:31:07.899"></status>
</kw>
<msg timestamp="20210129 10:31:07.903" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:31:07.903" starttime="20210129 10:31:07.899"></status>
</kw>
<msg timestamp="20210129 10:31:07.903" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:31:07.903" starttime="20210129 10:31:07.898"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:31:07.907" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:31:07.907" starttime="20210129 10:31:07.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:31:07.908" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.908" starttime="20210129 10:31:07.907"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.908" starttime="20210129 10:31:07.906"></status>
</kw>
<msg timestamp="20210129 10:31:07.908" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:31:07.908" starttime="20210129 10:31:07.905"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:07.908" starttime="20210129 10:31:07.904"></status>
</kw>
<msg timestamp="20210129 10:31:07.909" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-GcJOnwZ8.txt</msg>
<status status="PASS" endtime="20210129 10:31:07.909" starttime="20210129 10:31:07.904"></status>
</kw>
<msg timestamp="20210129 10:31:07.909" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-GcJOnwZ8.txt</msg>
<status status="PASS" endtime="20210129 10:31:07.909" starttime="20210129 10:31:07.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:31:07.912" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-GcJOnwZ8.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:31:46.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:31:46.183" level="INFO">${output} = 2021-01-29 10:31:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:31:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210129 10:31:46.183" starttime="20210129 10:31:07.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:31:46.184" level="INFO">2021-01-29 10:31:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:31:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:31:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:31:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-29 10:31:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-29 10:31:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:31:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B9F35977231-&gt;184a193f-9d4d-46ea-a2af-9aa86d78a54c
2021-01-29 10:31:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:31:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-29 10:31:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EBE3591ACDA2-&gt;f417731b-1bdd-48d0-b025-3a3398c813fb
2021-01-29 10:31:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:31:13 INFO  JobSubmitter:198 - number of splits:3
2021-01-29 10:31:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611916143010_0002
2021-01-29 10:31:14 INFO  YarnClientImpl:273 - Submitted application application_1611916143010_0002
2021-01-29 10:31:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611916143010_0002/
2021-01-29 10:31:14 INFO  Job:1339 - Running job: job_1611916143010_0002
2021-01-29 10:31:21 INFO  Job:1360 - Job job_1611916143010_0002 running in uber mode : false
2021-01-29 10:31:21 INFO  Job:1367 -  map 0% reduce 0%
2021-01-29 10:31:28 INFO  Job:1367 -  map 33% reduce 0%
2021-01-29 10:31:33 INFO  Job:1367 -  map 67% reduce 0%
2021-01-29 10:31:37 INFO  Job:1367 -  map 100% reduce 0%
2021-01-29 10:31:42 INFO  Job:1367 -  map 100% reduce 100%
2021-01-29 10:31:45 INFO  Job:1378 - Job job_1611916143010_0002 completed successfully
2021-01-29 10:31:45 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40292
		Total time spent by all reduces in occupied slots (ms)=14360
		Total time spent by all map tasks (ms)=10073
		Total time spent by all reduce tasks (ms)=3590
		Total vcore-milliseconds taken by all map tasks=10073
		Total vcore-milliseconds taken by all reduce tasks=3590
		Total megabyte-milliseconds taken by all map tasks=41259008
		Total megabyte-milliseconds taken by all reduce tasks=14704640
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=541
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1136627712
		Virtual memory (bytes) snapshot=15756242944
		Total committed heap usage (bytes)=977272832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 10:31:46.185" starttime="20210129 10:31:46.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:31:46.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:31:46.185" starttime="20210129 10:31:46.185"></status>
</kw>
<status status="PASS" endtime="20210129 10:31:46.186" starttime="20210129 10:31:07.910"></status>
</kw>
<msg timestamp="20210129 10:31:46.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:31:46.186" starttime="20210129 10:31:07.910"></status>
</kw>
<msg timestamp="20210129 10:31:46.186" level="INFO">${output} = 2021-01-29 10:31:09 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-29 10:31:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210129 10:31:46.186" starttime="20210129 10:31:07.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:31:46.187" starttime="20210129 10:31:46.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:31:46.187" starttime="20210129 10:31:46.187"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:31:46.188" critical="yes" starttime="20210129 10:31:07.879"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:31:46.189" starttime="20210129 10:30:24.766"></status>
</suite>
<status status="PASS" elapsedtime="199690" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:29.367" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:31.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 10:34:31.690" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:34:31.690" starttime="20210129 10:34:29.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:31.691" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:34:31.691" starttime="20210129 10:34:31.690"></status>
</kw>
<msg timestamp="20210129 10:34:31.692" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:34:31.692" starttime="20210129 10:34:29.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:31.698" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:33.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:33.980" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:33.980" starttime="20210129 10:34:31.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:33.981" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:33.981" starttime="20210129 10:34:33.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:33.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:33.982" starttime="20210129 10:34:33.981"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:33.982" starttime="20210129 10:34:31.694"></status>
</kw>
<msg timestamp="20210129 10:34:33.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:33.982" starttime="20210129 10:34:31.694"></status>
</kw>
<msg timestamp="20210129 10:34:33.982" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210129 10:34:33.982" starttime="20210129 10:34:31.693"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210129 10:34:33.983" starttime="20210129 10:34:33.983"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:33.983" starttime="20210129 10:34:31.693"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:33.983" starttime="20210129 10:34:31.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:33.987" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:36.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:36.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:36.005" starttime="20210129 10:34:33.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:36.006" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:36.007" starttime="20210129 10:34:36.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:36.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:36.007" starttime="20210129 10:34:36.007"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:36.008" starttime="20210129 10:34:33.985"></status>
</kw>
<msg timestamp="20210129 10:34:36.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:36.008" starttime="20210129 10:34:33.985"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:36.008" starttime="20210129 10:34:33.984"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:36.008" starttime="20210129 10:34:33.984"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:36.008" starttime="20210129 10:34:33.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 10:34:36.009" starttime="20210129 10:34:36.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:36.013" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:38.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:38.326" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:34...</msg>
<status status="PASS" endtime="20210129 10:34:38.326" starttime="20210129 10:34:36.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:38.327" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:34:35.954Z",
  "modificationTime" : "2021-01-29T10:34:35.954Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 10:34:38.327" starttime="20210129 10:34:38.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:38.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:38.328" starttime="20210129 10:34:38.327"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:38.328" starttime="20210129 10:34:36.010"></status>
</kw>
<msg timestamp="20210129 10:34:38.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:38.328" starttime="20210129 10:34:36.010"></status>
</kw>
<msg timestamp="20210129 10:34:38.328" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:34...</msg>
<status status="PASS" endtime="20210129 10:34:38.328" starttime="20210129 10:34:36.009"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210129 10:34:38.329" starttime="20210129 10:34:38.329"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:34:38.333" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:34:38.333" starttime="20210129 10:34:38.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:34:38.334" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:34:38.334" starttime="20210129 10:34:38.334"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:38.334" starttime="20210129 10:34:38.332"></status>
</kw>
<msg timestamp="20210129 10:34:38.335" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:34:38.335" starttime="20210129 10:34:38.332"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:38.335" starttime="20210129 10:34:38.331"></status>
</kw>
<msg timestamp="20210129 10:34:38.335" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:34:38.335" starttime="20210129 10:34:38.330"></status>
</kw>
<msg timestamp="20210129 10:34:38.335" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:34:38.335" starttime="20210129 10:34:38.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:38.339" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:40.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:40.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:40.614" starttime="20210129 10:34:38.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:40.616" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:40.616" starttime="20210129 10:34:40.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:40.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:40.617" starttime="20210129 10:34:40.616"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:40.617" starttime="20210129 10:34:38.336"></status>
</kw>
<msg timestamp="20210129 10:34:40.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:40.617" starttime="20210129 10:34:38.336"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:40.618" starttime="20210129 10:34:38.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:40.621" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:45.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:45.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:45.913" starttime="20210129 10:34:40.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:45.914" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:45.914" starttime="20210129 10:34:45.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:45.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:45.915" starttime="20210129 10:34:45.914"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:45.915" starttime="20210129 10:34:40.619"></status>
</kw>
<msg timestamp="20210129 10:34:45.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:45.916" starttime="20210129 10:34:40.618"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:45.916" starttime="20210129 10:34:40.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:45.920" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:50.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:50.126" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:50.126" starttime="20210129 10:34:45.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:50.127" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:50.127" starttime="20210129 10:34:50.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:50.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:50.128" starttime="20210129 10:34:50.127"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:50.128" starttime="20210129 10:34:45.917"></status>
</kw>
<msg timestamp="20210129 10:34:50.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:50.129" starttime="20210129 10:34:45.917"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:50.129" starttime="20210129 10:34:45.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:50.134" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:54.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:54.277" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:54.277" starttime="20210129 10:34:50.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:54.278" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:54.278" starttime="20210129 10:34:54.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:54.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:54.278" starttime="20210129 10:34:54.278"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:54.279" starttime="20210129 10:34:50.132"></status>
</kw>
<msg timestamp="20210129 10:34:54.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:54.279" starttime="20210129 10:34:50.131"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:54.279" starttime="20210129 10:34:50.129"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:34:54.279" critical="yes" starttime="20210129 10:34:29.362"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:34:54.285" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:34:54.285" starttime="20210129 10:34:54.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:34:54.286" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:34:54.286" starttime="20210129 10:34:54.285"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:54.286" starttime="20210129 10:34:54.284"></status>
</kw>
<msg timestamp="20210129 10:34:54.286" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:34:54.286" starttime="20210129 10:34:54.283"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:54.287" starttime="20210129 10:34:54.282"></status>
</kw>
<msg timestamp="20210129 10:34:54.287" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:34:54.287" starttime="20210129 10:34:54.282"></status>
</kw>
<msg timestamp="20210129 10:34:54.287" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:34:54.287" starttime="20210129 10:34:54.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:54.291" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:56.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:56.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:56.521" starttime="20210129 10:34:54.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:56.522" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:56.522" starttime="20210129 10:34:56.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:56.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:56.523" starttime="20210129 10:34:56.522"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:56.523" starttime="20210129 10:34:54.288"></status>
</kw>
<msg timestamp="20210129 10:34:56.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:56.523" starttime="20210129 10:34:54.288"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:56.523" starttime="20210129 10:34:54.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:34:56.526" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:34:58.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:34:58.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:34:58.744" starttime="20210129 10:34:56.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:34:58.745" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:34:58.745" starttime="20210129 10:34:58.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:34:58.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:34:58.746" starttime="20210129 10:34:58.745"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:58.746" starttime="20210129 10:34:56.524"></status>
</kw>
<msg timestamp="20210129 10:34:58.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:34:58.746" starttime="20210129 10:34:56.524"></status>
</kw>
<status status="PASS" endtime="20210129 10:34:58.747" starttime="20210129 10:34:56.523"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:34:58.747" critical="yes" starttime="20210129 10:34:54.280"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210129 10:34:58.749" starttime="20210129 10:34:29.299"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:36:38.958" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:36:38.958" starttime="20210129 10:36:38.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:36:38.959" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:36:38.959" starttime="20210129 10:36:38.958"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:38.959" starttime="20210129 10:36:38.957"></status>
</kw>
<msg timestamp="20210129 10:36:38.959" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:36:38.959" starttime="20210129 10:36:38.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:36:38.960" starttime="20210129 10:36:38.960"></status>
</kw>
<msg timestamp="20210129 10:36:38.960" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:36:38.961" starttime="20210129 10:36:38.959"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:38.962" starttime="20210129 10:36:38.955"></status>
</kw>
<msg timestamp="20210129 10:36:38.962" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:36:38.962" starttime="20210129 10:36:38.955"></status>
</kw>
<msg timestamp="20210129 10:36:38.962" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:36:38.962" starttime="20210129 10:36:38.954"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:36:38.963" level="INFO">${random} = 25852</msg>
<status status="PASS" endtime="20210129 10:36:38.963" starttime="20210129 10:36:38.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:36:38.968" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-25852 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:36:42.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:36:42.550" level="INFO">${output} = 2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:42.550" starttime="20210129 10:36:38.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:36:42.552" level="INFO">2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:36:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:36:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:36:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:36:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:36:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A4C4B385705C-&gt;72149fdc-ed22-4aa4-ae71-6acf1917c381
2021-01-29 10:36:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:36:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:36:42.552" starttime="20210129 10:36:42.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:36:42.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:36:42.553" starttime="20210129 10:36:42.553"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:42.553" starttime="20210129 10:36:38.964"></status>
</kw>
<msg timestamp="20210129 10:36:42.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:36:42.554" starttime="20210129 10:36:38.964"></status>
</kw>
<msg timestamp="20210129 10:36:42.554" level="INFO">${result} = 2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:42.554" starttime="20210129 10:36:38.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:36:42.557" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:36:44.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:36:44.431" level="INFO">${output} = 2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:44.431" starttime="20210129 10:36:42.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:36:44.432" level="INFO">2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:44 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-29 10:36 ofs://om/volume1/bucket1/ozone-25852
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-29 10:35 ofs://om/volume1/bucket1/ozone-57677
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:36 ofs://om/volume1/bucket1/wordcount-Ezf92Kqo.txt
2021-01-29 10:36:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:36:44.432" starttime="20210129 10:36:44.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:36:44.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:36:44.433" starttime="20210129 10:36:44.432"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:44.433" starttime="20210129 10:36:42.555"></status>
</kw>
<msg timestamp="20210129 10:36:44.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:36:44.433" starttime="20210129 10:36:42.555"></status>
</kw>
<msg timestamp="20210129 10:36:44.434" level="INFO">${result} = 2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:44.434" starttime="20210129 10:36:42.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:36:44.434" starttime="20210129 10:36:44.434"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:36:44.435" critical="yes" starttime="20210129 10:36:38.953"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:36:44.436" starttime="20210129 10:36:38.896"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:35:03.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:35:03.386" starttime="20210129 10:35:03.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:35:03.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:35:03.386" starttime="20210129 10:35:03.386"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:03.386" starttime="20210129 10:35:03.384"></status>
</kw>
<msg timestamp="20210129 10:35:03.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:35:03.386" starttime="20210129 10:35:03.384"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:03.387" starttime="20210129 10:35:03.383"></status>
</kw>
<msg timestamp="20210129 10:35:03.387" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:03.387" starttime="20210129 10:35:03.383"></status>
</kw>
<msg timestamp="20210129 10:35:03.387" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:03.387" starttime="20210129 10:35:03.382"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:35:03.388" level="INFO">${random} = 57677</msg>
<status status="PASS" endtime="20210129 10:35:03.388" starttime="20210129 10:35:03.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:03.392" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57677 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:35:07.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:35:07.048" level="INFO">${output} = 2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:35:07.048" starttime="20210129 10:35:03.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:35:07.051" level="INFO">2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:05 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:35:05 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:35:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:35:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:35:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:35:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-532A12AF9577-&gt;848e8bbc-530f-4d38-803f-deb70a486af0
2021-01-29 10:35:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:35:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:35:07.051" starttime="20210129 10:35:07.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:35:07.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:35:07.052" starttime="20210129 10:35:07.051"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:07.052" starttime="20210129 10:35:03.389"></status>
</kw>
<msg timestamp="20210129 10:35:07.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:35:07.052" starttime="20210129 10:35:03.388"></status>
</kw>
<msg timestamp="20210129 10:35:07.052" level="INFO">${result} = 2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:35:07.052" starttime="20210129 10:35:03.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:07.056" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:35:08.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:35:08.814" level="INFO">${output} = 2021-01-29 10:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:35:08.814" starttime="20210129 10:35:07.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:35:08.815" level="INFO">2021-01-29 10:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-29 10:35 o3fs://bucket1.volume1.om/ozone-57677
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:34 o3fs://bucket1.volume1.om/user
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:35:08.815" starttime="20210129 10:35:08.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:35:08.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:35:08.816" starttime="20210129 10:35:08.815"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:08.817" starttime="20210129 10:35:07.053"></status>
</kw>
<msg timestamp="20210129 10:35:08.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:35:08.817" starttime="20210129 10:35:07.053"></status>
</kw>
<msg timestamp="20210129 10:35:08.817" level="INFO">${result} = 2021-01-29 10:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:35:08.817" starttime="20210129 10:35:07.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:35:08.818" starttime="20210129 10:35:08.817"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:35:08.818" critical="yes" starttime="20210129 10:35:03.381"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:35:08.819" starttime="20210129 10:35:03.315"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:36:49.026" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:36:49.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:36:49.031" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:36:49.031" starttime="20210129 10:36:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:36:49.032" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:36:49.032" starttime="20210129 10:36:49.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:36:49.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:36:49.033" starttime="20210129 10:36:49.033"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:49.033" starttime="20210129 10:36:49.022"></status>
</kw>
<msg timestamp="20210129 10:36:49.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:36:49.033" starttime="20210129 10:36:49.021"></status>
</kw>
<msg timestamp="20210129 10:36:49.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:36:49.034" starttime="20210129 10:36:49.021"></status>
</kw>
<msg timestamp="20210129 10:36:49.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:36:49.034" starttime="20210129 10:36:49.020"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:36:49.038" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:36:49.039" starttime="20210129 10:36:49.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:36:49.039" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:36:49.039" starttime="20210129 10:36:49.039"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:49.040" starttime="20210129 10:36:49.038"></status>
</kw>
<msg timestamp="20210129 10:36:49.040" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:36:49.040" starttime="20210129 10:36:49.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:36:49.041" starttime="20210129 10:36:49.041"></status>
</kw>
<msg timestamp="20210129 10:36:49.041" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:36:49.041" starttime="20210129 10:36:49.040"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:49.041" starttime="20210129 10:36:49.037"></status>
</kw>
<msg timestamp="20210129 10:36:49.042" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:36:49.042" starttime="20210129 10:36:49.035"></status>
</kw>
<msg timestamp="20210129 10:36:49.042" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:36:49.042" starttime="20210129 10:36:49.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:36:49.045" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:37:30.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:37:30.153" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36...</msg>
<status status="PASS" endtime="20210129 10:37:30.153" starttime="20210129 10:36:49.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:37:30.154" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:36:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:36:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:36:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:36:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:36:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3913C885F353-&gt;72149fdc-ed22-4aa4-ae71-6acf1917c381
2021-01-29 10:36:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-29 10:36:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:36:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6EAD2F6F3B1C-&gt;848e8bbc-530f-4d38-803f-deb70a486af0
2021-01-29 10:36:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:36:55 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:36:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916440900_0003
2021-01-29 10:36:55 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:55 INFO  Configuration:2752 - resource-types.xml not found
2021-01-29 10:36:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-29 10:36:56 INFO  YarnClientImpl:324 - Submitted application application_1611916440900_0003
2021-01-29 10:36:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611916440900_0003/
2021-01-29 10:36:56 INFO  Job:1619 - Running job: job_1611916440900_0003
2021-01-29 10:37:04 INFO  Job:1640 - Job job_1611916440900_0003 running in uber mode : false
2021-01-29 10:37:04 INFO  Job:1647 -  map 0% reduce 0%
2021-01-29 10:37:10 INFO  Job:1647 -  map 33% reduce 0%
2021-01-29 10:37:16 INFO  Job:1647 -  map 67% reduce 0%
2021-01-29 10:37:21 INFO  Job:1647 -  map 100% reduce 0%
2021-01-29 10:37:28 INFO  Job:1647 -  map 100% reduce 100%
2021-01-29 10:37:29 INFO  Job:1658 - Job job_1611916440900_0003 completed successfully
2021-01-29 10:37:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40496
		Total time spent by all reduces in occupied slots (ms)=25216
		Total time spent by all map tasks (ms)=10124
		Total time spent by all reduce tasks (ms)=6304
		Total vcore-milliseconds taken by all map tasks=10124
		Total vcore-milliseconds taken by all reduce tasks=6304
		Total megabyte-milliseconds taken by all map tasks=41467904
		Total megabyte-milliseconds taken by all reduce tasks=25821184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=580
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1253122048
		Virtual memory (bytes) snapshot=15803305984
		Total committed heap usage (bytes)=1078984704
		Peak Map Physical memory (bytes)=314871808
		Peak Map Virtual memory (bytes)=3946024960
		Peak Reduce Physical memory (bytes)=311406592
		Peak Reduce Virtual memory (bytes)=3966394368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.73 seconds
2021-01-29 10:37:29 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-29 10:37:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:37:30.154" starttime="20210129 10:37:30.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:37:30.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:37:30.155" starttime="20210129 10:37:30.154"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.155" starttime="20210129 10:36:49.043"></status>
</kw>
<msg timestamp="20210129 10:37:30.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:37:30.155" starttime="20210129 10:36:49.043"></status>
</kw>
<msg timestamp="20210129 10:37:30.156" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36...</msg>
<status status="PASS" endtime="20210129 10:37:30.156" starttime="20210129 10:36:49.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:37:30.156" starttime="20210129 10:37:30.156"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:37:30.157" critical="yes" starttime="20210129 10:36:49.020"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:37:30.162" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:37:30.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:37:30.166" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:37:30.166" starttime="20210129 10:37:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:37:30.167" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:37:30.167" starttime="20210129 10:37:30.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:37:30.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:37:30.168" starttime="20210129 10:37:30.167"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.168" starttime="20210129 10:37:30.159"></status>
</kw>
<msg timestamp="20210129 10:37:30.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:37:30.168" starttime="20210129 10:37:30.159"></status>
</kw>
<msg timestamp="20210129 10:37:30.168" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:37:30.169" starttime="20210129 10:37:30.159"></status>
</kw>
<msg timestamp="20210129 10:37:30.169" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:37:30.169" starttime="20210129 10:37:30.158"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:37:30.169" level="INFO">${random} = 1zYqYDZO</msg>
<status status="PASS" endtime="20210129 10:37:30.169" starttime="20210129 10:37:30.169"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:37:30.173" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:37:30.173" starttime="20210129 10:37:30.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:37:30.174" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.174" starttime="20210129 10:37:30.173"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.174" starttime="20210129 10:37:30.172"></status>
</kw>
<msg timestamp="20210129 10:37:30.174" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.174" starttime="20210129 10:37:30.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:37:30.175" starttime="20210129 10:37:30.175"></status>
</kw>
<msg timestamp="20210129 10:37:30.176" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:37:30.176" starttime="20210129 10:37:30.175"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.176" starttime="20210129 10:37:30.171"></status>
</kw>
<msg timestamp="20210129 10:37:30.176" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:37:30.176" starttime="20210129 10:37:30.170"></status>
</kw>
<msg timestamp="20210129 10:37:30.177" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:37:30.177" starttime="20210129 10:37:30.170"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:37:30.180" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:37:30.180" starttime="20210129 10:37:30.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:37:30.181" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.181" starttime="20210129 10:37:30.180"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.181" starttime="20210129 10:37:30.179"></status>
</kw>
<msg timestamp="20210129 10:37:30.181" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.181" starttime="20210129 10:37:30.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:37:30.183" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210129 10:37:30.183" starttime="20210129 10:37:30.182"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:37:30.184" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210129 10:37:30.184" starttime="20210129 10:37:30.183"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.184" starttime="20210129 10:37:30.182"></status>
</kw>
<msg timestamp="20210129 10:37:30.184" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210129 10:37:30.184" starttime="20210129 10:37:30.181"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.184" starttime="20210129 10:37:30.178"></status>
</kw>
<msg timestamp="20210129 10:37:30.184" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:37:30.184" starttime="20210129 10:37:30.177"></status>
</kw>
<msg timestamp="20210129 10:37:30.185" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:37:30.185" starttime="20210129 10:37:30.177"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:37:30.188" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:37:30.188" starttime="20210129 10:37:30.187"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:37:30.189" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.189" starttime="20210129 10:37:30.188"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.189" starttime="20210129 10:37:30.187"></status>
</kw>
<msg timestamp="20210129 10:37:30.189" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:37:30.189" starttime="20210129 10:37:30.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:37:30.190" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210129 10:37:30.191" starttime="20210129 10:37:30.190"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:37:30.191" level="INFO">${result} = /wordcount-1zYqYDZO.txt</msg>
<status status="PASS" endtime="20210129 10:37:30.191" starttime="20210129 10:37:30.191"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.192" starttime="20210129 10:37:30.190"></status>
</kw>
<msg timestamp="20210129 10:37:30.192" level="INFO">${path_with_leading} = /wordcount-1zYqYDZO.txt</msg>
<status status="PASS" endtime="20210129 10:37:30.192" starttime="20210129 10:37:30.189"></status>
</kw>
<status status="PASS" endtime="20210129 10:37:30.193" starttime="20210129 10:37:30.186"></status>
</kw>
<msg timestamp="20210129 10:37:30.193" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-1zYqYDZO.txt</msg>
<status status="PASS" endtime="20210129 10:37:30.193" starttime="20210129 10:37:30.185"></status>
</kw>
<msg timestamp="20210129 10:37:30.193" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-1zYqYDZO.txt</msg>
<status status="PASS" endtime="20210129 10:37:30.193" starttime="20210129 10:37:30.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:37:30.197" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-1zYqYDZO.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:38:08.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:38:08.401" level="INFO">${output} = 2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:38:08.401" starttime="20210129 10:37:30.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:38:08.402" level="INFO">2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-29 10:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:37:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:37:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:37:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:37:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:37:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C62564F4995B-&gt;848e8bbc-530f-4d38-803f-deb70a486af0
2021-01-29 10:37:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:37:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:37:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A80AA78A0A2E-&gt;72149fdc-ed22-4aa4-ae71-6acf1917c381
2021-01-29 10:37:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:37:33 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:37:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916440900_0004
2021-01-29 10:37:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:34 INFO  Configuration:2752 - resource-types.xml not found
2021-01-29 10:37:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-29 10:37:34 INFO  YarnClientImpl:324 - Submitted application application_1611916440900_0004
2021-01-29 10:37:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611916440900_0004/
2021-01-29 10:37:34 INFO  Job:1619 - Running job: job_1611916440900_0004
2021-01-29 10:37:41 INFO  Job:1640 - Job job_1611916440900_0004 running in uber mode : false
2021-01-29 10:37:41 INFO  Job:1647 -  map 0% reduce 0%
2021-01-29 10:37:48 INFO  Job:1647 -  map 33% reduce 0%
2021-01-29 10:37:54 INFO  Job:1647 -  map 67% reduce 0%
2021-01-29 10:37:59 INFO  Job:1647 -  map 100% reduce 0%
2021-01-29 10:38:04 INFO  Job:1647 -  map 100% reduce 100%
2021-01-29 10:38:07 INFO  Job:1658 - Job job_1611916440900_0004 completed successfully
2021-01-29 10:38:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:38:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40984
		Total time spent by all reduces in occupied slots (ms)=19032
		Total time spent by all map tasks (ms)=10246
		Total time spent by all reduce tasks (ms)=4758
		Total vcore-milliseconds taken by all map tasks=10246
		Total vcore-milliseconds taken by all reduce tasks=4758
		Total megabyte-milliseconds taken by all map tasks=41967616
		Total megabyte-milliseconds taken by all reduce tasks=19488768
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1227051008
		Virtual memory (bytes) snapshot=15783211008
		Total committed heap usage (bytes)=1077411840
		Peak Map Physical memory (bytes)=314118144
		Peak Map Virtual memory (bytes)=3946684416
		Peak Reduce Physical memory (bytes)=312307712
		Peak Reduce Virtual memory (bytes)=3969810432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-29 10:38:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:38:08.402" starttime="20210129 10:38:08.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:38:08.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:38:08.403" starttime="20210129 10:38:08.402"></status>
</kw>
<status status="PASS" endtime="20210129 10:38:08.403" starttime="20210129 10:37:30.195"></status>
</kw>
<msg timestamp="20210129 10:38:08.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:38:08.403" starttime="20210129 10:37:30.194"></status>
</kw>
<msg timestamp="20210129 10:38:08.404" level="INFO">${output} = 2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:37:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:38:08.404" starttime="20210129 10:37:30.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:38:08.404" starttime="20210129 10:38:08.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:38:08.405" starttime="20210129 10:38:08.404"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:38:08.405" critical="yes" starttime="20210129 10:37:30.157"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:38:08.406" starttime="20210129 10:36:48.960"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:13.522" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:35:13.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:35:13.529" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:13.529" starttime="20210129 10:35:13.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:35:13.530" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:13.530" starttime="20210129 10:35:13.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:35:13.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:35:13.531" starttime="20210129 10:35:13.530"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:13.531" starttime="20210129 10:35:13.518"></status>
</kw>
<msg timestamp="20210129 10:35:13.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:35:13.531" starttime="20210129 10:35:13.518"></status>
</kw>
<msg timestamp="20210129 10:35:13.531" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:13.531" starttime="20210129 10:35:13.517"></status>
</kw>
<msg timestamp="20210129 10:35:13.531" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:13.532" starttime="20210129 10:35:13.517"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:35:13.537" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:35:13.538" starttime="20210129 10:35:13.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:35:13.538" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:35:13.538" starttime="20210129 10:35:13.538"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:13.539" starttime="20210129 10:35:13.536"></status>
</kw>
<msg timestamp="20210129 10:35:13.539" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:35:13.539" starttime="20210129 10:35:13.535"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:13.539" starttime="20210129 10:35:13.534"></status>
</kw>
<msg timestamp="20210129 10:35:13.539" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:13.539" starttime="20210129 10:35:13.533"></status>
</kw>
<msg timestamp="20210129 10:35:13.540" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:13.540" starttime="20210129 10:35:13.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:13.543" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:35:56.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:35:56.337" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35...</msg>
<status status="PASS" endtime="20210129 10:35:56.337" starttime="20210129 10:35:13.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:35:56.338" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:35:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:35:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:35:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:35:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:35:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F1F13985F88-&gt;848e8bbc-530f-4d38-803f-deb70a486af0
2021-01-29 10:35:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-29 10:35:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-886817A1D3B0-&gt;72149fdc-ed22-4aa4-ae71-6acf1917c381
2021-01-29 10:35:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-29 10:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-29 10:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:35:20 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:35:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916440900_0001
2021-01-29 10:35:20 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:35:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:20 INFO  Configuration:2752 - resource-types.xml not found
2021-01-29 10:35:20 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-29 10:35:21 INFO  YarnClientImpl:324 - Submitted application application_1611916440900_0001
2021-01-29 10:35:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611916440900_0001/
2021-01-29 10:35:21 INFO  Job:1619 - Running job: job_1611916440900_0001
2021-01-29 10:35:31 INFO  Job:1640 - Job job_1611916440900_0001 running in uber mode : false
2021-01-29 10:35:31 INFO  Job:1647 -  map 0% reduce 0%
2021-01-29 10:35:38 INFO  Job:1647 -  map 33% reduce 0%
2021-01-29 10:35:44 INFO  Job:1647 -  map 67% reduce 0%
2021-01-29 10:35:49 INFO  Job:1647 -  map 100% reduce 0%
2021-01-29 10:35:54 INFO  Job:1647 -  map 100% reduce 100%
2021-01-29 10:35:55 INFO  Job:1658 - Job job_1611916440900_0001 completed successfully
2021-01-29 10:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40916
		Total time spent by all reduces in occupied slots (ms)=15356
		Total time spent by all map tasks (ms)=10229
		Total time spent by all reduce tasks (ms)=3839
		Total vcore-milliseconds taken by all map tasks=10229
		Total vcore-milliseconds taken by all reduce tasks=3839
		Total megabyte-milliseconds taken by all map tasks=41897984
		Total megabyte-milliseconds taken by all reduce tasks=15724544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1269272576
		Virtual memory (bytes) snapshot=15788265472
		Total committed heap usage (bytes)=1074266112
		Peak Map Physical memory (bytes)=324386816
		Peak Map Virtual memory (bytes)=3943874560
		Peak Reduce Physical memory (bytes)=318447616
		Peak Reduce Virtual memory (bytes)=3965693952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.615 seconds
2021-01-29 10:35:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:55 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-29 10:35:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:35:56.339" starttime="20210129 10:35:56.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:35:56.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:35:56.339" starttime="20210129 10:35:56.339"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.340" starttime="20210129 10:35:13.541"></status>
</kw>
<msg timestamp="20210129 10:35:56.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:35:56.340" starttime="20210129 10:35:13.541"></status>
</kw>
<msg timestamp="20210129 10:35:56.340" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35...</msg>
<status status="PASS" endtime="20210129 10:35:56.340" starttime="20210129 10:35:13.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:35:56.341" starttime="20210129 10:35:56.341"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:35:56.341" critical="yes" starttime="20210129 10:35:13.516"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:56.347" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:35:56.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:35:56.354" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:56.354" starttime="20210129 10:35:56.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:35:56.355" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:56.355" starttime="20210129 10:35:56.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:35:56.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:35:56.356" starttime="20210129 10:35:56.355"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.357" starttime="20210129 10:35:56.344"></status>
</kw>
<msg timestamp="20210129 10:35:56.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:35:56.357" starttime="20210129 10:35:56.344"></status>
</kw>
<msg timestamp="20210129 10:35:56.357" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:56.357" starttime="20210129 10:35:56.343"></status>
</kw>
<msg timestamp="20210129 10:35:56.357" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210129 10:35:56.357" starttime="20210129 10:35:56.343"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:35:56.358" level="INFO">${random} = Ezf92Kqo</msg>
<status status="PASS" endtime="20210129 10:35:56.358" starttime="20210129 10:35:56.358"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:35:56.362" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:35:56.362" starttime="20210129 10:35:56.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:35:56.363" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.363" starttime="20210129 10:35:56.362"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.363" starttime="20210129 10:35:56.361"></status>
</kw>
<msg timestamp="20210129 10:35:56.363" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.363" starttime="20210129 10:35:56.361"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.364" starttime="20210129 10:35:56.360"></status>
</kw>
<msg timestamp="20210129 10:35:56.364" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:56.364" starttime="20210129 10:35:56.359"></status>
</kw>
<msg timestamp="20210129 10:35:56.364" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:35:56.364" starttime="20210129 10:35:56.358"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:35:56.369" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:35:56.369" starttime="20210129 10:35:56.368"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:35:56.369" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.369" starttime="20210129 10:35:56.369"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.369" starttime="20210129 10:35:56.367"></status>
</kw>
<msg timestamp="20210129 10:35:56.370" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.370" starttime="20210129 10:35:56.367"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.370" starttime="20210129 10:35:56.366"></status>
</kw>
<msg timestamp="20210129 10:35:56.370" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:35:56.370" starttime="20210129 10:35:56.365"></status>
</kw>
<msg timestamp="20210129 10:35:56.371" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:35:56.371" starttime="20210129 10:35:56.364"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:35:56.375" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:35:56.375" starttime="20210129 10:35:56.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:35:56.376" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.376" starttime="20210129 10:35:56.375"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.376" starttime="20210129 10:35:56.374"></status>
</kw>
<msg timestamp="20210129 10:35:56.376" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:35:56.376" starttime="20210129 10:35:56.373"></status>
</kw>
<status status="PASS" endtime="20210129 10:35:56.376" starttime="20210129 10:35:56.372"></status>
</kw>
<msg timestamp="20210129 10:35:56.377" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-Ezf92Kqo.txt</msg>
<status status="PASS" endtime="20210129 10:35:56.377" starttime="20210129 10:35:56.372"></status>
</kw>
<msg timestamp="20210129 10:35:56.377" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-Ezf92Kqo.txt</msg>
<status status="PASS" endtime="20210129 10:35:56.377" starttime="20210129 10:35:56.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:35:56.381" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-Ezf92Kqo.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:36:34.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:36:34.327" level="INFO">${output} = 2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:34.327" starttime="20210129 10:35:56.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:36:34.328" level="INFO">2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-29 10:35:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-29 10:35:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:35:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:35:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:35:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E3057F9CB93-&gt;72149fdc-ed22-4aa4-ae71-6acf1917c381
2021-01-29 10:35:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:36:00 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:36:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D15A0496EE4-&gt;848e8bbc-530f-4d38-803f-deb70a486af0
2021-01-29 10:36:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:36:00 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:36:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916440900_0002
2021-01-29 10:36:03 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:36:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:03 INFO  Configuration:2752 - resource-types.xml not found
2021-01-29 10:36:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-29 10:36:03 INFO  YarnClientImpl:324 - Submitted application application_1611916440900_0002
2021-01-29 10:36:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611916440900_0002/
2021-01-29 10:36:03 INFO  Job:1619 - Running job: job_1611916440900_0002
2021-01-29 10:36:10 INFO  Job:1640 - Job job_1611916440900_0002 running in uber mode : false
2021-01-29 10:36:10 INFO  Job:1647 -  map 0% reduce 0%
2021-01-29 10:36:17 INFO  Job:1647 -  map 33% reduce 0%
2021-01-29 10:36:22 INFO  Job:1647 -  map 67% reduce 0%
2021-01-29 10:36:28 INFO  Job:1647 -  map 100% reduce 0%
2021-01-29 10:36:32 INFO  Job:1647 -  map 100% reduce 100%
2021-01-29 10:36:33 INFO  Job:1658 - Job job_1611916440900_0002 completed successfully
2021-01-29 10:36:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:36:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40908
		Total time spent by all reduces in occupied slots (ms)=14696
		Total time spent by all map tasks (ms)=10227
		Total time spent by all reduce tasks (ms)=3674
		Total vcore-milliseconds taken by all map tasks=10227
		Total vcore-milliseconds taken by all reduce tasks=3674
		Total megabyte-milliseconds taken by all map tasks=41889792
		Total megabyte-milliseconds taken by all reduce tasks=15048704
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=6590
		Physical memory (bytes) snapshot=1233952768
		Virtual memory (bytes) snapshot=15784730624
		Total committed heap usage (bytes)=1072168960
		Peak Map Physical memory (bytes)=319094784
		Peak Map Virtual memory (bytes)=3945598976
		Peak Reduce Physical memory (bytes)=305262592
		Peak Reduce Virtual memory (bytes)=3969949696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-29 10:36:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210129 10:36:34.329" starttime="20210129 10:36:34.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:36:34.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:36:34.329" starttime="20210129 10:36:34.329"></status>
</kw>
<status status="PASS" endtime="20210129 10:36:34.330" starttime="20210129 10:35:56.378"></status>
</kw>
<msg timestamp="20210129 10:36:34.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:36:34.330" starttime="20210129 10:35:56.378"></status>
</kw>
<msg timestamp="20210129 10:36:34.330" level="INFO">${output} = 2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-29 10:35:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210129 10:36:34.330" starttime="20210129 10:35:56.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:36:34.331" starttime="20210129 10:36:34.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:36:34.331" starttime="20210129 10:36:34.331"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:36:34.331" critical="yes" starttime="20210129 10:35:56.342"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:36:34.333" starttime="20210129 10:35:13.456"></status>
</suite>
<status status="PASS" elapsedtime="200817" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:23.714" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:35.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 10:39:35.174" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:39:35.174" starttime="20210129 10:39:23.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:35.175" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:39:35.175" starttime="20210129 10:39:35.175"></status>
</kw>
<msg timestamp="20210129 10:39:35.178" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210129 10:39:35.178" starttime="20210129 10:39:23.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:35.184" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:38.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:39:38.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:39:38.422" starttime="20210129 10:39:35.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:38.423" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:39:38.423" starttime="20210129 10:39:38.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:39:38.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:39:38.424" starttime="20210129 10:39:38.424"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:38.425" starttime="20210129 10:39:35.181"></status>
</kw>
<msg timestamp="20210129 10:39:38.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:39:38.425" starttime="20210129 10:39:35.180"></status>
</kw>
<msg timestamp="20210129 10:39:38.425" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210129 10:39:38.425" starttime="20210129 10:39:35.180"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210129 10:39:38.426" starttime="20210129 10:39:38.425"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:38.426" starttime="20210129 10:39:35.179"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:38.426" starttime="20210129 10:39:35.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:38.431" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:41.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:39:41.424" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:39:41.424" starttime="20210129 10:39:38.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:41.425" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:39:41.425" starttime="20210129 10:39:41.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:39:41.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:39:41.426" starttime="20210129 10:39:41.425"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:41.426" starttime="20210129 10:39:38.429"></status>
</kw>
<msg timestamp="20210129 10:39:41.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:39:41.426" starttime="20210129 10:39:38.428"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:41.426" starttime="20210129 10:39:38.427"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:41.427" starttime="20210129 10:39:38.427"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:41.427" starttime="20210129 10:39:38.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 10:39:41.427" starttime="20210129 10:39:41.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:41.432" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:44.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:39:44.716" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:39...</msg>
<status status="PASS" endtime="20210129 10:39:44.716" starttime="20210129 10:39:41.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:44.717" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:39:41.233Z",
  "modificationTime" : "2021-01-29T10:39:41.233Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 10:39:44.717" starttime="20210129 10:39:44.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:39:44.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:39:44.718" starttime="20210129 10:39:44.717"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:44.718" starttime="20210129 10:39:41.429"></status>
</kw>
<msg timestamp="20210129 10:39:44.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:39:44.718" starttime="20210129 10:39:41.428"></status>
</kw>
<msg timestamp="20210129 10:39:44.719" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T10:39...</msg>
<status status="PASS" endtime="20210129 10:39:44.719" starttime="20210129 10:39:41.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210129 10:39:44.719" starttime="20210129 10:39:44.719"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:39:44.723" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:39:44.723" starttime="20210129 10:39:44.723"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:39:44.724" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:39:44.724" starttime="20210129 10:39:44.724"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:44.724" starttime="20210129 10:39:44.722"></status>
</kw>
<msg timestamp="20210129 10:39:44.724" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:39:44.725" starttime="20210129 10:39:44.722"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:44.725" starttime="20210129 10:39:44.721"></status>
</kw>
<msg timestamp="20210129 10:39:44.725" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:39:44.725" starttime="20210129 10:39:44.720"></status>
</kw>
<msg timestamp="20210129 10:39:44.725" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210129 10:39:44.725" starttime="20210129 10:39:44.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:44.729" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:48.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:39:48.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:39:48.237" starttime="20210129 10:39:44.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:48.238" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:39:48.238" starttime="20210129 10:39:48.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:39:48.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:39:48.239" starttime="20210129 10:39:48.238"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:48.239" starttime="20210129 10:39:44.726"></status>
</kw>
<msg timestamp="20210129 10:39:48.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:39:48.240" starttime="20210129 10:39:44.726"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:48.240" starttime="20210129 10:39:44.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:48.244" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:39:55.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:39:55.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:39:55.157" starttime="20210129 10:39:48.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:39:55.159" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:39:55.159" starttime="20210129 10:39:55.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:39:55.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:39:55.160" starttime="20210129 10:39:55.159"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:55.160" starttime="20210129 10:39:48.241"></status>
</kw>
<msg timestamp="20210129 10:39:55.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:39:55.161" starttime="20210129 10:39:48.241"></status>
</kw>
<status status="PASS" endtime="20210129 10:39:55.161" starttime="20210129 10:39:48.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:39:55.165" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:00.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:00.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:40:00.804" starttime="20210129 10:39:55.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:00.805" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:40:00.805" starttime="20210129 10:40:00.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:00.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:00.806" starttime="20210129 10:40:00.806"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:00.806" starttime="20210129 10:39:55.162"></status>
</kw>
<msg timestamp="20210129 10:40:00.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:00.807" starttime="20210129 10:39:55.162"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:00.807" starttime="20210129 10:39:55.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:00.812" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:05.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:05.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:40:05.959" starttime="20210129 10:40:00.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:05.960" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:40:05.960" starttime="20210129 10:40:05.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:05.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:05.961" starttime="20210129 10:40:05.960"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:05.961" starttime="20210129 10:40:00.808"></status>
</kw>
<msg timestamp="20210129 10:40:05.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:05.962" starttime="20210129 10:40:00.808"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:05.962" starttime="20210129 10:40:00.807"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:40:05.962" critical="yes" starttime="20210129 10:39:23.708"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:40:05.968" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:40:05.968" starttime="20210129 10:40:05.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:40:05.968" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:40:05.968" starttime="20210129 10:40:05.968"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:05.968" starttime="20210129 10:40:05.966"></status>
</kw>
<msg timestamp="20210129 10:40:05.969" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:40:05.969" starttime="20210129 10:40:05.966"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:05.969" starttime="20210129 10:40:05.965"></status>
</kw>
<msg timestamp="20210129 10:40:05.969" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:40:05.969" starttime="20210129 10:40:05.965"></status>
</kw>
<msg timestamp="20210129 10:40:05.970" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:40:05.970" starttime="20210129 10:40:05.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:05.973" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:09.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:09.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:40:09.137" starttime="20210129 10:40:05.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:09.138" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:40:09.138" starttime="20210129 10:40:09.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:09.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:09.138" starttime="20210129 10:40:09.138"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:09.139" starttime="20210129 10:40:05.970"></status>
</kw>
<msg timestamp="20210129 10:40:09.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:09.139" starttime="20210129 10:40:05.970"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:09.139" starttime="20210129 10:40:05.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:09.143" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:12.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:12.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 10:40:12.403" starttime="20210129 10:40:09.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:12.404" level="INFO"></msg>
<status status="PASS" endtime="20210129 10:40:12.404" starttime="20210129 10:40:12.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:12.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:12.405" starttime="20210129 10:40:12.405"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:12.405" starttime="20210129 10:40:09.140"></status>
</kw>
<msg timestamp="20210129 10:40:12.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:12.406" starttime="20210129 10:40:09.140"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:12.406" starttime="20210129 10:40:09.139"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 10:40:12.406" critical="yes" starttime="20210129 10:40:05.963"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210129 10:40:12.407" starttime="20210129 10:39:23.601"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:41:56.040" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:41:56.040" starttime="20210129 10:41:56.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:41:56.041" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:41:56.041" starttime="20210129 10:41:56.040"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:56.041" starttime="20210129 10:41:56.039"></status>
</kw>
<msg timestamp="20210129 10:41:56.041" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:41:56.041" starttime="20210129 10:41:56.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:41:56.042" starttime="20210129 10:41:56.042"></status>
</kw>
<msg timestamp="20210129 10:41:56.043" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:41:56.043" starttime="20210129 10:41:56.042"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:56.043" starttime="20210129 10:41:56.038"></status>
</kw>
<msg timestamp="20210129 10:41:56.043" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:41:56.043" starttime="20210129 10:41:56.037"></status>
</kw>
<msg timestamp="20210129 10:41:56.044" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:41:56.044" starttime="20210129 10:41:56.035"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:41:56.044" level="INFO">${random} = 10085</msg>
<status status="PASS" endtime="20210129 10:41:56.044" starttime="20210129 10:41:56.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:41:56.061" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-10085 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:41:59.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:41:59.533" level="INFO">${output} = 2021-01-29 10:41:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:41:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 10:41:59.533" starttime="20210129 10:41:56.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:41:59.534" level="INFO">2021-01-29 10:41:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:41:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:41:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:41:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:41:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7387330EBBCD-&gt;c7531949-aa18-48b4-b99c-1809e261a15e
2021-01-29 10:41:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 10:41:59.534" starttime="20210129 10:41:59.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:41:59.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:41:59.535" starttime="20210129 10:41:59.535"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:59.535" starttime="20210129 10:41:56.045"></status>
</kw>
<msg timestamp="20210129 10:41:59.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:41:59.536" starttime="20210129 10:41:56.045"></status>
</kw>
<msg timestamp="20210129 10:41:59.536" level="INFO">${result} = 2021-01-29 10:41:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:41:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 10:41:59.536" starttime="20210129 10:41:56.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:41:59.540" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:42:01.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:42:01.338" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:41 ofs://om/volume1/bucket1/ozone-10085
-rw-...</msg>
<status status="PASS" endtime="20210129 10:42:01.338" starttime="20210129 10:41:59.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:42:01.339" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:41 ofs://om/volume1/bucket1/ozone-10085
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:40 ofs://om/volume1/bucket1/ozone-27772
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:41 ofs://om/volume1/bucket1/wordcount-xVavb5p6.txt</msg>
<status status="PASS" endtime="20210129 10:42:01.339" starttime="20210129 10:42:01.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:42:01.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:42:01.340" starttime="20210129 10:42:01.339"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:01.340" starttime="20210129 10:41:59.537"></status>
</kw>
<msg timestamp="20210129 10:42:01.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:42:01.340" starttime="20210129 10:41:59.537"></status>
</kw>
<msg timestamp="20210129 10:42:01.341" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:41 ofs://om/volume1/bucket1/ozone-10085
-rw-...</msg>
<status status="PASS" endtime="20210129 10:42:01.341" starttime="20210129 10:41:59.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:42:01.341" starttime="20210129 10:42:01.341"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:42:01.342" critical="yes" starttime="20210129 10:41:56.035"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:42:01.343" starttime="20210129 10:41:55.972"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:40:17.250" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:40:17.250" starttime="20210129 10:40:17.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:40:17.251" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:40:17.251" starttime="20210129 10:40:17.250"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:17.251" starttime="20210129 10:40:17.249"></status>
</kw>
<msg timestamp="20210129 10:40:17.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:40:17.251" starttime="20210129 10:40:17.249"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:17.251" starttime="20210129 10:40:17.248"></status>
</kw>
<msg timestamp="20210129 10:40:17.252" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:40:17.252" starttime="20210129 10:40:17.247"></status>
</kw>
<msg timestamp="20210129 10:40:17.252" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:40:17.252" starttime="20210129 10:40:17.246"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:40:17.253" level="INFO">${random} = 27772</msg>
<status status="PASS" endtime="20210129 10:40:17.253" starttime="20210129 10:40:17.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:17.257" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-27772 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:23.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:23.475" level="INFO">${output} = 2021-01-29 10:40:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 10:40:23.475" starttime="20210129 10:40:17.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:23.478" level="INFO">2021-01-29 10:40:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:40:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:40:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:40:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D20F21BBB3D-&gt;c7531949-aa18-48b4-b99c-1809e261a15e
2021-01-29 10:40:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210129 10:40:23.478" starttime="20210129 10:40:23.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:23.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:23.479" starttime="20210129 10:40:23.478"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:23.479" starttime="20210129 10:40:17.253"></status>
</kw>
<msg timestamp="20210129 10:40:23.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:23.479" starttime="20210129 10:40:17.253"></status>
</kw>
<msg timestamp="20210129 10:40:23.479" level="INFO">${result} = 2021-01-29 10:40:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210129 10:40:23.479" starttime="20210129 10:40:17.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:23.483" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:25.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:25.312" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:40 o3fs://bucket1.volume1.om/ozone-27772
dr...</msg>
<status status="PASS" endtime="20210129 10:40:25.312" starttime="20210129 10:40:23.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:25.313" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:40 o3fs://bucket1.volume1.om/ozone-27772
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:40 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210129 10:40:25.313" starttime="20210129 10:40:25.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:25.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:25.314" starttime="20210129 10:40:25.314"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:25.315" starttime="20210129 10:40:23.481"></status>
</kw>
<msg timestamp="20210129 10:40:25.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:25.315" starttime="20210129 10:40:23.480"></status>
</kw>
<msg timestamp="20210129 10:40:25.315" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-29 10:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-29 10:40 o3fs://bucket1.volume1.om/ozone-27772
dr...</msg>
<status status="PASS" endtime="20210129 10:40:25.315" starttime="20210129 10:40:23.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:40:25.316" starttime="20210129 10:40:25.315"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 10:40:25.316" critical="yes" starttime="20210129 10:40:17.245"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210129 10:40:25.318" starttime="20210129 10:40:17.184"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:42:05.890" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:42:05.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:42:05.897" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:05.897" starttime="20210129 10:42:05.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:42:05.898" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:05.898" starttime="20210129 10:42:05.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:42:05.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:42:05.899" starttime="20210129 10:42:05.898"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:05.899" starttime="20210129 10:42:05.887"></status>
</kw>
<msg timestamp="20210129 10:42:05.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:42:05.899" starttime="20210129 10:42:05.886"></status>
</kw>
<msg timestamp="20210129 10:42:05.899" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:05.899" starttime="20210129 10:42:05.886"></status>
</kw>
<msg timestamp="20210129 10:42:05.900" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:05.900" starttime="20210129 10:42:05.885"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:42:05.905" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:42:05.905" starttime="20210129 10:42:05.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:05.906" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:42:05.906" starttime="20210129 10:42:05.905"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:05.906" starttime="20210129 10:42:05.904"></status>
</kw>
<msg timestamp="20210129 10:42:05.906" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:42:05.906" starttime="20210129 10:42:05.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:42:05.907" starttime="20210129 10:42:05.907"></status>
</kw>
<msg timestamp="20210129 10:42:05.907" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:42:05.907" starttime="20210129 10:42:05.906"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:05.907" starttime="20210129 10:42:05.902"></status>
</kw>
<msg timestamp="20210129 10:42:05.908" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:42:05.908" starttime="20210129 10:42:05.901"></status>
</kw>
<msg timestamp="20210129 10:42:05.908" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:42:05.908" starttime="20210129 10:42:05.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:42:05.911" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:42:42.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:42:42.789" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:42:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:42:08 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 10:42:42.789" starttime="20210129 10:42:05.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:42:42.790" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:42:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:42:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:42:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:42:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:42:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-359927173BB8-&gt;6f9869c7-43cc-44c7-8eca-8674f6b1af4c
2021-01-29 10:42:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-29 10:42:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C281C0B91201-&gt;c7531949-aa18-48b4-b99c-1809e261a15e
2021-01-29 10:42:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-29 10:42:09 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:42:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:42:10 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:42:10 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:42:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916736693_0003
2021-01-29 10:42:10 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:42:10 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 10:42:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 10:42:10 INFO  YarnClientImpl:329 - Submitted application application_1611916736693_0003
2021-01-29 10:42:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611916736693_0003/
2021-01-29 10:42:10 INFO  Job:1614 - Running job: job_1611916736693_0003
2021-01-29 10:42:17 INFO  Job:1635 - Job job_1611916736693_0003 running in uber mode : false
2021-01-29 10:42:17 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 10:42:25 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 10:42:30 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 10:42:34 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 10:42:39 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 10:42:42 INFO  Job:1653 - Job job_1611916736693_0003 completed successfully
2021-01-29 10:42:42 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091541
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39212
		Total time spent by all reduces in occupied slots (ms)=14476
		Total time spent by all map tasks (ms)=9803
		Total time spent by all reduce tasks (ms)=3619
		Total vcore-milliseconds taken by all map tasks=9803
		Total vcore-milliseconds taken by all reduce tasks=3619
		Total megabyte-milliseconds taken by all map tasks=40153088
		Total megabyte-milliseconds taken by all reduce tasks=14823424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=545
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1195356160
		Virtual memory (bytes) snapshot=15812685824
		Total committed heap usage (bytes)=1035468800
		Peak Map Physical memory (bytes)=297287680
		Peak Map Virtual memory (bytes)=3948650496
		Peak Reduce Physical memory (bytes)=311316480
		Peak Reduce Virtual memory (bytes)=3970158592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.742 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 10:42:42.791" starttime="20210129 10:42:42.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:42:42.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:42:42.791" starttime="20210129 10:42:42.791"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.791" starttime="20210129 10:42:05.909"></status>
</kw>
<msg timestamp="20210129 10:42:42.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:42:42.792" starttime="20210129 10:42:05.908"></status>
</kw>
<msg timestamp="20210129 10:42:42.792" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:42:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:42:08 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 10:42:42.792" starttime="20210129 10:42:05.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:42:42.793" starttime="20210129 10:42:42.792"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:42:42.793" critical="yes" starttime="20210129 10:42:05.885"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:42:42.799" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:42:42.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:42:42.805" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:42.805" starttime="20210129 10:42:42.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:42:42.806" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:42.806" starttime="20210129 10:42:42.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:42:42.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:42:42.807" starttime="20210129 10:42:42.806"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.807" starttime="20210129 10:42:42.796"></status>
</kw>
<msg timestamp="20210129 10:42:42.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:42:42.808" starttime="20210129 10:42:42.796"></status>
</kw>
<msg timestamp="20210129 10:42:42.808" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:42.808" starttime="20210129 10:42:42.795"></status>
</kw>
<msg timestamp="20210129 10:42:42.808" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:42:42.808" starttime="20210129 10:42:42.795"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:42:42.809" level="INFO">${random} = jmIEVne8</msg>
<status status="PASS" endtime="20210129 10:42:42.809" starttime="20210129 10:42:42.809"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:42:42.813" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:42:42.813" starttime="20210129 10:42:42.813"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:42.814" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.814" starttime="20210129 10:42:42.814"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.814" starttime="20210129 10:42:42.812"></status>
</kw>
<msg timestamp="20210129 10:42:42.815" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.815" starttime="20210129 10:42:42.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210129 10:42:42.816" starttime="20210129 10:42:42.815"></status>
</kw>
<msg timestamp="20210129 10:42:42.816" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210129 10:42:42.816" starttime="20210129 10:42:42.815"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.816" starttime="20210129 10:42:42.811"></status>
</kw>
<msg timestamp="20210129 10:42:42.816" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:42:42.816" starttime="20210129 10:42:42.810"></status>
</kw>
<msg timestamp="20210129 10:42:42.816" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210129 10:42:42.816" starttime="20210129 10:42:42.809"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:42:42.820" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:42:42.820" starttime="20210129 10:42:42.819"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:42.821" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.821" starttime="20210129 10:42:42.820"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.821" starttime="20210129 10:42:42.819"></status>
</kw>
<msg timestamp="20210129 10:42:42.822" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.822" starttime="20210129 10:42:42.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:42:42.824" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210129 10:42:42.824" starttime="20210129 10:42:42.823"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:42.825" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210129 10:42:42.825" starttime="20210129 10:42:42.824"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.825" starttime="20210129 10:42:42.823"></status>
</kw>
<msg timestamp="20210129 10:42:42.825" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210129 10:42:42.825" starttime="20210129 10:42:42.822"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.826" starttime="20210129 10:42:42.818"></status>
</kw>
<msg timestamp="20210129 10:42:42.826" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:42:42.826" starttime="20210129 10:42:42.817"></status>
</kw>
<msg timestamp="20210129 10:42:42.826" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210129 10:42:42.826" starttime="20210129 10:42:42.817"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210129 10:42:42.831" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210129 10:42:42.831" starttime="20210129 10:42:42.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:42.832" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.832" starttime="20210129 10:42:42.831"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.832" starttime="20210129 10:42:42.830"></status>
</kw>
<msg timestamp="20210129 10:42:42.832" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210129 10:42:42.832" starttime="20210129 10:42:42.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:42:42.834" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210129 10:42:42.834" starttime="20210129 10:42:42.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:42:42.835" level="INFO">${result} = /wordcount-jmIEVne8.txt</msg>
<status status="PASS" endtime="20210129 10:42:42.835" starttime="20210129 10:42:42.834"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.835" starttime="20210129 10:42:42.833"></status>
</kw>
<msg timestamp="20210129 10:42:42.835" level="INFO">${path_with_leading} = /wordcount-jmIEVne8.txt</msg>
<status status="PASS" endtime="20210129 10:42:42.835" starttime="20210129 10:42:42.832"></status>
</kw>
<status status="PASS" endtime="20210129 10:42:42.836" starttime="20210129 10:42:42.828"></status>
</kw>
<msg timestamp="20210129 10:42:42.836" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-jmIEVne8.txt</msg>
<status status="PASS" endtime="20210129 10:42:42.836" starttime="20210129 10:42:42.827"></status>
</kw>
<msg timestamp="20210129 10:42:42.836" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-jmIEVne8.txt</msg>
<status status="PASS" endtime="20210129 10:42:42.836" starttime="20210129 10:42:42.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:42:42.840" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-jmIEVne8.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:43:21.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:43:21.351" level="INFO">${output} = 2021-01-29 10:42:44 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:42:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210129 10:43:21.351" starttime="20210129 10:42:42.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:43:21.352" level="INFO">2021-01-29 10:42:44 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:42:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:42:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:42:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:42:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:42:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:42:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D70DDF4FD2F0-&gt;c7531949-aa18-48b4-b99c-1809e261a15e
2021-01-29 10:42:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:42:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:42:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1F0407EAFA44-&gt;6f9869c7-43cc-44c7-8eca-8674f6b1af4c
2021-01-29 10:42:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:42:48 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:42:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916736693_0004
2021-01-29 10:42:49 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:42:49 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 10:42:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 10:42:49 INFO  YarnClientImpl:329 - Submitted application application_1611916736693_0004
2021-01-29 10:42:49 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611916736693_0004/
2021-01-29 10:42:49 INFO  Job:1614 - Running job: job_1611916736693_0004
2021-01-29 10:42:56 INFO  Job:1635 - Job job_1611916736693_0004 running in uber mode : false
2021-01-29 10:42:56 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 10:43:03 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 10:43:09 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 10:43:15 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 10:43:19 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 10:43:20 INFO  Job:1653 - Job job_1611916736693_0004 completed successfully
2021-01-29 10:43:20 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41800
		Total time spent by all reduces in occupied slots (ms)=14880
		Total time spent by all map tasks (ms)=10450
		Total time spent by all reduce tasks (ms)=3720
		Total vcore-milliseconds taken by all map tasks=10450
		Total vcore-milliseconds taken by all reduce tasks=3720
		Total megabyte-milliseconds taken by all map tasks=42803200
		Total megabyte-milliseconds taken by all reduce tasks=15237120
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1364406272
		Virtual memory (bytes) snapshot=15800135680
		Total committed heap usage (bytes)=1330642944
		Peak Map Physical memory (bytes)=383242240
		Peak Map Virtual memory (bytes)=3948097536
		Peak Reduce Physical memory (bytes)=311422976
		Peak Reduce Virtual memory (bytes)=3970121728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 10:43:21.352" starttime="20210129 10:43:21.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:43:21.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:43:21.353" starttime="20210129 10:43:21.353"></status>
</kw>
<status status="PASS" endtime="20210129 10:43:21.353" starttime="20210129 10:42:42.837"></status>
</kw>
<msg timestamp="20210129 10:43:21.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:43:21.353" starttime="20210129 10:42:42.837"></status>
</kw>
<msg timestamp="20210129 10:43:21.354" level="INFO">${output} = 2021-01-29 10:42:44 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:42:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210129 10:43:21.354" starttime="20210129 10:42:42.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:43:21.354" starttime="20210129 10:43:21.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:43:21.355" starttime="20210129 10:43:21.355"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:43:21.358" critical="yes" starttime="20210129 10:42:42.794"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:43:21.359" starttime="20210129 10:42:05.829"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:30.138" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:40:30.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:40:30.144" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:40:30.144" starttime="20210129 10:40:30.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:40:30.146" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:40:30.146" starttime="20210129 10:40:30.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:40:30.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:40:30.146" starttime="20210129 10:40:30.146"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:30.147" starttime="20210129 10:40:30.134"></status>
</kw>
<msg timestamp="20210129 10:40:30.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:40:30.147" starttime="20210129 10:40:30.134"></status>
</kw>
<msg timestamp="20210129 10:40:30.147" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:40:30.147" starttime="20210129 10:40:30.133"></status>
</kw>
<msg timestamp="20210129 10:40:30.148" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:40:30.148" starttime="20210129 10:40:30.133"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:40:30.155" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:40:30.155" starttime="20210129 10:40:30.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:40:30.156" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:40:30.157" starttime="20210129 10:40:30.155"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:30.157" starttime="20210129 10:40:30.154"></status>
</kw>
<msg timestamp="20210129 10:40:30.157" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:40:30.157" starttime="20210129 10:40:30.153"></status>
</kw>
<status status="PASS" endtime="20210129 10:40:30.157" starttime="20210129 10:40:30.153"></status>
</kw>
<msg timestamp="20210129 10:40:30.158" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:40:30.158" starttime="20210129 10:40:30.150"></status>
</kw>
<msg timestamp="20210129 10:40:30.158" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:40:30.158" starttime="20210129 10:40:30.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:40:30.161" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:41:13.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:41:13.205" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:40:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 10:41:13.205" starttime="20210129 10:40:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:41:13.206" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:40:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:40:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:40:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:40:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5450F89817FE-&gt;c7531949-aa18-48b4-b99c-1809e261a15e
2021-01-29 10:40:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-29 10:40:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3F5B4CF2381-&gt;6f9869c7-43cc-44c7-8eca-8674f6b1af4c
2021-01-29 10:40:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-29 10:40:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:40:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:40:34 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:40:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916736693_0001
2021-01-29 10:40:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:40:34 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 10:40:34 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 10:40:35 INFO  YarnClientImpl:329 - Submitted application application_1611916736693_0001
2021-01-29 10:40:35 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611916736693_0001/
2021-01-29 10:40:35 INFO  Job:1614 - Running job: job_1611916736693_0001
2021-01-29 10:40:44 INFO  Job:1635 - Job job_1611916736693_0001 running in uber mode : false
2021-01-29 10:40:44 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 10:40:51 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 10:40:56 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 10:41:01 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 10:41:08 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 10:41:12 INFO  Job:1653 - Job job_1611916736693_0001 completed successfully
2021-01-29 10:41:12 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40284
		Total time spent by all reduces in occupied slots (ms)=25444
		Total time spent by all map tasks (ms)=10071
		Total time spent by all reduce tasks (ms)=6361
		Total vcore-milliseconds taken by all map tasks=10071
		Total vcore-milliseconds taken by all reduce tasks=6361
		Total megabyte-milliseconds taken by all map tasks=41250816
		Total megabyte-milliseconds taken by all reduce tasks=26054656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=580
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1446133760
		Virtual memory (bytes) snapshot=15805579264
		Total committed heap usage (bytes)=1666187264
		Peak Map Physical memory (bytes)=377376768
		Peak Map Virtual memory (bytes)=3950678016
		Peak Reduce Physical memory (bytes)=405544960
		Peak Reduce Virtual memory (bytes)=3976249344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.246 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210129 10:41:13.206" starttime="20210129 10:41:13.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:41:13.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:41:13.207" starttime="20210129 10:41:13.206"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.208" starttime="20210129 10:40:30.159"></status>
</kw>
<msg timestamp="20210129 10:41:13.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:41:13.208" starttime="20210129 10:40:30.159"></status>
</kw>
<msg timestamp="20210129 10:41:13.208" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-29 10:40:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:40:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210129 10:41:13.209" starttime="20210129 10:40:30.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:41:13.209" starttime="20210129 10:41:13.209"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:41:13.209" critical="yes" starttime="20210129 10:40:30.132"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:41:13.214" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:41:13.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:41:13.221" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:41:13.221" starttime="20210129 10:41:13.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:41:13.222" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:41:13.222" starttime="20210129 10:41:13.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:41:13.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:41:13.222" starttime="20210129 10:41:13.222"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.223" starttime="20210129 10:41:13.212"></status>
</kw>
<msg timestamp="20210129 10:41:13.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:41:13.223" starttime="20210129 10:41:13.212"></status>
</kw>
<msg timestamp="20210129 10:41:13.224" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:41:13.224" starttime="20210129 10:41:13.211"></status>
</kw>
<msg timestamp="20210129 10:41:13.224" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210129 10:41:13.224" starttime="20210129 10:41:13.211"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 10:41:13.224" level="INFO">${random} = xVavb5p6</msg>
<status status="PASS" endtime="20210129 10:41:13.224" starttime="20210129 10:41:13.224"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:41:13.230" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:41:13.230" starttime="20210129 10:41:13.229"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:41:13.230" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.230" starttime="20210129 10:41:13.230"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.231" starttime="20210129 10:41:13.228"></status>
</kw>
<msg timestamp="20210129 10:41:13.231" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.231" starttime="20210129 10:41:13.228"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.231" starttime="20210129 10:41:13.226"></status>
</kw>
<msg timestamp="20210129 10:41:13.231" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:41:13.231" starttime="20210129 10:41:13.225"></status>
</kw>
<msg timestamp="20210129 10:41:13.232" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210129 10:41:13.232" starttime="20210129 10:41:13.225"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:41:13.235" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:41:13.235" starttime="20210129 10:41:13.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:41:13.236" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.236" starttime="20210129 10:41:13.236"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.236" starttime="20210129 10:41:13.234"></status>
</kw>
<msg timestamp="20210129 10:41:13.236" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.236" starttime="20210129 10:41:13.234"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.237" starttime="20210129 10:41:13.233"></status>
</kw>
<msg timestamp="20210129 10:41:13.237" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:41:13.237" starttime="20210129 10:41:13.232"></status>
</kw>
<msg timestamp="20210129 10:41:13.237" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210129 10:41:13.237" starttime="20210129 10:41:13.232"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210129 10:41:13.241" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210129 10:41:13.241" starttime="20210129 10:41:13.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 10:41:13.242" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.242" starttime="20210129 10:41:13.241"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.242" starttime="20210129 10:41:13.240"></status>
</kw>
<msg timestamp="20210129 10:41:13.242" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210129 10:41:13.242" starttime="20210129 10:41:13.239"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:13.242" starttime="20210129 10:41:13.238"></status>
</kw>
<msg timestamp="20210129 10:41:13.242" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-xVavb5p6.txt</msg>
<status status="PASS" endtime="20210129 10:41:13.242" starttime="20210129 10:41:13.238"></status>
</kw>
<msg timestamp="20210129 10:41:13.243" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-xVavb5p6.txt</msg>
<status status="PASS" endtime="20210129 10:41:13.243" starttime="20210129 10:41:13.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 10:41:13.246" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-xVavb5p6.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 10:41:51.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 10:41:51.334" level="INFO">${output} = 2021-01-29 10:41:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:41:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210129 10:41:51.334" starttime="20210129 10:41:13.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 10:41:51.335" level="INFO">2021-01-29 10:41:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:41:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-29 10:41:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-29 10:41:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-29 10:41:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-29 10:41:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 10:41:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D8127851FA92-&gt;6f9869c7-43cc-44c7-8eca-8674f6b1af4c
2021-01-29 10:41:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 10:41:17 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-29 10:41:19 INFO  JobSubmitter:202 - number of splits:3
2021-01-29 10:41:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611916736693_0002
2021-01-29 10:41:20 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-29 10:41:20 INFO  Configuration:2795 - resource-types.xml not found
2021-01-29 10:41:20 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-29 10:41:20 INFO  YarnClientImpl:329 - Submitted application application_1611916736693_0002
2021-01-29 10:41:20 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611916736693_0002/
2021-01-29 10:41:20 INFO  Job:1614 - Running job: job_1611916736693_0002
2021-01-29 10:41:28 INFO  Job:1635 - Job job_1611916736693_0002 running in uber mode : false
2021-01-29 10:41:28 INFO  Job:1642 -  map 0% reduce 0%
2021-01-29 10:41:34 INFO  Job:1642 -  map 33% reduce 0%
2021-01-29 10:41:40 INFO  Job:1642 -  map 67% reduce 0%
2021-01-29 10:41:45 INFO  Job:1642 -  map 100% reduce 0%
2021-01-29 10:41:50 INFO  Job:1642 -  map 100% reduce 100%
2021-01-29 10:41:50 INFO  Job:1653 - Job job_1611916736693_0002 completed successfully
2021-01-29 10:41:50 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40580
		Total time spent by all reduces in occupied slots (ms)=15068
		Total time spent by all map tasks (ms)=10145
		Total time spent by all reduce tasks (ms)=3767
		Total vcore-milliseconds taken by all map tasks=10145
		Total vcore-milliseconds taken by all reduce tasks=3767
		Total megabyte-milliseconds taken by all map tasks=41553920
		Total megabyte-milliseconds taken by all reduce tasks=15429632
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=611
		CPU time spent (ms)=7230
		Physical memory (bytes) snapshot=1377792000
		Virtual memory (bytes) snapshot=15809699840
		Total committed heap usage (bytes)=1418723328
		Peak Map Physical memory (bytes)=372588544
		Peak Map Virtual memory (bytes)=3947659264
		Peak Reduce Physical memory (bytes)=399265792
		Peak Reduce Virtual memory (bytes)=3970772992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210129 10:41:51.335" starttime="20210129 10:41:51.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 10:41:51.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 10:41:51.336" starttime="20210129 10:41:51.335"></status>
</kw>
<status status="PASS" endtime="20210129 10:41:51.336" starttime="20210129 10:41:13.244"></status>
</kw>
<msg timestamp="20210129 10:41:51.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 10:41:51.337" starttime="20210129 10:41:13.243"></status>
</kw>
<msg timestamp="20210129 10:41:51.337" level="INFO">${output} = 2021-01-29 10:41:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-01-29 10:41:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210129 10:41:51.337" starttime="20210129 10:41:13.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210129 10:41:51.338" starttime="20210129 10:41:51.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210129 10:41:51.338" starttime="20210129 10:41:51.338"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210129 10:41:51.338" critical="yes" starttime="20210129 10:41:13.210"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210129 10:41:51.340" starttime="20210129 10:40:30.062"></status>
</suite>
<status status="PASS" elapsedtime="219119" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="619626" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
