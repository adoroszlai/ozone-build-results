<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210129 11:11:33.173" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:20.811" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:34.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:34.367" level="INFO">${output} = 2021-01-29 11:07:22,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:22,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:34.367" starttime="20210129 11:07:20.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:34.368" level="INFO">2021-01-29 11:07:22,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:22,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:07:22,717 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-29 11:07:22,903 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-29 11:07:22,923 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:23,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:24,929 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:25,118 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:25,929 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:26,170 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-29 11:07:26,665 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-29 11:07:26,930 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:27,930 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:28,932 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:29,933 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:30,171 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-29 11:07:30,549 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-29 11:07:30,549 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0CF1D1F9491A-&gt;597690eb-d618-4ff9-87f1-15bb57940db2
2021-01-29 11:07:30,550 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-29 11:07:30,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:31,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:32,935 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:33,935 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-29 11:07:34,039 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6604.653557, max=6604.653557, mean=6604.653557, stddev=0.0, median=6604.653557, p75=6604.653557, p95=6604.653557, p98=6604.653557, p99=6604.653557, p999=6604.653557, mean_rate=0.14107709664483473, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-29 11:07:34,039 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-01-29 11:07:34,040 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-29 11:07:34,040 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210129 11:07:34.368" starttime="20210129 11:07:34.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:34.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:34.369" starttime="20210129 11:07:34.368"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:34.369" starttime="20210129 11:07:20.806"></status>
</kw>
<msg timestamp="20210129 11:07:34.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:34.370" starttime="20210129 11:07:20.806"></status>
</kw>
<msg timestamp="20210129 11:07:34.370" level="INFO">${result} = 2021-01-29 11:07:22,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:22,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:34.370" starttime="20210129 11:07:20.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:07:34.371" starttime="20210129 11:07:34.370"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:07:34.371" critical="yes" starttime="20210129 11:07:20.804"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:34.380" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:38.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:38.998" level="INFO">${output} = 2021-01-29 11:07:36,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:36,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:38.998" starttime="20210129 11:07:34.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:38.999" level="INFO">2021-01-29 11:07:36,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:36,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:07:36,248 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-29 11:07:36,421 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-29 11:07:36,444 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:37,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:37,553 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:38,129 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:38,453 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-29 11:07:38,977 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=353.637273, max=353.637273, mean=353.637273, stddev=0.0, median=353.637273, p75=353.637273, p95=353.637273, p98=353.637273, p99=353.637273, p999=353.637273, mean_rate=0.9621945959112201, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-29 11:07:38,978 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-29 11:07:38,978 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-29 11:07:38,978 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210129 11:07:39.000" starttime="20210129 11:07:38.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:39.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:39.000" starttime="20210129 11:07:39.000"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:39.001" starttime="20210129 11:07:34.377"></status>
</kw>
<msg timestamp="20210129 11:07:39.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:39.001" starttime="20210129 11:07:34.377"></status>
</kw>
<msg timestamp="20210129 11:07:39.002" level="INFO">${result} = 2021-01-29 11:07:36,074 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:36,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:39.002" starttime="20210129 11:07:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:07:39.003" starttime="20210129 11:07:39.002"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:07:39.003" critical="yes" starttime="20210129 11:07:34.372"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:39.009" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:43.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:43.647" level="INFO">${output} = 2021-01-29 11:07:40,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:40,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:43.647" starttime="20210129 11:07:39.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:43.649" level="INFO">2021-01-29 11:07:40,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:40,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:07:40,902 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-29 11:07:41,075 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-29 11:07:41,091 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:42,108 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:42,226 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:42,677 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:43,108 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-29 11:07:43,613 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=135.655666, max=135.655666, mean=135.655666, stddev=0.0, median=135.655666, p75=135.655666, p95=135.655666, p98=135.655666, p99=135.655666, p999=135.655666, mean_rate=0.9723814477935566, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-29 11:07:43,615 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-29 11:07:43,618 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-29 11:07:43,618 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210129 11:07:43.650" starttime="20210129 11:07:43.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:43.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:43.652" starttime="20210129 11:07:43.650"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:43.653" starttime="20210129 11:07:39.006"></status>
</kw>
<msg timestamp="20210129 11:07:43.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:43.653" starttime="20210129 11:07:39.005"></status>
</kw>
<msg timestamp="20210129 11:07:43.653" level="INFO">${result} = 2021-01-29 11:07:40,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:40,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:43.653" starttime="20210129 11:07:39.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:07:43.654" starttime="20210129 11:07:43.654"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:07:43.654" critical="yes" starttime="20210129 11:07:39.004"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210129 11:07:43.656" starttime="20210129 11:07:20.785"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:43.668" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:50.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:50.504" level="INFO">${output} = 2021-01-29 11:07:45,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:45,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:50.504" starttime="20210129 11:07:43.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:50.505" level="INFO">2021-01-29 11:07:45,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:45,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-29 11:07:45,580 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-29 11:07:45,723 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-29 11:07:45,737 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:46,743 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:46,921 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-29 11:07:47,752 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:48,314 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-29 11:07:48,752 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-29 11:07:49,752 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-29 11:07:50,157 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=90.841944, max=90.841944, mean=90.841944, stddev=0.0, median=90.841944, p75=90.841944, p95=90.841944, p98=90.841944, p99=90.841944, p999=90.841944, mean_rate=0.9765003263005136, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-29 11:07:50,158 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-01-29 11:07:50,168 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-29 11:07:50,168 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210129 11:07:50.505" starttime="20210129 11:07:50.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:50.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:50.507" starttime="20210129 11:07:50.505"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:50.508" starttime="20210129 11:07:43.665"></status>
</kw>
<msg timestamp="20210129 11:07:50.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:50.508" starttime="20210129 11:07:43.665"></status>
</kw>
<msg timestamp="20210129 11:07:50.508" level="INFO">${result} = 2021-01-29 11:07:45,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-29 11:07:45,580 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210129 11:07:50.508" starttime="20210129 11:07:43.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:07:50.509" starttime="20210129 11:07:50.508"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210129 11:07:50.509" critical="yes" starttime="20210129 11:07:43.663"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210129 11:07:50.510" starttime="20210129 11:07:43.659"></status>
</suite>
<status status="PASS" endtime="20210129 11:07:50.512" starttime="20210129 11:07:20.753"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:15.023" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:15.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:15.026" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:07:15.026" starttime="20210129 11:07:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:15.027" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:07:15.027" starttime="20210129 11:07:15.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:15.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:15.028" starttime="20210129 11:07:15.028"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:15.028" starttime="20210129 11:07:15.018"></status>
</kw>
<msg timestamp="20210129 11:07:15.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:15.029" starttime="20210129 11:07:15.018"></status>
</kw>
<msg timestamp="20210129 11:07:15.029" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:07:15.029" starttime="20210129 11:07:15.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:07:15.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:07:15.030" starttime="20210129 11:07:15.029"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:15.034" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:07:15.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:07:15.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:07:15.047" starttime="20210129 11:07:15.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:07:15.048" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:07:15.048" starttime="20210129 11:07:15.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:07:15.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:07:15.049" starttime="20210129 11:07:15.048"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:15.049" starttime="20210129 11:07:15.032"></status>
</kw>
<msg timestamp="20210129 11:07:15.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:07:15.049" starttime="20210129 11:07:15.032"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:15.050" starttime="20210129 11:07:15.030"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:15.050" starttime="20210129 11:07:15.030"></status>
</kw>
<status status="PASS" endtime="20210129 11:07:15.050" starttime="20210129 11:07:15.016"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:07:15.050" critical="yes" starttime="20210129 11:07:15.015"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210129 11:07:15.051" starttime="20210129 11:07:14.950"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210129 11:07:56.158" level="INFO">${random} = 75327</msg>
<status status="PASS" endtime="20210129 11:07:56.158" starttime="20210129 11:07:56.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210129 11:07:56.159" level="INFO">${source} = 75327-source</msg>
<status status="PASS" endtime="20210129 11:07:56.159" starttime="20210129 11:07:56.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210129 11:07:56.160" level="INFO">${target} = 75327-target</msg>
<status status="PASS" endtime="20210129 11:07:56.160" starttime="20210129 11:07:56.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:07:56.165" level="INFO">Running command 'ozone sh volume create 75327-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:00.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:00.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:00.043" starttime="20210129 11:07:56.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:00.044" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:00.044" starttime="20210129 11:08:00.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:00.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:00.045" starttime="20210129 11:08:00.045"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:00.046" starttime="20210129 11:07:56.161"></status>
</kw>
<msg timestamp="20210129 11:08:00.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:00.046" starttime="20210129 11:07:56.160"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:00.046" starttime="20210129 11:07:56.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:00.050" level="INFO">Running command 'ozone sh volume create 75327-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:04.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:04.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:04.073" starttime="20210129 11:08:00.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:04.074" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:04.074" starttime="20210129 11:08:04.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:04.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:04.074" starttime="20210129 11:08:04.074"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:04.075" starttime="20210129 11:08:00.047"></status>
</kw>
<msg timestamp="20210129 11:08:04.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:04.075" starttime="20210129 11:08:00.047"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:04.075" starttime="20210129 11:08:00.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:04.081" level="INFO">Running command 'ozone sh bucket create 75327-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:07.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:07.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:07.818" starttime="20210129 11:08:04.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:07.819" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:07.820" starttime="20210129 11:08:07.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:07.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:07.820" starttime="20210129 11:08:07.820"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:07.821" starttime="20210129 11:08:04.078"></status>
</kw>
<msg timestamp="20210129 11:08:07.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:07.821" starttime="20210129 11:08:04.077"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:07.821" starttime="20210129 11:08:04.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:07.825" level="INFO">Running command 'ozone sh key put 75327-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:13.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:13.718" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:13.718" starttime="20210129 11:08:07.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:13.719" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:13.719" starttime="20210129 11:08:13.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:13.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:13.720" starttime="20210129 11:08:13.719"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:13.720" starttime="20210129 11:08:07.822"></status>
</kw>
<msg timestamp="20210129 11:08:13.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:13.720" starttime="20210129 11:08:07.822"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:13.721" starttime="20210129 11:08:07.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:13.724" level="INFO">Running command 'ozone sh bucket create 75327-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:17.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:17.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:17.442" starttime="20210129 11:08:13.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:17.443" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:17.443" starttime="20210129 11:08:17.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:17.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:17.444" starttime="20210129 11:08:17.443"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:17.444" starttime="20210129 11:08:13.722"></status>
</kw>
<msg timestamp="20210129 11:08:17.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:17.444" starttime="20210129 11:08:13.721"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:17.445" starttime="20210129 11:08:13.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:17.448" level="INFO">Running command 'ozone sh bucket link 75327-source/readable-bucket 75327-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:21.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:21.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:21.209" starttime="20210129 11:08:17.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:21.210" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:21.210" starttime="20210129 11:08:21.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:21.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:21.211" starttime="20210129 11:08:21.210"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:21.211" starttime="20210129 11:08:17.446"></status>
</kw>
<msg timestamp="20210129 11:08:21.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:21.211" starttime="20210129 11:08:17.445"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:21.211" starttime="20210129 11:08:17.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:21.214" level="INFO">Running command 'ozone sh bucket link 75327-source/readable-bucket 75327-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:24.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:24.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:24.704" starttime="20210129 11:08:21.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:24.705" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:24.705" starttime="20210129 11:08:24.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:24.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:24.706" starttime="20210129 11:08:24.705"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:24.706" starttime="20210129 11:08:21.212"></status>
</kw>
<msg timestamp="20210129 11:08:24.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:24.706" starttime="20210129 11:08:21.212"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:24.707" starttime="20210129 11:08:21.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:24.710" level="INFO">Running command 'ozone sh bucket link 75327-source/unreadable-bucket 75327-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:28.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:28.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:28.519" starttime="20210129 11:08:24.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:28.520" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:28.520" starttime="20210129 11:08:28.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:28.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:28.521" starttime="20210129 11:08:28.520"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:28.521" starttime="20210129 11:08:24.708"></status>
</kw>
<msg timestamp="20210129 11:08:28.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:28.521" starttime="20210129 11:08:24.707"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:28.521" starttime="20210129 11:08:24.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:28.525" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75327-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:32.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:32.635" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:32.635" starttime="20210129 11:08:28.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:32.636" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:32.636" starttime="20210129 11:08:32.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:32.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:32.637" starttime="20210129 11:08:32.636"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:32.637" starttime="20210129 11:08:28.523"></status>
</kw>
<msg timestamp="20210129 11:08:32.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:32.637" starttime="20210129 11:08:28.522"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:32.638" starttime="20210129 11:08:28.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:32.641" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 75327-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:36.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:36.322" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:36.322" starttime="20210129 11:08:32.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:36.323" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:36.323" starttime="20210129 11:08:36.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:36.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:36.324" starttime="20210129 11:08:36.323"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:36.324" starttime="20210129 11:08:32.639"></status>
</kw>
<msg timestamp="20210129 11:08:36.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:36.324" starttime="20210129 11:08:32.638"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:36.325" starttime="20210129 11:08:32.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:36.329" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 75327-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:39.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:39.968" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:39.968" starttime="20210129 11:08:36.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:39.969" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:39.969" starttime="20210129 11:08:39.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:39.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:39.970" starttime="20210129 11:08:39.970"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:39.971" starttime="20210129 11:08:36.326"></status>
</kw>
<msg timestamp="20210129 11:08:39.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:39.971" starttime="20210129 11:08:36.326"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:39.971" starttime="20210129 11:08:36.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:39.975" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75327-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:43.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:43.725" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:43.725" starttime="20210129 11:08:39.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:43.726" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:43.727" starttime="20210129 11:08:43.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:43.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:43.727" starttime="20210129 11:08:43.727"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:43.728" starttime="20210129 11:08:39.972"></status>
</kw>
<msg timestamp="20210129 11:08:43.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:43.728" starttime="20210129 11:08:39.972"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:43.729" starttime="20210129 11:08:39.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:43.733" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75327-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:47.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:47.334" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:47.334" starttime="20210129 11:08:43.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.335" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:08:47.336" starttime="20210129 11:08:47.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:47.336" starttime="20210129 11:08:47.336"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.337" starttime="20210129 11:08:43.730"></status>
</kw>
<msg timestamp="20210129 11:08:47.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:47.337" starttime="20210129 11:08:43.730"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.337" starttime="20210129 11:08:43.729"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.338" starttime="20210129 11:08:04.076"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.338" starttime="20210129 11:08:04.076"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.338" starttime="20210129 11:07:56.157"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:47.344" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:47.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:47.347" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:08:47.347" starttime="20210129 11:08:47.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.348" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:08:47.348" starttime="20210129 11:08:47.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:47.349" starttime="20210129 11:08:47.348"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.349" starttime="20210129 11:08:47.342"></status>
</kw>
<msg timestamp="20210129 11:08:47.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:47.349" starttime="20210129 11:08:47.341"></status>
</kw>
<msg timestamp="20210129 11:08:47.349" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:08:47.349" starttime="20210129 11:08:47.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:08:47.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:08:47.351" starttime="20210129 11:08:47.350"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:47.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:47.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:47.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:47.366" starttime="20210129 11:08:47.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.367" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:47.367" starttime="20210129 11:08:47.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:47.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:47.368" starttime="20210129 11:08:47.368"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.368" starttime="20210129 11:08:47.352"></status>
</kw>
<msg timestamp="20210129 11:08:47.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:47.369" starttime="20210129 11:08:47.352"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.369" starttime="20210129 11:08:47.351"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.369" starttime="20210129 11:08:47.351"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.369" starttime="20210129 11:08:47.340"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:47.369" starttime="20210129 11:08:47.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:47.372" level="INFO">Running command 'ozone sh bucket link 75327-source/no-such-bucket 75327-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:50.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:50.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:50.897" starttime="20210129 11:08:47.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:50.899" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:50.899" starttime="20210129 11:08:50.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:50.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:50.900" starttime="20210129 11:08:50.899"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:50.900" starttime="20210129 11:08:47.370"></status>
</kw>
<msg timestamp="20210129 11:08:50.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:50.900" starttime="20210129 11:08:47.370"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:50.900" starttime="20210129 11:08:47.369"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:50.904" level="INFO">Running command 'ozone sh key list 75327-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:54.749" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:08:54.749" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210129 11:08:54.750" starttime="20210129 11:08:50.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:54.751" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210129 11:08:54.751" starttime="20210129 11:08:54.750"></status>
</kw>
<msg timestamp="20210129 11:08:54.751" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210129 11:08:54.751" starttime="20210129 11:08:50.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210129 11:08:54.752" starttime="20210129 11:08:54.751"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:08:54.752" critical="yes" starttime="20210129 11:08:47.338"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:54.758" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:54.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:54.762" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:08:54.762" starttime="20210129 11:08:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:54.763" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:08:54.763" starttime="20210129 11:08:54.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:54.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:54.764" starttime="20210129 11:08:54.763"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.764" starttime="20210129 11:08:54.756"></status>
</kw>
<msg timestamp="20210129 11:08:54.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:54.764" starttime="20210129 11:08:54.755"></status>
</kw>
<msg timestamp="20210129 11:08:54.764" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:08:54.765" starttime="20210129 11:08:54.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:08:54.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:08:54.765" starttime="20210129 11:08:54.765"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:54.769" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:54.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:54.787" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:54.787" starttime="20210129 11:08:54.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:54.788" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:54.788" starttime="20210129 11:08:54.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:54.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:54.789" starttime="20210129 11:08:54.788"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.789" starttime="20210129 11:08:54.767"></status>
</kw>
<msg timestamp="20210129 11:08:54.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:54.790" starttime="20210129 11:08:54.767"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.790" starttime="20210129 11:08:54.766"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.790" starttime="20210129 11:08:54.766"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.790" starttime="20210129 11:08:54.755"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:54.790" starttime="20210129 11:08:54.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:54.794" level="INFO">Running command 'ozone sh bucket link 75327-source/bucket1 75327-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:08:58.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:08:58.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:08:58.412" starttime="20210129 11:08:54.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:08:58.414" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:08:58.414" starttime="20210129 11:08:58.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:08:58.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:08:58.415" starttime="20210129 11:08:58.414"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:58.415" starttime="20210129 11:08:54.792"></status>
</kw>
<msg timestamp="20210129 11:08:58.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:08:58.415" starttime="20210129 11:08:54.791"></status>
</kw>
<status status="PASS" endtime="20210129 11:08:58.415" starttime="20210129 11:08:54.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:08:58.419" level="INFO">Running command 'ozone sh bucket create 75327-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:02.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:02.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:02.050" starttime="20210129 11:08:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:02.051" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:02.051" starttime="20210129 11:09:02.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:02.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:02.052" starttime="20210129 11:09:02.052"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:02.052" starttime="20210129 11:08:58.417"></status>
</kw>
<msg timestamp="20210129 11:09:02.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:02.053" starttime="20210129 11:08:58.416"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:02.053" starttime="20210129 11:08:58.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:02.057" level="INFO">Running command 'ozone sh key put 75327-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:08.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:08.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:08.869" starttime="20210129 11:09:02.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:08.870" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:08.870" starttime="20210129 11:09:08.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:08.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:08.872" starttime="20210129 11:09:08.871"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:08.872" starttime="20210129 11:09:02.055"></status>
</kw>
<msg timestamp="20210129 11:09:08.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:08.873" starttime="20210129 11:09:02.054"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:08.873" starttime="20210129 11:09:02.053"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210129 11:09:08.875" level="INFO">${postfix} = 06852</msg>
<status status="PASS" endtime="20210129 11:09:08.875" starttime="20210129 11:09:08.875"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210129 11:09:08.877" level="INFO">${tmpfile} = /tmp/tempkey-06852</msg>
<status status="PASS" endtime="20210129 11:09:08.877" starttime="20210129 11:09:08.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:08.881" level="INFO">Running command 'ozone sh key get -f 75327-target/link1/key1 /tmp/tempkey-06852 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:14.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:14.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:14.812" starttime="20210129 11:09:08.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.814" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:14.814" starttime="20210129 11:09:14.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:14.815" starttime="20210129 11:09:14.814"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.815" starttime="20210129 11:09:08.878"></status>
</kw>
<msg timestamp="20210129 11:09:14.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:14.815" starttime="20210129 11:09:08.878"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.816" starttime="20210129 11:09:08.877"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210129 11:09:14.819" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-06852 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:14.822" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210129 11:09:14.822" starttime="20210129 11:09:14.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:14.827" level="INFO">Running command 'rm -f /tmp/tempkey-06852 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:14.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:14.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:14.830" starttime="20210129 11:09:14.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.831" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:14.831" starttime="20210129 11:09:14.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:14.832" starttime="20210129 11:09:14.831"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.832" starttime="20210129 11:09:14.824"></status>
</kw>
<msg timestamp="20210129 11:09:14.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:14.832" starttime="20210129 11:09:14.823"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.832" starttime="20210129 11:09:14.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:09:14.833" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210129 11:09:14.833" starttime="20210129 11:09:14.833"></status>
</kw>
<msg timestamp="20210129 11:09:14.834" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210129 11:09:14.834" starttime="20210129 11:09:08.874"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:14.834" starttime="20210129 11:09:14.834"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.834" starttime="20210129 11:09:08.873"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:14.835" critical="yes" starttime="20210129 11:08:54.753"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:14.841" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:14.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:14.843" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:14.843" starttime="20210129 11:09:14.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.844" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:14.844" starttime="20210129 11:09:14.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:14.845" starttime="20210129 11:09:14.844"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.845" starttime="20210129 11:09:14.838"></status>
</kw>
<msg timestamp="20210129 11:09:14.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:14.845" starttime="20210129 11:09:14.838"></status>
</kw>
<msg timestamp="20210129 11:09:14.846" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:14.846" starttime="20210129 11:09:14.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:14.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:14.847" starttime="20210129 11:09:14.846"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:14.851" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:14.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:14.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:14.870" starttime="20210129 11:09:14.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.871" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:14.871" starttime="20210129 11:09:14.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:14.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:14.872" starttime="20210129 11:09:14.871"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.872" starttime="20210129 11:09:14.849"></status>
</kw>
<msg timestamp="20210129 11:09:14.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:14.872" starttime="20210129 11:09:14.848"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.872" starttime="20210129 11:09:14.848"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.872" starttime="20210129 11:09:14.847"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.873" starttime="20210129 11:09:14.837"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:14.873" starttime="20210129 11:09:14.837"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:14.877" level="INFO">Running command 'ozone sh key put 75327-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:21.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:21.143" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:21.143" starttime="20210129 11:09:14.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:21.144" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:21.144" starttime="20210129 11:09:21.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:21.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:21.145" starttime="20210129 11:09:21.144"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:21.145" starttime="20210129 11:09:14.874"></status>
</kw>
<msg timestamp="20210129 11:09:21.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:21.146" starttime="20210129 11:09:14.874"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:21.146" starttime="20210129 11:09:14.873"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210129 11:09:21.148" level="INFO">${postfix} = 92984</msg>
<status status="PASS" endtime="20210129 11:09:21.148" starttime="20210129 11:09:21.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210129 11:09:21.149" level="INFO">${tmpfile} = /tmp/tempkey-92984</msg>
<status status="PASS" endtime="20210129 11:09:21.149" starttime="20210129 11:09:21.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:21.152" level="INFO">Running command 'ozone sh key get -f 75327-source/bucket1/key2 /tmp/tempkey-92984 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:26.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:26.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:26.854" starttime="20210129 11:09:21.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.855" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:26.855" starttime="20210129 11:09:26.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:26.856" starttime="20210129 11:09:26.855"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.856" starttime="20210129 11:09:21.150"></status>
</kw>
<msg timestamp="20210129 11:09:26.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:26.857" starttime="20210129 11:09:21.149"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.857" starttime="20210129 11:09:21.149"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210129 11:09:26.859" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-92984 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:26.862" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210129 11:09:26.862" starttime="20210129 11:09:26.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:26.866" level="INFO">Running command 'rm -f /tmp/tempkey-92984 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:26.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:26.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:26.869" starttime="20210129 11:09:26.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.870" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:26.870" starttime="20210129 11:09:26.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:26.871" starttime="20210129 11:09:26.870"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.871" starttime="20210129 11:09:26.863"></status>
</kw>
<msg timestamp="20210129 11:09:26.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:26.871" starttime="20210129 11:09:26.863"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.871" starttime="20210129 11:09:26.862"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:09:26.872" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210129 11:09:26.872" starttime="20210129 11:09:26.872"></status>
</kw>
<msg timestamp="20210129 11:09:26.872" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210129 11:09:26.873" starttime="20210129 11:09:21.147"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:26.873" starttime="20210129 11:09:26.873"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.873" starttime="20210129 11:09:21.146"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:26.874" critical="yes" starttime="20210129 11:09:14.835"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:26.879" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:26.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:26.882" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:26.882" starttime="20210129 11:09:26.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.883" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:26.883" starttime="20210129 11:09:26.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:26.884" starttime="20210129 11:09:26.883"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.884" starttime="20210129 11:09:26.877"></status>
</kw>
<msg timestamp="20210129 11:09:26.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:26.885" starttime="20210129 11:09:26.877"></status>
</kw>
<msg timestamp="20210129 11:09:26.885" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:26.885" starttime="20210129 11:09:26.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:26.886" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:26.886" starttime="20210129 11:09:26.885"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:26.890" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:26.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:26.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:26.902" starttime="20210129 11:09:26.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.903" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:26.903" starttime="20210129 11:09:26.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:26.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:26.903" starttime="20210129 11:09:26.903"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.888"></status>
</kw>
<msg timestamp="20210129 11:09:26.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.887"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.886"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.886"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.875"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:26.904" starttime="20210129 11:09:26.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:26.909" level="INFO">Running command 'ozone sh key list 75327-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:30.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:30.775" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:30.775" starttime="20210129 11:09:26.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:30.776" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:30.776" starttime="20210129 11:09:30.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:30.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:30.777" starttime="20210129 11:09:30.776"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:30.778" starttime="20210129 11:09:26.906"></status>
</kw>
<msg timestamp="20210129 11:09:30.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:30.778" starttime="20210129 11:09:26.905"></status>
</kw>
<msg timestamp="20210129 11:09:30.778" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:30.778" starttime="20210129 11:09:26.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:30.782" level="INFO">Running command 'ozone sh key list 75327-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:35.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:35.089" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:35.090" starttime="20210129 11:09:30.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.091" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:35.091" starttime="20210129 11:09:35.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:35.092" starttime="20210129 11:09:35.091"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.092" starttime="20210129 11:09:30.780"></status>
</kw>
<msg timestamp="20210129 11:09:35.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:35.092" starttime="20210129 11:09:30.779"></status>
</kw>
<msg timestamp="20210129 11:09:35.093" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210129 11:09:35.093" starttime="20210129 11:09:30.779"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:35.093" starttime="20210129 11:09:35.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:35.094" starttime="20210129 11:09:35.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:35.094" starttime="20210129 11:09:35.094"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:35.095" critical="yes" starttime="20210129 11:09:26.874"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:35.101" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:35.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:35.103" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:35.103" starttime="20210129 11:09:35.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.104" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:35.105" starttime="20210129 11:09:35.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:35.105" starttime="20210129 11:09:35.105"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.106" starttime="20210129 11:09:35.098"></status>
</kw>
<msg timestamp="20210129 11:09:35.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:35.106" starttime="20210129 11:09:35.098"></status>
</kw>
<msg timestamp="20210129 11:09:35.106" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:35.106" starttime="20210129 11:09:35.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:35.107" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:35.107" starttime="20210129 11:09:35.106"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:35.110" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:35.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:35.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:35.128" starttime="20210129 11:09:35.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.129" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:35.129" starttime="20210129 11:09:35.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:35.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:35.130" starttime="20210129 11:09:35.130"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.130" starttime="20210129 11:09:35.108"></status>
</kw>
<msg timestamp="20210129 11:09:35.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:35.131" starttime="20210129 11:09:35.108"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.131" starttime="20210129 11:09:35.107"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.131" starttime="20210129 11:09:35.107"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.131" starttime="20210129 11:09:35.097"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:35.131" starttime="20210129 11:09:35.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:35.137" level="INFO">Running command 'ozone sh key delete 75327-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:38.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:38.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:38.628" starttime="20210129 11:09:35.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:38.629" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:38.629" starttime="20210129 11:09:38.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:38.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:38.630" starttime="20210129 11:09:38.629"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:38.631" starttime="20210129 11:09:35.132"></status>
</kw>
<msg timestamp="20210129 11:09:38.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:38.631" starttime="20210129 11:09:35.132"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:38.632" starttime="20210129 11:09:35.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:38.641" level="INFO">Running command 'ozone sh key list 75327-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:43.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:43.200" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210129 11:09:43.200" starttime="20210129 11:09:38.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.201" level="INFO">key1</msg>
<status status="PASS" endtime="20210129 11:09:43.201" starttime="20210129 11:09:43.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:43.202" starttime="20210129 11:09:43.201"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.202" starttime="20210129 11:09:38.636"></status>
</kw>
<msg timestamp="20210129 11:09:43.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:43.202" starttime="20210129 11:09:38.636"></status>
</kw>
<msg timestamp="20210129 11:09:43.203" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210129 11:09:43.203" starttime="20210129 11:09:38.632"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:43.203" starttime="20210129 11:09:43.203"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:43.203" critical="yes" starttime="20210129 11:09:35.095"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:43.210" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:43.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:43.212" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:43.212" starttime="20210129 11:09:43.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.213" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:43.214" starttime="20210129 11:09:43.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:43.214" starttime="20210129 11:09:43.214"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.215" starttime="20210129 11:09:43.207"></status>
</kw>
<msg timestamp="20210129 11:09:43.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:43.215" starttime="20210129 11:09:43.207"></status>
</kw>
<msg timestamp="20210129 11:09:43.215" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:43.215" starttime="20210129 11:09:43.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:43.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:43.216" starttime="20210129 11:09:43.215"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:43.221" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:43.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:43.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:43.232" starttime="20210129 11:09:43.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.233" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:43.233" starttime="20210129 11:09:43.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:43.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:43.234" starttime="20210129 11:09:43.233"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.234" starttime="20210129 11:09:43.218"></status>
</kw>
<msg timestamp="20210129 11:09:43.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:43.235" starttime="20210129 11:09:43.218"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.235" starttime="20210129 11:09:43.217"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.235" starttime="20210129 11:09:43.216"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.235" starttime="20210129 11:09:43.206"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:43.235" starttime="20210129 11:09:43.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:43.240" level="INFO">Running command 'ozone sh bucket list 75327-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:47.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:47.487" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210129 11:09:47.487" starttime="20210129 11:09:43.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.488" level="INFO">{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:50.804Z",
  "modificationTime" : "2021-01-29T11:08:50.804Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:28.429Z",
  "modificationTime" : "2021-01-29T11:08:47.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:58.300Z",
  "modificationTime" : "2021-01-29T11:08:58.300Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:21.039Z",
  "modificationTime" : "2021-01-29T11:08:43.611Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:24.566Z",
  "modificationTime" : "2021-01-29T11:08:24.566Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 11:09:47.488" starttime="20210129 11:09:47.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:47.489" starttime="20210129 11:09:47.489"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.489" starttime="20210129 11:09:43.237"></status>
</kw>
<msg timestamp="20210129 11:09:47.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:47.490" starttime="20210129 11:09:43.236"></status>
</kw>
<msg timestamp="20210129 11:09:47.490" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210129 11:09:47.490" starttime="20210129 11:09:43.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:47.490" starttime="20210129 11:09:47.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:47.491" starttime="20210129 11:09:47.491"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:47.491" critical="yes" starttime="20210129 11:09:43.204"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:47.498" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:47.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:47.500" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:47.500" starttime="20210129 11:09:47.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.501" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:47.501" starttime="20210129 11:09:47.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:47.502" starttime="20210129 11:09:47.502"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.502" starttime="20210129 11:09:47.495"></status>
</kw>
<msg timestamp="20210129 11:09:47.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:47.502" starttime="20210129 11:09:47.495"></status>
</kw>
<msg timestamp="20210129 11:09:47.503" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:47.503" starttime="20210129 11:09:47.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:47.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:47.504" starttime="20210129 11:09:47.503"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:47.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:47.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:47.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:47.518" starttime="20210129 11:09:47.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.519" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:47.519" starttime="20210129 11:09:47.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:47.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:47.520" starttime="20210129 11:09:47.519"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.520" starttime="20210129 11:09:47.505"></status>
</kw>
<msg timestamp="20210129 11:09:47.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:47.521" starttime="20210129 11:09:47.505"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.521" starttime="20210129 11:09:47.504"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.521" starttime="20210129 11:09:47.504"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.521" starttime="20210129 11:09:47.494"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:47.521" starttime="20210129 11:09:47.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:47.525" level="INFO">Running command 'ozone sh bucket info 75327-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:51.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:51.374" level="INFO">${output} = 75327-source bucket1</msg>
<status status="PASS" endtime="20210129 11:09:51.374" starttime="20210129 11:09:47.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.375" level="INFO">75327-source bucket1</msg>
<status status="PASS" endtime="20210129 11:09:51.375" starttime="20210129 11:09:51.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:51.376" starttime="20210129 11:09:51.376"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.377" starttime="20210129 11:09:47.523"></status>
</kw>
<msg timestamp="20210129 11:09:51.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:51.377" starttime="20210129 11:09:47.522"></status>
</kw>
<msg timestamp="20210129 11:09:51.377" level="INFO">${result} = 75327-source bucket1</msg>
<status status="PASS" endtime="20210129 11:09:51.377" starttime="20210129 11:09:47.522"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:51.378" starttime="20210129 11:09:51.377"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:09:51.378" critical="yes" starttime="20210129 11:09:47.492"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:51.385" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:51.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:51.388" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:09:51.388" starttime="20210129 11:09:51.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.389" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:09:51.389" starttime="20210129 11:09:51.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:51.390" starttime="20210129 11:09:51.389"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.390" starttime="20210129 11:09:51.382"></status>
</kw>
<msg timestamp="20210129 11:09:51.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:51.391" starttime="20210129 11:09:51.382"></status>
</kw>
<msg timestamp="20210129 11:09:51.391" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:09:51.391" starttime="20210129 11:09:51.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:09:51.392" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:09:51.392" starttime="20210129 11:09:51.391"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:51.395" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:51.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:51.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:09:51.412" starttime="20210129 11:09:51.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.413" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:09:51.413" starttime="20210129 11:09:51.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:51.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:51.414" starttime="20210129 11:09:51.413"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.414" starttime="20210129 11:09:51.393"></status>
</kw>
<msg timestamp="20210129 11:09:51.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:51.414" starttime="20210129 11:09:51.393"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.414" starttime="20210129 11:09:51.392"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.414" starttime="20210129 11:09:51.392"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.415" starttime="20210129 11:09:51.381"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:51.415" starttime="20210129 11:09:51.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:51.418" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 75327-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:55.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:55.061" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:09:55.061" starttime="20210129 11:09:51.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:55.062" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:09:55.062" starttime="20210129 11:09:55.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:55.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:55.063" starttime="20210129 11:09:55.062"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:55.063" starttime="20210129 11:09:51.416"></status>
</kw>
<msg timestamp="20210129 11:09:55.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:55.063" starttime="20210129 11:09:51.415"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:55.063" starttime="20210129 11:09:51.415"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:55.069" level="INFO">Running command 'ozone sh bucket getacl 75327-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:09:59.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:09:59.321" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210129 11:09:59.321" starttime="20210129 11:09:55.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:09:59.322" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210129 11:09:59.322" starttime="20210129 11:09:59.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:09:59.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:09:59.323" starttime="20210129 11:09:59.322"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:59.324" starttime="20210129 11:09:55.066"></status>
</kw>
<msg timestamp="20210129 11:09:59.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:09:59.324" starttime="20210129 11:09:55.065"></status>
</kw>
<msg timestamp="20210129 11:09:59.324" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210129 11:09:59.324" starttime="20210129 11:09:55.064"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:09:59.326" starttime="20210129 11:09:59.324"></status>
</kw>
<status status="PASS" endtime="20210129 11:09:59.326" starttime="20210129 11:09:55.064"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:09:59.332" level="INFO">Running command 'ozone sh bucket getacl 75327-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:02.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:02.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:02.900" starttime="20210129 11:09:59.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:02.902" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:02.902" starttime="20210129 11:10:02.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:02.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:02.902" starttime="20210129 11:10:02.902"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:02.903" starttime="20210129 11:09:59.329"></status>
</kw>
<msg timestamp="20210129 11:10:02.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:02.903" starttime="20210129 11:09:59.329"></status>
</kw>
<msg timestamp="20210129 11:10:02.903" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210129 11:10:02.903" starttime="20210129 11:09:59.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:02.904" starttime="20210129 11:10:02.903"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:02.904" starttime="20210129 11:09:59.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:02.908" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 75327-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:06.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:06.576" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:10:06.576" starttime="20210129 11:10:02.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:06.577" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210129 11:10:06.577" starttime="20210129 11:10:06.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:06.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:06.578" starttime="20210129 11:10:06.577"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:06.579" starttime="20210129 11:10:02.905"></status>
</kw>
<msg timestamp="20210129 11:10:06.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:06.579" starttime="20210129 11:10:02.905"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:06.579" starttime="20210129 11:10:02.904"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:06.585" level="INFO">Running command 'ozone sh bucket getacl 75327-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:10.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:10.221" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:10.221" starttime="20210129 11:10:06.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:10.222" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:10.222" starttime="20210129 11:10:10.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:10.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:10.223" starttime="20210129 11:10:10.223"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:10.223" starttime="20210129 11:10:06.582"></status>
</kw>
<msg timestamp="20210129 11:10:10.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:10.224" starttime="20210129 11:10:06.581"></status>
</kw>
<msg timestamp="20210129 11:10:10.224" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210129 11:10:10.224" starttime="20210129 11:10:06.580"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:10.225" starttime="20210129 11:10:10.224"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:10.225" starttime="20210129 11:10:06.579"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:10.232" level="INFO">Running command 'ozone sh bucket getacl 75327-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:14.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:14.138" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210129 11:10:14.138" starttime="20210129 11:10:10.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.139" level="INFO">READ</msg>
<status status="PASS" endtime="20210129 11:10:14.140" starttime="20210129 11:10:14.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:14.141" starttime="20210129 11:10:14.140"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.141" starttime="20210129 11:10:10.227"></status>
</kw>
<msg timestamp="20210129 11:10:14.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:14.142" starttime="20210129 11:10:10.227"></status>
</kw>
<msg timestamp="20210129 11:10:14.142" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210129 11:10:14.142" starttime="20210129 11:10:10.226"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:14.143" starttime="20210129 11:10:14.142"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.143" starttime="20210129 11:10:10.225"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:14.143" critical="yes" starttime="20210129 11:09:51.379"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:14.152" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:14.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:14.155" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:14.155" starttime="20210129 11:10:14.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.156" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:14.156" starttime="20210129 11:10:14.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:14.157" starttime="20210129 11:10:14.156"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.157" starttime="20210129 11:10:14.149"></status>
</kw>
<msg timestamp="20210129 11:10:14.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:14.157" starttime="20210129 11:10:14.148"></status>
</kw>
<msg timestamp="20210129 11:10:14.157" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:14.157" starttime="20210129 11:10:14.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:14.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:14.158" starttime="20210129 11:10:14.158"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:14.162" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:14.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:14.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:14.187" starttime="20210129 11:10:14.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.188" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:14.188" starttime="20210129 11:10:14.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:14.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:14.189" starttime="20210129 11:10:14.188"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.189" starttime="20210129 11:10:14.160"></status>
</kw>
<msg timestamp="20210129 11:10:14.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:14.189" starttime="20210129 11:10:14.159"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.189" starttime="20210129 11:10:14.159"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.190" starttime="20210129 11:10:14.158"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.190" starttime="20210129 11:10:14.147"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:14.190" starttime="20210129 11:10:14.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:14.193" level="INFO">Running command 'ozone sh bucket link 75327-source/bucket2 75327-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:17.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:17.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:17.726" starttime="20210129 11:10:14.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:17.727" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:17.727" starttime="20210129 11:10:17.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:17.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:17.727" starttime="20210129 11:10:17.727"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:17.728" starttime="20210129 11:10:14.191"></status>
</kw>
<msg timestamp="20210129 11:10:17.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:17.728" starttime="20210129 11:10:14.191"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:17.728" starttime="20210129 11:10:14.190"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:17.731" level="INFO">Running command 'ozone sh bucket create 75327-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:21.265" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:10:21.265" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:21.265" starttime="20210129 11:10:17.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:21.266" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:21.266" starttime="20210129 11:10:21.265"></status>
</kw>
<msg timestamp="20210129 11:10:21.267" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:21.267" starttime="20210129 11:10:17.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:21.267" starttime="20210129 11:10:21.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:21.272" level="INFO">Running command 'ozone sh bucket create 75327-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:24.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:24.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:24.876" starttime="20210129 11:10:21.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:24.877" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:24.877" starttime="20210129 11:10:24.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:24.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:24.878" starttime="20210129 11:10:24.877"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:24.878" starttime="20210129 11:10:21.269"></status>
</kw>
<msg timestamp="20210129 11:10:24.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:24.878" starttime="20210129 11:10:21.268"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:24.879" starttime="20210129 11:10:21.268"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:24.882" level="INFO">Running command 'ozone sh bucket link 75327-source/bucket1 75327-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.320" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:10:28.320" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:28.320" starttime="20210129 11:10:24.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.321" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:28.321" starttime="20210129 11:10:28.320"></status>
</kw>
<msg timestamp="20210129 11:10:28.322" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210129 11:10:28.322" starttime="20210129 11:10:24.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:28.322" starttime="20210129 11:10:28.322"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:28.323" critical="yes" starttime="20210129 11:10:14.145"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.330" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:28.332" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:28.333" starttime="20210129 11:10:28.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.334" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:28.334" starttime="20210129 11:10:28.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:28.334" starttime="20210129 11:10:28.334"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.335" starttime="20210129 11:10:28.327"></status>
</kw>
<msg timestamp="20210129 11:10:28.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:28.335" starttime="20210129 11:10:28.326"></status>
</kw>
<msg timestamp="20210129 11:10:28.335" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:28.335" starttime="20210129 11:10:28.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:28.336" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:28.336" starttime="20210129 11:10:28.336"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:28.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:28.363" starttime="20210129 11:10:28.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.364" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:28.364" starttime="20210129 11:10:28.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:28.365" starttime="20210129 11:10:28.365"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.365" starttime="20210129 11:10:28.338"></status>
</kw>
<msg timestamp="20210129 11:10:28.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:28.366" starttime="20210129 11:10:28.337"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.366" starttime="20210129 11:10:28.337"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.366" starttime="20210129 11:10:28.336"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.366" starttime="20210129 11:10:28.325"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.367" starttime="20210129 11:10:28.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.371" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:28.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:28.376" starttime="20210129 11:10:28.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.376" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:28.377" starttime="20210129 11:10:28.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:28.377" starttime="20210129 11:10:28.377"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.378" starttime="20210129 11:10:28.369"></status>
</kw>
<msg timestamp="20210129 11:10:28.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:28.378" starttime="20210129 11:10:28.369"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.378" starttime="20210129 11:10:28.368"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.383" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:28.385" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:28.385" starttime="20210129 11:10:28.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.386" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:28.386" starttime="20210129 11:10:28.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:28.387" starttime="20210129 11:10:28.386"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.387" starttime="20210129 11:10:28.380"></status>
</kw>
<msg timestamp="20210129 11:10:28.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:28.387" starttime="20210129 11:10:28.380"></status>
</kw>
<msg timestamp="20210129 11:10:28.388" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:28.388" starttime="20210129 11:10:28.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:28.389" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:28.389" starttime="20210129 11:10:28.388"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.392" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:28.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:28.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:28.420" starttime="20210129 11:10:28.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.422" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:28.422" starttime="20210129 11:10:28.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:28.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:28.423" starttime="20210129 11:10:28.422"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.423" starttime="20210129 11:10:28.390"></status>
</kw>
<msg timestamp="20210129 11:10:28.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:28.423" starttime="20210129 11:10:28.390"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.423" starttime="20210129 11:10:28.389"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.424" starttime="20210129 11:10:28.389"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.424" starttime="20210129 11:10:28.379"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:28.424" starttime="20210129 11:10:28.378"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:28.426" level="INFO">Running command 'ozone sh key list 75327-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.095" level="INFO">${output} = {
  "volumeName" : "75327-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-29T11:08:11.292Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210129 11:10:32.095" starttime="20210129 11:10:28.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.097" level="INFO">{
  "volumeName" : "75327-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-29T11:08:11.292Z",
  "modificationTime" : "2021-01-29T11:08:13.263Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210129 11:10:32.097" starttime="20210129 11:10:32.095"></status>
</kw>
<msg timestamp="20210129 11:10:32.097" level="INFO">${result} = {
  "volumeName" : "75327-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-29T11:08:11.292Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210129 11:10:32.097" starttime="20210129 11:10:28.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:32.098" starttime="20210129 11:10:32.097"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.098" starttime="20210129 11:10:28.367"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.098" starttime="20210129 11:10:28.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:32.099" critical="yes" starttime="20210129 11:10:28.324"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.107" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.109" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:32.109" starttime="20210129 11:10:32.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.110" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:32.110" starttime="20210129 11:10:32.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:32.111" starttime="20210129 11:10:32.110"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.111" starttime="20210129 11:10:32.103"></status>
</kw>
<msg timestamp="20210129 11:10:32.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:32.111" starttime="20210129 11:10:32.102"></status>
</kw>
<msg timestamp="20210129 11:10:32.112" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:32.112" starttime="20210129 11:10:32.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:32.113" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:32.113" starttime="20210129 11:10:32.112"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.117" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.141" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:32.141" starttime="20210129 11:10:32.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.142" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:32.142" starttime="20210129 11:10:32.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:32.143" starttime="20210129 11:10:32.142"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.143" starttime="20210129 11:10:32.114"></status>
</kw>
<msg timestamp="20210129 11:10:32.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:32.144" starttime="20210129 11:10:32.114"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.144" starttime="20210129 11:10:32.113"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.144" starttime="20210129 11:10:32.113"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.144" starttime="20210129 11:10:32.101"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.145" starttime="20210129 11:10:32.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.150" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:32.154" starttime="20210129 11:10:32.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.155" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:32.155" starttime="20210129 11:10:32.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:32.156" starttime="20210129 11:10:32.155"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.156" starttime="20210129 11:10:32.147"></status>
</kw>
<msg timestamp="20210129 11:10:32.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:32.156" starttime="20210129 11:10:32.146"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.156" starttime="20210129 11:10:32.146"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.161" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.163" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:32.163" starttime="20210129 11:10:32.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.164" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:32.164" starttime="20210129 11:10:32.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:32.165" starttime="20210129 11:10:32.165"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.165" starttime="20210129 11:10:32.158"></status>
</kw>
<msg timestamp="20210129 11:10:32.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:32.166" starttime="20210129 11:10:32.158"></status>
</kw>
<msg timestamp="20210129 11:10:32.166" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:32.166" starttime="20210129 11:10:32.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:32.167" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:32.167" starttime="20210129 11:10:32.166"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.171" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:32.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:32.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:32.193" starttime="20210129 11:10:32.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.194" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:32.194" starttime="20210129 11:10:32.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:32.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:32.195" starttime="20210129 11:10:32.195"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.195" starttime="20210129 11:10:32.169"></status>
</kw>
<msg timestamp="20210129 11:10:32.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:32.196" starttime="20210129 11:10:32.168"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.196" starttime="20210129 11:10:32.167"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.196" starttime="20210129 11:10:32.167"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.196" starttime="20210129 11:10:32.157"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:32.196" starttime="20210129 11:10:32.157"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:32.199" level="INFO">Running command 'ozone sh key list 75327-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:10:35.552" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 75327-target unreadable-link null</msg>
<status status="PASS" endtime="20210129 11:10:35.552" starttime="20210129 11:10:32.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.553" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 75327-target unreadable-link null</msg>
<status status="PASS" endtime="20210129 11:10:35.554" starttime="20210129 11:10:35.553"></status>
</kw>
<msg timestamp="20210129 11:10:35.554" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 75327-target unreadable-link null</msg>
<status status="PASS" endtime="20210129 11:10:35.554" starttime="20210129 11:10:32.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:35.555" starttime="20210129 11:10:35.554"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.555" starttime="20210129 11:10:32.145"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.555" starttime="20210129 11:10:32.145"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:35.555" critical="yes" starttime="20210129 11:10:32.099"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.561" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:35.564" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:35.564" starttime="20210129 11:10:35.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.564" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:35.564" starttime="20210129 11:10:35.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:35.565" starttime="20210129 11:10:35.565"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.565" starttime="20210129 11:10:35.559"></status>
</kw>
<msg timestamp="20210129 11:10:35.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:35.566" starttime="20210129 11:10:35.559"></status>
</kw>
<msg timestamp="20210129 11:10:35.566" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:35.566" starttime="20210129 11:10:35.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:35.567" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:35.567" starttime="20210129 11:10:35.566"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:35.600" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:35.600" starttime="20210129 11:10:35.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.602" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:35.602" starttime="20210129 11:10:35.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:35.603" starttime="20210129 11:10:35.602"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.603" starttime="20210129 11:10:35.568"></status>
</kw>
<msg timestamp="20210129 11:10:35.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:35.603" starttime="20210129 11:10:35.568"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.603" starttime="20210129 11:10:35.567"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.604" starttime="20210129 11:10:35.567"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.608" starttime="20210129 11:10:35.558"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.608" starttime="20210129 11:10:35.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.614" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:35.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:35.618" starttime="20210129 11:10:35.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.619" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:35.619" starttime="20210129 11:10:35.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:35.620" starttime="20210129 11:10:35.619"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.620" starttime="20210129 11:10:35.610"></status>
</kw>
<msg timestamp="20210129 11:10:35.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:35.621" starttime="20210129 11:10:35.610"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.621" starttime="20210129 11:10:35.609"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.625" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:35.627" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:35.627" starttime="20210129 11:10:35.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.627" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:35.628" starttime="20210129 11:10:35.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:35.628" starttime="20210129 11:10:35.628"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.629" starttime="20210129 11:10:35.622"></status>
</kw>
<msg timestamp="20210129 11:10:35.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:35.629" starttime="20210129 11:10:35.622"></status>
</kw>
<msg timestamp="20210129 11:10:35.629" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:35.629" starttime="20210129 11:10:35.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:35.630" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:35.630" starttime="20210129 11:10:35.629"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.635" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:35.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:35.651" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:35.651" starttime="20210129 11:10:35.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.652" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:35.652" starttime="20210129 11:10:35.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:35.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.652"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.632"></status>
</kw>
<msg timestamp="20210129 11:10:35.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.631"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.631"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.630"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.653" starttime="20210129 11:10:35.621"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:35.654" starttime="20210129 11:10:35.621"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:35.657" level="INFO">Running command 'ozone sh bucket info 75327-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:39.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:39.345" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210129 11:10:39.345" starttime="20210129 11:10:35.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:39.346" level="INFO">{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:28.429Z",
  "modificationTime" : "2021-01-29T11:08:47.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 11:10:39.346" starttime="20210129 11:10:39.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:39.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:39.347" starttime="20210129 11:10:39.346"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:39.347" starttime="20210129 11:10:35.654"></status>
</kw>
<msg timestamp="20210129 11:10:39.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:39.347" starttime="20210129 11:10:35.654"></status>
</kw>
<msg timestamp="20210129 11:10:39.348" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210129 11:10:39.348" starttime="20210129 11:10:35.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:39.348" starttime="20210129 11:10:39.348"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:39.349" starttime="20210129 11:10:39.348"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:39.352" level="INFO">Running command 'ozone sh key list 75327-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:43.070" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:10:43.070" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 75327-source unreadable-bucket </msg>
<status status="PASS" endtime="20210129 11:10:43.070" starttime="20210129 11:10:39.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:43.072" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 75327-source unreadable-bucket </msg>
<status status="PASS" endtime="20210129 11:10:43.072" starttime="20210129 11:10:43.071"></status>
</kw>
<msg timestamp="20210129 11:10:43.072" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 75327-source unreadable-bucket </msg>
<status status="PASS" endtime="20210129 11:10:43.073" starttime="20210129 11:10:39.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:43.073" starttime="20210129 11:10:43.073"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.074" starttime="20210129 11:10:35.609"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.074" starttime="20210129 11:10:35.608"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:43.074" critical="yes" starttime="20210129 11:10:35.556"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:43.082" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:43.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:43.085" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:43.085" starttime="20210129 11:10:43.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:43.086" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:43.087" starttime="20210129 11:10:43.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:43.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:43.087" starttime="20210129 11:10:43.087"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.088" starttime="20210129 11:10:43.079"></status>
</kw>
<msg timestamp="20210129 11:10:43.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:43.088" starttime="20210129 11:10:43.078"></status>
</kw>
<msg timestamp="20210129 11:10:43.088" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:43.089" starttime="20210129 11:10:43.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:43.089" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:43.089" starttime="20210129 11:10:43.089"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:43.094" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:43.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:43.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:43.111" starttime="20210129 11:10:43.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:43.112" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:43.113" starttime="20210129 11:10:43.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:43.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:43.114" starttime="20210129 11:10:43.113"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.115" starttime="20210129 11:10:43.091"></status>
</kw>
<msg timestamp="20210129 11:10:43.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:43.115" starttime="20210129 11:10:43.091"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.116" starttime="20210129 11:10:43.090"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.116" starttime="20210129 11:10:43.090"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.116" starttime="20210129 11:10:43.077"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:43.116" starttime="20210129 11:10:43.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:43.121" level="INFO">Running command 'ozone sh bucket link 75327-target/loop1 75327-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:46.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:46.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:46.588" starttime="20210129 11:10:43.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:46.590" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:46.590" starttime="20210129 11:10:46.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:46.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:46.590" starttime="20210129 11:10:46.590"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:46.591" starttime="20210129 11:10:43.118"></status>
</kw>
<msg timestamp="20210129 11:10:46.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:46.591" starttime="20210129 11:10:43.117"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:46.591" starttime="20210129 11:10:43.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:46.595" level="INFO">Running command 'ozone sh bucket link 75327-target/loop2 75327-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:49.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:49.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:49.847" starttime="20210129 11:10:46.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:49.848" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:49.849" starttime="20210129 11:10:49.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:49.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:49.849" starttime="20210129 11:10:49.849"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:49.850" starttime="20210129 11:10:46.592"></status>
</kw>
<msg timestamp="20210129 11:10:49.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:49.850" starttime="20210129 11:10:46.592"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:49.850" starttime="20210129 11:10:46.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:49.854" level="INFO">Running command 'ozone sh bucket link 75327-target/loop3 75327-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:53.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:53.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:53.356" starttime="20210129 11:10:49.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:53.357" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:53.357" starttime="20210129 11:10:53.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:53.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:53.358" starttime="20210129 11:10:53.358"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:53.358" starttime="20210129 11:10:49.851"></status>
</kw>
<msg timestamp="20210129 11:10:53.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:53.359" starttime="20210129 11:10:49.851"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:53.359" starttime="20210129 11:10:49.850"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:53.361" level="INFO">Running command 'ozone sh key list 75327-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:56.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20210129 11:10:56.541" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210129 11:10:56.541" starttime="20210129 11:10:53.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:56.542" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210129 11:10:56.543" starttime="20210129 11:10:56.542"></status>
</kw>
<msg timestamp="20210129 11:10:56.543" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210129 11:10:56.543" starttime="20210129 11:10:53.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210129 11:10:56.544" starttime="20210129 11:10:56.543"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:10:56.544" critical="yes" starttime="20210129 11:10:43.075"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:56.551" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:56.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:56.553" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:10:56.553" starttime="20210129 11:10:56.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:56.554" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:10:56.555" starttime="20210129 11:10:56.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:56.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:56.555" starttime="20210129 11:10:56.555"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.556" starttime="20210129 11:10:56.548"></status>
</kw>
<msg timestamp="20210129 11:10:56.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:56.556" starttime="20210129 11:10:56.547"></status>
</kw>
<msg timestamp="20210129 11:10:56.556" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:10:56.556" starttime="20210129 11:10:56.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:10:56.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:10:56.558" starttime="20210129 11:10:56.557"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:56.561" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:10:56.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:10:56.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:10:56.585" starttime="20210129 11:10:56.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:10:56.586" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:10:56.586" starttime="20210129 11:10:56.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:10:56.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:10:56.587" starttime="20210129 11:10:56.586"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.587" starttime="20210129 11:10:56.559"></status>
</kw>
<msg timestamp="20210129 11:10:56.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:10:56.587" starttime="20210129 11:10:56.559"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.587" starttime="20210129 11:10:56.558"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.587" starttime="20210129 11:10:56.558"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.588" starttime="20210129 11:10:56.546"></status>
</kw>
<status status="PASS" endtime="20210129 11:10:56.588" starttime="20210129 11:10:56.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:10:56.591" level="INFO">Running command 'ozone sh bucket link 75327-source/bucket1 75327-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:00.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:00.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:00.142" starttime="20210129 11:10:56.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:00.143" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:00.143" starttime="20210129 11:11:00.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:00.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:00.144" starttime="20210129 11:11:00.144"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:00.144" starttime="20210129 11:10:56.589"></status>
</kw>
<msg timestamp="20210129 11:11:00.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:00.145" starttime="20210129 11:10:56.589"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:00.145" starttime="20210129 11:10:56.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:00.152" level="INFO">Running command 'ozone sh key put 75327-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:06.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:06.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:06.118" starttime="20210129 11:11:00.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:06.119" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:06.119" starttime="20210129 11:11:06.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:06.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:06.120" starttime="20210129 11:11:06.120"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:06.121" starttime="20210129 11:11:00.146"></status>
</kw>
<msg timestamp="20210129 11:11:06.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:06.121" starttime="20210129 11:11:00.146"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:06.121" starttime="20210129 11:11:00.145"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210129 11:11:06.123" level="INFO">${postfix} = 40430</msg>
<status status="PASS" endtime="20210129 11:11:06.123" starttime="20210129 11:11:06.122"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210129 11:11:06.124" level="INFO">${tmpfile} = /tmp/tempkey-40430</msg>
<status status="PASS" endtime="20210129 11:11:06.124" starttime="20210129 11:11:06.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:06.128" level="INFO">Running command 'ozone sh key get -f 75327-target/link1/key3 /tmp/tempkey-40430 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:11.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:11.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:11.610" starttime="20210129 11:11:06.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.612" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:11.612" starttime="20210129 11:11:11.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:11.613" starttime="20210129 11:11:11.612"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.613" starttime="20210129 11:11:06.125"></status>
</kw>
<msg timestamp="20210129 11:11:11.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:11.613" starttime="20210129 11:11:06.125"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.613" starttime="20210129 11:11:06.124"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210129 11:11:11.616" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-40430 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:11.619" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210129 11:11:11.619" starttime="20210129 11:11:11.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:11.623" level="INFO">Running command 'rm -f /tmp/tempkey-40430 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:11.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:11.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:11.626" starttime="20210129 11:11:11.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.626" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:11.627" starttime="20210129 11:11:11.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:11.627" starttime="20210129 11:11:11.627"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.628" starttime="20210129 11:11:11.621"></status>
</kw>
<msg timestamp="20210129 11:11:11.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:11.628" starttime="20210129 11:11:11.620"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.628" starttime="20210129 11:11:11.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210129 11:11:11.629" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210129 11:11:11.629" starttime="20210129 11:11:11.628"></status>
</kw>
<msg timestamp="20210129 11:11:11.629" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210129 11:11:11.629" starttime="20210129 11:11:06.122"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210129 11:11:11.630" starttime="20210129 11:11:11.630"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.630" starttime="20210129 11:11:06.121"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:11:11.630" critical="yes" starttime="20210129 11:10:56.545"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:11.637" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:11.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:11.639" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210129 11:11:11.639" starttime="20210129 11:11:11.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.642" level="INFO">scm</msg>
<status status="PASS" endtime="20210129 11:11:11.642" starttime="20210129 11:11:11.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:11.643" starttime="20210129 11:11:11.643"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.644" starttime="20210129 11:11:11.634"></status>
</kw>
<msg timestamp="20210129 11:11:11.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:11.644" starttime="20210129 11:11:11.634"></status>
</kw>
<msg timestamp="20210129 11:11:11.644" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210129 11:11:11.644" starttime="20210129 11:11:11.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210129 11:11:11.645" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210129 11:11:11.645" starttime="20210129 11:11:11.645"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:11.650" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:11.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:11.660" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:11.661" starttime="20210129 11:11:11.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.661" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:11.661" starttime="20210129 11:11:11.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:11.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:11.662" starttime="20210129 11:11:11.662"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.662" starttime="20210129 11:11:11.647"></status>
</kw>
<msg timestamp="20210129 11:11:11.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:11.662" starttime="20210129 11:11:11.647"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.663" starttime="20210129 11:11:11.646"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.663" starttime="20210129 11:11:11.646"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.663" starttime="20210129 11:11:11.633"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:11.663" starttime="20210129 11:11:11.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:11.667" level="INFO">Running command 'ozone sh bucket delete 75327-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:15.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:15.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210129 11:11:15.285" starttime="20210129 11:11:11.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:15.286" level="INFO"></msg>
<status status="PASS" endtime="20210129 11:11:15.286" starttime="20210129 11:11:15.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:15.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:15.287" starttime="20210129 11:11:15.287"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:15.288" starttime="20210129 11:11:11.664"></status>
</kw>
<msg timestamp="20210129 11:11:15.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:15.288" starttime="20210129 11:11:11.664"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:15.291" starttime="20210129 11:11:11.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:15.302" level="INFO">Running command 'ozone sh bucket list 75327-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:19.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:19.180" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T...</msg>
<status status="PASS" endtime="20210129 11:11:19.180" starttime="20210129 11:11:15.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:19.182" level="INFO">{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:24.690Z",
  "modificationTime" : "2021-01-29T11:10:24.690Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:50.804Z",
  "modificationTime" : "2021-01-29T11:08:50.804Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:28.429Z",
  "modificationTime" : "2021-01-29T11:08:47.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:17.635Z",
  "modificationTime" : "2021-01-29T11:10:17.635Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:59.962Z",
  "modificationTime" : "2021-01-29T11:10:59.962Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:53.272Z",
  "modificationTime" : "2021-01-29T11:10:53.272Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:46.489Z",
  "modificationTime" : "2021-01-29T11:10:46.489Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:10:49.781Z",
  "modificationTime" : "2021-01-29T11:10:49.781Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:21.039Z",
  "modificationTime" : "2021-01-29T11:08:43.611Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T11:08:24.566Z",
  "modificationTime" : "2021-01-29T11:08:24.566Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "75327-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210129 11:11:19.182" starttime="20210129 11:11:19.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:19.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:19.183" starttime="20210129 11:11:19.182"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:19.183" starttime="20210129 11:11:15.298"></status>
</kw>
<msg timestamp="20210129 11:11:19.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:19.183" starttime="20210129 11:11:15.292"></status>
</kw>
<msg timestamp="20210129 11:11:19.184" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "75327-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-29T...</msg>
<status status="PASS" endtime="20210129 11:11:19.184" starttime="20210129 11:11:15.291"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:11:19.184" starttime="20210129 11:11:19.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210129 11:11:19.188" level="INFO">Running command 'ozone sh key list 75327-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210129 11:11:23.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210129 11:11:23.296" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210129 11:11:23.296" starttime="20210129 11:11:19.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210129 11:11:23.297" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210129 11:11:23.297" starttime="20210129 11:11:23.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210129 11:11:23.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210129 11:11:23.298" starttime="20210129 11:11:23.297"></status>
</kw>
<status status="PASS" endtime="20210129 11:11:23.298" starttime="20210129 11:11:19.185"></status>
</kw>
<msg timestamp="20210129 11:11:23.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210129 11:11:23.298" starttime="20210129 11:11:19.185"></status>
</kw>
<msg timestamp="20210129 11:11:23.299" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210129 11:11:23.299" starttime="20210129 11:11:19.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210129 11:11:23.300" starttime="20210129 11:11:23.299"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210129 11:11:23.300" critical="yes" starttime="20210129 11:11:11.631"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210129 11:11:23.303" starttime="20210129 11:07:56.094"></status>
</suite>
<status status="PASS" elapsedtime="237069" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
