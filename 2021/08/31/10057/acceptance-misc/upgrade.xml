<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210831 05:28:17.698" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:20:53.675" level="INFO">${random} = 76008</msg>
<status status="PASS" starttime="20210831 05:20:53.675" endtime="20210831 05:20:53.676"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:20:53.678" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-76008 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:20:56.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:20:56.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:53.677" endtime="20210831 05:20:56.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:20:56.880" level="INFO"/>
<status status="PASS" starttime="20210831 05:20:56.879" endtime="20210831 05:20:56.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:20:56.880" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:20:56.880" endtime="20210831 05:20:56.880"/>
</kw>
<status status="PASS" starttime="20210831 05:20:53.676" endtime="20210831 05:20:56.881"/>
</kw>
<msg timestamp="20210831 05:20:56.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:20:53.676" endtime="20210831 05:20:56.881"/>
</kw>
<msg timestamp="20210831 05:20:56.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:53.676" endtime="20210831 05:20:56.881"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:20:56.881" endtime="20210831 05:20:56.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:20:53.674" endtime="20210831 05:20:56.882"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:20:53.640" endtime="20210831 05:20:56.883"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:20:42.814" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:20:44.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:20:44.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:42.813" endtime="20210831 05:20:44.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:20:44.962" level="INFO"/>
<status status="PASS" starttime="20210831 05:20:44.962" endtime="20210831 05:20:44.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:20:44.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:20:44.963" endtime="20210831 05:20:44.963"/>
</kw>
<status status="PASS" starttime="20210831 05:20:42.812" endtime="20210831 05:20:44.963"/>
</kw>
<msg timestamp="20210831 05:20:44.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:20:42.812" endtime="20210831 05:20:44.963"/>
</kw>
<msg timestamp="20210831 05:20:44.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:42.812" endtime="20210831 05:20:44.964"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:20:44.964" endtime="20210831 05:20:44.964"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:20:44.967" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:20:46.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:20:46.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:44.965" endtime="20210831 05:20:46.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:20:46.624" level="INFO"/>
<status status="PASS" starttime="20210831 05:20:46.623" endtime="20210831 05:20:46.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:20:46.624" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:20:46.624" endtime="20210831 05:20:46.624"/>
</kw>
<status status="PASS" starttime="20210831 05:20:44.965" endtime="20210831 05:20:46.624"/>
</kw>
<msg timestamp="20210831 05:20:46.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:20:44.965" endtime="20210831 05:20:46.625"/>
</kw>
<msg timestamp="20210831 05:20:46.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:44.964" endtime="20210831 05:20:46.625"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:20:46.625" endtime="20210831 05:20:46.625"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:20:46.630" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:20:50.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:20:50.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:46.628" endtime="20210831 05:20:50.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:20:50.701" level="INFO"/>
<status status="PASS" starttime="20210831 05:20:50.701" endtime="20210831 05:20:50.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:20:50.702" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:20:50.702" endtime="20210831 05:20:50.702"/>
</kw>
<status status="PASS" starttime="20210831 05:20:46.626" endtime="20210831 05:20:50.702"/>
</kw>
<msg timestamp="20210831 05:20:50.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:20:46.626" endtime="20210831 05:20:50.702"/>
</kw>
<msg timestamp="20210831 05:20:50.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:20:46.625" endtime="20210831 05:20:50.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:20:50.703" endtime="20210831 05:20:50.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:20:42.811" endtime="20210831 05:20:50.703"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210831 05:20:42.775" endtime="20210831 05:20:50.705"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:21:58.091" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:22:00.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:22:00.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:21:58.088" endtime="20210831 05:22:00.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:22:00.069" level="INFO"/>
<status status="PASS" starttime="20210831 05:22:00.069" endtime="20210831 05:22:00.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:22:00.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:22:00.070" endtime="20210831 05:22:00.070"/>
</kw>
<status status="PASS" starttime="20210831 05:21:58.087" endtime="20210831 05:22:00.070"/>
</kw>
<msg timestamp="20210831 05:22:00.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:21:58.087" endtime="20210831 05:22:00.071"/>
</kw>
<msg timestamp="20210831 05:22:00.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:21:58.086" endtime="20210831 05:22:00.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:22:00.071" endtime="20210831 05:22:00.071"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:22:00.075" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:22:02.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:22:02.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:00.073" endtime="20210831 05:22:02.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:22:02.109" level="INFO"/>
<status status="PASS" starttime="20210831 05:22:02.108" endtime="20210831 05:22:02.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:22:02.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:22:02.109" endtime="20210831 05:22:02.110"/>
</kw>
<status status="PASS" starttime="20210831 05:22:00.072" endtime="20210831 05:22:02.110"/>
</kw>
<msg timestamp="20210831 05:22:02.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:22:00.072" endtime="20210831 05:22:02.110"/>
</kw>
<msg timestamp="20210831 05:22:02.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:00.072" endtime="20210831 05:22:02.110"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:22:02.111" endtime="20210831 05:22:02.111"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:22:02.114" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:22:06.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:22:06.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:02.112" endtime="20210831 05:22:06.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:22:06.502" level="INFO"/>
<status status="PASS" starttime="20210831 05:22:06.501" endtime="20210831 05:22:06.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:22:06.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:22:06.502" endtime="20210831 05:22:06.503"/>
</kw>
<status status="PASS" starttime="20210831 05:22:02.112" endtime="20210831 05:22:06.503"/>
</kw>
<msg timestamp="20210831 05:22:06.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:22:02.112" endtime="20210831 05:22:06.503"/>
</kw>
<msg timestamp="20210831 05:22:06.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:02.111" endtime="20210831 05:22:06.504"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:22:06.504" endtime="20210831 05:22:06.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:21:58.085" endtime="20210831 05:22:06.504"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210831 05:21:58.041" endtime="20210831 05:22:06.506"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:22:09.585" level="INFO">${random} = 29669</msg>
<status status="PASS" starttime="20210831 05:22:09.584" endtime="20210831 05:22:09.585"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:22:09.589" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-29669 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:22:13.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:22:13.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:09.586" endtime="20210831 05:22:13.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:22:13.021" level="INFO"/>
<status status="PASS" starttime="20210831 05:22:13.020" endtime="20210831 05:22:13.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:22:13.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:22:13.021" endtime="20210831 05:22:13.021"/>
</kw>
<status status="PASS" starttime="20210831 05:22:09.586" endtime="20210831 05:22:13.022"/>
</kw>
<msg timestamp="20210831 05:22:13.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:22:09.586" endtime="20210831 05:22:13.022"/>
</kw>
<msg timestamp="20210831 05:22:13.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:22:09.585" endtime="20210831 05:22:13.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:22:13.022" endtime="20210831 05:22:13.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:22:09.584" endtime="20210831 05:22:13.023"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:22:09.540" endtime="20210831 05:22:13.024"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:21:51.005" level="INFO">${random} = 65605</msg>
<status status="PASS" starttime="20210831 05:21:51.004" endtime="20210831 05:21:51.005"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:21:51.009" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-65605 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:21:54.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:21:54.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:21:51.007" endtime="20210831 05:21:54.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:21:54.997" level="INFO"/>
<status status="PASS" starttime="20210831 05:21:54.996" endtime="20210831 05:21:54.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:21:54.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:21:54.997" endtime="20210831 05:21:54.998"/>
</kw>
<status status="PASS" starttime="20210831 05:21:51.006" endtime="20210831 05:21:54.998"/>
</kw>
<msg timestamp="20210831 05:21:54.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:21:51.006" endtime="20210831 05:21:54.998"/>
</kw>
<msg timestamp="20210831 05:21:54.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:21:51.005" endtime="20210831 05:21:54.998"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:21:54.998" endtime="20210831 05:21:54.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:21:51.004" endtime="20210831 05:21:54.999"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:21:50.959" endtime="20210831 05:21:55.000"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="27163"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:23:35.774" level="INFO">${random} = 33514</msg>
<status status="PASS" starttime="20210831 05:23:35.773" endtime="20210831 05:23:35.774"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:23:35.776" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-33514 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:23:39.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:23:39.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:35.775" endtime="20210831 05:23:39.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:23:39.113" level="INFO"/>
<status status="PASS" starttime="20210831 05:23:39.112" endtime="20210831 05:23:39.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:23:39.113" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:23:39.113" endtime="20210831 05:23:39.114"/>
</kw>
<status status="PASS" starttime="20210831 05:23:35.775" endtime="20210831 05:23:39.114"/>
</kw>
<msg timestamp="20210831 05:23:39.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:23:35.775" endtime="20210831 05:23:39.114"/>
</kw>
<msg timestamp="20210831 05:23:39.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:35.774" endtime="20210831 05:23:39.114"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:23:39.114" endtime="20210831 05:23:39.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:23:35.773" endtime="20210831 05:23:39.115"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:23:35.738" endtime="20210831 05:23:39.116"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:23:24.508" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:23:26.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:23:26.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:24.507" endtime="20210831 05:23:26.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:23:26.265" level="INFO"/>
<status status="PASS" starttime="20210831 05:23:26.264" endtime="20210831 05:23:26.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:23:26.265" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:23:26.265" endtime="20210831 05:23:26.266"/>
</kw>
<status status="PASS" starttime="20210831 05:23:24.507" endtime="20210831 05:23:26.266"/>
</kw>
<msg timestamp="20210831 05:23:26.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:23:24.507" endtime="20210831 05:23:26.266"/>
</kw>
<msg timestamp="20210831 05:23:26.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:24.506" endtime="20210831 05:23:26.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:23:26.266" endtime="20210831 05:23:26.267"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:23:26.274" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:23:28.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:23:28.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:26.268" endtime="20210831 05:23:28.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:23:28.167" level="INFO"/>
<status status="PASS" starttime="20210831 05:23:28.167" endtime="20210831 05:23:28.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:23:28.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:23:28.167" endtime="20210831 05:23:28.168"/>
</kw>
<status status="PASS" starttime="20210831 05:23:26.267" endtime="20210831 05:23:28.168"/>
</kw>
<msg timestamp="20210831 05:23:28.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:23:26.267" endtime="20210831 05:23:28.168"/>
</kw>
<msg timestamp="20210831 05:23:28.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:26.267" endtime="20210831 05:23:28.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:23:28.168" endtime="20210831 05:23:28.169"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:23:28.176" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:23:32.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:23:32.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:28.174" endtime="20210831 05:23:32.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:23:32.634" level="INFO"/>
<status status="PASS" starttime="20210831 05:23:32.634" endtime="20210831 05:23:32.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:23:32.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:23:32.635" endtime="20210831 05:23:32.635"/>
</kw>
<status status="PASS" starttime="20210831 05:23:28.170" endtime="20210831 05:23:32.635"/>
</kw>
<msg timestamp="20210831 05:23:32.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:23:28.169" endtime="20210831 05:23:32.635"/>
</kw>
<msg timestamp="20210831 05:23:32.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 05:23:28.169" endtime="20210831 05:23:32.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:23:32.636" endtime="20210831 05:23:32.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:23:24.506" endtime="20210831 05:23:32.636"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210831 05:23:24.471" endtime="20210831 05:23:32.637"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:55.329" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:24:55.328" endtime="20210831 05:24:55.329"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:55.329" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:24:55.329" endtime="20210831 05:24:55.329"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:24:55.330" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:24:55.329" endtime="20210831 05:24:55.330"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:24:55.330" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:24:55.330" endtime="20210831 05:24:55.330"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:24:55.331" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:24:55.332" level="INFO">${version_file_contents} = #Tue Aug 31 05:24:18 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387438346
clusterID=2e5fd81c-30cd-4262-a855-bbe42bd81a98
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210831 05:24:55.331" endtime="20210831 05:24:55.332"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:24:55.332" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:24:55.332" endtime="20210831 05:24:55.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:24:55.332" endtime="20210831 05:24:55.333"/>
</kw>
<status status="PASS" starttime="20210831 05:24:55.331" endtime="20210831 05:24:55.333"/>
</kw>
<status status="PASS" starttime="20210831 05:24:55.330" endtime="20210831 05:24:55.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:24:55.327" endtime="20210831 05:24:55.333"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:24:55.282" endtime="20210831 05:24:55.334"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210831 05:25:40.935" endtime="20210831 05:25:40.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:40.940" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:08.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:08.687" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210831 05:25:40.937" endtime="20210831 05:27:08.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:08.688" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210831 05:27:08.687" endtime="20210831 05:27:08.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:08.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:08.688" endtime="20210831 05:27:08.689"/>
</kw>
<status status="PASS" starttime="20210831 05:25:40.936" endtime="20210831 05:27:08.689"/>
</kw>
<msg timestamp="20210831 05:27:08.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:40.936" endtime="20210831 05:27:08.689"/>
</kw>
<msg timestamp="20210831 05:27:08.690" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210831 05:25:40.935" endtime="20210831 05:27:08.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:08.690" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210831 05:27:08.690" endtime="20210831 05:27:08.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:40.934" endtime="20210831 05:27:08.690"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210831 05:27:08.692" endtime="20210831 05:27:08.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:08.695" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:11.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:11.019" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210831 05:27:08.693" endtime="20210831 05:27:11.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:11.020" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210831 05:27:11.020" endtime="20210831 05:27:11.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:11.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:11.021" endtime="20210831 05:27:11.021"/>
</kw>
<status status="PASS" starttime="20210831 05:27:08.693" endtime="20210831 05:27:11.021"/>
</kw>
<msg timestamp="20210831 05:27:11.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:08.693" endtime="20210831 05:27:11.022"/>
</kw>
<msg timestamp="20210831 05:27:11.022" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210831 05:27:08.692" endtime="20210831 05:27:11.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:11.022" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210831 05:27:11.022" endtime="20210831 05:27:11.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:08.691" endtime="20210831 05:27:11.023"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210831 05:25:40.889" endtime="20210831 05:27:11.024"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:14.246" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210831 05:27:14.245" endtime="20210831 05:27:14.246"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:14.247" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:14.246" endtime="20210831 05:27:14.247"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:14.247" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:14.247" endtime="20210831 05:27:14.247"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:14.248" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:14.247" endtime="20210831 05:27:14.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:14.249" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:14.249" level="INFO">${version_file_contents} = #Tue Aug 31 05:25:48 UTC 2021
cTime=1630387359283
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
nodeType=SCM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f14
layoutVersion=2
</msg>
<status status="PASS" starttime="20210831 05:27:14.248" endtime="20210831 05:27:14.249"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:14.249" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210831 05:27:14.249" endtime="20210831 05:27:14.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:14.250" endtime="20210831 05:27:14.250"/>
</kw>
<status status="PASS" starttime="20210831 05:27:14.248" endtime="20210831 05:27:14.250"/>
</kw>
<status status="PASS" starttime="20210831 05:27:14.248" endtime="20210831 05:27:14.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:14.245" endtime="20210831 05:27:14.250"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:14.201" endtime="20210831 05:27:14.251"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:17.440" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:27:17.440" endtime="20210831 05:27:17.440"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:17.441" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:17.440" endtime="20210831 05:27:17.441"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:17.441" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:17.441" endtime="20210831 05:27:17.441"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:17.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:17.441" endtime="20210831 05:27:17.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:17.443" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:17.443" level="INFO">${version_file_contents} = #Tue Aug 31 05:26:01 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387438346
clusterID=2e5fd81c-30cd-4262-a855-bbe42bd81a98
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210831 05:27:17.442" endtime="20210831 05:27:17.443"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:17.444" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210831 05:27:17.443" endtime="20210831 05:27:17.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:17.444" endtime="20210831 05:27:17.444"/>
</kw>
<status status="PASS" starttime="20210831 05:27:17.442" endtime="20210831 05:27:17.444"/>
</kw>
<status status="PASS" starttime="20210831 05:27:17.442" endtime="20210831 05:27:17.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:17.439" endtime="20210831 05:27:17.444"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:17.395" endtime="20210831 05:27:17.445"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:20.636" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:27:20.635" endtime="20210831 05:27:20.636"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:20.637" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:20.636" endtime="20210831 05:27:20.637"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:20.637" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:20.637" endtime="20210831 05:27:20.637"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:20.638" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:20.637" endtime="20210831 05:27:20.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:20.639" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:20.639" level="INFO">${version_file_contents} = #Tue Aug 31 05:26:01 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387439131
clusterID=28ba56b4-00ff-4e5b-b303-91b6377a5934
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210831 05:27:20.638" endtime="20210831 05:27:20.639"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:20.639" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210831 05:27:20.639" endtime="20210831 05:27:20.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:20.640" endtime="20210831 05:27:20.640"/>
</kw>
<status status="PASS" starttime="20210831 05:27:20.638" endtime="20210831 05:27:20.640"/>
</kw>
<status status="PASS" starttime="20210831 05:27:20.638" endtime="20210831 05:27:20.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:20.635" endtime="20210831 05:27:20.640"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:20.590" endtime="20210831 05:27:20.641"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:23.817" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:27:23.816" endtime="20210831 05:27:23.817"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:23.818" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:23.817" endtime="20210831 05:27:23.818"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:23.818" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:23.818" endtime="20210831 05:27:23.818"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:23.819" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:23.818" endtime="20210831 05:27:23.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:23.820" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:23.820" level="INFO">${version_file_contents} = #Tue Aug 31 05:26:01 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387442086
clusterID=40ea6e7f-a27e-4612-99c6-293d549c5b16
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210831 05:27:23.819" endtime="20210831 05:27:23.820"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:23.820" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210831 05:27:23.820" endtime="20210831 05:27:23.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:23.821" endtime="20210831 05:27:23.821"/>
</kw>
<status status="PASS" starttime="20210831 05:27:23.819" endtime="20210831 05:27:23.821"/>
</kw>
<status status="PASS" starttime="20210831 05:27:23.819" endtime="20210831 05:27:23.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:23.816" endtime="20210831 05:27:23.821"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:23.772" endtime="20210831 05:27:23.822"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:27.066" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:27:27.065" endtime="20210831 05:27:27.066"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:27.067" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:27.066" endtime="20210831 05:27:27.067"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:27.067" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:27.067" endtime="20210831 05:27:27.067"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:27.068" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:27.067" endtime="20210831 05:27:27.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:27.069" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:27.069" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387368516
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=df15a6e6-2301-45c6-a0ae-74cc35eb5358
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:27:27.068" endtime="20210831 05:27:27.069"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:27.070" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:27:27.069" endtime="20210831 05:27:27.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:27.070" endtime="20210831 05:27:27.070"/>
</kw>
<status status="PASS" starttime="20210831 05:27:27.068" endtime="20210831 05:27:27.070"/>
</kw>
<status status="PASS" starttime="20210831 05:27:27.068" endtime="20210831 05:27:27.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:27.064" endtime="20210831 05:27:27.071"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:27.019" endtime="20210831 05:27:27.071"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:30.281" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:27:30.281" endtime="20210831 05:27:30.281"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:30.282" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:30.281" endtime="20210831 05:27:30.282"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:30.282" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:30.282" endtime="20210831 05:27:30.282"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:30.283" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:30.282" endtime="20210831 05:27:30.283"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:30.284" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:30.284" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387370043
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=dd7d8461-2426-4773-9d64-87ddc8ee1bb4
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:27:30.284" endtime="20210831 05:27:30.284"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:30.285" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:27:30.284" endtime="20210831 05:27:30.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:30.285" endtime="20210831 05:27:30.285"/>
</kw>
<status status="PASS" starttime="20210831 05:27:30.283" endtime="20210831 05:27:30.285"/>
</kw>
<status status="PASS" starttime="20210831 05:27:30.283" endtime="20210831 05:27:30.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:30.280" endtime="20210831 05:27:30.286"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:30.236" endtime="20210831 05:27:30.286"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:33.506" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:27:33.505" endtime="20210831 05:27:33.506"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:27:33.506" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:27:33.506" endtime="20210831 05:27:33.506"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:27:33.507" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:27:33.506" endtime="20210831 05:27:33.507"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:27:33.508" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:27:33.507" endtime="20210831 05:27:33.508"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:27:33.509" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:27:33.509" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387368177
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=c5affd10-c91d-4162-a4a4-4dcc8bbe9b72
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:27:33.508" endtime="20210831 05:27:33.509"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:27:33.510" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:27:33.509" endtime="20210831 05:27:33.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:33.510" endtime="20210831 05:27:33.510"/>
</kw>
<status status="PASS" starttime="20210831 05:27:33.508" endtime="20210831 05:27:33.510"/>
</kw>
<status status="PASS" starttime="20210831 05:27:33.508" endtime="20210831 05:27:33.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:33.505" endtime="20210831 05:27:33.510"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:27:33.458" endtime="20210831 05:27:33.511"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:27:36.646" level="INFO">${random} = 00627</msg>
<status status="PASS" starttime="20210831 05:27:36.646" endtime="20210831 05:27:36.646"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:36.650" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-00627 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:40.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:40.272" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:36.648" endtime="20210831 05:27:40.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:40.273" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:40.272" endtime="20210831 05:27:40.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:40.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:40.273" endtime="20210831 05:27:40.274"/>
</kw>
<status status="PASS" starttime="20210831 05:27:36.647" endtime="20210831 05:27:40.274"/>
</kw>
<msg timestamp="20210831 05:27:40.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:36.647" endtime="20210831 05:27:40.274"/>
</kw>
<msg timestamp="20210831 05:27:40.274" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:36.646" endtime="20210831 05:27:40.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:40.274" endtime="20210831 05:27:40.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:36.645" endtime="20210831 05:27:40.275"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:27:36.601" endtime="20210831 05:27:40.276"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:27:43.465" level="INFO">${random} = 44823</msg>
<status status="PASS" starttime="20210831 05:27:43.464" endtime="20210831 05:27:43.465"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:43.469" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-44823 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:46.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:46.981" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:43.466" endtime="20210831 05:27:46.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:46.982" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:46.982" endtime="20210831 05:27:46.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:46.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:46.983" endtime="20210831 05:27:46.983"/>
</kw>
<status status="PASS" starttime="20210831 05:27:43.466" endtime="20210831 05:27:46.983"/>
</kw>
<msg timestamp="20210831 05:27:46.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:43.466" endtime="20210831 05:27:46.984"/>
</kw>
<msg timestamp="20210831 05:27:46.984" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:43.465" endtime="20210831 05:27:46.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:46.984" endtime="20210831 05:27:46.984"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:43.463" endtime="20210831 05:27:46.984"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:27:43.420" endtime="20210831 05:27:46.986"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:58.552" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:24:58.552" endtime="20210831 05:24:58.552"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:58.553" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:24:58.553" endtime="20210831 05:24:58.553"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:24:58.553" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:24:58.553" endtime="20210831 05:24:58.553"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:24:58.554" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:24:58.554" endtime="20210831 05:24:58.554"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:24:58.555" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:24:58.555" level="INFO">${version_file_contents} = #Tue Aug 31 05:24:18 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387439131
clusterID=28ba56b4-00ff-4e5b-b303-91b6377a5934
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210831 05:24:58.555" endtime="20210831 05:24:58.555"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:24:58.556" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:24:58.555" endtime="20210831 05:24:58.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:24:58.556" endtime="20210831 05:24:58.556"/>
</kw>
<status status="PASS" starttime="20210831 05:24:58.554" endtime="20210831 05:24:58.556"/>
</kw>
<status status="PASS" starttime="20210831 05:24:58.554" endtime="20210831 05:24:58.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:24:58.551" endtime="20210831 05:24:58.557"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:24:58.507" endtime="20210831 05:24:58.557"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:50.137" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:52.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:52.097" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:50.134" endtime="20210831 05:27:52.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:52.099" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:52.098" endtime="20210831 05:27:52.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:52.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:52.099" endtime="20210831 05:27:52.100"/>
</kw>
<status status="PASS" starttime="20210831 05:27:50.134" endtime="20210831 05:27:52.100"/>
</kw>
<msg timestamp="20210831 05:27:52.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:50.134" endtime="20210831 05:27:52.100"/>
</kw>
<msg timestamp="20210831 05:27:52.100" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:50.133" endtime="20210831 05:27:52.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:52.101" endtime="20210831 05:27:52.101"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:52.105" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:54.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:54.048" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:52.103" endtime="20210831 05:27:54.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:54.049" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:54.048" endtime="20210831 05:27:54.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:54.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:54.049" endtime="20210831 05:27:54.050"/>
</kw>
<status status="PASS" starttime="20210831 05:27:52.102" endtime="20210831 05:27:54.050"/>
</kw>
<msg timestamp="20210831 05:27:54.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:52.102" endtime="20210831 05:27:54.050"/>
</kw>
<msg timestamp="20210831 05:27:54.050" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:52.101" endtime="20210831 05:27:54.050"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:54.050" endtime="20210831 05:27:54.051"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:27:54.054" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:27:57.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:27:57.881" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:54.052" endtime="20210831 05:27:57.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:27:57.882" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:57.882" endtime="20210831 05:27:57.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:27:57.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:27:57.882" endtime="20210831 05:27:57.883"/>
</kw>
<status status="PASS" starttime="20210831 05:27:54.052" endtime="20210831 05:27:57.883"/>
</kw>
<msg timestamp="20210831 05:27:57.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:27:54.052" endtime="20210831 05:27:57.883"/>
</kw>
<msg timestamp="20210831 05:27:57.884" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:27:54.051" endtime="20210831 05:27:57.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:27:57.884" endtime="20210831 05:27:57.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:27:50.132" endtime="20210831 05:27:57.885"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210831 05:27:50.087" endtime="20210831 05:27:57.886"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:28:01.062" level="INFO">${random} = 27988</msg>
<status status="PASS" starttime="20210831 05:28:01.062" endtime="20210831 05:28:01.062"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:28:01.067" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-27988 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:28:04.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:28:04.682" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:28:01.064" endtime="20210831 05:28:04.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:28:04.683" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:28:04.682" endtime="20210831 05:28:04.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:28:04.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:28:04.683" endtime="20210831 05:28:04.684"/>
</kw>
<status status="PASS" starttime="20210831 05:28:01.063" endtime="20210831 05:28:04.684"/>
</kw>
<msg timestamp="20210831 05:28:04.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:28:01.063" endtime="20210831 05:28:04.684"/>
</kw>
<msg timestamp="20210831 05:28:04.684" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:28:01.062" endtime="20210831 05:28:04.684"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:28:04.684" endtime="20210831 05:28:04.685"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:28:01.061" endtime="20210831 05:28:04.685"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:28:01.016" endtime="20210831 05:28:04.686"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:01.796" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210831 05:25:01.796" endtime="20210831 05:25:01.796"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:01.797" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:25:01.796" endtime="20210831 05:25:01.797"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:25:01.797" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:25:01.797" endtime="20210831 05:25:01.797"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:25:01.798" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210831 05:25:01.797" endtime="20210831 05:25:01.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:25:01.799" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:25:01.799" level="INFO">${version_file_contents} = #Tue Aug 31 05:24:19 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630387442086
clusterID=40ea6e7f-a27e-4612-99c6-293d549c5b16
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210831 05:25:01.799" endtime="20210831 05:25:01.799"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:25:01.800" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:25:01.799" endtime="20210831 05:25:01.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:01.800" endtime="20210831 05:25:01.800"/>
</kw>
<status status="PASS" starttime="20210831 05:25:01.798" endtime="20210831 05:25:01.800"/>
</kw>
<status status="PASS" starttime="20210831 05:25:01.798" endtime="20210831 05:25:01.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:01.795" endtime="20210831 05:25:01.801"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:25:01.747" endtime="20210831 05:25:01.801"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:05.046" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:25:05.046" endtime="20210831 05:25:05.046"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:05.047" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:25:05.046" endtime="20210831 05:25:05.047"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:25:05.047" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:25:05.047" endtime="20210831 05:25:05.047"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:25:05.048" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:25:05.047" endtime="20210831 05:25:05.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:25:05.049" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:25:05.049" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387368516
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=df15a6e6-2301-45c6-a0ae-74cc35eb5358
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:25:05.049" endtime="20210831 05:25:05.049"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:25:05.050" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:25:05.049" endtime="20210831 05:25:05.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:05.050" endtime="20210831 05:25:05.050"/>
</kw>
<status status="PASS" starttime="20210831 05:25:05.048" endtime="20210831 05:25:05.050"/>
</kw>
<status status="PASS" starttime="20210831 05:25:05.048" endtime="20210831 05:25:05.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:05.045" endtime="20210831 05:25:05.051"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:25:04.998" endtime="20210831 05:25:05.051"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:08.263" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:25:08.262" endtime="20210831 05:25:08.263"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:08.263" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:25:08.263" endtime="20210831 05:25:08.263"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:25:08.264" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:25:08.263" endtime="20210831 05:25:08.264"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:25:08.264" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:25:08.264" endtime="20210831 05:25:08.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:25:08.266" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:25:08.266" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387370043
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=dd7d8461-2426-4773-9d64-87ddc8ee1bb4
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:25:08.265" endtime="20210831 05:25:08.266"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:25:08.266" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:25:08.266" endtime="20210831 05:25:08.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:08.266" endtime="20210831 05:25:08.267"/>
</kw>
<status status="PASS" starttime="20210831 05:25:08.265" endtime="20210831 05:25:08.267"/>
</kw>
<status status="PASS" starttime="20210831 05:25:08.265" endtime="20210831 05:25:08.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:08.262" endtime="20210831 05:25:08.267"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:25:08.217" endtime="20210831 05:25:08.268"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:11.502" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210831 05:25:11.502" endtime="20210831 05:25:11.503"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:25:11.503" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:25:11.503" endtime="20210831 05:25:11.503"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:25:11.503" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:25:11.503" endtime="20210831 05:25:11.504"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:25:11.504" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210831 05:25:11.504" endtime="20210831 05:25:11.504"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:25:11.505" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:25:11.505" level="INFO">${version_file_contents} = #Tue Aug 31 05:23:02 UTC 2021
cTime=1630387368177
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
omUuid=c5affd10-c91d-4162-a4a4-4dcc8bbe9b72
nodeType=OM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f1...</msg>
<status status="PASS" starttime="20210831 05:25:11.505" endtime="20210831 05:25:11.505"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:25:11.506" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:25:11.505" endtime="20210831 05:25:11.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:11.506" endtime="20210831 05:25:11.506"/>
</kw>
<status status="PASS" starttime="20210831 05:25:11.504" endtime="20210831 05:25:11.507"/>
</kw>
<status status="PASS" starttime="20210831 05:25:11.504" endtime="20210831 05:25:11.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:11.501" endtime="20210831 05:25:11.507"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:25:11.456" endtime="20210831 05:25:11.507"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:25:14.679" level="INFO">${random} = 80783</msg>
<status status="PASS" starttime="20210831 05:25:14.679" endtime="20210831 05:25:14.679"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:14.683" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-80783 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:25:18.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:25:18.420" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:14.681" endtime="20210831 05:25:18.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:25:18.421" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:18.420" endtime="20210831 05:25:18.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:25:18.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:25:18.421" endtime="20210831 05:25:18.422"/>
</kw>
<status status="PASS" starttime="20210831 05:25:14.680" endtime="20210831 05:25:18.422"/>
</kw>
<msg timestamp="20210831 05:25:18.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:14.680" endtime="20210831 05:25:18.422"/>
</kw>
<msg timestamp="20210831 05:25:18.422" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:14.679" endtime="20210831 05:25:18.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:18.422" endtime="20210831 05:25:18.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:14.678" endtime="20210831 05:25:18.423"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:25:14.635" endtime="20210831 05:25:18.424"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:21.616" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:25:23.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:25:23.861" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:21.613" endtime="20210831 05:25:23.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:25:23.863" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:23.862" endtime="20210831 05:25:23.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:25:23.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:25:23.863" endtime="20210831 05:25:23.864"/>
</kw>
<status status="PASS" starttime="20210831 05:25:21.613" endtime="20210831 05:25:23.864"/>
</kw>
<msg timestamp="20210831 05:25:23.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:21.613" endtime="20210831 05:25:23.864"/>
</kw>
<msg timestamp="20210831 05:25:23.864" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:21.612" endtime="20210831 05:25:23.864"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:23.864" endtime="20210831 05:25:23.865"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:23.877" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:25:26.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:25:26.754" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:23.868" endtime="20210831 05:25:26.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:25:26.755" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:26.754" endtime="20210831 05:25:26.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:25:26.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:25:26.755" endtime="20210831 05:25:26.756"/>
</kw>
<status status="PASS" starttime="20210831 05:25:23.867" endtime="20210831 05:25:26.756"/>
</kw>
<msg timestamp="20210831 05:25:26.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:23.866" endtime="20210831 05:25:26.756"/>
</kw>
<msg timestamp="20210831 05:25:26.756" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:23.865" endtime="20210831 05:25:26.756"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:26.756" endtime="20210831 05:25:26.757"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:26.760" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:25:30.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:25:30.944" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:26.758" endtime="20210831 05:25:30.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:25:30.945" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:30.944" endtime="20210831 05:25:30.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:25:30.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:25:30.945" endtime="20210831 05:25:30.946"/>
</kw>
<status status="PASS" starttime="20210831 05:25:26.758" endtime="20210831 05:25:30.946"/>
</kw>
<msg timestamp="20210831 05:25:30.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:26.758" endtime="20210831 05:25:30.946"/>
</kw>
<msg timestamp="20210831 05:25:30.946" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:26.757" endtime="20210831 05:25:30.947"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:30.947" endtime="20210831 05:25:30.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:21.611" endtime="20210831 05:25:30.948"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210831 05:25:21.564" endtime="20210831 05:25:30.949"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 05:25:34.128" level="INFO">${random} = 33820</msg>
<status status="PASS" starttime="20210831 05:25:34.128" endtime="20210831 05:25:34.128"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 05:25:34.133" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-33820 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 05:25:37.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 05:25:37.733" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:34.130" endtime="20210831 05:25:37.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 05:25:37.735" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:37.734" endtime="20210831 05:25:37.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 05:25:37.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 05:25:37.735" endtime="20210831 05:25:37.735"/>
</kw>
<status status="PASS" starttime="20210831 05:25:34.129" endtime="20210831 05:25:37.740"/>
</kw>
<msg timestamp="20210831 05:25:37.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 05:25:34.129" endtime="20210831 05:25:37.740"/>
</kw>
<msg timestamp="20210831 05:25:37.740" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210831 05:25:34.128" endtime="20210831 05:25:37.740"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:25:37.740" endtime="20210831 05:25:37.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:25:34.127" endtime="20210831 05:25:37.741"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210831 05:25:34.082" endtime="20210831 05:25:37.742"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:52.069" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210831 05:24:52.068" endtime="20210831 05:24:52.069"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210831 05:24:52.069" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210831 05:24:52.069" endtime="20210831 05:24:52.069"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210831 05:24:52.070" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210831 05:24:52.069" endtime="20210831 05:24:52.070"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210831 05:24:52.070" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210831 05:24:52.070" endtime="20210831 05:24:52.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210831 05:24:52.071" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210831 05:24:52.072" level="INFO">${version_file_contents} = #Tue Aug 31 05:22:39 UTC 2021
cTime=1630387359283
clusterID=CID-c0ca0a22-fb2c-496c-be3b-02af72ca2ca2
nodeType=SCM
scmUuid=90c6b334-82e4-406b-b249-8a7dfa4b2f14
layoutVersion=0
</msg>
<status status="PASS" starttime="20210831 05:24:52.071" endtime="20210831 05:24:52.072"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210831 05:24:52.072" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210831 05:24:52.072" endtime="20210831 05:24:52.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 05:24:52.073" endtime="20210831 05:24:52.073"/>
</kw>
<status status="PASS" starttime="20210831 05:24:52.071" endtime="20210831 05:24:52.073"/>
</kw>
<status status="PASS" starttime="20210831 05:24:52.070" endtime="20210831 05:24:52.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 05:24:52.068" endtime="20210831 05:24:52.073"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210831 05:24:52.022" endtime="20210831 05:24:52.074"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="137942"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="165105"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
