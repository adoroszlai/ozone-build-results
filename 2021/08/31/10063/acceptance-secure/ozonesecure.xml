<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210831 13:49:45.639" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.528" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:55.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:55.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 12:59:55.524" endtime="20210831 12:59:55.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:55.534" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 12:59:55.533" endtime="20210831 12:59:55.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:55.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:55.534" endtime="20210831 12:59:55.535"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.524" endtime="20210831 12:59:55.535"/>
</kw>
<msg timestamp="20210831 12:59:55.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:55.523" endtime="20210831 12:59:55.536"/>
</kw>
<msg timestamp="20210831 12:59:55.536" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210831 12:59:55.523" endtime="20210831 12:59:55.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.541" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:55.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:55.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 12:59:55.538" endtime="20210831 12:59:55.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:55.551" level="INFO"/>
<status status="PASS" starttime="20210831 12:59:55.550" endtime="20210831 12:59:55.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:55.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:55.551" endtime="20210831 12:59:55.551"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.538" endtime="20210831 12:59:55.552"/>
</kw>
<msg timestamp="20210831 12:59:55.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:55.537" endtime="20210831 12:59:55.552"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.537" endtime="20210831 12:59:55.552"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.536" endtime="20210831 12:59:55.552"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.522" endtime="20210831 12:59:55.553"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.521" endtime="20210831 12:59:55.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.557" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:55.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:55.732" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210831 12:59:55.554" endtime="20210831 12:59:55.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:55.733" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 31 Aug 2021 12:59:55 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC8ODHvdMtT7jPOcUHoJf2mvPEtAG4kJ9xHxuFyHdFVuib1C4JjOxtxnImiqmsHYTZw6PygaNdVEU3Taswm+103xpc
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1630450795717&amp;s=n8JjJtEVdShcz72Cb+aVoLSLvu2MvS/CQTg7uasDuis="; Path=/; HttpOnly
Last-Modified: Tue, 31 Aug 2021 12:44:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210831 12:59:55.732" endtime="20210831 12:59:55.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:55.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:55.733" endtime="20210831 12:59:55.734"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.554" endtime="20210831 12:59:55.734"/>
</kw>
<msg timestamp="20210831 12:59:55.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:55.554" endtime="20210831 12:59:55.735"/>
</kw>
<msg timestamp="20210831 12:59:55.735" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210831 12:59:55.553" endtime="20210831 12:59:55.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 12:59:55.735" endtime="20210831 12:59:55.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 12:59:55.521" endtime="20210831 12:59:55.736"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.745" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:55.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:55.749" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 12:59:55.742" endtime="20210831 12:59:55.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:55.751" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 12:59:55.750" endtime="20210831 12:59:55.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:55.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:55.751" endtime="20210831 12:59:55.752"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.741" endtime="20210831 12:59:55.752"/>
</kw>
<msg timestamp="20210831 12:59:55.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:55.741" endtime="20210831 12:59:55.752"/>
</kw>
<msg timestamp="20210831 12:59:55.753" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 12:59:55.740" endtime="20210831 12:59:55.753"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 12:59:55.755" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 12:59:55.753" endtime="20210831 12:59:55.755"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.760" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:55.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:55.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 12:59:55.757" endtime="20210831 12:59:55.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:55.771" level="INFO"/>
<status status="PASS" starttime="20210831 12:59:55.770" endtime="20210831 12:59:55.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:55.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:55.771" endtime="20210831 12:59:55.772"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.757" endtime="20210831 12:59:55.773"/>
</kw>
<msg timestamp="20210831 12:59:55.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:55.756" endtime="20210831 12:59:55.773"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.756" endtime="20210831 12:59:55.773"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.755" endtime="20210831 12:59:55.773"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.739" endtime="20210831 12:59:55.773"/>
</kw>
<status status="PASS" starttime="20210831 12:59:55.739" endtime="20210831 12:59:55.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:55.778" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:04:55.739" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 12:59:55.775" endtime="20210831 13:04:55.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:04:55.739" endtime="20210831 13:04:55.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:04:55.740" endtime="20210831 13:04:55.740"/>
</kw>
<status status="FAIL" starttime="20210831 12:59:55.775" endtime="20210831 13:04:55.740"/>
</kw>
<msg timestamp="20210831 13:04:55.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 12:59:55.774" endtime="20210831 13:04:55.741"/>
</kw>
<status status="FAIL" starttime="20210831 12:59:55.774" endtime="20210831 13:04:55.741"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210831 13:04:55.741" endtime="20210831 13:04:55.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:04:55.742" endtime="20210831 13:04:55.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210831 12:59:55.738" endtime="20210831 13:04:55.742">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210831 12:59:55.488" endtime="20210831 13:04:55.743"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:04:55.758" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:04:59.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:04:59.121" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210831 13:04:55.755" endtime="20210831 13:04:59.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:04:59.122" level="INFO">om</msg>
<status status="PASS" starttime="20210831 13:04:59.121" endtime="20210831 13:04:59.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:04:59.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:04:59.122" endtime="20210831 13:04:59.123"/>
</kw>
<status status="PASS" starttime="20210831 13:04:55.754" endtime="20210831 13:04:59.124"/>
</kw>
<msg timestamp="20210831 13:04:59.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:04:55.753" endtime="20210831 13:04:59.124"/>
</kw>
<msg timestamp="20210831 13:04:59.124" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210831 13:04:55.752" endtime="20210831 13:04:59.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:04:59.125" endtime="20210831 13:04:59.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:04:59.130" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:02.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:02.280" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210831 13:04:59.128" endtime="20210831 13:05:02.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:02.282" level="INFO">om</msg>
<status status="PASS" starttime="20210831 13:05:02.281" endtime="20210831 13:05:02.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:02.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:02.282" endtime="20210831 13:05:02.283"/>
</kw>
<status status="PASS" starttime="20210831 13:04:59.127" endtime="20210831 13:05:02.283"/>
</kw>
<msg timestamp="20210831 13:05:02.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:04:59.126" endtime="20210831 13:05:02.283"/>
</kw>
<msg timestamp="20210831 13:05:02.283" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210831 13:04:59.125" endtime="20210831 13:05:02.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:02.284" endtime="20210831 13:05:02.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:04:55.751" endtime="20210831 13:05:02.285"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:02.294" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:04.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:04.965" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:05:02.291" endtime="20210831 13:05:04.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:04.967" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:05:04.966" endtime="20210831 13:05:04.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:04.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:04.967" endtime="20210831 13:05:04.968"/>
</kw>
<status status="PASS" starttime="20210831 13:05:02.290" endtime="20210831 13:05:04.968"/>
</kw>
<msg timestamp="20210831 13:05:04.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:02.289" endtime="20210831 13:05:04.969"/>
</kw>
<msg timestamp="20210831 13:05:04.969" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210831 13:05:02.288" endtime="20210831 13:05:04.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:04.969" endtime="20210831 13:05:04.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:04.974" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:06.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:06.941" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:05:04.971" endtime="20210831 13:05:06.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:06.942" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:05:06.941" endtime="20210831 13:05:06.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:06.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:06.942" endtime="20210831 13:05:06.944"/>
</kw>
<status status="PASS" starttime="20210831 13:05:04.971" endtime="20210831 13:05:06.944"/>
</kw>
<msg timestamp="20210831 13:05:06.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:04.971" endtime="20210831 13:05:06.945"/>
</kw>
<msg timestamp="20210831 13:05:06.945" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210831 13:05:04.970" endtime="20210831 13:05:06.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:06.945" endtime="20210831 13:05:06.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:05:02.286" endtime="20210831 13:05:06.946"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:06.951" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:08.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:08.497" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210831 13:05:06.949" endtime="20210831 13:05:08.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:08.498" level="INFO">om</msg>
<status status="PASS" starttime="20210831 13:05:08.497" endtime="20210831 13:05:08.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:08.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:08.498" endtime="20210831 13:05:08.499"/>
</kw>
<status status="PASS" starttime="20210831 13:05:06.949" endtime="20210831 13:05:08.499"/>
</kw>
<msg timestamp="20210831 13:05:08.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:06.948" endtime="20210831 13:05:08.499"/>
</kw>
<msg timestamp="20210831 13:05:08.500" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210831 13:05:06.947" endtime="20210831 13:05:08.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:08.500" endtime="20210831 13:05:08.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:08.500" endtime="20210831 13:05:08.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:08.505" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:10.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:10.795" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210831 13:05:08.503" endtime="20210831 13:05:10.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:10.796" level="INFO">om</msg>
<status status="PASS" starttime="20210831 13:05:10.795" endtime="20210831 13:05:10.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:10.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:10.796" endtime="20210831 13:05:10.797"/>
</kw>
<status status="PASS" starttime="20210831 13:05:08.502" endtime="20210831 13:05:10.797"/>
</kw>
<msg timestamp="20210831 13:05:10.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:08.502" endtime="20210831 13:05:10.798"/>
</kw>
<msg timestamp="20210831 13:05:10.798" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210831 13:05:08.501" endtime="20210831 13:05:10.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:10.798" endtime="20210831 13:05:10.798"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:10.799" endtime="20210831 13:05:10.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:05:06.947" endtime="20210831 13:05:10.799"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:10.808" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:13.691" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:05:13.692" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:10.806" endtime="20210831 13:05:13.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:13.693" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:13.692" endtime="20210831 13:05:13.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:13.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:13.694" endtime="20210831 13:05:13.695"/>
</kw>
<msg timestamp="20210831 13:05:13.696" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:10.805" endtime="20210831 13:05:13.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:13.696" endtime="20210831 13:05:13.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:13.701" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:16.595" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:05:16.595" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:13.698" endtime="20210831 13:05:16.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:16.596" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:16.595" endtime="20210831 13:05:16.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:16.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:16.597" endtime="20210831 13:05:16.597"/>
</kw>
<msg timestamp="20210831 13:05:16.598" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210831 13:05:13.697" endtime="20210831 13:05:16.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:05:16.598" endtime="20210831 13:05:16.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:05:10.802" endtime="20210831 13:05:16.599"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210831 13:04:55.746" endtime="20210831 13:05:16.601"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 13:05:16.623" level="INFO">${random} = 70284</msg>
<status status="PASS" starttime="20210831 13:05:16.622" endtime="20210831 13:05:16.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:05:16.627" level="INFO">${source} = 70284-source</msg>
<status status="PASS" starttime="20210831 13:05:16.624" endtime="20210831 13:05:16.627"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:05:16.630" level="INFO">${target} = 70284-target</msg>
<status status="PASS" starttime="20210831 13:05:16.628" endtime="20210831 13:05:16.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:16.635" level="INFO">Running command 'ozone sh volume create 70284-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:24.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:24.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:05:16.632" endtime="20210831 13:05:24.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:24.842" level="INFO"/>
<status status="PASS" starttime="20210831 13:05:24.840" endtime="20210831 13:05:24.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:24.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:24.843" endtime="20210831 13:05:24.844"/>
</kw>
<status status="PASS" starttime="20210831 13:05:16.631" endtime="20210831 13:05:24.845"/>
</kw>
<msg timestamp="20210831 13:05:24.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:16.631" endtime="20210831 13:05:24.846"/>
</kw>
<status status="PASS" starttime="20210831 13:05:16.630" endtime="20210831 13:05:24.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:24.858" level="INFO">Running command 'ozone sh volume create 70284-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:32.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:32.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:05:24.852" endtime="20210831 13:05:32.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:32.426" level="INFO"/>
<status status="PASS" starttime="20210831 13:05:32.425" endtime="20210831 13:05:32.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:32.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:32.426" endtime="20210831 13:05:32.427"/>
</kw>
<status status="PASS" starttime="20210831 13:05:24.851" endtime="20210831 13:05:32.427"/>
</kw>
<msg timestamp="20210831 13:05:32.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:24.851" endtime="20210831 13:05:32.427"/>
</kw>
<status status="PASS" starttime="20210831 13:05:24.846" endtime="20210831 13:05:32.428"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:32.433" level="INFO">Running command 'ozone sh bucket create 70284-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:05:40.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:05:40.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:05:32.431" endtime="20210831 13:05:40.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:05:40.684" level="INFO"/>
<status status="PASS" starttime="20210831 13:05:40.684" endtime="20210831 13:05:40.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:05:40.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:05:40.685" endtime="20210831 13:05:40.685"/>
</kw>
<status status="PASS" starttime="20210831 13:05:32.431" endtime="20210831 13:05:40.686"/>
</kw>
<msg timestamp="20210831 13:05:40.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:32.429" endtime="20210831 13:05:40.686"/>
</kw>
<status status="PASS" starttime="20210831 13:05:32.429" endtime="20210831 13:05:40.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:05:40.692" level="INFO">Running command 'ozone sh key put 70284-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:08:54.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:08:54.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:05:40.688" endtime="20210831 13:08:54.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:08:54.886" level="INFO"/>
<status status="PASS" starttime="20210831 13:08:54.885" endtime="20210831 13:08:54.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:08:54.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:08:54.886" endtime="20210831 13:08:54.886"/>
</kw>
<status status="PASS" starttime="20210831 13:05:40.687" endtime="20210831 13:08:54.887"/>
</kw>
<msg timestamp="20210831 13:08:54.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:05:40.687" endtime="20210831 13:08:54.887"/>
</kw>
<status status="PASS" starttime="20210831 13:05:40.686" endtime="20210831 13:08:54.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:08:54.894" level="INFO">Running command 'ozone sh bucket create 70284-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:02.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:02.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:08:54.891" endtime="20210831 13:09:02.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:02.868" level="INFO"/>
<status status="PASS" starttime="20210831 13:09:02.867" endtime="20210831 13:09:02.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:02.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:02.868" endtime="20210831 13:09:02.869"/>
</kw>
<status status="PASS" starttime="20210831 13:08:54.890" endtime="20210831 13:09:02.870"/>
</kw>
<msg timestamp="20210831 13:09:02.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:08:54.889" endtime="20210831 13:09:02.870"/>
</kw>
<status status="PASS" starttime="20210831 13:08:54.888" endtime="20210831 13:09:02.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:02.879" level="INFO">Running command 'ozone sh bucket link 70284-source/readable-bucket 70284-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:10.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:10.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:09:02.876" endtime="20210831 13:09:10.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:10.865" level="INFO"/>
<status status="PASS" starttime="20210831 13:09:10.865" endtime="20210831 13:09:10.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:10.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:10.866" endtime="20210831 13:09:10.866"/>
</kw>
<status status="PASS" starttime="20210831 13:09:02.874" endtime="20210831 13:09:10.866"/>
</kw>
<msg timestamp="20210831 13:09:10.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:02.873" endtime="20210831 13:09:10.867"/>
</kw>
<status status="PASS" starttime="20210831 13:09:02.871" endtime="20210831 13:09:10.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:10.871" level="INFO">Running command 'ozone sh bucket link 70284-source/readable-bucket 70284-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:16.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:16.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:09:10.869" endtime="20210831 13:09:16.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:16.425" level="INFO"/>
<status status="PASS" starttime="20210831 13:09:16.424" endtime="20210831 13:09:16.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:16.425" endtime="20210831 13:09:16.426"/>
</kw>
<status status="PASS" starttime="20210831 13:09:10.868" endtime="20210831 13:09:16.426"/>
</kw>
<msg timestamp="20210831 13:09:16.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:10.868" endtime="20210831 13:09:16.426"/>
</kw>
<status status="PASS" starttime="20210831 13:09:10.867" endtime="20210831 13:09:16.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:16.433" level="INFO">Running command 'ozone sh bucket link 70284-source/unreadable-bucket 70284-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:24.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:24.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:09:16.430" endtime="20210831 13:09:24.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:24.052" level="INFO"/>
<status status="PASS" starttime="20210831 13:09:24.050" endtime="20210831 13:09:24.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:24.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:24.052" endtime="20210831 13:09:24.053"/>
</kw>
<status status="PASS" starttime="20210831 13:09:16.429" endtime="20210831 13:09:24.054"/>
</kw>
<msg timestamp="20210831 13:09:24.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:16.429" endtime="20210831 13:09:24.055"/>
</kw>
<status status="PASS" starttime="20210831 13:09:16.427" endtime="20210831 13:09:24.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:24.062" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70284-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:32.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:32.252" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:24.059" endtime="20210831 13:09:32.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:32.253" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:32.252" endtime="20210831 13:09:32.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:32.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:32.253" endtime="20210831 13:09:32.254"/>
</kw>
<status status="PASS" starttime="20210831 13:09:24.058" endtime="20210831 13:09:32.254"/>
</kw>
<msg timestamp="20210831 13:09:32.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:24.057" endtime="20210831 13:09:32.255"/>
</kw>
<status status="PASS" starttime="20210831 13:09:24.056" endtime="20210831 13:09:32.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:32.259" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70284-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:40.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:40.227" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:32.256" endtime="20210831 13:09:40.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:40.229" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:40.228" endtime="20210831 13:09:40.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:40.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:40.230" endtime="20210831 13:09:40.231"/>
</kw>
<status status="PASS" starttime="20210831 13:09:32.256" endtime="20210831 13:09:40.232"/>
</kw>
<msg timestamp="20210831 13:09:40.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:32.256" endtime="20210831 13:09:40.232"/>
</kw>
<status status="PASS" starttime="20210831 13:09:32.255" endtime="20210831 13:09:40.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:40.240" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70284-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:47.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:47.418" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:40.237" endtime="20210831 13:09:47.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:47.421" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:47.419" endtime="20210831 13:09:47.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:47.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:47.421" endtime="20210831 13:09:47.422"/>
</kw>
<status status="PASS" starttime="20210831 13:09:40.236" endtime="20210831 13:09:47.423"/>
</kw>
<msg timestamp="20210831 13:09:47.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:40.236" endtime="20210831 13:09:47.424"/>
</kw>
<status status="PASS" starttime="20210831 13:09:40.234" endtime="20210831 13:09:47.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:47.432" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70284-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:09:52.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:09:52.893" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:47.429" endtime="20210831 13:09:52.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:09:52.894" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:52.893" endtime="20210831 13:09:52.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:09:52.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:09:52.895" endtime="20210831 13:09:52.895"/>
</kw>
<status status="PASS" starttime="20210831 13:09:47.428" endtime="20210831 13:09:52.895"/>
</kw>
<msg timestamp="20210831 13:09:52.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:47.428" endtime="20210831 13:09:52.896"/>
</kw>
<status status="PASS" starttime="20210831 13:09:47.425" endtime="20210831 13:09:52.896"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:09:52.900" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70284-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:00.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:00.494" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:09:52.897" endtime="20210831 13:10:00.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:00.495" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:10:00.495" endtime="20210831 13:10:00.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:00.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:00.496" endtime="20210831 13:10:00.497"/>
</kw>
<status status="PASS" starttime="20210831 13:09:52.897" endtime="20210831 13:10:00.497"/>
</kw>
<msg timestamp="20210831 13:10:00.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:09:52.897" endtime="20210831 13:10:00.498"/>
</kw>
<status status="PASS" starttime="20210831 13:09:52.896" endtime="20210831 13:10:00.498"/>
</kw>
<status status="PASS" starttime="20210831 13:05:32.428" endtime="20210831 13:10:00.499"/>
</kw>
<status status="PASS" starttime="20210831 13:05:32.428" endtime="20210831 13:10:00.499"/>
</kw>
<status status="PASS" starttime="20210831 13:05:16.622" endtime="20210831 13:10:00.500"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:00.511" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:00.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:00.515" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:10:00.508" endtime="20210831 13:10:00.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:00.517" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:10:00.516" endtime="20210831 13:10:00.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:00.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:00.518" endtime="20210831 13:10:00.519"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.507" endtime="20210831 13:10:00.520"/>
</kw>
<msg timestamp="20210831 13:10:00.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:00.507" endtime="20210831 13:10:00.520"/>
</kw>
<msg timestamp="20210831 13:10:00.521" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:10:00.504" endtime="20210831 13:10:00.521"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:10:00.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:10:00.521" endtime="20210831 13:10:00.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:00.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:00.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:00.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:10:00.526" endtime="20210831 13:10:00.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:00.805" level="INFO"/>
<status status="PASS" starttime="20210831 13:10:00.804" endtime="20210831 13:10:00.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:00.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:00.805" endtime="20210831 13:10:00.806"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.525" endtime="20210831 13:10:00.806"/>
</kw>
<msg timestamp="20210831 13:10:00.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:00.525" endtime="20210831 13:10:00.807"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.524" endtime="20210831 13:10:00.807"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.523" endtime="20210831 13:10:00.807"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.503" endtime="20210831 13:10:00.807"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.502" endtime="20210831 13:10:00.807"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:00.811" level="INFO">Running command 'ozone sh bucket link 70284-source/no-such-bucket 70284-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:08.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:08.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:10:00.810" endtime="20210831 13:10:08.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:08.374" level="INFO"/>
<status status="PASS" starttime="20210831 13:10:08.373" endtime="20210831 13:10:08.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:08.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:08.376" endtime="20210831 13:10:08.378"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.809" endtime="20210831 13:10:08.378"/>
</kw>
<msg timestamp="20210831 13:10:08.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:00.809" endtime="20210831 13:10:08.378"/>
</kw>
<status status="PASS" starttime="20210831 13:10:00.808" endtime="20210831 13:10:08.379"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:08.383" level="INFO">Running command 'ozone sh key list 70284-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:15.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:10:15.874" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210831 13:10:08.380" endtime="20210831 13:10:15.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:15.876" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210831 13:10:15.874" endtime="20210831 13:10:15.876"/>
</kw>
<msg timestamp="20210831 13:10:15.877" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210831 13:10:08.379" endtime="20210831 13:10:15.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:10:15.877" endtime="20210831 13:10:15.878"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:10:00.500" endtime="20210831 13:10:15.878"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:15.887" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:15.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:15.892" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:10:15.884" endtime="20210831 13:10:15.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:15.895" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:10:15.893" endtime="20210831 13:10:15.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:15.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:15.895" endtime="20210831 13:10:15.897"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.883" endtime="20210831 13:10:15.898"/>
</kw>
<msg timestamp="20210831 13:10:15.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:15.883" endtime="20210831 13:10:15.898"/>
</kw>
<msg timestamp="20210831 13:10:15.899" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:10:15.882" endtime="20210831 13:10:15.899"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:10:15.901" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:10:15.899" endtime="20210831 13:10:15.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:15.907" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:15.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:15.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:10:15.905" endtime="20210831 13:10:15.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:15.920" level="INFO"/>
<status status="PASS" starttime="20210831 13:10:15.919" endtime="20210831 13:10:15.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:15.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:15.921" endtime="20210831 13:10:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.904" endtime="20210831 13:10:15.922"/>
</kw>
<msg timestamp="20210831 13:10:15.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:15.903" endtime="20210831 13:10:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.902" endtime="20210831 13:10:15.923"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.901" endtime="20210831 13:10:15.923"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.882" endtime="20210831 13:10:15.924"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.881" endtime="20210831 13:10:15.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:15.928" level="INFO">Running command 'ozone sh bucket link 70284-source/bucket1 70284-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:22.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:22.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:10:15.926" endtime="20210831 13:10:22.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:22.549" level="INFO"/>
<status status="PASS" starttime="20210831 13:10:22.548" endtime="20210831 13:10:22.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:22.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:22.549" endtime="20210831 13:10:22.549"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.926" endtime="20210831 13:10:22.550"/>
</kw>
<msg timestamp="20210831 13:10:22.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:15.925" endtime="20210831 13:10:22.550"/>
</kw>
<status status="PASS" starttime="20210831 13:10:15.924" endtime="20210831 13:10:22.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:22.554" level="INFO">Running command 'ozone sh bucket create 70284-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:10:28.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:10:28.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:10:22.552" endtime="20210831 13:10:28.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:10:28.262" level="INFO"/>
<status status="PASS" starttime="20210831 13:10:28.261" endtime="20210831 13:10:28.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:10:28.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:10:28.262" endtime="20210831 13:10:28.262"/>
</kw>
<status status="PASS" starttime="20210831 13:10:22.551" endtime="20210831 13:10:28.263"/>
</kw>
<msg timestamp="20210831 13:10:28.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:10:22.551" endtime="20210831 13:10:28.263"/>
</kw>
<status status="PASS" starttime="20210831 13:10:22.550" endtime="20210831 13:10:28.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:10:28.268" level="INFO">Running command 'ozone sh key put 70284-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:12:15.881" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:10:28.266" endtime="20210831 13:12:15.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:12:15.882" endtime="20210831 13:12:15.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:12:15.883" endtime="20210831 13:12:15.883"/>
</kw>
<status status="FAIL" starttime="20210831 13:10:28.265" endtime="20210831 13:12:15.883"/>
</kw>
<msg timestamp="20210831 13:12:15.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:10:28.264" endtime="20210831 13:12:15.883"/>
</kw>
<status status="FAIL" starttime="20210831 13:10:28.263" endtime="20210831 13:12:15.883"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210831 13:12:15.884" endtime="20210831 13:12:15.884"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210831 13:10:15.880" endtime="20210831 13:12:15.884">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:12:15.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:12:15.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:12:15.897" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:12:15.890" endtime="20210831 13:12:15.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:12:15.898" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:12:15.897" endtime="20210831 13:12:15.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:12:15.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:12:15.899" endtime="20210831 13:12:15.900"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.889" endtime="20210831 13:12:15.900"/>
</kw>
<msg timestamp="20210831 13:12:15.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:12:15.889" endtime="20210831 13:12:15.901"/>
</kw>
<msg timestamp="20210831 13:12:15.902" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:12:15.888" endtime="20210831 13:12:15.902"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:12:15.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:12:15.902" endtime="20210831 13:12:15.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:12:15.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:12:15.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:12:15.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:12:15.908" endtime="20210831 13:12:15.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:12:15.920" level="INFO"/>
<status status="PASS" starttime="20210831 13:12:15.919" endtime="20210831 13:12:15.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:12:15.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:12:15.920" endtime="20210831 13:12:15.921"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.907" endtime="20210831 13:12:15.922"/>
</kw>
<msg timestamp="20210831 13:12:15.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:12:15.907" endtime="20210831 13:12:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.906" endtime="20210831 13:12:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.906" endtime="20210831 13:12:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.887" endtime="20210831 13:12:15.922"/>
</kw>
<status status="PASS" starttime="20210831 13:12:15.886" endtime="20210831 13:12:15.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:12:15.926" level="INFO">Running command 'ozone sh key put 70284-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:15.887" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:12:15.924" endtime="20210831 13:14:15.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:14:15.889" endtime="20210831 13:14:15.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:14:15.890" endtime="20210831 13:14:15.890"/>
</kw>
<status status="FAIL" starttime="20210831 13:12:15.924" endtime="20210831 13:14:15.890"/>
</kw>
<msg timestamp="20210831 13:14:15.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:12:15.923" endtime="20210831 13:14:15.890"/>
</kw>
<status status="FAIL" starttime="20210831 13:12:15.923" endtime="20210831 13:14:15.891"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210831 13:14:15.891" endtime="20210831 13:14:15.891"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210831 13:12:15.885" endtime="20210831 13:14:15.891">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:15.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:15.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:15.906" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:14:15.898" endtime="20210831 13:14:15.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:15.908" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:14:15.906" endtime="20210831 13:14:15.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:15.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:15.908" endtime="20210831 13:14:15.909"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.898" endtime="20210831 13:14:15.910"/>
</kw>
<msg timestamp="20210831 13:14:15.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:15.897" endtime="20210831 13:14:15.910"/>
</kw>
<msg timestamp="20210831 13:14:15.911" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:14:15.897" endtime="20210831 13:14:15.911"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:14:15.912" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:14:15.911" endtime="20210831 13:14:15.913"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:15.920" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:15.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:15.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:14:15.917" endtime="20210831 13:14:15.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:15.931" level="INFO"/>
<status status="PASS" starttime="20210831 13:14:15.930" endtime="20210831 13:14:15.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:15.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:15.932" endtime="20210831 13:14:15.933"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.916" endtime="20210831 13:14:15.933"/>
</kw>
<msg timestamp="20210831 13:14:15.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:15.915" endtime="20210831 13:14:15.934"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.914" endtime="20210831 13:14:15.934"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.913" endtime="20210831 13:14:15.935"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.895" endtime="20210831 13:14:15.935"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.894" endtime="20210831 13:14:15.935"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:15.940" level="INFO">Running command 'ozone sh key list 70284-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:23.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:23.844" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210831 13:14:15.938" endtime="20210831 13:14:23.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:23.846" level="INFO">key1</msg>
<status status="PASS" starttime="20210831 13:14:23.845" endtime="20210831 13:14:23.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:23.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:23.846" endtime="20210831 13:14:23.847"/>
</kw>
<status status="PASS" starttime="20210831 13:14:15.937" endtime="20210831 13:14:23.847"/>
</kw>
<msg timestamp="20210831 13:14:23.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:15.936" endtime="20210831 13:14:23.848"/>
</kw>
<msg timestamp="20210831 13:14:23.848" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210831 13:14:15.935" endtime="20210831 13:14:23.848"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:23.853" level="INFO">Running command 'ozone sh key list 70284-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:31.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:31.993" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210831 13:14:23.850" endtime="20210831 13:14:31.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:31.994" level="INFO">key1</msg>
<status status="PASS" starttime="20210831 13:14:31.994" endtime="20210831 13:14:31.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:31.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:31.995" endtime="20210831 13:14:31.995"/>
</kw>
<status status="PASS" starttime="20210831 13:14:23.850" endtime="20210831 13:14:31.995"/>
</kw>
<msg timestamp="20210831 13:14:31.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:23.849" endtime="20210831 13:14:31.996"/>
</kw>
<msg timestamp="20210831 13:14:31.996" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210831 13:14:23.848" endtime="20210831 13:14:31.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:14:31.997" endtime="20210831 13:14:31.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:31.998" endtime="20210831 13:14:31.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210831 13:14:31.999" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210831 13:14:31.998" endtime="20210831 13:14:31.999"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210831 13:14:15.893" endtime="20210831 13:14:31.999">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:32.011" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:32.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:32.019" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:14:32.008" endtime="20210831 13:14:32.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:32.022" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:14:32.020" endtime="20210831 13:14:32.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:32.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:32.023" endtime="20210831 13:14:32.024"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.007" endtime="20210831 13:14:32.025"/>
</kw>
<msg timestamp="20210831 13:14:32.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:32.006" endtime="20210831 13:14:32.025"/>
</kw>
<msg timestamp="20210831 13:14:32.026" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:14:32.005" endtime="20210831 13:14:32.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:14:32.027" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:14:32.026" endtime="20210831 13:14:32.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:32.033" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:32.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:32.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:14:32.031" endtime="20210831 13:14:32.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:32.048" level="INFO"/>
<status status="PASS" starttime="20210831 13:14:32.046" endtime="20210831 13:14:32.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:32.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:32.048" endtime="20210831 13:14:32.049"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.030" endtime="20210831 13:14:32.050"/>
</kw>
<msg timestamp="20210831 13:14:32.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:32.029" endtime="20210831 13:14:32.050"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.028" endtime="20210831 13:14:32.051"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.028" endtime="20210831 13:14:32.051"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.003" endtime="20210831 13:14:32.051"/>
</kw>
<status status="PASS" starttime="20210831 13:14:32.002" endtime="20210831 13:14:32.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:32.058" level="INFO">Running command 'ozone sh key delete 70284-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:37.613" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:14:37.614" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210831 13:14:32.054" endtime="20210831 13:14:37.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:37.617" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210831 13:14:37.615" endtime="20210831 13:14:37.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:37.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210831 13:14:37.619" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210831 13:14:37.617" endtime="20210831 13:14:37.619"/>
</kw>
<status status="FAIL" starttime="20210831 13:14:32.053" endtime="20210831 13:14:37.620"/>
</kw>
<msg timestamp="20210831 13:14:37.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:14:32.053" endtime="20210831 13:14:37.620"/>
</kw>
<status status="FAIL" starttime="20210831 13:14:32.051" endtime="20210831 13:14:37.621"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210831 13:14:37.621" endtime="20210831 13:14:37.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:14:37.622" endtime="20210831 13:14:37.622"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210831 13:14:32.000" endtime="20210831 13:14:37.622">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:37.633" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:37.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:37.638" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:14:37.630" endtime="20210831 13:14:37.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:37.639" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:14:37.638" endtime="20210831 13:14:37.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:37.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:37.640" endtime="20210831 13:14:37.641"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.628" endtime="20210831 13:14:37.641"/>
</kw>
<msg timestamp="20210831 13:14:37.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:37.628" endtime="20210831 13:14:37.641"/>
</kw>
<msg timestamp="20210831 13:14:37.642" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:14:37.627" endtime="20210831 13:14:37.642"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:14:37.643" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:14:37.642" endtime="20210831 13:14:37.643"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:37.653" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:37.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:37.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:14:37.646" endtime="20210831 13:14:37.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:37.665" level="INFO"/>
<status status="PASS" starttime="20210831 13:14:37.664" endtime="20210831 13:14:37.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:37.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:37.665" endtime="20210831 13:14:37.666"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.645" endtime="20210831 13:14:37.667"/>
</kw>
<msg timestamp="20210831 13:14:37.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:37.645" endtime="20210831 13:14:37.667"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.644" endtime="20210831 13:14:37.667"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.643" endtime="20210831 13:14:37.667"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.626" endtime="20210831 13:14:37.667"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.625" endtime="20210831 13:14:37.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:37.672" level="INFO">Running command 'ozone sh bucket list 70284-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:46.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:46.022" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210831 13:14:37.670" endtime="20210831 13:14:46.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:46.025" level="INFO">{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:10:08.074Z",
  "modificationTime" : "2021-08-31T13:10:08.074Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:23.747Z",
  "modificationTime" : "2021-08-31T13:10:00.165Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:10:22.349Z",
  "modificationTime" : "2021-08-31T13:10:22.349Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:10.673Z",
  "modificationTime" : "2021-08-31T13:09:52.790Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:16.170Z",
  "modificationTime" : "2021-08-31T13:09:16.170Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210831 13:14:46.024" endtime="20210831 13:14:46.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:46.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:46.026" endtime="20210831 13:14:46.027"/>
</kw>
<status status="PASS" starttime="20210831 13:14:37.669" endtime="20210831 13:14:46.027"/>
</kw>
<msg timestamp="20210831 13:14:46.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:37.669" endtime="20210831 13:14:46.028"/>
</kw>
<msg timestamp="20210831 13:14:46.029" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210831 13:14:37.668" endtime="20210831 13:14:46.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:46.029" endtime="20210831 13:14:46.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:46.030" endtime="20210831 13:14:46.031"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:14:37.624" endtime="20210831 13:14:46.032"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:46.044" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:46.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:46.050" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:14:46.041" endtime="20210831 13:14:46.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:46.053" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:14:46.051" endtime="20210831 13:14:46.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:46.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:46.053" endtime="20210831 13:14:46.054"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.040" endtime="20210831 13:14:46.055"/>
</kw>
<msg timestamp="20210831 13:14:46.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:46.039" endtime="20210831 13:14:46.056"/>
</kw>
<msg timestamp="20210831 13:14:46.057" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:14:46.037" endtime="20210831 13:14:46.057"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:14:46.058" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:14:46.057" endtime="20210831 13:14:46.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:46.066" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:46.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:46.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:14:46.063" endtime="20210831 13:14:46.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:46.078" level="INFO"/>
<status status="PASS" starttime="20210831 13:14:46.077" endtime="20210831 13:14:46.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:46.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:46.078" endtime="20210831 13:14:46.079"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.062" endtime="20210831 13:14:46.079"/>
</kw>
<msg timestamp="20210831 13:14:46.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:46.061" endtime="20210831 13:14:46.080"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.059" endtime="20210831 13:14:46.080"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.058" endtime="20210831 13:14:46.080"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.036" endtime="20210831 13:14:46.080"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.035" endtime="20210831 13:14:46.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:46.085" level="INFO">Running command 'ozone sh bucket info 70284-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:52.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:52.698" level="INFO">${output} = {
  "volumeName" : "70284-target",
  "bucketName" : "link1",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-31T13:10:22.349Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210831 13:14:46.083" endtime="20210831 13:14:52.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:52.699" level="INFO">{
  "volumeName" : "70284-target",
  "bucketName" : "link1",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-31T13:10:22.349Z",
  "modificationTime" : "2021-08-31T13:10:22.349Z"
}</msg>
<status status="PASS" starttime="20210831 13:14:52.698" endtime="20210831 13:14:52.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:52.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:52.699" endtime="20210831 13:14:52.700"/>
</kw>
<status status="PASS" starttime="20210831 13:14:46.082" endtime="20210831 13:14:52.701"/>
</kw>
<msg timestamp="20210831 13:14:52.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:46.081" endtime="20210831 13:14:52.701"/>
</kw>
<msg timestamp="20210831 13:14:52.701" level="INFO">${result} = {
  "volumeName" : "70284-target",
  "bucketName" : "link1",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-31T13:10:22.349Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210831 13:14:46.081" endtime="20210831 13:14:52.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.701" endtime="20210831 13:14:52.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.702" endtime="20210831 13:14:52.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.702" endtime="20210831 13:14:52.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.703" endtime="20210831 13:14:52.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.704" endtime="20210831 13:14:52.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.705" endtime="20210831 13:14:52.705"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:14:52.705" endtime="20210831 13:14:52.706"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:14:46.033" endtime="20210831 13:14:52.706"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:52.714" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:52.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:52.721" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:14:52.711" endtime="20210831 13:14:52.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:52.722" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:14:52.721" endtime="20210831 13:14:52.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:52.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:52.723" endtime="20210831 13:14:52.723"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.710" endtime="20210831 13:14:52.723"/>
</kw>
<msg timestamp="20210831 13:14:52.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:52.710" endtime="20210831 13:14:52.724"/>
</kw>
<msg timestamp="20210831 13:14:52.724" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:14:52.709" endtime="20210831 13:14:52.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:14:52.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:14:52.724" endtime="20210831 13:14:52.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:52.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:52.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:52.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:14:52.728" endtime="20210831 13:14:52.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:52.738" level="INFO"/>
<status status="PASS" starttime="20210831 13:14:52.738" endtime="20210831 13:14:52.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:52.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:52.739" endtime="20210831 13:14:52.739"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.727" endtime="20210831 13:14:52.740"/>
</kw>
<msg timestamp="20210831 13:14:52.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:52.726" endtime="20210831 13:14:52.740"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.726" endtime="20210831 13:14:52.740"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.725" endtime="20210831 13:14:52.740"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.709" endtime="20210831 13:14:52.740"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.708" endtime="20210831 13:14:52.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:52.744" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 70284-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:14:58.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:14:58.274" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:14:52.742" endtime="20210831 13:14:58.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:14:58.275" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:14:58.274" endtime="20210831 13:14:58.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:14:58.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:14:58.275" endtime="20210831 13:14:58.276"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.742" endtime="20210831 13:14:58.277"/>
</kw>
<msg timestamp="20210831 13:14:58.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:52.741" endtime="20210831 13:14:58.277"/>
</kw>
<status status="PASS" starttime="20210831 13:14:52.741" endtime="20210831 13:14:58.277"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:14:58.284" level="INFO">Running command 'ozone sh bucket getacl 70284-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:04.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:04.379" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210831 13:14:58.281" endtime="20210831 13:15:04.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:04.381" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210831 13:15:04.380" endtime="20210831 13:15:04.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:04.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:04.381" endtime="20210831 13:15:04.382"/>
</kw>
<status status="PASS" starttime="20210831 13:14:58.280" endtime="20210831 13:15:04.382"/>
</kw>
<msg timestamp="20210831 13:15:04.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:14:58.280" endtime="20210831 13:15:04.383"/>
</kw>
<msg timestamp="20210831 13:15:04.383" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210831 13:14:58.278" endtime="20210831 13:15:04.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:15:04.384" endtime="20210831 13:15:04.384"/>
</kw>
<status status="PASS" starttime="20210831 13:14:58.277" endtime="20210831 13:15:04.385"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:04.394" level="INFO">Running command 'ozone sh bucket getacl 70284-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:12.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:12.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:15:04.392" endtime="20210831 13:15:12.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:12.365" level="INFO"/>
<status status="PASS" starttime="20210831 13:15:12.362" endtime="20210831 13:15:12.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:12.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:12.365" endtime="20210831 13:15:12.366"/>
</kw>
<status status="PASS" starttime="20210831 13:15:04.391" endtime="20210831 13:15:12.366"/>
</kw>
<msg timestamp="20210831 13:15:12.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:04.391" endtime="20210831 13:15:12.366"/>
</kw>
<msg timestamp="20210831 13:15:12.367" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210831 13:15:04.389" endtime="20210831 13:15:12.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:15:12.367" endtime="20210831 13:15:12.368"/>
</kw>
<status status="PASS" starttime="20210831 13:15:04.385" endtime="20210831 13:15:12.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:12.372" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 70284-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:20.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:20.002" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:15:12.370" endtime="20210831 13:15:20.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:20.004" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:15:20.003" endtime="20210831 13:15:20.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:20.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:20.005" endtime="20210831 13:15:20.006"/>
</kw>
<status status="PASS" starttime="20210831 13:15:12.369" endtime="20210831 13:15:20.006"/>
</kw>
<msg timestamp="20210831 13:15:20.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:12.369" endtime="20210831 13:15:20.007"/>
</kw>
<status status="PASS" starttime="20210831 13:15:12.368" endtime="20210831 13:15:20.007"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:20.016" level="INFO">Running command 'ozone sh bucket getacl 70284-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:28.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:28.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:15:20.014" endtime="20210831 13:15:28.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:28.004" level="INFO"/>
<status status="PASS" starttime="20210831 13:15:28.002" endtime="20210831 13:15:28.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:28.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:28.004" endtime="20210831 13:15:28.005"/>
</kw>
<status status="PASS" starttime="20210831 13:15:20.013" endtime="20210831 13:15:28.006"/>
</kw>
<msg timestamp="20210831 13:15:28.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:20.012" endtime="20210831 13:15:28.006"/>
</kw>
<msg timestamp="20210831 13:15:28.007" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210831 13:15:20.010" endtime="20210831 13:15:28.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:15:28.007" endtime="20210831 13:15:28.008"/>
</kw>
<status status="PASS" starttime="20210831 13:15:20.008" endtime="20210831 13:15:28.009"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:28.017" level="INFO">Running command 'ozone sh bucket getacl 70284-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:36.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:36.326" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210831 13:15:28.014" endtime="20210831 13:15:36.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:36.327" level="INFO">READ</msg>
<status status="PASS" starttime="20210831 13:15:36.326" endtime="20210831 13:15:36.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:36.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:36.327" endtime="20210831 13:15:36.328"/>
</kw>
<status status="PASS" starttime="20210831 13:15:28.012" endtime="20210831 13:15:36.329"/>
</kw>
<msg timestamp="20210831 13:15:36.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:28.012" endtime="20210831 13:15:36.329"/>
</kw>
<msg timestamp="20210831 13:15:36.329" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210831 13:15:28.010" endtime="20210831 13:15:36.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:15:36.330" endtime="20210831 13:15:36.330"/>
</kw>
<status status="PASS" starttime="20210831 13:15:28.009" endtime="20210831 13:15:36.331"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:14:52.707" endtime="20210831 13:15:36.331"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:36.339" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:36.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:36.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:15:36.336" endtime="20210831 13:15:36.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:36.344" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:15:36.343" endtime="20210831 13:15:36.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:36.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:36.344" endtime="20210831 13:15:36.345"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.335" endtime="20210831 13:15:36.345"/>
</kw>
<msg timestamp="20210831 13:15:36.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:36.335" endtime="20210831 13:15:36.346"/>
</kw>
<msg timestamp="20210831 13:15:36.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:15:36.334" endtime="20210831 13:15:36.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:15:36.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:15:36.346" endtime="20210831 13:15:36.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:36.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:36.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:36.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:15:36.349" endtime="20210831 13:15:36.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:36.503" level="INFO"/>
<status status="PASS" starttime="20210831 13:15:36.502" endtime="20210831 13:15:36.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:36.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:36.503" endtime="20210831 13:15:36.504"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.348" endtime="20210831 13:15:36.504"/>
</kw>
<msg timestamp="20210831 13:15:36.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:36.348" endtime="20210831 13:15:36.505"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.347" endtime="20210831 13:15:36.505"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.347" endtime="20210831 13:15:36.505"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.334" endtime="20210831 13:15:36.505"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.333" endtime="20210831 13:15:36.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:36.509" level="INFO">Running command 'ozone sh bucket link 70284-source/bucket2 70284-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:44.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:15:44.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:15:36.507" endtime="20210831 13:15:44.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:44.346" level="INFO"/>
<status status="PASS" starttime="20210831 13:15:44.345" endtime="20210831 13:15:44.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:15:44.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:15:44.346" endtime="20210831 13:15:44.347"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.506" endtime="20210831 13:15:44.348"/>
</kw>
<msg timestamp="20210831 13:15:44.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:36.506" endtime="20210831 13:15:44.348"/>
</kw>
<status status="PASS" starttime="20210831 13:15:36.505" endtime="20210831 13:15:44.348"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:44.351" level="INFO">Running command 'ozone sh bucket create 70284-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:15:51.647" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:15:51.647" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:15:44.349" endtime="20210831 13:15:51.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:15:51.649" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:15:51.648" endtime="20210831 13:15:51.649"/>
</kw>
<msg timestamp="20210831 13:15:51.650" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:15:44.348" endtime="20210831 13:15:51.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:15:51.650" endtime="20210831 13:15:51.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:15:51.657" level="INFO">Running command 'ozone sh bucket create 70284-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:00.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:00.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:15:51.655" endtime="20210831 13:16:00.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:00.371" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:00.371" endtime="20210831 13:16:00.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:00.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:00.372" endtime="20210831 13:16:00.373"/>
</kw>
<status status="PASS" starttime="20210831 13:15:51.654" endtime="20210831 13:16:00.374"/>
</kw>
<msg timestamp="20210831 13:16:00.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:15:51.654" endtime="20210831 13:16:00.375"/>
</kw>
<status status="PASS" starttime="20210831 13:15:51.652" endtime="20210831 13:16:00.375"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:00.380" level="INFO">Running command 'ozone sh bucket link 70284-source/bucket1 70284-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:16:07.251" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:16:00.377" endtime="20210831 13:16:07.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.254" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:16:07.253" endtime="20210831 13:16:07.254"/>
</kw>
<msg timestamp="20210831 13:16:07.255" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210831 13:16:00.375" endtime="20210831 13:16:07.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:07.255" endtime="20210831 13:16:07.255"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:15:36.332" endtime="20210831 13:16:07.256"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.268" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:07.273" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:07.264" endtime="20210831 13:16:07.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.274" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:07.273" endtime="20210831 13:16:07.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:07.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:07.274" endtime="20210831 13:16:07.275"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.263" endtime="20210831 13:16:07.276"/>
</kw>
<msg timestamp="20210831 13:16:07.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:07.262" endtime="20210831 13:16:07.276"/>
</kw>
<msg timestamp="20210831 13:16:07.277" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:07.261" endtime="20210831 13:16:07.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:07.278" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:07.277" endtime="20210831 13:16:07.278"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:07.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:07.282" endtime="20210831 13:16:07.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.295" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:07.294" endtime="20210831 13:16:07.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:07.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:07.296" endtime="20210831 13:16:07.297"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.281" endtime="20210831 13:16:07.297"/>
</kw>
<msg timestamp="20210831 13:16:07.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:07.280" endtime="20210831 13:16:07.298"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.279" endtime="20210831 13:16:07.298"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.279" endtime="20210831 13:16:07.298"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.260" endtime="20210831 13:16:07.299"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.259" endtime="20210831 13:16:07.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.305" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:07.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:07.303" endtime="20210831 13:16:07.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.312" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:07.311" endtime="20210831 13:16:07.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:07.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:07.312" endtime="20210831 13:16:07.313"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.302" endtime="20210831 13:16:07.313"/>
</kw>
<msg timestamp="20210831 13:16:07.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:07.301" endtime="20210831 13:16:07.314"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.301" endtime="20210831 13:16:07.314"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.322" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:07.327" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:07.317" endtime="20210831 13:16:07.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.329" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:07.328" endtime="20210831 13:16:07.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:07.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:07.329" endtime="20210831 13:16:07.331"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.317" endtime="20210831 13:16:07.331"/>
</kw>
<msg timestamp="20210831 13:16:07.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:07.316" endtime="20210831 13:16:07.332"/>
</kw>
<msg timestamp="20210831 13:16:07.332" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:07.316" endtime="20210831 13:16:07.332"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:07.333" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:07.333" endtime="20210831 13:16:07.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.340" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:07.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:07.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:07.337" endtime="20210831 13:16:07.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:07.351" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:07.350" endtime="20210831 13:16:07.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:07.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:07.351" endtime="20210831 13:16:07.352"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.336" endtime="20210831 13:16:07.353"/>
</kw>
<msg timestamp="20210831 13:16:07.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:07.335" endtime="20210831 13:16:07.353"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.334" endtime="20210831 13:16:07.354"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.334" endtime="20210831 13:16:07.354"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.315" endtime="20210831 13:16:07.354"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.314" endtime="20210831 13:16:07.354"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:07.357" level="INFO">Running command 'ozone sh key list 70284-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.376" level="INFO">${output} = {
  "volumeName" : "70284-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-31T13:05:49.953Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210831 13:16:07.355" endtime="20210831 13:16:15.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.377" level="INFO">{
  "volumeName" : "70284-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-31T13:05:49.953Z",
  "modificationTime" : "2021-08-31T13:08:53.843Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210831 13:16:15.377" endtime="20210831 13:16:15.378"/>
</kw>
<msg timestamp="20210831 13:16:15.378" level="INFO">${result} = {
  "volumeName" : "70284-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-31T13:05:49.953Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210831 13:16:07.354" endtime="20210831 13:16:15.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:15.378" endtime="20210831 13:16:15.379"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.300" endtime="20210831 13:16:15.379"/>
</kw>
<status status="PASS" starttime="20210831 13:16:07.299" endtime="20210831 13:16:15.379"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:16:07.256" endtime="20210831 13:16:15.379"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:15.385" endtime="20210831 13:16:15.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.393" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:15.392" endtime="20210831 13:16:15.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:15.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:15.393" endtime="20210831 13:16:15.394"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.384" endtime="20210831 13:16:15.394"/>
</kw>
<msg timestamp="20210831 13:16:15.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:15.383" endtime="20210831 13:16:15.395"/>
</kw>
<msg timestamp="20210831 13:16:15.395" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:15.383" endtime="20210831 13:16:15.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:15.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:15.395" endtime="20210831 13:16:15.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:15.399" endtime="20210831 13:16:15.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.411" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:15.410" endtime="20210831 13:16:15.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:15.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:15.413" endtime="20210831 13:16:15.413"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.398" endtime="20210831 13:16:15.414"/>
</kw>
<msg timestamp="20210831 13:16:15.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:15.398" endtime="20210831 13:16:15.414"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.397" endtime="20210831 13:16:15.414"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.396" endtime="20210831 13:16:15.414"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.382" endtime="20210831 13:16:15.415"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.382" endtime="20210831 13:16:15.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.420" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:15.418" endtime="20210831 13:16:15.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.428" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:15.427" endtime="20210831 13:16:15.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:15.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:15.428" endtime="20210831 13:16:15.429"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.417" endtime="20210831 13:16:15.429"/>
</kw>
<msg timestamp="20210831 13:16:15.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:15.417" endtime="20210831 13:16:15.429"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.416" endtime="20210831 13:16:15.429"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.434" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.439" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:15.432" endtime="20210831 13:16:15.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.440" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:15.440" endtime="20210831 13:16:15.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:15.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:15.441" endtime="20210831 13:16:15.441"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.431" endtime="20210831 13:16:15.442"/>
</kw>
<msg timestamp="20210831 13:16:15.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:15.431" endtime="20210831 13:16:15.442"/>
</kw>
<msg timestamp="20210831 13:16:15.442" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:15.430" endtime="20210831 13:16:15.442"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:15.443" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:15.442" endtime="20210831 13:16:15.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.447" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:15.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:15.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:15.445" endtime="20210831 13:16:15.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:15.463" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:15.462" endtime="20210831 13:16:15.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:15.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:15.463" endtime="20210831 13:16:15.464"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.445" endtime="20210831 13:16:15.464"/>
</kw>
<msg timestamp="20210831 13:16:15.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:15.445" endtime="20210831 13:16:15.465"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.444" endtime="20210831 13:16:15.465"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.443" endtime="20210831 13:16:15.465"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.430" endtime="20210831 13:16:15.466"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.429" endtime="20210831 13:16:15.466"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:15.469" level="INFO">Running command 'ozone sh key list 70284-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.511" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:16:22.511" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70284-target unreadable-link null</msg>
<status status="PASS" starttime="20210831 13:16:15.467" endtime="20210831 13:16:22.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.513" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70284-target unreadable-link null</msg>
<status status="PASS" starttime="20210831 13:16:22.512" endtime="20210831 13:16:22.513"/>
</kw>
<msg timestamp="20210831 13:16:22.514" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70284-target unreadable-link null</msg>
<status status="PASS" starttime="20210831 13:16:15.466" endtime="20210831 13:16:22.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:22.514" endtime="20210831 13:16:22.515"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.416" endtime="20210831 13:16:22.515"/>
</kw>
<status status="PASS" starttime="20210831 13:16:15.415" endtime="20210831 13:16:22.515"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:16:15.380" endtime="20210831 13:16:22.515"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:22.529" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:22.522" endtime="20210831 13:16:22.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.530" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:22.529" endtime="20210831 13:16:22.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:22.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:22.530" endtime="20210831 13:16:22.531"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.521" endtime="20210831 13:16:22.531"/>
</kw>
<msg timestamp="20210831 13:16:22.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.520" endtime="20210831 13:16:22.532"/>
</kw>
<msg timestamp="20210831 13:16:22.532" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:22.519" endtime="20210831 13:16:22.532"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:22.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:22.532" endtime="20210831 13:16:22.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:22.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:22.536" endtime="20210831 13:16:22.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.550" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:22.549" endtime="20210831 13:16:22.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:22.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:22.551" endtime="20210831 13:16:22.551"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.535" endtime="20210831 13:16:22.552"/>
</kw>
<msg timestamp="20210831 13:16:22.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.535" endtime="20210831 13:16:22.552"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.534" endtime="20210831 13:16:22.553"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.534" endtime="20210831 13:16:22.553"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.519" endtime="20210831 13:16:22.553"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.518" endtime="20210831 13:16:22.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.559" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:22.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:22.557" endtime="20210831 13:16:22.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.566" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:22.565" endtime="20210831 13:16:22.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:22.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:22.566" endtime="20210831 13:16:22.567"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.556" endtime="20210831 13:16:22.568"/>
</kw>
<msg timestamp="20210831 13:16:22.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.556" endtime="20210831 13:16:22.568"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.555" endtime="20210831 13:16:22.569"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.574" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:22.579" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:22.572" endtime="20210831 13:16:22.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.580" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:22.579" endtime="20210831 13:16:22.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:22.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:22.581" endtime="20210831 13:16:22.581"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.571" endtime="20210831 13:16:22.582"/>
</kw>
<msg timestamp="20210831 13:16:22.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.571" endtime="20210831 13:16:22.582"/>
</kw>
<msg timestamp="20210831 13:16:22.583" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:22.570" endtime="20210831 13:16:22.583"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:22.584" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:22.583" endtime="20210831 13:16:22.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.589" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:22.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:22.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:22.587" endtime="20210831 13:16:22.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:22.600" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:22.599" endtime="20210831 13:16:22.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:22.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:22.601" endtime="20210831 13:16:22.602"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.586" endtime="20210831 13:16:22.605"/>
</kw>
<msg timestamp="20210831 13:16:22.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.586" endtime="20210831 13:16:22.605"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.585" endtime="20210831 13:16:22.605"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.584" endtime="20210831 13:16:22.606"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.569" endtime="20210831 13:16:22.606"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.569" endtime="20210831 13:16:22.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:22.611" level="INFO">Running command 'ozone sh bucket info 70284-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:29.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:29.823" level="INFO">${output} = {
  "volumeName" : "70284-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-31T13:09:23.747Z...</msg>
<status status="PASS" starttime="20210831 13:16:22.609" endtime="20210831 13:16:29.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:29.824" level="INFO">{
  "volumeName" : "70284-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-31T13:09:23.747Z",
  "modificationTime" : "2021-08-31T13:10:00.165Z"
}</msg>
<status status="PASS" starttime="20210831 13:16:29.823" endtime="20210831 13:16:29.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:29.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:29.825" endtime="20210831 13:16:29.826"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.608" endtime="20210831 13:16:29.826"/>
</kw>
<msg timestamp="20210831 13:16:29.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:22.608" endtime="20210831 13:16:29.826"/>
</kw>
<msg timestamp="20210831 13:16:29.827" level="INFO">${result} = {
  "volumeName" : "70284-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-31T13:09:23.747Z...</msg>
<status status="PASS" starttime="20210831 13:16:22.607" endtime="20210831 13:16:29.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:29.827" endtime="20210831 13:16:29.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:29.828" endtime="20210831 13:16:29.829"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:29.833" level="INFO">Running command 'ozone sh key list 70284-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:35.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:16:35.495" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70284-source unreadable-bucket </msg>
<status status="PASS" starttime="20210831 13:16:29.830" endtime="20210831 13:16:35.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:35.496" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70284-source unreadable-bucket </msg>
<status status="PASS" starttime="20210831 13:16:35.496" endtime="20210831 13:16:35.496"/>
</kw>
<msg timestamp="20210831 13:16:35.497" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70284-source unreadable-bucket </msg>
<status status="PASS" starttime="20210831 13:16:29.829" endtime="20210831 13:16:35.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:16:35.497" endtime="20210831 13:16:35.498"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.554" endtime="20210831 13:16:35.498"/>
</kw>
<status status="PASS" starttime="20210831 13:16:22.554" endtime="20210831 13:16:35.498"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:16:22.517" endtime="20210831 13:16:35.498"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:35.505" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:35.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:35.508" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:16:35.503" endtime="20210831 13:16:35.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:35.509" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:16:35.509" endtime="20210831 13:16:35.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:35.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:35.510" endtime="20210831 13:16:35.510"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.502" endtime="20210831 13:16:35.511"/>
</kw>
<msg timestamp="20210831 13:16:35.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:35.501" endtime="20210831 13:16:35.511"/>
</kw>
<msg timestamp="20210831 13:16:35.511" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:16:35.501" endtime="20210831 13:16:35.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:16:35.512" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:16:35.511" endtime="20210831 13:16:35.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:35.516" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:35.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:35.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:35.514" endtime="20210831 13:16:35.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:35.561" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:35.560" endtime="20210831 13:16:35.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:35.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:35.561" endtime="20210831 13:16:35.562"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.514" endtime="20210831 13:16:35.562"/>
</kw>
<msg timestamp="20210831 13:16:35.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:35.513" endtime="20210831 13:16:35.563"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.513" endtime="20210831 13:16:35.563"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.512" endtime="20210831 13:16:35.563"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.500" endtime="20210831 13:16:35.563"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.500" endtime="20210831 13:16:35.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:35.567" level="INFO">Running command 'ozone sh bucket link 70284-target/loop1 70284-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:43.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:43.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:35.565" endtime="20210831 13:16:43.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:43.139" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:43.138" endtime="20210831 13:16:43.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:43.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:43.139" endtime="20210831 13:16:43.139"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.564" endtime="20210831 13:16:43.140"/>
</kw>
<msg timestamp="20210831 13:16:43.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:35.564" endtime="20210831 13:16:43.140"/>
</kw>
<status status="PASS" starttime="20210831 13:16:35.563" endtime="20210831 13:16:43.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:43.146" level="INFO">Running command 'ozone sh bucket link 70284-target/loop2 70284-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:49.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:49.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:43.142" endtime="20210831 13:16:49.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:49.209" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:49.208" endtime="20210831 13:16:49.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:49.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:49.209" endtime="20210831 13:16:49.209"/>
</kw>
<status status="PASS" starttime="20210831 13:16:43.142" endtime="20210831 13:16:49.210"/>
</kw>
<msg timestamp="20210831 13:16:49.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:43.141" endtime="20210831 13:16:49.210"/>
</kw>
<status status="PASS" starttime="20210831 13:16:43.141" endtime="20210831 13:16:49.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:49.215" level="INFO">Running command 'ozone sh bucket link 70284-target/loop3 70284-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:16:56.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:16:56.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:16:49.212" endtime="20210831 13:16:56.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:16:56.581" level="INFO"/>
<status status="PASS" starttime="20210831 13:16:56.579" endtime="20210831 13:16:56.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:16:56.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:16:56.581" endtime="20210831 13:16:56.582"/>
</kw>
<status status="PASS" starttime="20210831 13:16:49.211" endtime="20210831 13:16:56.584"/>
</kw>
<msg timestamp="20210831 13:16:56.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:16:49.211" endtime="20210831 13:16:56.584"/>
</kw>
<status status="PASS" starttime="20210831 13:16:49.210" endtime="20210831 13:16:56.587"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:16:56.590" level="INFO">Running command 'ozone sh key list 70284-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:17:03.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:17:03.778" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210831 13:16:56.588" endtime="20210831 13:17:03.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:17:03.781" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210831 13:17:03.780" endtime="20210831 13:17:03.781"/>
</kw>
<msg timestamp="20210831 13:17:03.782" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210831 13:16:56.587" endtime="20210831 13:17:03.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:17:03.783" endtime="20210831 13:17:03.784"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:16:35.499" endtime="20210831 13:17:03.784"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:17:03.795" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:17:03.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:17:03.801" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:17:03.793" endtime="20210831 13:17:03.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:17:03.803" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:17:03.802" endtime="20210831 13:17:03.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:17:03.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:17:03.804" endtime="20210831 13:17:03.805"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.792" endtime="20210831 13:17:03.806"/>
</kw>
<msg timestamp="20210831 13:17:03.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:17:03.791" endtime="20210831 13:17:03.807"/>
</kw>
<msg timestamp="20210831 13:17:03.808" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:17:03.790" endtime="20210831 13:17:03.808"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:17:03.810" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:17:03.808" endtime="20210831 13:17:03.810"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:17:03.817" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:17:03.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:17:03.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:17:03.815" endtime="20210831 13:17:03.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:17:03.828" level="INFO"/>
<status status="PASS" starttime="20210831 13:17:03.827" endtime="20210831 13:17:03.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:17:03.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:17:03.829" endtime="20210831 13:17:03.830"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.813" endtime="20210831 13:17:03.830"/>
</kw>
<msg timestamp="20210831 13:17:03.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:17:03.813" endtime="20210831 13:17:03.830"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.811" endtime="20210831 13:17:03.831"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.810" endtime="20210831 13:17:03.831"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.789" endtime="20210831 13:17:03.831"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.787" endtime="20210831 13:17:03.831"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:17:03.842" level="INFO">Running command 'ozone sh bucket link 70284-source/bucket1 70284-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:17:09.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:17:09.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:17:03.839" endtime="20210831 13:17:09.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:17:09.362" level="INFO"/>
<status status="PASS" starttime="20210831 13:17:09.361" endtime="20210831 13:17:09.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:17:09.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:17:09.363" endtime="20210831 13:17:09.364"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.837" endtime="20210831 13:17:09.365"/>
</kw>
<msg timestamp="20210831 13:17:09.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:17:03.833" endtime="20210831 13:17:09.365"/>
</kw>
<status status="PASS" starttime="20210831 13:17:03.832" endtime="20210831 13:17:09.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:17:09.372" level="INFO">Running command 'ozone sh key put 70284-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:03.787" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:17:09.369" endtime="20210831 13:19:03.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:19:03.787" endtime="20210831 13:19:03.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:19:03.788" endtime="20210831 13:19:03.788"/>
</kw>
<status status="FAIL" starttime="20210831 13:17:09.368" endtime="20210831 13:19:03.788"/>
</kw>
<msg timestamp="20210831 13:19:03.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:17:09.367" endtime="20210831 13:19:03.788"/>
</kw>
<status status="FAIL" starttime="20210831 13:17:09.366" endtime="20210831 13:19:03.789"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210831 13:19:03.789" endtime="20210831 13:19:03.789"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210831 13:17:03.785" endtime="20210831 13:19:03.790">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:03.797" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:03.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:03.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:19:03.795" endtime="20210831 13:19:03.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:03.804" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:19:03.803" endtime="20210831 13:19:03.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:03.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:03.805" endtime="20210831 13:19:03.806"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.794" endtime="20210831 13:19:03.806"/>
</kw>
<msg timestamp="20210831 13:19:03.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:03.794" endtime="20210831 13:19:03.807"/>
</kw>
<msg timestamp="20210831 13:19:03.807" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:19:03.793" endtime="20210831 13:19:03.808"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:19:03.809" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:19:03.808" endtime="20210831 13:19:03.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:03.815" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:03.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:03.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:19:03.813" endtime="20210831 13:19:03.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:03.839" level="INFO"/>
<status status="PASS" starttime="20210831 13:19:03.838" endtime="20210831 13:19:03.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:03.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:03.839" endtime="20210831 13:19:03.840"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.812" endtime="20210831 13:19:03.841"/>
</kw>
<msg timestamp="20210831 13:19:03.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:03.812" endtime="20210831 13:19:03.841"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.810" endtime="20210831 13:19:03.842"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.809" endtime="20210831 13:19:03.842"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.793" endtime="20210831 13:19:03.842"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.792" endtime="20210831 13:19:03.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:03.847" level="INFO">Running command 'ozone sh bucket delete 70284-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:11.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:11.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:19:03.844" endtime="20210831 13:19:11.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:11.434" level="INFO"/>
<status status="PASS" starttime="20210831 13:19:11.432" endtime="20210831 13:19:11.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:11.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:11.434" endtime="20210831 13:19:11.435"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.843" endtime="20210831 13:19:11.436"/>
</kw>
<msg timestamp="20210831 13:19:11.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:03.843" endtime="20210831 13:19:11.436"/>
</kw>
<status status="PASS" starttime="20210831 13:19:03.842" endtime="20210831 13:19:11.436"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:11.441" level="INFO">Running command 'ozone sh bucket list 70284-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:19.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:19.549" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T...</msg>
<status status="PASS" starttime="20210831 13:19:11.439" endtime="20210831 13:19:19.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:19.551" level="INFO">{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:16:00.086Z",
  "modificationTime" : "2021-08-31T13:16:00.086Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:10:08.074Z",
  "modificationTime" : "2021-08-31T13:10:08.074Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:23.747Z",
  "modificationTime" : "2021-08-31T13:10:00.165Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:15:44.145Z",
  "modificationTime" : "2021-08-31T13:15:44.145Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:17:09.194Z",
  "modificationTime" : "2021-08-31T13:17:09.194Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:16:56.502Z",
  "modificationTime" : "2021-08-31T13:16:56.502Z",
  "sourceVolume" : "70284-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:16:42.955Z",
  "modificationTime" : "2021-08-31T13:16:42.955Z",
  "sourceVolume" : "70284-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:16:49.129Z",
  "modificationTime" : "2021-08-31T13:16:49.129Z",
  "sourceVolume" : "70284-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:10.673Z",
  "modificationTime" : "2021-08-31T13:09:52.790Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T13:09:16.170Z",
  "modificationTime" : "2021-08-31T13:09:16.170Z",
  "sourceVolume" : "70284-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210831 13:19:19.550" endtime="20210831 13:19:19.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:19.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:19.552" endtime="20210831 13:19:19.553"/>
</kw>
<status status="PASS" starttime="20210831 13:19:11.438" endtime="20210831 13:19:19.553"/>
</kw>
<msg timestamp="20210831 13:19:19.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:11.438" endtime="20210831 13:19:19.555"/>
</kw>
<msg timestamp="20210831 13:19:19.556" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "70284-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T...</msg>
<status status="PASS" starttime="20210831 13:19:11.437" endtime="20210831 13:19:19.556"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:19.556" endtime="20210831 13:19:19.557"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:19.563" level="INFO">Running command 'ozone sh key list 70284-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:28.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:28.407" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210831 13:19:19.559" endtime="20210831 13:19:28.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:28.410" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210831 13:19:28.408" endtime="20210831 13:19:28.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:28.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:28.411" endtime="20210831 13:19:28.412"/>
</kw>
<status status="PASS" starttime="20210831 13:19:19.558" endtime="20210831 13:19:28.412"/>
</kw>
<msg timestamp="20210831 13:19:28.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:19.558" endtime="20210831 13:19:28.413"/>
</kw>
<msg timestamp="20210831 13:19:28.413" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210831 13:19:19.557" endtime="20210831 13:19:28.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:28.414" endtime="20210831 13:19:28.415"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 13:19:03.791" endtime="20210831 13:19:28.415"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210831 13:05:16.604" endtime="20210831 13:19:28.419"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 13:19:28.460" level="INFO">${random} = 37881</msg>
<status status="PASS" starttime="20210831 13:19:28.459" endtime="20210831 13:19:28.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:19:28.461" level="INFO">${prefix} = 37881</msg>
<status status="PASS" starttime="20210831 13:19:28.460" endtime="20210831 13:19:28.461"/>
</kw>
<status status="PASS" starttime="20210831 13:19:28.459" endtime="20210831 13:19:28.461"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:28.469" level="INFO">Running command 'ozone sh volume info /37881-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:35.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:19:35.517" level="INFO">${output} = VOLUME_NOT_FOUND Volume 37881-rpcbasic is not found</msg>
<status status="PASS" starttime="20210831 13:19:28.465" endtime="20210831 13:19:35.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:35.518" level="INFO">VOLUME_NOT_FOUND Volume 37881-rpcbasic is not found</msg>
<status status="PASS" starttime="20210831 13:19:35.517" endtime="20210831 13:19:35.518"/>
</kw>
<msg timestamp="20210831 13:19:35.518" level="INFO">${result} = VOLUME_NOT_FOUND Volume 37881-rpcbasic is not found</msg>
<status status="PASS" starttime="20210831 13:19:28.464" endtime="20210831 13:19:35.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:35.519" endtime="20210831 13:19:35.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:35.525" level="INFO">Running command 'ozone sh volume create /37881-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:44.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:44.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:19:35.521" endtime="20210831 13:19:44.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:44.057" level="INFO"/>
<status status="PASS" starttime="20210831 13:19:44.057" endtime="20210831 13:19:44.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:44.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:44.058" endtime="20210831 13:19:44.059"/>
</kw>
<status status="PASS" starttime="20210831 13:19:35.521" endtime="20210831 13:19:44.060"/>
</kw>
<msg timestamp="20210831 13:19:44.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:35.520" endtime="20210831 13:19:44.060"/>
</kw>
<msg timestamp="20210831 13:19:44.061" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210831 13:19:35.519" endtime="20210831 13:19:44.061"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:44.061" endtime="20210831 13:19:44.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:44.068" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="37881-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:50.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:50.710" level="INFO">${output} = {
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:19:44.064" endtime="20210831 13:19:50.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:50.711" level="INFO">{
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:19:43.936Z",
  "modificationTime": "2021-08-31T13:19:43.936Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:19:50.711" endtime="20210831 13:19:50.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:50.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:50.712" endtime="20210831 13:19:50.713"/>
</kw>
<status status="PASS" starttime="20210831 13:19:44.063" endtime="20210831 13:19:50.713"/>
</kw>
<msg timestamp="20210831 13:19:50.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:44.063" endtime="20210831 13:19:50.713"/>
</kw>
<msg timestamp="20210831 13:19:50.714" level="INFO">${result} = {
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:19:44.062" endtime="20210831 13:19:50.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:50.714" endtime="20210831 13:19:50.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:50.721" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="37881-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:19:59.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:19:59.211" level="INFO">${output} = {
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:19:50.717" endtime="20210831 13:19:59.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:19:59.213" level="INFO">{
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:19:43.936Z",
  "modificationTime": "2021-08-31T13:19:43.936Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:19:59.212" endtime="20210831 13:19:59.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:19:59.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:19:59.213" endtime="20210831 13:19:59.214"/>
</kw>
<status status="PASS" starttime="20210831 13:19:50.716" endtime="20210831 13:19:59.214"/>
</kw>
<msg timestamp="20210831 13:19:59.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:50.716" endtime="20210831 13:19:59.214"/>
</kw>
<msg timestamp="20210831 13:19:59.215" level="INFO">${result} = {
  "metadata": {},
  "name": "37881-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:19:50.715" endtime="20210831 13:19:59.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:19:59.215" endtime="20210831 13:19:59.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:19:59.221" level="INFO">Running command 'ozone sh volume setquota /37881-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:07.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:07.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:19:59.218" endtime="20210831 13:20:07.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:07.272" level="INFO"/>
<status status="PASS" starttime="20210831 13:20:07.271" endtime="20210831 13:20:07.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:07.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:07.272" endtime="20210831 13:20:07.273"/>
</kw>
<status status="PASS" starttime="20210831 13:19:59.217" endtime="20210831 13:20:07.274"/>
</kw>
<msg timestamp="20210831 13:20:07.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:19:59.217" endtime="20210831 13:20:07.274"/>
</kw>
<status status="PASS" starttime="20210831 13:19:59.215" endtime="20210831 13:20:07.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:07.279" level="INFO">Running command 'ozone sh volume info /37881-rpcbasic | jq -r '. | select(.name=="37881-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:14.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:14.070" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:07.277" endtime="20210831 13:20:14.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:14.072" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:14.071" endtime="20210831 13:20:14.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:14.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:14.072" endtime="20210831 13:20:14.073"/>
</kw>
<status status="PASS" starttime="20210831 13:20:07.276" endtime="20210831 13:20:14.073"/>
</kw>
<msg timestamp="20210831 13:20:14.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:07.276" endtime="20210831 13:20:14.073"/>
</kw>
<msg timestamp="20210831 13:20:14.074" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:07.274" endtime="20210831 13:20:14.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:20:14.074" endtime="20210831 13:20:14.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:14.080" level="INFO">Running command 'ozone sh bucket create /37881-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:21.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:21.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:20:14.077" endtime="20210831 13:20:21.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:21.167" level="INFO"/>
<status status="PASS" starttime="20210831 13:20:21.166" endtime="20210831 13:20:21.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:21.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:21.167" endtime="20210831 13:20:21.168"/>
</kw>
<status status="PASS" starttime="20210831 13:20:14.076" endtime="20210831 13:20:21.175"/>
</kw>
<msg timestamp="20210831 13:20:21.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:14.076" endtime="20210831 13:20:21.175"/>
</kw>
<status status="PASS" starttime="20210831 13:20:14.075" endtime="20210831 13:20:21.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:21.193" level="INFO">Running command 'ozone sh bucket info /37881-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:28.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:28.709" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210831 13:20:21.183" endtime="20210831 13:20:28.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:28.712" level="INFO">DISK</msg>
<status status="PASS" starttime="20210831 13:20:28.710" endtime="20210831 13:20:28.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:28.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:28.712" endtime="20210831 13:20:28.714"/>
</kw>
<status status="PASS" starttime="20210831 13:20:21.183" endtime="20210831 13:20:28.714"/>
</kw>
<msg timestamp="20210831 13:20:28.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:21.181" endtime="20210831 13:20:28.715"/>
</kw>
<msg timestamp="20210831 13:20:28.715" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210831 13:20:21.176" endtime="20210831 13:20:28.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:20:28.716" endtime="20210831 13:20:28.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:28.724" level="INFO">Running command 'ozone sh bucket info /37881-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:37.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:37.242" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:28.721" endtime="20210831 13:20:37.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:37.245" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:37.243" endtime="20210831 13:20:37.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:37.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:37.246" endtime="20210831 13:20:37.247"/>
</kw>
<status status="PASS" starttime="20210831 13:20:28.720" endtime="20210831 13:20:37.248"/>
</kw>
<msg timestamp="20210831 13:20:37.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:28.719" endtime="20210831 13:20:37.248"/>
</kw>
<msg timestamp="20210831 13:20:37.249" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:20:28.717" endtime="20210831 13:20:37.249"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:20:37.250" endtime="20210831 13:20:37.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:37.260" level="INFO">Running command 'ozone sh bucket info /37881-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:44.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:44.311" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210831 13:20:37.256" endtime="20210831 13:20:44.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:44.313" level="INFO">100</msg>
<status status="PASS" starttime="20210831 13:20:44.311" endtime="20210831 13:20:44.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:44.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:44.313" endtime="20210831 13:20:44.313"/>
</kw>
<status status="PASS" starttime="20210831 13:20:37.255" endtime="20210831 13:20:44.314"/>
</kw>
<msg timestamp="20210831 13:20:44.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:37.254" endtime="20210831 13:20:44.314"/>
</kw>
<msg timestamp="20210831 13:20:44.314" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210831 13:20:37.251" endtime="20210831 13:20:44.314"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:20:44.315" endtime="20210831 13:20:44.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:44.321" level="INFO">Running command 'ozone sh bucket setquota /37881-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:51.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:51.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:20:44.317" endtime="20210831 13:20:51.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:51.626" level="INFO"/>
<status status="PASS" starttime="20210831 13:20:51.625" endtime="20210831 13:20:51.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:51.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:51.626" endtime="20210831 13:20:51.627"/>
</kw>
<status status="PASS" starttime="20210831 13:20:44.317" endtime="20210831 13:20:51.627"/>
</kw>
<msg timestamp="20210831 13:20:51.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:44.317" endtime="20210831 13:20:51.627"/>
</kw>
<status status="PASS" starttime="20210831 13:20:44.315" endtime="20210831 13:20:51.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:51.632" level="INFO">Running command 'ozone sh bucket info /37881-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:20:57.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:20:57.870" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:20:51.630" endtime="20210831 13:20:57.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:20:57.873" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210831 13:20:57.871" endtime="20210831 13:20:57.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:20:57.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:20:57.873" endtime="20210831 13:20:57.874"/>
</kw>
<status status="PASS" starttime="20210831 13:20:51.629" endtime="20210831 13:20:57.874"/>
</kw>
<msg timestamp="20210831 13:20:57.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:51.629" endtime="20210831 13:20:57.875"/>
</kw>
<msg timestamp="20210831 13:20:57.875" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:20:51.628" endtime="20210831 13:20:57.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:20:57.875" endtime="20210831 13:20:57.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:20:57.882" level="INFO">Running command 'ozone sh bucket info /37881-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:21:05.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:21:05.632" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210831 13:20:57.879" endtime="20210831 13:21:05.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:21:05.633" level="INFO">1000</msg>
<status status="PASS" starttime="20210831 13:21:05.632" endtime="20210831 13:21:05.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:21:05.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:21:05.634" endtime="20210831 13:21:05.634"/>
</kw>
<status status="PASS" starttime="20210831 13:20:57.878" endtime="20210831 13:21:05.635"/>
</kw>
<msg timestamp="20210831 13:21:05.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:20:57.878" endtime="20210831 13:21:05.635"/>
</kw>
<msg timestamp="20210831 13:21:05.635" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210831 13:20:57.877" endtime="20210831 13:21:05.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:21:05.635" endtime="20210831 13:21:05.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:21:05.641" level="INFO">Running command 'ozone sh bucket list /37881-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:21:14.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:21:14.141" level="INFO">${output} = 37881-rpcbasic</msg>
<status status="PASS" starttime="20210831 13:21:05.639" endtime="20210831 13:21:14.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:21:14.142" level="INFO">37881-rpcbasic</msg>
<status status="PASS" starttime="20210831 13:21:14.141" endtime="20210831 13:21:14.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:21:14.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:21:14.142" endtime="20210831 13:21:14.143"/>
</kw>
<status status="PASS" starttime="20210831 13:21:05.638" endtime="20210831 13:21:14.143"/>
</kw>
<msg timestamp="20210831 13:21:14.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:21:05.638" endtime="20210831 13:21:14.143"/>
</kw>
<msg timestamp="20210831 13:21:14.144" level="INFO">${result} = 37881-rpcbasic</msg>
<status status="PASS" starttime="20210831 13:21:05.637" endtime="20210831 13:21:14.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:21:14.144" endtime="20210831 13:21:14.145"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:21:14.152" level="INFO">Running command 'ozone sh key put /37881-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:24.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:24.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:21:14.150" endtime="20210831 13:24:24.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:24.866" level="INFO"/>
<status status="PASS" starttime="20210831 13:24:24.865" endtime="20210831 13:24:24.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:24.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:24.866" endtime="20210831 13:24:24.868"/>
</kw>
<status status="PASS" starttime="20210831 13:21:14.148" endtime="20210831 13:24:24.868"/>
</kw>
<msg timestamp="20210831 13:24:24.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:21:14.148" endtime="20210831 13:24:24.869"/>
</kw>
<status status="PASS" starttime="20210831 13:21:14.147" endtime="20210831 13:24:24.869"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:24.876" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:24.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:24.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:24:24.873" endtime="20210831 13:24:24.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:24.882" level="INFO"/>
<status status="PASS" starttime="20210831 13:24:24.881" endtime="20210831 13:24:24.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:24.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:24.882" endtime="20210831 13:24:24.883"/>
</kw>
<status status="PASS" starttime="20210831 13:24:24.871" endtime="20210831 13:24:24.884"/>
</kw>
<msg timestamp="20210831 13:24:24.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:24.870" endtime="20210831 13:24:24.884"/>
</kw>
<status status="PASS" starttime="20210831 13:24:24.869" endtime="20210831 13:24:24.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:24.889" level="INFO">Running command 'ozone sh key get /37881-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:28.462" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:24:24.887" endtime="20210831 13:24:28.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.463" endtime="20210831 13:24:28.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.463" endtime="20210831 13:24:28.464"/>
</kw>
<status status="FAIL" starttime="20210831 13:24:24.886" endtime="20210831 13:24:28.464"/>
</kw>
<msg timestamp="20210831 13:24:28.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:24:24.886" endtime="20210831 13:24:28.464"/>
</kw>
<status status="FAIL" starttime="20210831 13:24:24.884" endtime="20210831 13:24:28.464"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.465" endtime="20210831 13:24:28.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.465" endtime="20210831 13:24:28.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.465" endtime="20210831 13:24:28.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.465" endtime="20210831 13:24:28.465"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.466" endtime="20210831 13:24:28.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.466" endtime="20210831 13:24:28.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.466" endtime="20210831 13:24:28.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.466" endtime="20210831 13:24:28.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.467" endtime="20210831 13:24:28.467"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.467" endtime="20210831 13:24:28.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.467" endtime="20210831 13:24:28.467"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.467" endtime="20210831 13:24:28.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.467" endtime="20210831 13:24:28.467"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.468" endtime="20210831 13:24:28.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.468" endtime="20210831 13:24:28.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.468" endtime="20210831 13:24:28.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.468" endtime="20210831 13:24:28.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.469" endtime="20210831 13:24:28.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.469" endtime="20210831 13:24:28.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.469" endtime="20210831 13:24:28.469"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.469" endtime="20210831 13:24:28.472"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.472" endtime="20210831 13:24:28.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.473" endtime="20210831 13:24:28.473"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.473" endtime="20210831 13:24:28.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.473" endtime="20210831 13:24:28.473"/>
</kw>
<status status="FAIL" starttime="20210831 13:21:14.146" endtime="20210831 13:24:28.474"/>
</kw>
<status status="FAIL" starttime="20210831 13:21:14.145" endtime="20210831 13:24:28.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.474" endtime="20210831 13:24:28.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.474" endtime="20210831 13:24:28.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.474" endtime="20210831 13:24:28.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.480" endtime="20210831 13:24:28.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.481" endtime="20210831 13:24:28.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.483" endtime="20210831 13:24:28.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.484" endtime="20210831 13:24:28.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.484" endtime="20210831 13:24:28.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.489" endtime="20210831 13:24:28.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.490" endtime="20210831 13:24:28.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.492" endtime="20210831 13:24:28.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.493" endtime="20210831 13:24:28.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.493" endtime="20210831 13:24:28.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.495" endtime="20210831 13:24:28.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.496" endtime="20210831 13:24:28.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.496" endtime="20210831 13:24:28.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.497" endtime="20210831 13:24:28.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.497" endtime="20210831 13:24:28.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.499" endtime="20210831 13:24:28.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.499" endtime="20210831 13:24:28.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.500" endtime="20210831 13:24:28.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.501" endtime="20210831 13:24:28.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.502" endtime="20210831 13:24:28.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:24:28.503" endtime="20210831 13:24:28.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.504" endtime="20210831 13:24:28.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:24:28.504" endtime="20210831 13:24:28.504"/>
</kw>
<status status="FAIL" starttime="20210831 13:19:28.462" endtime="20210831 13:24:28.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210831 13:19:28.461" endtime="20210831 13:24:28.506">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210831 13:19:28.426" endtime="20210831 13:24:28.509"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210831 13:24:28.555" level="INFO">${random} = 80148</msg>
<status status="PASS" starttime="20210831 13:24:28.553" endtime="20210831 13:24:28.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:24:28.559" level="INFO">${prefix} = 80148</msg>
<status status="PASS" starttime="20210831 13:24:28.557" endtime="20210831 13:24:28.559"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.552" endtime="20210831 13:24:28.561"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:28.592" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:28.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:28.599" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:24:28.579" endtime="20210831 13:24:28.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:28.601" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:24:28.600" endtime="20210831 13:24:28.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:28.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:28.601" endtime="20210831 13:24:28.602"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.577" endtime="20210831 13:24:28.603"/>
</kw>
<msg timestamp="20210831 13:24:28.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:28.575" endtime="20210831 13:24:28.603"/>
</kw>
<msg timestamp="20210831 13:24:28.603" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:24:28.572" endtime="20210831 13:24:28.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:24:28.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:24:28.603" endtime="20210831 13:24:28.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:28.627" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:28.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:28.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:24:28.622" endtime="20210831 13:24:28.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:28.759" level="INFO"/>
<status status="PASS" starttime="20210831 13:24:28.759" endtime="20210831 13:24:28.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:28.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:28.760" endtime="20210831 13:24:28.760"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.619" endtime="20210831 13:24:28.761"/>
</kw>
<msg timestamp="20210831 13:24:28.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:28.617" endtime="20210831 13:24:28.761"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.613" endtime="20210831 13:24:28.761"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.611" endtime="20210831 13:24:28.762"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.566" endtime="20210831 13:24:28.762"/>
</kw>
<status status="PASS" starttime="20210831 13:24:28.564" endtime="20210831 13:24:28.762"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:28.774" level="INFO">Running command 'ozone sh volume info o3://om:9862/80148-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:42.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:24:42.321" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80148-rpcwoport is not found</msg>
<status status="PASS" starttime="20210831 13:24:28.764" endtime="20210831 13:24:42.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:42.322" level="INFO">VOLUME_NOT_FOUND Volume 80148-rpcwoport is not found</msg>
<status status="PASS" starttime="20210831 13:24:42.321" endtime="20210831 13:24:42.322"/>
</kw>
<msg timestamp="20210831 13:24:42.323" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80148-rpcwoport is not found</msg>
<status status="PASS" starttime="20210831 13:24:28.763" endtime="20210831 13:24:42.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:24:42.323" endtime="20210831 13:24:42.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:42.328" level="INFO">Running command 'ozone sh volume create o3://om:9862/80148-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:49.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:49.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:24:42.325" endtime="20210831 13:24:49.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:49.610" level="INFO"/>
<status status="PASS" starttime="20210831 13:24:49.609" endtime="20210831 13:24:49.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:49.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:49.610" endtime="20210831 13:24:49.611"/>
</kw>
<status status="PASS" starttime="20210831 13:24:42.325" endtime="20210831 13:24:49.611"/>
</kw>
<msg timestamp="20210831 13:24:49.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:42.324" endtime="20210831 13:24:49.611"/>
</kw>
<msg timestamp="20210831 13:24:49.611" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210831 13:24:42.323" endtime="20210831 13:24:49.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:24:49.612" endtime="20210831 13:24:49.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:49.619" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="80148-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:24:57.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:24:57.216" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210831 13:24:49.616" endtime="20210831 13:24:57.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:24:57.217" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:24:49.259Z",
  "modificationTime": "2021-08-31T13:24:49.259Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:24:57.216" endtime="20210831 13:24:57.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:24:57.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:24:57.217" endtime="20210831 13:24:57.218"/>
</kw>
<status status="PASS" starttime="20210831 13:24:49.615" endtime="20210831 13:24:57.219"/>
</kw>
<msg timestamp="20210831 13:24:57.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:49.615" endtime="20210831 13:24:57.219"/>
</kw>
<msg timestamp="20210831 13:24:57.219" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210831 13:24:49.613" endtime="20210831 13:24:57.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:24:57.219" endtime="20210831 13:24:57.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:24:57.229" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80148-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:05.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:05.118" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210831 13:24:57.224" endtime="20210831 13:25:05.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:05.120" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:24:49.259Z",
  "modificationTime": "2021-08-31T13:24:49.259Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:25:05.119" endtime="20210831 13:25:05.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:05.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:05.120" endtime="20210831 13:25:05.121"/>
</kw>
<status status="PASS" starttime="20210831 13:24:57.223" endtime="20210831 13:25:05.121"/>
</kw>
<msg timestamp="20210831 13:25:05.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:24:57.222" endtime="20210831 13:25:05.122"/>
</kw>
<msg timestamp="20210831 13:25:05.122" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210831 13:24:57.221" endtime="20210831 13:25:05.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:25:05.122" endtime="20210831 13:25:05.123"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:05.128" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/80148-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:12.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:12.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:25:05.126" endtime="20210831 13:25:12.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:12.482" level="INFO"/>
<status status="PASS" starttime="20210831 13:25:12.481" endtime="20210831 13:25:12.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:12.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:12.482" endtime="20210831 13:25:12.483"/>
</kw>
<status status="PASS" starttime="20210831 13:25:05.124" endtime="20210831 13:25:12.483"/>
</kw>
<msg timestamp="20210831 13:25:12.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:05.124" endtime="20210831 13:25:12.483"/>
</kw>
<status status="PASS" starttime="20210831 13:25:05.123" endtime="20210831 13:25:12.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:12.489" level="INFO">Running command 'ozone sh volume info o3://om:9862/80148-rpcwoport | jq -r '. | select(.name=="80148-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:21.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:21.435" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:12.487" endtime="20210831 13:25:21.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:21.436" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:21.436" endtime="20210831 13:25:21.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:21.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:21.437" endtime="20210831 13:25:21.437"/>
</kw>
<status status="PASS" starttime="20210831 13:25:12.486" endtime="20210831 13:25:21.438"/>
</kw>
<msg timestamp="20210831 13:25:21.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:12.486" endtime="20210831 13:25:21.438"/>
</kw>
<msg timestamp="20210831 13:25:21.438" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:12.484" endtime="20210831 13:25:21.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:25:21.438" endtime="20210831 13:25:21.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:21.446" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80148-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:29.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:29.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:25:21.441" endtime="20210831 13:25:29.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:29.233" level="INFO"/>
<status status="PASS" starttime="20210831 13:25:29.232" endtime="20210831 13:25:29.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:29.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:29.234" endtime="20210831 13:25:29.235"/>
</kw>
<status status="PASS" starttime="20210831 13:25:21.441" endtime="20210831 13:25:29.235"/>
</kw>
<msg timestamp="20210831 13:25:29.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:21.440" endtime="20210831 13:25:29.236"/>
</kw>
<status status="PASS" starttime="20210831 13:25:21.439" endtime="20210831 13:25:29.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:29.242" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80148-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:37.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:37.019" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210831 13:25:29.239" endtime="20210831 13:25:37.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:37.020" level="INFO">DISK</msg>
<status status="PASS" starttime="20210831 13:25:37.019" endtime="20210831 13:25:37.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:37.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:37.020" endtime="20210831 13:25:37.021"/>
</kw>
<status status="PASS" starttime="20210831 13:25:29.238" endtime="20210831 13:25:37.021"/>
</kw>
<msg timestamp="20210831 13:25:37.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:29.238" endtime="20210831 13:25:37.022"/>
</kw>
<msg timestamp="20210831 13:25:37.022" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210831 13:25:29.236" endtime="20210831 13:25:37.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:25:37.022" endtime="20210831 13:25:37.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:37.030" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80148-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:43.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:43.508" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:37.027" endtime="20210831 13:25:43.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:43.509" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:43.509" endtime="20210831 13:25:43.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:43.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:43.510" endtime="20210831 13:25:43.510"/>
</kw>
<status status="PASS" starttime="20210831 13:25:37.025" endtime="20210831 13:25:43.511"/>
</kw>
<msg timestamp="20210831 13:25:43.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:37.025" endtime="20210831 13:25:43.511"/>
</kw>
<msg timestamp="20210831 13:25:43.511" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:25:37.023" endtime="20210831 13:25:43.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:25:43.512" endtime="20210831 13:25:43.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:43.518" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80148-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:51.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:51.437" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210831 13:25:43.515" endtime="20210831 13:25:51.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:51.440" level="INFO">100</msg>
<status status="PASS" starttime="20210831 13:25:51.438" endtime="20210831 13:25:51.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:51.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:51.440" endtime="20210831 13:25:51.441"/>
</kw>
<status status="PASS" starttime="20210831 13:25:43.515" endtime="20210831 13:25:51.442"/>
</kw>
<msg timestamp="20210831 13:25:51.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:43.514" endtime="20210831 13:25:51.443"/>
</kw>
<msg timestamp="20210831 13:25:51.443" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210831 13:25:43.512" endtime="20210831 13:25:51.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:25:51.444" endtime="20210831 13:25:51.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:51.454" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/80148-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:25:58.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:25:58.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:25:51.450" endtime="20210831 13:25:58.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:25:58.569" level="INFO"/>
<status status="PASS" starttime="20210831 13:25:58.568" endtime="20210831 13:25:58.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:25:58.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:25:58.569" endtime="20210831 13:25:58.570"/>
</kw>
<status status="PASS" starttime="20210831 13:25:51.449" endtime="20210831 13:25:58.570"/>
</kw>
<msg timestamp="20210831 13:25:58.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:51.447" endtime="20210831 13:25:58.571"/>
</kw>
<status status="PASS" starttime="20210831 13:25:51.445" endtime="20210831 13:25:58.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:25:58.577" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80148-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:26:06.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:26:06.425" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:25:58.574" endtime="20210831 13:26:06.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:26:06.428" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210831 13:26:06.426" endtime="20210831 13:26:06.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:26:06.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:26:06.429" endtime="20210831 13:26:06.429"/>
</kw>
<status status="PASS" starttime="20210831 13:25:58.573" endtime="20210831 13:26:06.430"/>
</kw>
<msg timestamp="20210831 13:26:06.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:25:58.572" endtime="20210831 13:26:06.430"/>
</kw>
<msg timestamp="20210831 13:26:06.430" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:25:58.571" endtime="20210831 13:26:06.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:26:06.431" endtime="20210831 13:26:06.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:26:06.437" level="INFO">Running command 'ozone sh bucket info o3://om:9862/80148-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:26:14.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:26:14.580" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210831 13:26:06.435" endtime="20210831 13:26:14.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:26:14.581" level="INFO">1000</msg>
<status status="PASS" starttime="20210831 13:26:14.581" endtime="20210831 13:26:14.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:26:14.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:26:14.582" endtime="20210831 13:26:14.582"/>
</kw>
<status status="PASS" starttime="20210831 13:26:06.434" endtime="20210831 13:26:14.583"/>
</kw>
<msg timestamp="20210831 13:26:14.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:26:06.433" endtime="20210831 13:26:14.583"/>
</kw>
<msg timestamp="20210831 13:26:14.583" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210831 13:26:06.432" endtime="20210831 13:26:14.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:26:14.583" endtime="20210831 13:26:14.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:26:14.593" level="INFO">Running command 'ozone sh bucket list o3://om:9862/80148-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:26:23.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:26:23.011" level="INFO">${output} = 80148-rpcwoport</msg>
<status status="PASS" starttime="20210831 13:26:14.591" endtime="20210831 13:26:23.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:26:23.012" level="INFO">80148-rpcwoport</msg>
<status status="PASS" starttime="20210831 13:26:23.011" endtime="20210831 13:26:23.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:26:23.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:26:23.013" endtime="20210831 13:26:23.013"/>
</kw>
<status status="PASS" starttime="20210831 13:26:14.590" endtime="20210831 13:26:23.014"/>
</kw>
<msg timestamp="20210831 13:26:23.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:26:14.590" endtime="20210831 13:26:23.014"/>
</kw>
<msg timestamp="20210831 13:26:23.015" level="INFO">${result} = 80148-rpcwoport</msg>
<status status="PASS" starttime="20210831 13:26:14.588" endtime="20210831 13:26:23.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:26:23.015" endtime="20210831 13:26:23.016"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:26:23.030" level="INFO">Running command 'ozone sh key put o3://om:9862/80148-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:28.563" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:26:23.026" endtime="20210831 13:29:28.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.563" endtime="20210831 13:29:28.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.564" endtime="20210831 13:29:28.564"/>
</kw>
<status status="FAIL" starttime="20210831 13:26:23.024" endtime="20210831 13:29:28.564"/>
</kw>
<msg timestamp="20210831 13:29:28.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:26:23.021" endtime="20210831 13:29:28.565"/>
</kw>
<status status="FAIL" starttime="20210831 13:26:23.019" endtime="20210831 13:29:28.565"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.565" endtime="20210831 13:29:28.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.565" endtime="20210831 13:29:28.566"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.566" endtime="20210831 13:29:28.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.566" endtime="20210831 13:29:28.566"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.566" endtime="20210831 13:29:28.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.566" endtime="20210831 13:29:28.566"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.567" endtime="20210831 13:29:28.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.567" endtime="20210831 13:29:28.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.567" endtime="20210831 13:29:28.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.567" endtime="20210831 13:29:28.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.567" endtime="20210831 13:29:28.567"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.568" endtime="20210831 13:29:28.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.568" endtime="20210831 13:29:28.568"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.568" endtime="20210831 13:29:28.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.568" endtime="20210831 13:29:28.568"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.568" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.569" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.569" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.569" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.569" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.569" endtime="20210831 13:29:28.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.570" endtime="20210831 13:29:28.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.570" endtime="20210831 13:29:28.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.570" endtime="20210831 13:29:28.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.570" endtime="20210831 13:29:28.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.570" endtime="20210831 13:29:28.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.571" endtime="20210831 13:29:28.571"/>
</kw>
<status status="FAIL" starttime="20210831 13:26:23.017" endtime="20210831 13:29:28.571"/>
</kw>
<status status="FAIL" starttime="20210831 13:26:23.016" endtime="20210831 13:29:28.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.571" endtime="20210831 13:29:28.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.571" endtime="20210831 13:29:28.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.572" endtime="20210831 13:29:28.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.572" endtime="20210831 13:29:28.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.572" endtime="20210831 13:29:28.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.572" endtime="20210831 13:29:28.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.573" endtime="20210831 13:29:28.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.573" endtime="20210831 13:29:28.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.573" endtime="20210831 13:29:28.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.573" endtime="20210831 13:29:28.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.573" endtime="20210831 13:29:28.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.574" endtime="20210831 13:29:28.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.574" endtime="20210831 13:29:28.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.574" endtime="20210831 13:29:28.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.574" endtime="20210831 13:29:28.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.574" endtime="20210831 13:29:28.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.575" endtime="20210831 13:29:28.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.575" endtime="20210831 13:29:28.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.575" endtime="20210831 13:29:28.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.575" endtime="20210831 13:29:28.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.576" endtime="20210831 13:29:28.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.576" endtime="20210831 13:29:28.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.576" endtime="20210831 13:29:28.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:29:28.577" endtime="20210831 13:29:28.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.577" endtime="20210831 13:29:28.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:29:28.577" endtime="20210831 13:29:28.577"/>
</kw>
<status status="FAIL" starttime="20210831 13:24:28.762" endtime="20210831 13:29:28.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210831 13:24:28.561" endtime="20210831 13:29:28.578">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:28.602" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:28.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:28.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:29:28.583" endtime="20210831 13:29:28.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:28.610" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:29:28.609" endtime="20210831 13:29:28.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:28.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:28.610" endtime="20210831 13:29:28.611"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.582" endtime="20210831 13:29:28.612"/>
</kw>
<msg timestamp="20210831 13:29:28.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:28.582" endtime="20210831 13:29:28.612"/>
</kw>
<msg timestamp="20210831 13:29:28.613" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:29:28.581" endtime="20210831 13:29:28.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:29:28.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:29:28.613" endtime="20210831 13:29:28.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:28.618" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:28.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:28.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:29:28.616" endtime="20210831 13:29:28.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:28.664" level="INFO"/>
<status status="PASS" starttime="20210831 13:29:28.664" endtime="20210831 13:29:28.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:28.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:28.664" endtime="20210831 13:29:28.665"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.615" endtime="20210831 13:29:28.665"/>
</kw>
<msg timestamp="20210831 13:29:28.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:28.615" endtime="20210831 13:29:28.666"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.614" endtime="20210831 13:29:28.666"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.614" endtime="20210831 13:29:28.666"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.581" endtime="20210831 13:29:28.666"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.580" endtime="20210831 13:29:28.666"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:28.672" level="INFO">Running command 'ozone sh volume create o3://om:9862/80148-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:36.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:36.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:29:28.669" endtime="20210831 13:29:36.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:36.590" level="INFO"/>
<status status="PASS" starttime="20210831 13:29:36.589" endtime="20210831 13:29:36.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:36.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:36.590" endtime="20210831 13:29:36.590"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.668" endtime="20210831 13:29:36.591"/>
</kw>
<msg timestamp="20210831 13:29:36.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:28.668" endtime="20210831 13:29:36.591"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.667" endtime="20210831 13:29:36.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:36.598" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80148-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:42.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:42.311" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:29:36.595" endtime="20210831 13:29:42.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:42.313" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:29:42.311" endtime="20210831 13:29:42.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:42.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:42.313" endtime="20210831 13:29:42.313"/>
</kw>
<status status="PASS" starttime="20210831 13:29:36.594" endtime="20210831 13:29:42.314"/>
</kw>
<msg timestamp="20210831 13:29:42.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:36.593" endtime="20210831 13:29:42.314"/>
</kw>
<msg timestamp="20210831 13:29:42.314" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:29:36.592" endtime="20210831 13:29:42.315"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:29:42.315" endtime="20210831 13:29:42.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:42.321" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/80148-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:50.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:50.014" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210831 13:29:42.318" endtime="20210831 13:29:50.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:50.015" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210831 13:29:50.015" endtime="20210831 13:29:50.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:50.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:50.016" endtime="20210831 13:29:50.017"/>
</kw>
<status status="PASS" starttime="20210831 13:29:42.317" endtime="20210831 13:29:50.018"/>
</kw>
<msg timestamp="20210831 13:29:50.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:42.317" endtime="20210831 13:29:50.018"/>
</kw>
<msg timestamp="20210831 13:29:50.019" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210831 13:29:42.316" endtime="20210831 13:29:50.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:50.026" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80148-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:29:58.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:29:58.082" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210831 13:29:50.023" endtime="20210831 13:29:58.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:29:58.084" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:29:58.083" endtime="20210831 13:29:58.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:29:58.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:29:58.084" endtime="20210831 13:29:58.086"/>
</kw>
<status status="PASS" starttime="20210831 13:29:50.021" endtime="20210831 13:29:58.087"/>
</kw>
<msg timestamp="20210831 13:29:58.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:50.021" endtime="20210831 13:29:58.087"/>
</kw>
<msg timestamp="20210831 13:29:58.088" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210831 13:29:50.019" endtime="20210831 13:29:58.088"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:29:58.088" endtime="20210831 13:29:58.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:29:58.097" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/80148-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:05.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:05.606" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:29:58.094" endtime="20210831 13:30:05.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:05.609" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:30:05.607" endtime="20210831 13:30:05.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:05.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:05.609" endtime="20210831 13:30:05.610"/>
</kw>
<status status="PASS" starttime="20210831 13:29:58.093" endtime="20210831 13:30:05.611"/>
</kw>
<msg timestamp="20210831 13:30:05.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:29:58.093" endtime="20210831 13:30:05.611"/>
</kw>
<msg timestamp="20210831 13:30:05.611" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:29:58.091" endtime="20210831 13:30:05.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:05.623" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80148-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:13.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:13.422" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210831 13:30:05.619" endtime="20210831 13:30:13.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:13.423" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:30:13.422" endtime="20210831 13:30:13.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:13.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:13.424" endtime="20210831 13:30:13.424"/>
</kw>
<status status="PASS" starttime="20210831 13:30:05.618" endtime="20210831 13:30:13.425"/>
</kw>
<msg timestamp="20210831 13:30:13.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:05.613" endtime="20210831 13:30:13.425"/>
</kw>
<msg timestamp="20210831 13:30:13.425" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210831 13:30:05.612" endtime="20210831 13:30:13.425"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:30:13.425" endtime="20210831 13:30:13.426"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:13.431" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/80148-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:19.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:19.552" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:30:13.428" endtime="20210831 13:30:19.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:19.553" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:30:19.553" endtime="20210831 13:30:19.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:19.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:19.554" endtime="20210831 13:30:19.554"/>
</kw>
<status status="PASS" starttime="20210831 13:30:13.427" endtime="20210831 13:30:19.555"/>
</kw>
<msg timestamp="20210831 13:30:19.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:13.427" endtime="20210831 13:30:19.555"/>
</kw>
<msg timestamp="20210831 13:30:19.555" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:30:13.426" endtime="20210831 13:30:19.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:19.561" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/80148-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:26.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:26.160" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:30:19.557" endtime="20210831 13:30:26.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:26.162" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:30:26.160" endtime="20210831 13:30:26.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:26.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:26.162" endtime="20210831 13:30:26.163"/>
</kw>
<status status="PASS" starttime="20210831 13:30:19.557" endtime="20210831 13:30:26.164"/>
</kw>
<msg timestamp="20210831 13:30:26.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:19.556" endtime="20210831 13:30:26.164"/>
</kw>
<msg timestamp="20210831 13:30:26.165" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:30:19.555" endtime="20210831 13:30:26.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:30:26.165" endtime="20210831 13:30:26.166"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:30:26.166" endtime="20210831 13:30:26.168"/>
</kw>
<status status="PASS" starttime="20210831 13:29:28.666" endtime="20210831 13:30:26.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:29:28.579" endtime="20210831 13:30:26.169"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:26.179" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:26.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:26.184" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:30:26.176" endtime="20210831 13:30:26.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:26.186" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:30:26.185" endtime="20210831 13:30:26.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:26.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:26.186" endtime="20210831 13:30:26.187"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.175" endtime="20210831 13:30:26.187"/>
</kw>
<msg timestamp="20210831 13:30:26.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:26.174" endtime="20210831 13:30:26.188"/>
</kw>
<msg timestamp="20210831 13:30:26.188" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:30:26.173" endtime="20210831 13:30:26.188"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:30:26.189" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:30:26.188" endtime="20210831 13:30:26.189"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:26.195" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:26.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:26.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:30:26.193" endtime="20210831 13:30:26.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:26.455" level="INFO"/>
<status status="PASS" starttime="20210831 13:30:26.455" endtime="20210831 13:30:26.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:26.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:26.455" endtime="20210831 13:30:26.456"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.192" endtime="20210831 13:30:26.457"/>
</kw>
<msg timestamp="20210831 13:30:26.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:26.191" endtime="20210831 13:30:26.457"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.190" endtime="20210831 13:30:26.457"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.190" endtime="20210831 13:30:26.457"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.173" endtime="20210831 13:30:26.458"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.172" endtime="20210831 13:30:26.458"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:26.463" level="INFO">Running command 'ozone sh bucket create o3://om:9862/80148-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:33.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:33.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:30:26.461" endtime="20210831 13:30:33.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:33.765" level="INFO"/>
<status status="PASS" starttime="20210831 13:30:33.764" endtime="20210831 13:30:33.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:33.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:33.765" endtime="20210831 13:30:33.766"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.460" endtime="20210831 13:30:33.766"/>
</kw>
<msg timestamp="20210831 13:30:33.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:26.460" endtime="20210831 13:30:33.766"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.459" endtime="20210831 13:30:33.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:33.772" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80148-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:41.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:41.533" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:30:33.769" endtime="20210831 13:30:41.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:41.534" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:30:41.533" endtime="20210831 13:30:41.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:41.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:41.534" endtime="20210831 13:30:41.535"/>
</kw>
<status status="PASS" starttime="20210831 13:30:33.768" endtime="20210831 13:30:41.535"/>
</kw>
<msg timestamp="20210831 13:30:41.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:33.768" endtime="20210831 13:30:41.536"/>
</kw>
<msg timestamp="20210831 13:30:41.536" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:30:33.767" endtime="20210831 13:30:41.537"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:30:41.537" endtime="20210831 13:30:41.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:41.543" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/80148-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:49.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:49.591" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210831 13:30:41.540" endtime="20210831 13:30:49.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:49.594" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210831 13:30:49.592" endtime="20210831 13:30:49.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:49.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:49.594" endtime="20210831 13:30:49.596"/>
</kw>
<status status="PASS" starttime="20210831 13:30:41.539" endtime="20210831 13:30:49.596"/>
</kw>
<msg timestamp="20210831 13:30:49.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:41.539" endtime="20210831 13:30:49.597"/>
</kw>
<msg timestamp="20210831 13:30:49.597" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210831 13:30:41.538" endtime="20210831 13:30:49.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:49.605" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80148-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:30:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:30:55.556" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:30:49.602" endtime="20210831 13:30:55.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:30:55.558" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:30:55.557" endtime="20210831 13:30:55.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:30:55.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:30:55.558" endtime="20210831 13:30:55.559"/>
</kw>
<status status="PASS" starttime="20210831 13:30:49.600" endtime="20210831 13:30:55.560"/>
</kw>
<msg timestamp="20210831 13:30:55.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:49.599" endtime="20210831 13:30:55.560"/>
</kw>
<msg timestamp="20210831 13:30:55.561" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:30:49.598" endtime="20210831 13:30:55.561"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:30:55.561" endtime="20210831 13:30:55.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:30:55.570" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/80148-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:02.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:02.897" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:30:55.566" endtime="20210831 13:31:02.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:02.898" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:31:02.897" endtime="20210831 13:31:02.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:02.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:02.899" endtime="20210831 13:31:02.900"/>
</kw>
<status status="PASS" starttime="20210831 13:30:55.565" endtime="20210831 13:31:02.901"/>
</kw>
<msg timestamp="20210831 13:31:02.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:30:55.564" endtime="20210831 13:31:02.902"/>
</kw>
<msg timestamp="20210831 13:31:02.902" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:30:55.563" endtime="20210831 13:31:02.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:02.909" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80148-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:11.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:11.917" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:31:02.906" endtime="20210831 13:31:11.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:11.918" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:31:11.917" endtime="20210831 13:31:11.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:11.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:11.918" endtime="20210831 13:31:11.919"/>
</kw>
<status status="PASS" starttime="20210831 13:31:02.904" endtime="20210831 13:31:11.919"/>
</kw>
<msg timestamp="20210831 13:31:11.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:02.904" endtime="20210831 13:31:11.919"/>
</kw>
<msg timestamp="20210831 13:31:11.920" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:31:02.902" endtime="20210831 13:31:11.920"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:31:11.920" endtime="20210831 13:31:11.921"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:11.927" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/80148-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:18.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:18.393" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:31:11.923" endtime="20210831 13:31:18.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:18.394" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:31:18.394" endtime="20210831 13:31:18.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:18.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:18.395" endtime="20210831 13:31:18.395"/>
</kw>
<status status="PASS" starttime="20210831 13:31:11.922" endtime="20210831 13:31:18.396"/>
</kw>
<msg timestamp="20210831 13:31:18.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:11.922" endtime="20210831 13:31:18.396"/>
</kw>
<msg timestamp="20210831 13:31:18.396" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:31:11.921" endtime="20210831 13:31:18.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:18.400" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/80148-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:24.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:24.792" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210831 13:31:18.398" endtime="20210831 13:31:24.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:24.794" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:31:24.793" endtime="20210831 13:31:24.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:24.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:24.795" endtime="20210831 13:31:24.796"/>
</kw>
<status status="PASS" starttime="20210831 13:31:18.397" endtime="20210831 13:31:24.797"/>
</kw>
<msg timestamp="20210831 13:31:24.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:18.397" endtime="20210831 13:31:24.797"/>
</kw>
<msg timestamp="20210831 13:31:24.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210831 13:31:18.396" endtime="20210831 13:31:24.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:31:24.797" endtime="20210831 13:31:24.798"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:31:24.798" endtime="20210831 13:31:24.799"/>
</kw>
<status status="PASS" starttime="20210831 13:30:26.458" endtime="20210831 13:31:24.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:30:26.171" endtime="20210831 13:31:24.800"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:24.809" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:24.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:24.815" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:31:24.805" endtime="20210831 13:31:24.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:24.818" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:31:24.816" endtime="20210831 13:31:24.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:24.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:24.819" endtime="20210831 13:31:24.820"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.804" endtime="20210831 13:31:24.820"/>
</kw>
<msg timestamp="20210831 13:31:24.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:24.804" endtime="20210831 13:31:24.820"/>
</kw>
<msg timestamp="20210831 13:31:24.821" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:31:24.803" endtime="20210831 13:31:24.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:31:24.822" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:31:24.821" endtime="20210831 13:31:24.822"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:24.828" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:31:24.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:31:24.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:31:24.825" endtime="20210831 13:31:24.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:31:24.840" level="INFO"/>
<status status="PASS" starttime="20210831 13:31:24.839" endtime="20210831 13:31:24.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:31:24.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:31:24.841" endtime="20210831 13:31:24.842"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.824" endtime="20210831 13:31:24.842"/>
</kw>
<msg timestamp="20210831 13:31:24.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:24.824" endtime="20210831 13:31:24.843"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.823" endtime="20210831 13:31:24.843"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.822" endtime="20210831 13:31:24.843"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.802" endtime="20210831 13:31:24.843"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.802" endtime="20210831 13:31:24.843"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:31:24.849" level="INFO">Running command 'ozone sh key put o3://om:9862/80148-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:34:35.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:34:35.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:31:24.847" endtime="20210831 13:34:35.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:34:35.950" level="INFO"/>
<status status="PASS" starttime="20210831 13:34:35.949" endtime="20210831 13:34:35.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:34:35.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:34:35.950" endtime="20210831 13:34:35.951"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.846" endtime="20210831 13:34:35.951"/>
</kw>
<msg timestamp="20210831 13:34:35.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:31:24.845" endtime="20210831 13:34:35.952"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.844" endtime="20210831 13:34:35.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:34:35.957" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80148-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:34:44.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:34:44.426" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:34:35.954" endtime="20210831 13:34:44.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:34:44.427" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:34:44.426" endtime="20210831 13:34:44.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:34:44.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:34:44.427" endtime="20210831 13:34:44.428"/>
</kw>
<status status="PASS" starttime="20210831 13:34:35.954" endtime="20210831 13:34:44.428"/>
</kw>
<msg timestamp="20210831 13:34:44.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:34:35.953" endtime="20210831 13:34:44.429"/>
</kw>
<msg timestamp="20210831 13:34:44.429" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:34:35.952" endtime="20210831 13:34:44.429"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:34:44.429" endtime="20210831 13:34:44.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:34:44.436" level="INFO">Running command 'ozone sh key addacl o3://om:9862/80148-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:34:51.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:34:51.589" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:34:44.433" endtime="20210831 13:34:51.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:34:51.590" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:34:51.589" endtime="20210831 13:34:51.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:34:51.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:34:51.590" endtime="20210831 13:34:51.591"/>
</kw>
<status status="PASS" starttime="20210831 13:34:44.432" endtime="20210831 13:34:51.591"/>
</kw>
<msg timestamp="20210831 13:34:51.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:34:44.431" endtime="20210831 13:34:51.592"/>
</kw>
<msg timestamp="20210831 13:34:51.592" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210831 13:34:44.430" endtime="20210831 13:34:51.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:34:51.599" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80148-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:34:59.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:34:59.353" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:34:51.596" endtime="20210831 13:34:59.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:34:59.354" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:34:59.353" endtime="20210831 13:34:59.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:34:59.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:34:59.355" endtime="20210831 13:34:59.355"/>
</kw>
<status status="PASS" starttime="20210831 13:34:51.595" endtime="20210831 13:34:59.355"/>
</kw>
<msg timestamp="20210831 13:34:59.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:34:51.594" endtime="20210831 13:34:59.356"/>
</kw>
<msg timestamp="20210831 13:34:59.356" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:34:51.593" endtime="20210831 13:34:59.356"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:34:59.357" endtime="20210831 13:34:59.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:34:59.363" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/80148-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:07.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:07.144" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:34:59.360" endtime="20210831 13:35:07.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:07.147" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:35:07.146" endtime="20210831 13:35:07.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:07.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:07.148" endtime="20210831 13:35:07.150"/>
</kw>
<status status="PASS" starttime="20210831 13:34:59.360" endtime="20210831 13:35:07.151"/>
</kw>
<msg timestamp="20210831 13:35:07.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:34:59.359" endtime="20210831 13:35:07.152"/>
</kw>
<msg timestamp="20210831 13:35:07.152" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210831 13:34:59.358" endtime="20210831 13:35:07.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:07.161" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80148-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:14.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:14.959" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:35:07.157" endtime="20210831 13:35:14.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:14.962" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:35:14.960" endtime="20210831 13:35:14.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:14.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:14.962" endtime="20210831 13:35:14.964"/>
</kw>
<status status="PASS" starttime="20210831 13:35:07.155" endtime="20210831 13:35:14.965"/>
</kw>
<msg timestamp="20210831 13:35:14.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:07.155" endtime="20210831 13:35:14.965"/>
</kw>
<msg timestamp="20210831 13:35:14.965" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210831 13:35:07.153" endtime="20210831 13:35:14.965"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:35:14.966" endtime="20210831 13:35:14.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:14.977" level="INFO">Running command 'ozone sh key setacl o3://om:9862/80148-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:22.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:22.598" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:35:14.970" endtime="20210831 13:35:22.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:22.599" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:35:22.599" endtime="20210831 13:35:22.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:22.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:22.600" endtime="20210831 13:35:22.601"/>
</kw>
<status status="PASS" starttime="20210831 13:35:14.968" endtime="20210831 13:35:22.601"/>
</kw>
<msg timestamp="20210831 13:35:22.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:14.968" endtime="20210831 13:35:22.601"/>
</kw>
<msg timestamp="20210831 13:35:22.602" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:35:14.967" endtime="20210831 13:35:22.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:22.606" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80148-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:30.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:30.468" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210831 13:35:22.604" endtime="20210831 13:35:30.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:30.472" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:35:30.470" endtime="20210831 13:35:30.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:30.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:30.473" endtime="20210831 13:35:30.474"/>
</kw>
<status status="PASS" starttime="20210831 13:35:22.603" endtime="20210831 13:35:30.475"/>
</kw>
<msg timestamp="20210831 13:35:30.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:22.603" endtime="20210831 13:35:30.475"/>
</kw>
<msg timestamp="20210831 13:35:30.476" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210831 13:35:22.602" endtime="20210831 13:35:30.476"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:35:30.476" endtime="20210831 13:35:30.477"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:35:30.477" endtime="20210831 13:35:30.478"/>
</kw>
<status status="PASS" starttime="20210831 13:31:24.844" endtime="20210831 13:35:30.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:31:24.800" endtime="20210831 13:35:30.479"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:30.491" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:30.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:30.497" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:35:30.487" endtime="20210831 13:35:30.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:30.499" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:35:30.497" endtime="20210831 13:35:30.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:30.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:30.499" endtime="20210831 13:35:30.500"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.486" endtime="20210831 13:35:30.501"/>
</kw>
<msg timestamp="20210831 13:35:30.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:30.486" endtime="20210831 13:35:30.501"/>
</kw>
<msg timestamp="20210831 13:35:30.502" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:35:30.485" endtime="20210831 13:35:30.502"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:35:30.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:35:30.502" endtime="20210831 13:35:30.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:30.508" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:30.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:30.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:35:30.506" endtime="20210831 13:35:30.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:30.624" level="INFO"/>
<status status="PASS" starttime="20210831 13:35:30.623" endtime="20210831 13:35:30.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:30.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:30.624" endtime="20210831 13:35:30.625"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.505" endtime="20210831 13:35:30.625"/>
</kw>
<msg timestamp="20210831 13:35:30.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:30.505" endtime="20210831 13:35:30.625"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.504" endtime="20210831 13:35:30.625"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.503" endtime="20210831 13:35:30.626"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.484" endtime="20210831 13:35:30.626"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.482" endtime="20210831 13:35:30.626"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:30.631" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:37.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:37.482" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210831 13:35:30.628" endtime="20210831 13:35:37.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:37.483" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210831 13:35:37.482" endtime="20210831 13:35:37.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:37.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:37.483" endtime="20210831 13:35:37.484"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.628" endtime="20210831 13:35:37.484"/>
</kw>
<msg timestamp="20210831 13:35:37.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:30.627" endtime="20210831 13:35:37.485"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.627" endtime="20210831 13:35:37.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:37.489" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:43.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:43.210" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:35:37.487" endtime="20210831 13:35:43.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:43.211" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:35:43.210" endtime="20210831 13:35:43.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:43.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:43.212" endtime="20210831 13:35:43.212"/>
</kw>
<status status="PASS" starttime="20210831 13:35:37.486" endtime="20210831 13:35:43.213"/>
</kw>
<msg timestamp="20210831 13:35:43.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:37.486" endtime="20210831 13:35:43.213"/>
</kw>
<msg timestamp="20210831 13:35:43.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:35:37.485" endtime="20210831 13:35:43.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:35:43.214" endtime="20210831 13:35:43.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:43.219" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:48.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:48.198" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210831 13:35:43.217" endtime="20210831 13:35:48.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:48.200" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210831 13:35:48.199" endtime="20210831 13:35:48.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:48.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:48.201" endtime="20210831 13:35:48.202"/>
</kw>
<status status="PASS" starttime="20210831 13:35:43.216" endtime="20210831 13:35:48.203"/>
</kw>
<msg timestamp="20210831 13:35:48.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:43.216" endtime="20210831 13:35:48.203"/>
</kw>
<msg timestamp="20210831 13:35:48.204" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210831 13:35:43.215" endtime="20210831 13:35:48.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:48.209" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:35:53.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:35:53.947" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:35:48.207" endtime="20210831 13:35:53.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:35:53.948" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:35:53.947" endtime="20210831 13:35:53.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:35:53.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:35:53.949" endtime="20210831 13:35:53.950"/>
</kw>
<status status="PASS" starttime="20210831 13:35:48.206" endtime="20210831 13:35:53.951"/>
</kw>
<msg timestamp="20210831 13:35:53.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:48.206" endtime="20210831 13:35:53.951"/>
</kw>
<msg timestamp="20210831 13:35:53.951" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210831 13:35:48.204" endtime="20210831 13:35:53.951"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:35:53.952" endtime="20210831 13:35:53.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:35:53.958" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:36:00.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:36:00.766" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:35:53.955" endtime="20210831 13:36:00.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:36:00.769" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:36:00.767" endtime="20210831 13:36:00.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:36:00.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:36:00.770" endtime="20210831 13:36:00.771"/>
</kw>
<status status="PASS" starttime="20210831 13:35:53.954" endtime="20210831 13:36:00.772"/>
</kw>
<msg timestamp="20210831 13:36:00.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:35:53.954" endtime="20210831 13:36:00.773"/>
</kw>
<msg timestamp="20210831 13:36:00.774" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210831 13:35:53.953" endtime="20210831 13:36:00.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:36:00.780" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:36:06.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:36:06.797" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210831 13:36:00.777" endtime="20210831 13:36:06.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:36:06.799" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:36:06.798" endtime="20210831 13:36:06.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:36:06.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:36:06.799" endtime="20210831 13:36:06.799"/>
</kw>
<status status="PASS" starttime="20210831 13:36:00.776" endtime="20210831 13:36:06.800"/>
</kw>
<msg timestamp="20210831 13:36:06.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:36:00.775" endtime="20210831 13:36:06.800"/>
</kw>
<msg timestamp="20210831 13:36:06.800" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210831 13:36:00.774" endtime="20210831 13:36:06.800"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:36:06.801" endtime="20210831 13:36:06.801"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:36:06.801" endtime="20210831 13:36:06.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:36:06.806" level="INFO">Running command 'ozone sh key put o3://om:9862/80148-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:19.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:19.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:36:06.804" endtime="20210831 13:39:19.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:19.025" level="INFO"/>
<status status="PASS" starttime="20210831 13:39:19.024" endtime="20210831 13:39:19.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:19.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:19.025" endtime="20210831 13:39:19.025"/>
</kw>
<status status="PASS" starttime="20210831 13:36:06.803" endtime="20210831 13:39:19.026"/>
</kw>
<msg timestamp="20210831 13:39:19.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:36:06.803" endtime="20210831 13:39:19.026"/>
</kw>
<status status="PASS" starttime="20210831 13:36:06.802" endtime="20210831 13:39:19.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:19.033" level="INFO">Running command 'ozone sh key getacl o3://om:9862/80148-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:26.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:26.519" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:39:19.029" endtime="20210831 13:39:26.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:26.520" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210831 13:39:26.519" endtime="20210831 13:39:26.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:26.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:26.521" endtime="20210831 13:39:26.522"/>
</kw>
<status status="PASS" starttime="20210831 13:39:19.028" endtime="20210831 13:39:26.522"/>
</kw>
<msg timestamp="20210831 13:39:26.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:19.028" endtime="20210831 13:39:26.523"/>
</kw>
<msg timestamp="20210831 13:39:26.523" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210831 13:39:19.027" endtime="20210831 13:39:26.523"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:39:26.523" endtime="20210831 13:39:26.524"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210831 13:39:26.524" endtime="20210831 13:39:26.525"/>
</kw>
<status status="PASS" starttime="20210831 13:35:30.626" endtime="20210831 13:39:26.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210831 13:35:30.481" endtime="20210831 13:39:26.526"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:26.535" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:26.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:26.539" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:39:26.532" endtime="20210831 13:39:26.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:26.541" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:39:26.540" endtime="20210831 13:39:26.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:26.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:26.542" endtime="20210831 13:39:26.543"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.531" endtime="20210831 13:39:26.543"/>
</kw>
<msg timestamp="20210831 13:39:26.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:26.530" endtime="20210831 13:39:26.544"/>
</kw>
<msg timestamp="20210831 13:39:26.544" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:39:26.530" endtime="20210831 13:39:26.544"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:39:26.545" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:39:26.545" endtime="20210831 13:39:26.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:26.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:26.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:26.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:39:26.548" endtime="20210831 13:39:26.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:26.596" level="INFO"/>
<status status="PASS" starttime="20210831 13:39:26.595" endtime="20210831 13:39:26.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:26.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:26.597" endtime="20210831 13:39:26.597"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.547" endtime="20210831 13:39:26.597"/>
</kw>
<msg timestamp="20210831 13:39:26.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:26.547" endtime="20210831 13:39:26.598"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.546" endtime="20210831 13:39:26.598"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.546" endtime="20210831 13:39:26.598"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.529" endtime="20210831 13:39:26.598"/>
</kw>
<status status="PASS" starttime="20210831 13:39:26.527" endtime="20210831 13:39:26.599"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:26.603" level="INFO">Running command 'ozone sh volume info o3:///80148-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:31.702" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:39:31.702" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80148-rpcwport is not found</msg>
<status status="PASS" starttime="20210831 13:39:26.601" endtime="20210831 13:39:31.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:31.703" level="INFO">VOLUME_NOT_FOUND Volume 80148-rpcwport is not found</msg>
<status status="PASS" starttime="20210831 13:39:31.702" endtime="20210831 13:39:31.703"/>
</kw>
<msg timestamp="20210831 13:39:31.704" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80148-rpcwport is not found</msg>
<status status="PASS" starttime="20210831 13:39:26.600" endtime="20210831 13:39:31.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:39:31.704" endtime="20210831 13:39:31.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:31.710" level="INFO">Running command 'ozone sh volume create o3:///80148-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:39.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:39.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:39:31.708" endtime="20210831 13:39:39.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:39.177" level="INFO"/>
<status status="PASS" starttime="20210831 13:39:39.175" endtime="20210831 13:39:39.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:39.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:39.178" endtime="20210831 13:39:39.180"/>
</kw>
<status status="PASS" starttime="20210831 13:39:31.707" endtime="20210831 13:39:39.181"/>
</kw>
<msg timestamp="20210831 13:39:39.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:31.707" endtime="20210831 13:39:39.181"/>
</kw>
<msg timestamp="20210831 13:39:39.182" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210831 13:39:31.705" endtime="20210831 13:39:39.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:39:39.182" endtime="20210831 13:39:39.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:39.192" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="80148-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:46.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:46.657" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:39:39.187" endtime="20210831 13:39:46.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:46.659" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:39:39.094Z",
  "modificationTime": "2021-08-31T13:39:39.094Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:39:46.658" endtime="20210831 13:39:46.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:46.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:46.659" endtime="20210831 13:39:46.660"/>
</kw>
<status status="PASS" starttime="20210831 13:39:39.186" endtime="20210831 13:39:46.660"/>
</kw>
<msg timestamp="20210831 13:39:46.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:39.185" endtime="20210831 13:39:46.660"/>
</kw>
<msg timestamp="20210831 13:39:46.661" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:39:39.183" endtime="20210831 13:39:46.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:39:46.661" endtime="20210831 13:39:46.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:46.667" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80148-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:39:54.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:39:54.380" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:39:46.664" endtime="20210831 13:39:54.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:39:54.382" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:39:39.094Z",
  "modificationTime": "2021-08-31T13:39:39.094Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:39:54.381" endtime="20210831 13:39:54.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:39:54.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:39:54.382" endtime="20210831 13:39:54.383"/>
</kw>
<status status="PASS" starttime="20210831 13:39:46.664" endtime="20210831 13:39:54.383"/>
</kw>
<msg timestamp="20210831 13:39:54.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:46.663" endtime="20210831 13:39:54.384"/>
</kw>
<msg timestamp="20210831 13:39:54.384" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210831 13:39:46.662" endtime="20210831 13:39:54.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:39:54.385" endtime="20210831 13:39:54.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:39:54.393" level="INFO">Running command 'ozone sh volume setquota o3:///80148-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:01.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:01.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:39:54.390" endtime="20210831 13:40:01.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:01.898" level="INFO"/>
<status status="PASS" starttime="20210831 13:40:01.897" endtime="20210831 13:40:01.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:01.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:01.898" endtime="20210831 13:40:01.899"/>
</kw>
<status status="PASS" starttime="20210831 13:39:54.389" endtime="20210831 13:40:01.899"/>
</kw>
<msg timestamp="20210831 13:40:01.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:39:54.389" endtime="20210831 13:40:01.899"/>
</kw>
<status status="PASS" starttime="20210831 13:39:54.386" endtime="20210831 13:40:01.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:01.905" level="INFO">Running command 'ozone sh volume info o3:///80148-rpcwport | jq -r '. | select(.name=="80148-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:09.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:09.484" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:01.903" endtime="20210831 13:40:09.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:09.487" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:09.486" endtime="20210831 13:40:09.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:09.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:09.488" endtime="20210831 13:40:09.489"/>
</kw>
<status status="PASS" starttime="20210831 13:40:01.902" endtime="20210831 13:40:09.489"/>
</kw>
<msg timestamp="20210831 13:40:09.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:01.902" endtime="20210831 13:40:09.490"/>
</kw>
<msg timestamp="20210831 13:40:09.491" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:01.900" endtime="20210831 13:40:09.491"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:09.491" endtime="20210831 13:40:09.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:09.498" level="INFO">Running command 'ozone sh bucket create o3:///80148-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:16.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:16.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:40:09.495" endtime="20210831 13:40:16.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:16.840" level="INFO"/>
<status status="PASS" starttime="20210831 13:40:16.838" endtime="20210831 13:40:16.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:16.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:16.840" endtime="20210831 13:40:16.841"/>
</kw>
<status status="PASS" starttime="20210831 13:40:09.494" endtime="20210831 13:40:16.842"/>
</kw>
<msg timestamp="20210831 13:40:16.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:09.494" endtime="20210831 13:40:16.842"/>
</kw>
<status status="PASS" starttime="20210831 13:40:09.492" endtime="20210831 13:40:16.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:16.849" level="INFO">Running command 'ozone sh bucket info o3:///80148-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:24.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:24.564" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210831 13:40:16.846" endtime="20210831 13:40:24.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:24.565" level="INFO">DISK</msg>
<status status="PASS" starttime="20210831 13:40:24.565" endtime="20210831 13:40:24.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:24.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:24.566" endtime="20210831 13:40:24.566"/>
</kw>
<status status="PASS" starttime="20210831 13:40:16.846" endtime="20210831 13:40:24.567"/>
</kw>
<msg timestamp="20210831 13:40:24.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:16.845" endtime="20210831 13:40:24.567"/>
</kw>
<msg timestamp="20210831 13:40:24.567" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210831 13:40:16.843" endtime="20210831 13:40:24.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:24.568" endtime="20210831 13:40:24.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:24.573" level="INFO">Running command 'ozone sh bucket info o3:///80148-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:29.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:29.239" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:24.571" endtime="20210831 13:40:29.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:29.241" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:29.240" endtime="20210831 13:40:29.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:29.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:29.241" endtime="20210831 13:40:29.242"/>
</kw>
<status status="PASS" starttime="20210831 13:40:24.570" endtime="20210831 13:40:29.242"/>
</kw>
<msg timestamp="20210831 13:40:29.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:24.570" endtime="20210831 13:40:29.242"/>
</kw>
<msg timestamp="20210831 13:40:29.243" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:40:24.569" endtime="20210831 13:40:29.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:29.243" endtime="20210831 13:40:29.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:29.250" level="INFO">Running command 'ozone sh bucket info o3:///80148-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:35.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:35.689" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210831 13:40:29.246" endtime="20210831 13:40:35.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:35.690" level="INFO">100</msg>
<status status="PASS" starttime="20210831 13:40:35.689" endtime="20210831 13:40:35.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:35.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:35.690" endtime="20210831 13:40:35.691"/>
</kw>
<status status="PASS" starttime="20210831 13:40:29.245" endtime="20210831 13:40:35.691"/>
</kw>
<msg timestamp="20210831 13:40:35.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:29.245" endtime="20210831 13:40:35.691"/>
</kw>
<msg timestamp="20210831 13:40:35.692" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210831 13:40:29.244" endtime="20210831 13:40:35.692"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:35.692" endtime="20210831 13:40:35.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:35.696" level="INFO">Running command 'ozone sh bucket setquota o3:///80148-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:42.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:42.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:40:35.694" endtime="20210831 13:40:42.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:42.270" level="INFO"/>
<status status="PASS" starttime="20210831 13:40:42.269" endtime="20210831 13:40:42.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:42.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:42.270" endtime="20210831 13:40:42.271"/>
</kw>
<status status="PASS" starttime="20210831 13:40:35.694" endtime="20210831 13:40:42.271"/>
</kw>
<msg timestamp="20210831 13:40:42.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:35.694" endtime="20210831 13:40:42.272"/>
</kw>
<status status="PASS" starttime="20210831 13:40:35.693" endtime="20210831 13:40:42.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:42.279" level="INFO">Running command 'ozone sh bucket info o3:///80148-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:50.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:50.120" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:40:42.276" endtime="20210831 13:40:50.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:50.123" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210831 13:40:50.121" endtime="20210831 13:40:50.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:50.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:50.123" endtime="20210831 13:40:50.125"/>
</kw>
<status status="PASS" starttime="20210831 13:40:42.274" endtime="20210831 13:40:50.125"/>
</kw>
<msg timestamp="20210831 13:40:50.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:42.273" endtime="20210831 13:40:50.125"/>
</kw>
<msg timestamp="20210831 13:40:50.126" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:40:42.272" endtime="20210831 13:40:50.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:50.126" endtime="20210831 13:40:50.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:50.132" level="INFO">Running command 'ozone sh bucket info o3:///80148-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:40:57.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:40:57.630" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210831 13:40:50.130" endtime="20210831 13:40:57.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:40:57.631" level="INFO">1000</msg>
<status status="PASS" starttime="20210831 13:40:57.631" endtime="20210831 13:40:57.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:40:57.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:40:57.632" endtime="20210831 13:40:57.632"/>
</kw>
<status status="PASS" starttime="20210831 13:40:50.129" endtime="20210831 13:40:57.633"/>
</kw>
<msg timestamp="20210831 13:40:57.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:50.128" endtime="20210831 13:40:57.633"/>
</kw>
<msg timestamp="20210831 13:40:57.633" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210831 13:40:50.127" endtime="20210831 13:40:57.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:40:57.634" endtime="20210831 13:40:57.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:40:57.639" level="INFO">Running command 'ozone sh bucket list o3:///80148-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:41:05.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:41:05.605" level="INFO">${output} = 80148-rpcwport</msg>
<status status="PASS" starttime="20210831 13:40:57.636" endtime="20210831 13:41:05.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:41:05.607" level="INFO">80148-rpcwport</msg>
<status status="PASS" starttime="20210831 13:41:05.606" endtime="20210831 13:41:05.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:41:05.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:41:05.607" endtime="20210831 13:41:05.608"/>
</kw>
<status status="PASS" starttime="20210831 13:40:57.636" endtime="20210831 13:41:05.608"/>
</kw>
<msg timestamp="20210831 13:41:05.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:40:57.635" endtime="20210831 13:41:05.609"/>
</kw>
<msg timestamp="20210831 13:41:05.609" level="INFO">${result} = 80148-rpcwport</msg>
<status status="PASS" starttime="20210831 13:40:57.634" endtime="20210831 13:41:05.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:41:05.609" endtime="20210831 13:41:05.610"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:41:05.616" level="INFO">Running command 'ozone sh key put o3:///80148-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:17.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:17.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:41:05.613" endtime="20210831 13:44:17.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:17.207" level="INFO"/>
<status status="PASS" starttime="20210831 13:44:17.206" endtime="20210831 13:44:17.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:17.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:17.208" endtime="20210831 13:44:17.209"/>
</kw>
<status status="PASS" starttime="20210831 13:41:05.613" endtime="20210831 13:44:17.210"/>
</kw>
<msg timestamp="20210831 13:44:17.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:41:05.612" endtime="20210831 13:44:17.210"/>
</kw>
<status status="PASS" starttime="20210831 13:41:05.612" endtime="20210831 13:44:17.210"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:17.217" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:17.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:17.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:44:17.214" endtime="20210831 13:44:17.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:17.222" level="INFO"/>
<status status="PASS" starttime="20210831 13:44:17.221" endtime="20210831 13:44:17.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:17.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:17.222" endtime="20210831 13:44:17.223"/>
</kw>
<status status="PASS" starttime="20210831 13:44:17.212" endtime="20210831 13:44:17.224"/>
</kw>
<msg timestamp="20210831 13:44:17.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:17.212" endtime="20210831 13:44:17.224"/>
</kw>
<status status="PASS" starttime="20210831 13:44:17.211" endtime="20210831 13:44:17.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:17.229" level="INFO">Running command 'ozone sh key get o3:///80148-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:26.527" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:44:17.227" endtime="20210831 13:44:26.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.528" endtime="20210831 13:44:26.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.529" endtime="20210831 13:44:26.529"/>
</kw>
<status status="FAIL" starttime="20210831 13:44:17.226" endtime="20210831 13:44:26.530"/>
</kw>
<msg timestamp="20210831 13:44:26.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:44:17.226" endtime="20210831 13:44:26.530"/>
</kw>
<status status="FAIL" starttime="20210831 13:44:17.225" endtime="20210831 13:44:26.530"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.531" endtime="20210831 13:44:26.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.531" endtime="20210831 13:44:26.531"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.531" endtime="20210831 13:44:26.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.532" endtime="20210831 13:44:26.532"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.532" endtime="20210831 13:44:26.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.532" endtime="20210831 13:44:26.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.533" endtime="20210831 13:44:26.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.533" endtime="20210831 13:44:26.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.533" endtime="20210831 13:44:26.533"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.534" endtime="20210831 13:44:26.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.535" endtime="20210831 13:44:26.535"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.535" endtime="20210831 13:44:26.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.536" endtime="20210831 13:44:26.536"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.537" endtime="20210831 13:44:26.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.538" endtime="20210831 13:44:26.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.538" endtime="20210831 13:44:26.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.539" endtime="20210831 13:44:26.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.539" endtime="20210831 13:44:26.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.540" endtime="20210831 13:44:26.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.541" endtime="20210831 13:44:26.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.542" endtime="20210831 13:44:26.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.542" endtime="20210831 13:44:26.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.543" endtime="20210831 13:44:26.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.544" endtime="20210831 13:44:26.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.544" endtime="20210831 13:44:26.545"/>
</kw>
<status status="FAIL" starttime="20210831 13:41:05.611" endtime="20210831 13:44:26.545"/>
</kw>
<status status="FAIL" starttime="20210831 13:41:05.610" endtime="20210831 13:44:26.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.546" endtime="20210831 13:44:26.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.547" endtime="20210831 13:44:26.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.548" endtime="20210831 13:44:26.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.549" endtime="20210831 13:44:26.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.550" endtime="20210831 13:44:26.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.550" endtime="20210831 13:44:26.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.551" endtime="20210831 13:44:26.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.551" endtime="20210831 13:44:26.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.553" endtime="20210831 13:44:26.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.553" endtime="20210831 13:44:26.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.554" endtime="20210831 13:44:26.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.554" endtime="20210831 13:44:26.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.555" endtime="20210831 13:44:26.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.556" endtime="20210831 13:44:26.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.557" endtime="20210831 13:44:26.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.558" endtime="20210831 13:44:26.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.559" endtime="20210831 13:44:26.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.559" endtime="20210831 13:44:26.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.560" endtime="20210831 13:44:26.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.560" endtime="20210831 13:44:26.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.560" endtime="20210831 13:44:26.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.561" endtime="20210831 13:44:26.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.562" endtime="20210831 13:44:26.563"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:44:26.563" endtime="20210831 13:44:26.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.564" endtime="20210831 13:44:26.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:44:26.564" endtime="20210831 13:44:26.564"/>
</kw>
<status status="FAIL" starttime="20210831 13:39:26.599" endtime="20210831 13:44:26.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210831 13:39:26.526" endtime="20210831 13:44:26.566">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:26.589" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:26.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:26.610" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 13:44:26.579" endtime="20210831 13:44:26.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:26.611" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 13:44:26.610" endtime="20210831 13:44:26.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:26.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:26.612" endtime="20210831 13:44:26.613"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.577" endtime="20210831 13:44:26.613"/>
</kw>
<msg timestamp="20210831 13:44:26.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:26.576" endtime="20210831 13:44:26.614"/>
</kw>
<msg timestamp="20210831 13:44:26.614" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 13:44:26.574" endtime="20210831 13:44:26.614"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 13:44:26.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 13:44:26.615" endtime="20210831 13:44:26.615"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:26.636" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:26.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:26.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:44:26.622" endtime="20210831 13:44:26.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:26.795" level="INFO"/>
<status status="PASS" starttime="20210831 13:44:26.794" endtime="20210831 13:44:26.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:26.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:26.795" endtime="20210831 13:44:26.796"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.621" endtime="20210831 13:44:26.797"/>
</kw>
<msg timestamp="20210831 13:44:26.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:26.618" endtime="20210831 13:44:26.797"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.617" endtime="20210831 13:44:26.797"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.616" endtime="20210831 13:44:26.798"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.573" endtime="20210831 13:44:26.798"/>
</kw>
<status status="PASS" starttime="20210831 13:44:26.571" endtime="20210831 13:44:26.798"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:26.809" level="INFO">Running command 'ozone sh volume info /80148-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:35.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 13:44:35.195" level="INFO">${output} = VOLUME_NOT_FOUND Volume 80148-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210831 13:44:26.806" endtime="20210831 13:44:35.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:35.198" level="INFO">VOLUME_NOT_FOUND Volume 80148-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210831 13:44:35.196" endtime="20210831 13:44:35.198"/>
</kw>
<msg timestamp="20210831 13:44:35.200" level="INFO">${result} = VOLUME_NOT_FOUND Volume 80148-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210831 13:44:26.804" endtime="20210831 13:44:35.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:44:35.200" endtime="20210831 13:44:35.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:35.210" level="INFO">Running command 'ozone sh volume create /80148-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:42.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:42.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:44:35.207" endtime="20210831 13:44:42.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:42.500" level="INFO"/>
<status status="PASS" starttime="20210831 13:44:42.499" endtime="20210831 13:44:42.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:42.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:42.500" endtime="20210831 13:44:42.501"/>
</kw>
<status status="PASS" starttime="20210831 13:44:35.205" endtime="20210831 13:44:42.501"/>
</kw>
<msg timestamp="20210831 13:44:42.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:35.204" endtime="20210831 13:44:42.502"/>
</kw>
<msg timestamp="20210831 13:44:42.502" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210831 13:44:35.202" endtime="20210831 13:44:42.502"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:44:42.502" endtime="20210831 13:44:42.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:42.508" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="80148-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:49.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:49.588" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210831 13:44:42.505" endtime="20210831 13:44:49.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:49.589" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:44:42.394Z",
  "modificationTime": "2021-08-31T13:44:42.394Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:44:49.589" endtime="20210831 13:44:49.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:49.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:49.590" endtime="20210831 13:44:49.590"/>
</kw>
<status status="PASS" starttime="20210831 13:44:42.505" endtime="20210831 13:44:49.591"/>
</kw>
<msg timestamp="20210831 13:44:49.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:42.504" endtime="20210831 13:44:49.591"/>
</kw>
<msg timestamp="20210831 13:44:49.591" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210831 13:44:42.503" endtime="20210831 13:44:49.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:44:49.591" endtime="20210831 13:44:49.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:49.597" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="80148-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:44:57.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:44:57.192" level="INFO">${output} = {
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210831 13:44:49.594" endtime="20210831 13:44:57.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:44:57.195" level="INFO">{
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-31T13:44:42.394Z",
  "modificationTime": "2021-08-31T13:44:42.394Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210831 13:44:57.193" endtime="20210831 13:44:57.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:44:57.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:44:57.195" endtime="20210831 13:44:57.198"/>
</kw>
<status status="PASS" starttime="20210831 13:44:49.593" endtime="20210831 13:44:57.199"/>
</kw>
<msg timestamp="20210831 13:44:57.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:49.593" endtime="20210831 13:44:57.200"/>
</kw>
<msg timestamp="20210831 13:44:57.200" level="INFO">${result} = {
  "metadata": {},
  "name": "80148-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210831 13:44:49.592" endtime="20210831 13:44:57.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 13:44:57.201" endtime="20210831 13:44:57.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:44:57.209" level="INFO">Running command 'ozone sh volume setquota /80148-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:02.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:02.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:44:57.206" endtime="20210831 13:45:02.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:02.509" level="INFO"/>
<status status="PASS" starttime="20210831 13:45:02.508" endtime="20210831 13:45:02.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:02.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:02.509" endtime="20210831 13:45:02.510"/>
</kw>
<status status="PASS" starttime="20210831 13:44:57.204" endtime="20210831 13:45:02.510"/>
</kw>
<msg timestamp="20210831 13:45:02.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:44:57.204" endtime="20210831 13:45:02.511"/>
</kw>
<status status="PASS" starttime="20210831 13:44:57.202" endtime="20210831 13:45:02.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:02.516" level="INFO">Running command 'ozone sh volume info /80148-rpcwoscheme | jq -r '. | select(.name=="80148-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:10.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:10.513" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:02.513" endtime="20210831 13:45:10.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:10.514" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:10.513" endtime="20210831 13:45:10.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:10.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:10.515" endtime="20210831 13:45:10.516"/>
</kw>
<status status="PASS" starttime="20210831 13:45:02.513" endtime="20210831 13:45:10.517"/>
</kw>
<msg timestamp="20210831 13:45:10.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:02.512" endtime="20210831 13:45:10.517"/>
</kw>
<msg timestamp="20210831 13:45:10.518" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:02.511" endtime="20210831 13:45:10.518"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:45:10.518" endtime="20210831 13:45:10.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:10.527" level="INFO">Running command 'ozone sh bucket create /80148-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:16.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:16.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:45:10.523" endtime="20210831 13:45:16.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:16.533" level="INFO"/>
<status status="PASS" starttime="20210831 13:45:16.532" endtime="20210831 13:45:16.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:16.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:16.534" endtime="20210831 13:45:16.535"/>
</kw>
<status status="PASS" starttime="20210831 13:45:10.522" endtime="20210831 13:45:16.535"/>
</kw>
<msg timestamp="20210831 13:45:16.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:10.521" endtime="20210831 13:45:16.535"/>
</kw>
<status status="PASS" starttime="20210831 13:45:10.519" endtime="20210831 13:45:16.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:16.539" level="INFO">Running command 'ozone sh bucket info /80148-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:22.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:22.874" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210831 13:45:16.537" endtime="20210831 13:45:22.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:22.876" level="INFO">DISK</msg>
<status status="PASS" starttime="20210831 13:45:22.875" endtime="20210831 13:45:22.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:22.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:22.876" endtime="20210831 13:45:22.876"/>
</kw>
<status status="PASS" starttime="20210831 13:45:16.537" endtime="20210831 13:45:22.877"/>
</kw>
<msg timestamp="20210831 13:45:22.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:16.536" endtime="20210831 13:45:22.877"/>
</kw>
<msg timestamp="20210831 13:45:22.878" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210831 13:45:16.536" endtime="20210831 13:45:22.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:45:22.878" endtime="20210831 13:45:22.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:22.882" level="INFO">Running command 'ozone sh bucket info /80148-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:30.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:30.607" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:22.880" endtime="20210831 13:45:30.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:30.609" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:30.608" endtime="20210831 13:45:30.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:30.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:30.610" endtime="20210831 13:45:30.611"/>
</kw>
<status status="PASS" starttime="20210831 13:45:22.880" endtime="20210831 13:45:30.612"/>
</kw>
<msg timestamp="20210831 13:45:30.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:22.879" endtime="20210831 13:45:30.612"/>
</kw>
<msg timestamp="20210831 13:45:30.613" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210831 13:45:22.878" endtime="20210831 13:45:30.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:45:30.613" endtime="20210831 13:45:30.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:30.621" level="INFO">Running command 'ozone sh bucket info /80148-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:38.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:38.801" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210831 13:45:30.618" endtime="20210831 13:45:38.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:38.803" level="INFO">100</msg>
<status status="PASS" starttime="20210831 13:45:38.802" endtime="20210831 13:45:38.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:38.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:38.803" endtime="20210831 13:45:38.804"/>
</kw>
<status status="PASS" starttime="20210831 13:45:30.617" endtime="20210831 13:45:38.804"/>
</kw>
<msg timestamp="20210831 13:45:38.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:30.616" endtime="20210831 13:45:38.804"/>
</kw>
<msg timestamp="20210831 13:45:38.805" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210831 13:45:30.614" endtime="20210831 13:45:38.805"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:45:38.805" endtime="20210831 13:45:38.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:38.811" level="INFO">Running command 'ozone sh bucket setquota /80148-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:46.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:46.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:45:38.808" endtime="20210831 13:45:46.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:46.278" level="INFO"/>
<status status="PASS" starttime="20210831 13:45:46.277" endtime="20210831 13:45:46.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:46.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:46.278" endtime="20210831 13:45:46.280"/>
</kw>
<status status="PASS" starttime="20210831 13:45:38.807" endtime="20210831 13:45:46.280"/>
</kw>
<msg timestamp="20210831 13:45:46.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:38.807" endtime="20210831 13:45:46.280"/>
</kw>
<status status="PASS" starttime="20210831 13:45:38.806" endtime="20210831 13:45:46.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:46.285" level="INFO">Running command 'ozone sh bucket info /80148-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:45:54.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:45:54.311" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:45:46.283" endtime="20210831 13:45:54.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:45:54.313" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210831 13:45:54.312" endtime="20210831 13:45:54.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:45:54.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:45:54.314" endtime="20210831 13:45:54.315"/>
</kw>
<status status="PASS" starttime="20210831 13:45:46.282" endtime="20210831 13:45:54.315"/>
</kw>
<msg timestamp="20210831 13:45:54.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:46.282" endtime="20210831 13:45:54.316"/>
</kw>
<msg timestamp="20210831 13:45:54.316" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210831 13:45:46.281" endtime="20210831 13:45:54.316"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:45:54.316" endtime="20210831 13:45:54.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:45:54.322" level="INFO">Running command 'ozone sh bucket info /80148-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:46:00.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:46:00.592" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210831 13:45:54.320" endtime="20210831 13:46:00.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:46:00.594" level="INFO">1000</msg>
<status status="PASS" starttime="20210831 13:46:00.592" endtime="20210831 13:46:00.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:46:00.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:46:00.594" endtime="20210831 13:46:00.595"/>
</kw>
<status status="PASS" starttime="20210831 13:45:54.319" endtime="20210831 13:46:00.595"/>
</kw>
<msg timestamp="20210831 13:46:00.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:45:54.318" endtime="20210831 13:46:00.596"/>
</kw>
<msg timestamp="20210831 13:46:00.596" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210831 13:45:54.317" endtime="20210831 13:46:00.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:46:00.596" endtime="20210831 13:46:00.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:46:00.602" level="INFO">Running command 'ozone sh bucket list /80148-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:46:08.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:46:08.539" level="INFO">${output} = 80148-rpcwoscheme</msg>
<status status="PASS" starttime="20210831 13:46:00.599" endtime="20210831 13:46:08.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:46:08.543" level="INFO">80148-rpcwoscheme</msg>
<status status="PASS" starttime="20210831 13:46:08.540" endtime="20210831 13:46:08.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:46:08.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:46:08.544" endtime="20210831 13:46:08.544"/>
</kw>
<status status="PASS" starttime="20210831 13:46:00.599" endtime="20210831 13:46:08.545"/>
</kw>
<msg timestamp="20210831 13:46:08.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:46:00.598" endtime="20210831 13:46:08.546"/>
</kw>
<msg timestamp="20210831 13:46:08.547" level="INFO">${result} = 80148-rpcwoscheme</msg>
<status status="PASS" starttime="20210831 13:46:00.597" endtime="20210831 13:46:08.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210831 13:46:08.548" endtime="20210831 13:46:08.548"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:46:08.554" level="INFO">Running command 'ozone sh key put /80148-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:49:19.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:49:19.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:46:08.551" endtime="20210831 13:49:19.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:49:19.906" level="INFO"/>
<status status="PASS" starttime="20210831 13:49:19.905" endtime="20210831 13:49:19.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:49:19.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:49:19.907" endtime="20210831 13:49:19.908"/>
</kw>
<status status="PASS" starttime="20210831 13:46:08.551" endtime="20210831 13:49:19.909"/>
</kw>
<msg timestamp="20210831 13:49:19.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:46:08.550" endtime="20210831 13:49:19.909"/>
</kw>
<status status="PASS" starttime="20210831 13:46:08.550" endtime="20210831 13:49:19.910"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:49:19.915" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:49:19.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 13:49:19.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 13:49:19.912" endtime="20210831 13:49:19.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 13:49:19.921" level="INFO"/>
<status status="PASS" starttime="20210831 13:49:19.919" endtime="20210831 13:49:19.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 13:49:19.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 13:49:19.921" endtime="20210831 13:49:19.922"/>
</kw>
<status status="PASS" starttime="20210831 13:49:19.911" endtime="20210831 13:49:19.923"/>
</kw>
<msg timestamp="20210831 13:49:19.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 13:49:19.911" endtime="20210831 13:49:19.923"/>
</kw>
<status status="PASS" starttime="20210831 13:49:19.910" endtime="20210831 13:49:19.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 13:49:19.931" level="INFO">Running command 'ozone sh key get /80148-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 13:49:26.570" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210831 13:49:19.927" endtime="20210831 13:49:26.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.570" endtime="20210831 13:49:26.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.571" endtime="20210831 13:49:26.571"/>
</kw>
<status status="FAIL" starttime="20210831 13:49:19.927" endtime="20210831 13:49:26.572"/>
</kw>
<msg timestamp="20210831 13:49:26.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210831 13:49:19.926" endtime="20210831 13:49:26.572"/>
</kw>
<status status="FAIL" starttime="20210831 13:49:19.924" endtime="20210831 13:49:26.573"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.574" endtime="20210831 13:49:26.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.574" endtime="20210831 13:49:26.578"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.579" endtime="20210831 13:49:26.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.583" endtime="20210831 13:49:26.583"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.584" endtime="20210831 13:49:26.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.584" endtime="20210831 13:49:26.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.587" endtime="20210831 13:49:26.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.587" endtime="20210831 13:49:26.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.587" endtime="20210831 13:49:26.588"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.589" endtime="20210831 13:49:26.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.589" endtime="20210831 13:49:26.590"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.590" endtime="20210831 13:49:26.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.590" endtime="20210831 13:49:26.590"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.590" endtime="20210831 13:49:26.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.591" endtime="20210831 13:49:26.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.591" endtime="20210831 13:49:26.591"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.593" endtime="20210831 13:49:26.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.593" endtime="20210831 13:49:26.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.593" endtime="20210831 13:49:26.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.593" endtime="20210831 13:49:26.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.593" endtime="20210831 13:49:26.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.594" endtime="20210831 13:49:26.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.594" endtime="20210831 13:49:26.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.594" endtime="20210831 13:49:26.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.598" endtime="20210831 13:49:26.598"/>
</kw>
<status status="FAIL" starttime="20210831 13:46:08.549" endtime="20210831 13:49:26.601"/>
</kw>
<status status="FAIL" starttime="20210831 13:46:08.548" endtime="20210831 13:49:26.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.603" endtime="20210831 13:49:26.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.607" endtime="20210831 13:49:26.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.608" endtime="20210831 13:49:26.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.608" endtime="20210831 13:49:26.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.610" endtime="20210831 13:49:26.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.610" endtime="20210831 13:49:26.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.611" endtime="20210831 13:49:26.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.611" endtime="20210831 13:49:26.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.611" endtime="20210831 13:49:26.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.613" endtime="20210831 13:49:26.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.615" endtime="20210831 13:49:26.615"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.615" endtime="20210831 13:49:26.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.616" endtime="20210831 13:49:26.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.616" endtime="20210831 13:49:26.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.620" endtime="20210831 13:49:26.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.620" endtime="20210831 13:49:26.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.621" endtime="20210831 13:49:26.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.621" endtime="20210831 13:49:26.622"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.624" endtime="20210831 13:49:26.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.624" endtime="20210831 13:49:26.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.624" endtime="20210831 13:49:26.624"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.625" endtime="20210831 13:49:26.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.625" endtime="20210831 13:49:26.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210831 13:49:26.628" endtime="20210831 13:49:26.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.630" endtime="20210831 13:49:26.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210831 13:49:26.632" endtime="20210831 13:49:26.632"/>
</kw>
<status status="FAIL" starttime="20210831 13:44:26.799" endtime="20210831 13:49:26.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210831 13:44:26.568" endtime="20210831 13:49:26.634">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210831 13:24:28.519" endtime="20210831 13:49:26.644"/>
</suite>
<status status="FAIL" starttime="20210831 12:59:55.453" endtime="20210831 13:49:26.668"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:49.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:49.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:49.552" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210831 12:59:49.537" endtime="20210831 12:59:49.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:49.553" level="INFO">scm</msg>
<status status="PASS" starttime="20210831 12:59:49.552" endtime="20210831 12:59:49.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:49.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:49.554" endtime="20210831 12:59:49.554"/>
</kw>
<status status="PASS" starttime="20210831 12:59:49.536" endtime="20210831 12:59:49.555"/>
</kw>
<msg timestamp="20210831 12:59:49.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:49.536" endtime="20210831 12:59:49.555"/>
</kw>
<msg timestamp="20210831 12:59:49.555" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210831 12:59:49.535" endtime="20210831 12:59:49.555"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 12:59:49.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 12:59:49.555" endtime="20210831 12:59:49.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 12:59:49.561" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 12:59:49.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 12:59:49.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 12:59:49.558" endtime="20210831 12:59:49.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 12:59:49.571" level="INFO"/>
<status status="PASS" starttime="20210831 12:59:49.570" endtime="20210831 12:59:49.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 12:59:49.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 12:59:49.571" endtime="20210831 12:59:49.572"/>
</kw>
<status status="PASS" starttime="20210831 12:59:49.558" endtime="20210831 12:59:49.572"/>
</kw>
<msg timestamp="20210831 12:59:49.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 12:59:49.557" endtime="20210831 12:59:49.572"/>
</kw>
<status status="PASS" starttime="20210831 12:59:49.557" endtime="20210831 12:59:49.573"/>
</kw>
<status status="PASS" starttime="20210831 12:59:49.556" endtime="20210831 12:59:49.573"/>
</kw>
<status status="PASS" starttime="20210831 12:59:49.534" endtime="20210831 12:59:49.573"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 12:59:49.533" endtime="20210831 12:59:49.573"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210831 12:59:49.466" endtime="20210831 12:59:49.575"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2971324"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
