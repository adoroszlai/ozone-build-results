<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210831 02:15:38.715" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:13:56.554" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:05.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20210831 02:14:05.686" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210831 02:13:56.551" endtime="20210831 02:14:05.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:05.687" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210831 02:14:05.687" endtime="20210831 02:14:05.687"/>
</kw>
<msg timestamp="20210831 02:14:05.688" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210831 02:13:56.550" endtime="20210831 02:14:05.688"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:05.693" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:13.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:14:13.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:14:05.691" endtime="20210831 02:14:13.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:13.130" level="INFO"/>
<status status="PASS" starttime="20210831 02:14:13.130" endtime="20210831 02:14:13.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:14:13.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:14:13.133" endtime="20210831 02:14:13.134"/>
</kw>
<status status="PASS" starttime="20210831 02:14:05.690" endtime="20210831 02:14:13.134"/>
</kw>
<msg timestamp="20210831 02:14:13.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:05.690" endtime="20210831 02:14:13.134"/>
</kw>
<msg timestamp="20210831 02:14:13.135" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210831 02:14:05.689" endtime="20210831 02:14:13.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 02:14:13.147" endtime="20210831 02:14:13.148"/>
</kw>
<status status="PASS" starttime="20210831 02:14:05.689" endtime="20210831 02:14:13.148"/>
</kw>
<status status="PASS" starttime="20210831 02:14:05.688" endtime="20210831 02:14:13.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:13.168" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:20.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:14:20.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:14:13.151" endtime="20210831 02:14:20.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:20.510" level="INFO"/>
<status status="PASS" starttime="20210831 02:14:20.509" endtime="20210831 02:14:20.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:14:20.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:14:20.510" endtime="20210831 02:14:20.511"/>
</kw>
<status status="PASS" starttime="20210831 02:14:13.150" endtime="20210831 02:14:20.511"/>
</kw>
<msg timestamp="20210831 02:14:20.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:13.150" endtime="20210831 02:14:20.511"/>
</kw>
<status status="PASS" starttime="20210831 02:14:13.149" endtime="20210831 02:14:20.512"/>
</kw>
<status status="PASS" starttime="20210831 02:14:13.149" endtime="20210831 02:14:20.512"/>
</kw>
<status status="PASS" starttime="20210831 02:14:13.148" endtime="20210831 02:14:20.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210831 02:14:20.517" endtime="20210831 02:14:20.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:20.539" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:28.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:14:28.327" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T02:14...</msg>
<status status="PASS" starttime="20210831 02:14:20.519" endtime="20210831 02:14:28.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:28.328" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T02:14:20.191Z",
  "modificationTime" : "2021-08-31T02:14:20.191Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210831 02:14:28.327" endtime="20210831 02:14:28.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:14:28.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:14:28.328" endtime="20210831 02:14:28.329"/>
</kw>
<status status="PASS" starttime="20210831 02:14:20.518" endtime="20210831 02:14:28.330"/>
</kw>
<msg timestamp="20210831 02:14:28.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:20.518" endtime="20210831 02:14:28.330"/>
</kw>
<msg timestamp="20210831 02:14:28.330" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-31T02:14...</msg>
<status status="PASS" starttime="20210831 02:14:20.517" endtime="20210831 02:14:28.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210831 02:14:28.331" endtime="20210831 02:14:28.331"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210831 02:14:28.336" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210831 02:14:28.335" endtime="20210831 02:14:28.336"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210831 02:14:28.337" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210831 02:14:28.336" endtime="20210831 02:14:28.337"/>
</kw>
<status status="PASS" starttime="20210831 02:14:28.335" endtime="20210831 02:14:28.337"/>
</kw>
<msg timestamp="20210831 02:14:28.337" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210831 02:14:28.334" endtime="20210831 02:14:28.337"/>
</kw>
<status status="PASS" starttime="20210831 02:14:28.333" endtime="20210831 02:14:28.338"/>
</kw>
<msg timestamp="20210831 02:14:28.338" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210831 02:14:28.332" endtime="20210831 02:14:28.338"/>
</kw>
<msg timestamp="20210831 02:14:28.338" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210831 02:14:28.331" endtime="20210831 02:14:28.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:28.342" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:35.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:14:35.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:14:28.339" endtime="20210831 02:14:35.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:35.527" level="INFO"/>
<status status="PASS" starttime="20210831 02:14:35.526" endtime="20210831 02:14:35.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:14:35.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:14:35.527" endtime="20210831 02:14:35.528"/>
</kw>
<status status="PASS" starttime="20210831 02:14:28.339" endtime="20210831 02:14:35.528"/>
</kw>
<msg timestamp="20210831 02:14:35.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:28.339" endtime="20210831 02:14:35.528"/>
</kw>
<status status="PASS" starttime="20210831 02:14:28.338" endtime="20210831 02:14:35.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:35.540" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:14:49.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:14:49.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:14:35.530" endtime="20210831 02:14:49.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:14:49.564" level="INFO"/>
<status status="PASS" starttime="20210831 02:14:49.563" endtime="20210831 02:14:49.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:14:49.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:14:49.565" endtime="20210831 02:14:49.565"/>
</kw>
<status status="PASS" starttime="20210831 02:14:35.530" endtime="20210831 02:14:49.566"/>
</kw>
<msg timestamp="20210831 02:14:49.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:35.529" endtime="20210831 02:14:49.566"/>
</kw>
<status status="PASS" starttime="20210831 02:14:35.529" endtime="20210831 02:14:49.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:14:49.570" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:15:01.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:15:01.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:14:49.568" endtime="20210831 02:15:01.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:15:01.106" level="INFO"/>
<status status="PASS" starttime="20210831 02:15:01.105" endtime="20210831 02:15:01.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:15:01.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:15:01.106" endtime="20210831 02:15:01.107"/>
</kw>
<status status="PASS" starttime="20210831 02:14:49.567" endtime="20210831 02:15:01.107"/>
</kw>
<msg timestamp="20210831 02:15:01.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:14:49.567" endtime="20210831 02:15:01.108"/>
</kw>
<status status="PASS" starttime="20210831 02:14:49.566" endtime="20210831 02:15:01.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:15:01.112" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:15:12.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:15:12.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:15:01.109" endtime="20210831 02:15:12.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:15:12.766" level="INFO"/>
<status status="PASS" starttime="20210831 02:15:12.765" endtime="20210831 02:15:12.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:15:12.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:15:12.767" endtime="20210831 02:15:12.767"/>
</kw>
<status status="PASS" starttime="20210831 02:15:01.109" endtime="20210831 02:15:12.767"/>
</kw>
<msg timestamp="20210831 02:15:12.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:15:01.109" endtime="20210831 02:15:12.768"/>
</kw>
<status status="PASS" starttime="20210831 02:15:01.108" endtime="20210831 02:15:12.768"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 02:13:56.549" endtime="20210831 02:15:12.768"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210831 02:15:12.775" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210831 02:15:12.775" endtime="20210831 02:15:12.775"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210831 02:15:12.776" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210831 02:15:12.776" endtime="20210831 02:15:12.776"/>
</kw>
<status status="PASS" starttime="20210831 02:15:12.774" endtime="20210831 02:15:12.776"/>
</kw>
<msg timestamp="20210831 02:15:12.776" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210831 02:15:12.773" endtime="20210831 02:15:12.777"/>
</kw>
<status status="PASS" starttime="20210831 02:15:12.772" endtime="20210831 02:15:12.777"/>
</kw>
<msg timestamp="20210831 02:15:12.777" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210831 02:15:12.772" endtime="20210831 02:15:12.777"/>
</kw>
<msg timestamp="20210831 02:15:12.777" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210831 02:15:12.771" endtime="20210831 02:15:12.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:15:12.782" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:15:19.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:15:19.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:15:12.779" endtime="20210831 02:15:19.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:15:19.955" level="INFO"/>
<status status="PASS" starttime="20210831 02:15:19.953" endtime="20210831 02:15:19.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:15:19.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:15:19.955" endtime="20210831 02:15:19.956"/>
</kw>
<status status="PASS" starttime="20210831 02:15:12.778" endtime="20210831 02:15:19.956"/>
</kw>
<msg timestamp="20210831 02:15:19.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:15:12.778" endtime="20210831 02:15:19.956"/>
</kw>
<status status="PASS" starttime="20210831 02:15:12.777" endtime="20210831 02:15:19.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:15:19.961" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:15:27.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:15:27.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:15:19.958" endtime="20210831 02:15:27.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:15:27.100" level="INFO"/>
<status status="PASS" starttime="20210831 02:15:27.099" endtime="20210831 02:15:27.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:15:27.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:15:27.100" endtime="20210831 02:15:27.101"/>
</kw>
<status status="PASS" starttime="20210831 02:15:19.958" endtime="20210831 02:15:27.101"/>
</kw>
<msg timestamp="20210831 02:15:27.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:15:19.957" endtime="20210831 02:15:27.101"/>
</kw>
<status status="PASS" starttime="20210831 02:15:19.957" endtime="20210831 02:15:27.102"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 02:15:12.770" endtime="20210831 02:15:27.102"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210831 02:13:56.488" endtime="20210831 02:15:27.104"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:13:50.385" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:13:50.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:13:50.389" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210831 02:13:50.381" endtime="20210831 02:13:50.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:13:50.390" level="INFO">om</msg>
<status status="PASS" starttime="20210831 02:13:50.389" endtime="20210831 02:13:50.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:13:50.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:13:50.390" endtime="20210831 02:13:50.391"/>
</kw>
<status status="PASS" starttime="20210831 02:13:50.380" endtime="20210831 02:13:50.391"/>
</kw>
<msg timestamp="20210831 02:13:50.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:13:50.380" endtime="20210831 02:13:50.391"/>
</kw>
<msg timestamp="20210831 02:13:50.392" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210831 02:13:50.379" endtime="20210831 02:13:50.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210831 02:13:50.392" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210831 02:13:50.392" endtime="20210831 02:13:50.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210831 02:13:50.397" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210831 02:13:50.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210831 02:13:50.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210831 02:13:50.395" endtime="20210831 02:13:50.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210831 02:13:50.405" level="INFO"/>
<status status="PASS" starttime="20210831 02:13:50.404" endtime="20210831 02:13:50.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210831 02:13:50.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210831 02:13:50.405" endtime="20210831 02:13:50.405"/>
</kw>
<status status="PASS" starttime="20210831 02:13:50.394" endtime="20210831 02:13:50.406"/>
</kw>
<msg timestamp="20210831 02:13:50.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210831 02:13:50.394" endtime="20210831 02:13:50.406"/>
</kw>
<status status="PASS" starttime="20210831 02:13:50.393" endtime="20210831 02:13:50.406"/>
</kw>
<status status="PASS" starttime="20210831 02:13:50.393" endtime="20210831 02:13:50.406"/>
</kw>
<status status="PASS" starttime="20210831 02:13:50.379" endtime="20210831 02:13:50.406"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210831 02:13:50.378" endtime="20210831 02:13:50.406"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210831 02:13:50.304" endtime="20210831 02:13:50.408"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="90720"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
