<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210818 11:44:44.541" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:35:09.279" level="INFO">${random} = 75364</msg>
<status status="PASS" starttime="20210818 11:35:09.278" endtime="20210818 11:35:09.279"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:35:09.282" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-75364 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:35:13.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:35:13.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:35:09.280" endtime="20210818 11:35:13.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:35:13.474" level="INFO"/>
<status status="PASS" starttime="20210818 11:35:13.474" endtime="20210818 11:35:13.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:35:13.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:35:13.475" endtime="20210818 11:35:13.475"/>
</kw>
<status status="PASS" starttime="20210818 11:35:09.280" endtime="20210818 11:35:13.476"/>
</kw>
<msg timestamp="20210818 11:35:13.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:35:09.280" endtime="20210818 11:35:13.476"/>
</kw>
<msg timestamp="20210818 11:35:13.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:35:09.279" endtime="20210818 11:35:13.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:35:13.476" endtime="20210818 11:35:13.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:35:09.277" endtime="20210818 11:35:13.477"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:35:09.229" endtime="20210818 11:35:13.478"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:34:54.674" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:34:57.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:34:57.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:54.673" endtime="20210818 11:34:57.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:34:57.319" level="INFO"/>
<status status="PASS" starttime="20210818 11:34:57.318" endtime="20210818 11:34:57.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:34:57.320" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:34:57.319" endtime="20210818 11:34:57.320"/>
</kw>
<status status="PASS" starttime="20210818 11:34:54.672" endtime="20210818 11:34:57.320"/>
</kw>
<msg timestamp="20210818 11:34:57.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:34:54.672" endtime="20210818 11:34:57.321"/>
</kw>
<msg timestamp="20210818 11:34:57.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:54.671" endtime="20210818 11:34:57.321"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:34:57.321" endtime="20210818 11:34:57.322"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:34:57.325" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:34:59.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:34:59.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:57.323" endtime="20210818 11:34:59.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:34:59.770" level="INFO"/>
<status status="PASS" starttime="20210818 11:34:59.769" endtime="20210818 11:34:59.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:34:59.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:34:59.770" endtime="20210818 11:34:59.771"/>
</kw>
<status status="PASS" starttime="20210818 11:34:57.323" endtime="20210818 11:34:59.771"/>
</kw>
<msg timestamp="20210818 11:34:59.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:34:57.322" endtime="20210818 11:34:59.771"/>
</kw>
<msg timestamp="20210818 11:34:59.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:57.322" endtime="20210818 11:34:59.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:34:59.772" endtime="20210818 11:34:59.772"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:34:59.778" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:35:05.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:35:05.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:59.777" endtime="20210818 11:35:05.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:35:05.325" level="INFO"/>
<status status="PASS" starttime="20210818 11:35:05.324" endtime="20210818 11:35:05.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:35:05.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:35:05.325" endtime="20210818 11:35:05.326"/>
</kw>
<status status="PASS" starttime="20210818 11:34:59.774" endtime="20210818 11:35:05.326"/>
</kw>
<msg timestamp="20210818 11:35:05.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:34:59.773" endtime="20210818 11:35:05.326"/>
</kw>
<msg timestamp="20210818 11:35:05.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:34:59.772" endtime="20210818 11:35:05.327"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:35:05.327" endtime="20210818 11:35:05.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:34:54.670" endtime="20210818 11:35:05.329"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210818 11:34:54.619" endtime="20210818 11:35:05.331"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:36:36.414" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:36:39.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:36:39.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:36.411" endtime="20210818 11:36:39.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:36:39.365" level="INFO"/>
<status status="PASS" starttime="20210818 11:36:39.364" endtime="20210818 11:36:39.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:36:39.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:36:39.365" endtime="20210818 11:36:39.366"/>
</kw>
<status status="PASS" starttime="20210818 11:36:36.410" endtime="20210818 11:36:39.366"/>
</kw>
<msg timestamp="20210818 11:36:39.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:36:36.410" endtime="20210818 11:36:39.367"/>
</kw>
<msg timestamp="20210818 11:36:39.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:36.409" endtime="20210818 11:36:39.367"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:36:39.367" endtime="20210818 11:36:39.368"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:36:39.372" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:36:42.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:36:42.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:39.370" endtime="20210818 11:36:42.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:36:42.066" level="INFO"/>
<status status="PASS" starttime="20210818 11:36:42.065" endtime="20210818 11:36:42.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:36:42.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:36:42.066" endtime="20210818 11:36:42.067"/>
</kw>
<status status="PASS" starttime="20210818 11:36:39.369" endtime="20210818 11:36:42.068"/>
</kw>
<msg timestamp="20210818 11:36:42.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:36:39.369" endtime="20210818 11:36:42.068"/>
</kw>
<msg timestamp="20210818 11:36:42.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:39.368" endtime="20210818 11:36:42.068"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:36:42.068" endtime="20210818 11:36:42.069"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:36:42.073" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:36:47.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:36:47.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:42.071" endtime="20210818 11:36:47.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:36:47.755" level="INFO"/>
<status status="PASS" starttime="20210818 11:36:47.754" endtime="20210818 11:36:47.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:36:47.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:36:47.755" endtime="20210818 11:36:47.756"/>
</kw>
<status status="PASS" starttime="20210818 11:36:42.070" endtime="20210818 11:36:47.756"/>
</kw>
<msg timestamp="20210818 11:36:47.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:36:42.070" endtime="20210818 11:36:47.756"/>
</kw>
<msg timestamp="20210818 11:36:47.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:42.069" endtime="20210818 11:36:47.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:36:47.757" endtime="20210818 11:36:47.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:36:36.408" endtime="20210818 11:36:47.758"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210818 11:36:36.337" endtime="20210818 11:36:47.759"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:36:51.978" level="INFO">${random} = 68976</msg>
<status status="PASS" starttime="20210818 11:36:51.977" endtime="20210818 11:36:51.978"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:36:51.984" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-68976 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:36:56.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:36:56.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:51.980" endtime="20210818 11:36:56.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:36:56.699" level="INFO"/>
<status status="PASS" starttime="20210818 11:36:56.698" endtime="20210818 11:36:56.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:36:56.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:36:56.700" endtime="20210818 11:36:56.700"/>
</kw>
<status status="PASS" starttime="20210818 11:36:51.979" endtime="20210818 11:36:56.701"/>
</kw>
<msg timestamp="20210818 11:36:56.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:36:51.979" endtime="20210818 11:36:56.701"/>
</kw>
<msg timestamp="20210818 11:36:56.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:51.978" endtime="20210818 11:36:56.701"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:36:56.702" endtime="20210818 11:36:56.702"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:36:51.976" endtime="20210818 11:36:56.703"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:36:51.897" endtime="20210818 11:36:56.705"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:36:26.661" level="INFO">${random} = 04387</msg>
<status status="PASS" starttime="20210818 11:36:26.660" endtime="20210818 11:36:26.661"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:36:26.667" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-04387 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:36:32.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:36:32.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:26.664" endtime="20210818 11:36:32.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:36:32.109" level="INFO"/>
<status status="PASS" starttime="20210818 11:36:32.108" endtime="20210818 11:36:32.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:36:32.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:36:32.109" endtime="20210818 11:36:32.110"/>
</kw>
<status status="PASS" starttime="20210818 11:36:26.663" endtime="20210818 11:36:32.110"/>
</kw>
<msg timestamp="20210818 11:36:32.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:36:26.663" endtime="20210818 11:36:32.111"/>
</kw>
<msg timestamp="20210818 11:36:32.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:36:26.662" endtime="20210818 11:36:32.111"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:36:32.111" endtime="20210818 11:36:32.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:36:26.660" endtime="20210818 11:36:32.112"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:36:26.592" endtime="20210818 11:36:32.113"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="36712"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:38:47.713" level="INFO">${random} = 23418</msg>
<status status="PASS" starttime="20210818 11:38:47.712" endtime="20210818 11:38:47.713"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:38:47.716" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-23418 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:38:51.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:38:51.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:47.715" endtime="20210818 11:38:51.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:38:51.972" level="INFO"/>
<status status="PASS" starttime="20210818 11:38:51.971" endtime="20210818 11:38:51.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:38:51.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:38:51.972" endtime="20210818 11:38:51.973"/>
</kw>
<status status="PASS" starttime="20210818 11:38:47.714" endtime="20210818 11:38:51.973"/>
</kw>
<msg timestamp="20210818 11:38:51.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:38:47.714" endtime="20210818 11:38:51.973"/>
</kw>
<msg timestamp="20210818 11:38:51.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:47.713" endtime="20210818 11:38:51.973"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:38:51.974" endtime="20210818 11:38:51.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:38:47.712" endtime="20210818 11:38:51.974"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:38:47.637" endtime="20210818 11:38:51.975"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:38:32.224" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:38:34.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:38:34.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:32.222" endtime="20210818 11:38:34.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:38:34.683" level="INFO"/>
<status status="PASS" starttime="20210818 11:38:34.683" endtime="20210818 11:38:34.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:38:34.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:38:34.684" endtime="20210818 11:38:34.685"/>
</kw>
<status status="PASS" starttime="20210818 11:38:32.222" endtime="20210818 11:38:34.685"/>
</kw>
<msg timestamp="20210818 11:38:34.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:38:32.221" endtime="20210818 11:38:34.685"/>
</kw>
<msg timestamp="20210818 11:38:34.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:32.221" endtime="20210818 11:38:34.687"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:38:34.688" endtime="20210818 11:38:34.688"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:38:34.696" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:38:37.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:38:37.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:34.691" endtime="20210818 11:38:37.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:38:37.663" level="INFO"/>
<status status="PASS" starttime="20210818 11:38:37.662" endtime="20210818 11:38:37.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:38:37.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:38:37.663" endtime="20210818 11:38:37.664"/>
</kw>
<status status="PASS" starttime="20210818 11:38:34.691" endtime="20210818 11:38:37.664"/>
</kw>
<msg timestamp="20210818 11:38:37.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:38:34.690" endtime="20210818 11:38:37.665"/>
</kw>
<msg timestamp="20210818 11:38:37.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:34.690" endtime="20210818 11:38:37.665"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:38:37.665" endtime="20210818 11:38:37.666"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:38:37.671" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:38:43.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:38:43.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:37.669" endtime="20210818 11:38:43.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:38:43.582" level="INFO"/>
<status status="PASS" starttime="20210818 11:38:43.582" endtime="20210818 11:38:43.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:38:43.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:38:43.583" endtime="20210818 11:38:43.583"/>
</kw>
<status status="PASS" starttime="20210818 11:38:37.667" endtime="20210818 11:38:43.584"/>
</kw>
<msg timestamp="20210818 11:38:43.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:38:37.667" endtime="20210818 11:38:43.584"/>
</kw>
<msg timestamp="20210818 11:38:43.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210818 11:38:37.666" endtime="20210818 11:38:43.584"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:38:43.584" endtime="20210818 11:38:43.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:38:32.220" endtime="20210818 11:38:43.585"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210818 11:38:32.163" endtime="20210818 11:38:43.586"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:24.648" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:40:24.647" endtime="20210818 11:40:24.648"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:24.649" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:24.648" endtime="20210818 11:40:24.649"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:24.649" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:24.649" endtime="20210818 11:40:24.650"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:24.650" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:24.650" endtime="20210818 11:40:24.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:24.652" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:24.652" level="INFO">${version_file_contents} = #Wed Aug 18 11:39:46 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286759143
clusterID=b40b06ab-70e1-4422-94af-1a13a200172a
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210818 11:40:24.651" endtime="20210818 11:40:24.652"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:24.653" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:24.652" endtime="20210818 11:40:24.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:24.653" endtime="20210818 11:40:24.654"/>
</kw>
<status status="PASS" starttime="20210818 11:40:24.651" endtime="20210818 11:40:24.654"/>
</kw>
<status status="PASS" starttime="20210818 11:40:24.650" endtime="20210818 11:40:24.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:24.646" endtime="20210818 11:40:24.654"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:24.570" endtime="20210818 11:40:24.655"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210818 11:41:27.141" endtime="20210818 11:41:27.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:41:27.147" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:43:10.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:43:10.888" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210818 11:41:27.144" endtime="20210818 11:43:10.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:43:10.889" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210818 11:43:10.888" endtime="20210818 11:43:10.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:43:10.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:43:10.890" endtime="20210818 11:43:10.890"/>
</kw>
<status status="PASS" starttime="20210818 11:41:27.143" endtime="20210818 11:43:10.891"/>
</kw>
<msg timestamp="20210818 11:43:10.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:41:27.143" endtime="20210818 11:43:10.891"/>
</kw>
<msg timestamp="20210818 11:43:10.891" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210818 11:41:27.142" endtime="20210818 11:43:10.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:43:10.892" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210818 11:43:10.892" endtime="20210818 11:43:10.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:41:27.140" endtime="20210818 11:43:10.892"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210818 11:43:10.894" endtime="20210818 11:43:10.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:43:10.899" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:43:14.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:43:14.110" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210818 11:43:10.897" endtime="20210818 11:43:14.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:43:14.112" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210818 11:43:14.111" endtime="20210818 11:43:14.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:43:14.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:43:14.112" endtime="20210818 11:43:14.113"/>
</kw>
<status status="PASS" starttime="20210818 11:43:10.896" endtime="20210818 11:43:14.113"/>
</kw>
<msg timestamp="20210818 11:43:14.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:43:10.895" endtime="20210818 11:43:14.114"/>
</kw>
<msg timestamp="20210818 11:43:14.114" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210818 11:43:10.895" endtime="20210818 11:43:14.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:43:14.115" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210818 11:43:14.114" endtime="20210818 11:43:14.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:10.893" endtime="20210818 11:43:14.115"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210818 11:41:27.060" endtime="20210818 11:43:14.116"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:18.706" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210818 11:43:18.705" endtime="20210818 11:43:18.706"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:18.707" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:18.706" endtime="20210818 11:43:18.707"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:18.707" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:18.707" endtime="20210818 11:43:18.708"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:18.708" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:18.708" endtime="20210818 11:43:18.708"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:18.710" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:18.710" level="INFO">${version_file_contents} = #Wed Aug 18 11:41:35 UTC 2021
cTime=1629286663123
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
nodeType=SCM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f703
layoutVersion=2
</msg>
<status status="PASS" starttime="20210818 11:43:18.709" endtime="20210818 11:43:18.710"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:18.711" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210818 11:43:18.710" endtime="20210818 11:43:18.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:18.711" endtime="20210818 11:43:18.712"/>
</kw>
<status status="PASS" starttime="20210818 11:43:18.709" endtime="20210818 11:43:18.712"/>
</kw>
<status status="PASS" starttime="20210818 11:43:18.709" endtime="20210818 11:43:18.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:18.704" endtime="20210818 11:43:18.713"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:18.632" endtime="20210818 11:43:18.713"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:23.123" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:43:23.122" endtime="20210818 11:43:23.123"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:23.124" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:23.124" endtime="20210818 11:43:23.124"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:23.125" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:23.124" endtime="20210818 11:43:23.125"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:23.125" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:23.125" endtime="20210818 11:43:23.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:23.127" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:23.127" level="INFO">${version_file_contents} = #Wed Aug 18 11:41:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286759143
clusterID=b40b06ab-70e1-4422-94af-1a13a200172a
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210818 11:43:23.127" endtime="20210818 11:43:23.127"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:23.128" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210818 11:43:23.128" endtime="20210818 11:43:23.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:23.128" endtime="20210818 11:43:23.129"/>
</kw>
<status status="PASS" starttime="20210818 11:43:23.126" endtime="20210818 11:43:23.129"/>
</kw>
<status status="PASS" starttime="20210818 11:43:23.126" endtime="20210818 11:43:23.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:23.122" endtime="20210818 11:43:23.130"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:23.048" endtime="20210818 11:43:23.131"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:27.664" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:43:27.663" endtime="20210818 11:43:27.664"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:27.665" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:27.664" endtime="20210818 11:43:27.665"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:27.666" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:27.665" endtime="20210818 11:43:27.666"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:27.666" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:27.666" endtime="20210818 11:43:27.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:27.668" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:27.668" level="INFO">${version_file_contents} = #Wed Aug 18 11:41:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286761781
clusterID=a06cfdfa-68e9-45c8-a170-14f0943c8762
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210818 11:43:27.667" endtime="20210818 11:43:27.668"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:27.669" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210818 11:43:27.668" endtime="20210818 11:43:27.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:27.669" endtime="20210818 11:43:27.670"/>
</kw>
<status status="PASS" starttime="20210818 11:43:27.667" endtime="20210818 11:43:27.670"/>
</kw>
<status status="PASS" starttime="20210818 11:43:27.667" endtime="20210818 11:43:27.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:27.662" endtime="20210818 11:43:27.670"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:27.586" endtime="20210818 11:43:27.671"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:32.084" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:43:32.084" endtime="20210818 11:43:32.085"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:32.085" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:32.085" endtime="20210818 11:43:32.085"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:32.086" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:32.085" endtime="20210818 11:43:32.086"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:32.087" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:32.086" endtime="20210818 11:43:32.087"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:32.088" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:32.088" level="INFO">${version_file_contents} = #Wed Aug 18 11:41:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286761124
clusterID=60f1035d-884d-4564-a480-c9b6b8a8b4f5
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210818 11:43:32.088" endtime="20210818 11:43:32.089"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:32.089" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210818 11:43:32.089" endtime="20210818 11:43:32.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:32.089" endtime="20210818 11:43:32.090"/>
</kw>
<status status="PASS" starttime="20210818 11:43:32.087" endtime="20210818 11:43:32.090"/>
</kw>
<status status="PASS" starttime="20210818 11:43:32.087" endtime="20210818 11:43:32.090"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:32.083" endtime="20210818 11:43:32.090"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:31.997" endtime="20210818 11:43:32.092"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:36.730" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:43:36.729" endtime="20210818 11:43:36.730"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:36.731" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:36.730" endtime="20210818 11:43:36.731"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:36.731" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:36.731" endtime="20210818 11:43:36.732"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:36.732" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:36.732" endtime="20210818 11:43:36.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:36.734" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:36.734" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:01 UTC 2021
cTime=1629286664942
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=8a186091-6c7f-4faa-af4d-2b312d7ce695
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:43:36.734" endtime="20210818 11:43:36.734"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:36.735" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:43:36.734" endtime="20210818 11:43:36.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:36.735" endtime="20210818 11:43:36.736"/>
</kw>
<status status="PASS" starttime="20210818 11:43:36.733" endtime="20210818 11:43:36.736"/>
</kw>
<status status="PASS" starttime="20210818 11:43:36.733" endtime="20210818 11:43:36.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:36.728" endtime="20210818 11:43:36.736"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:36.645" endtime="20210818 11:43:36.737"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:41.142" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:43:41.141" endtime="20210818 11:43:41.142"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:41.143" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:41.143" endtime="20210818 11:43:41.143"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:41.144" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:41.144" endtime="20210818 11:43:41.144"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:41.145" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:41.144" endtime="20210818 11:43:41.145"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:41.147" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:41.147" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:01 UTC 2021
cTime=1629286662810
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=05a523a0-502b-4884-b346-5757eae469db
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:43:41.146" endtime="20210818 11:43:41.147"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:41.148" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:43:41.147" endtime="20210818 11:43:41.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:41.148" endtime="20210818 11:43:41.149"/>
</kw>
<status status="PASS" starttime="20210818 11:43:41.146" endtime="20210818 11:43:41.149"/>
</kw>
<status status="PASS" starttime="20210818 11:43:41.145" endtime="20210818 11:43:41.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:41.141" endtime="20210818 11:43:41.150"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:41.066" endtime="20210818 11:43:41.150"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:45.649" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:43:45.648" endtime="20210818 11:43:45.650"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:43:45.650" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:43:45.650" endtime="20210818 11:43:45.650"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:43:45.651" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:43:45.650" endtime="20210818 11:43:45.651"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:43:45.652" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:43:45.651" endtime="20210818 11:43:45.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:43:45.653" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:43:45.654" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:02 UTC 2021
cTime=1629286664712
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=506b51e5-cea6-4a1b-a8fb-4e5b4c525e2c
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:43:45.653" endtime="20210818 11:43:45.654"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:43:45.654" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:43:45.654" endtime="20210818 11:43:45.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:45.655" endtime="20210818 11:43:45.655"/>
</kw>
<status status="PASS" starttime="20210818 11:43:45.652" endtime="20210818 11:43:45.655"/>
</kw>
<status status="PASS" starttime="20210818 11:43:45.652" endtime="20210818 11:43:45.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:45.647" endtime="20210818 11:43:45.656"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:43:45.566" endtime="20210818 11:43:45.657"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:43:50.213" level="INFO">${random} = 51855</msg>
<status status="PASS" starttime="20210818 11:43:50.212" endtime="20210818 11:43:50.213"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:43:50.226" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-51855 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:43:55.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:43:55.219" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:43:50.215" endtime="20210818 11:43:55.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:43:55.220" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:43:55.220" endtime="20210818 11:43:55.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:43:55.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:43:55.221" endtime="20210818 11:43:55.221"/>
</kw>
<status status="PASS" starttime="20210818 11:43:50.214" endtime="20210818 11:43:55.222"/>
</kw>
<msg timestamp="20210818 11:43:55.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:43:50.214" endtime="20210818 11:43:55.222"/>
</kw>
<msg timestamp="20210818 11:43:55.222" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:43:50.213" endtime="20210818 11:43:55.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:43:55.223" endtime="20210818 11:43:55.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:50.211" endtime="20210818 11:43:55.224"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:43:50.128" endtime="20210818 11:43:55.226"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:43:59.577" level="INFO">${random} = 31560</msg>
<status status="PASS" starttime="20210818 11:43:59.577" endtime="20210818 11:43:59.577"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:43:59.584" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-31560 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:44:04.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:44:04.423" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:43:59.579" endtime="20210818 11:44:04.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:44:04.425" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:04.424" endtime="20210818 11:44:04.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:44:04.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:44:04.425" endtime="20210818 11:44:04.426"/>
</kw>
<status status="PASS" starttime="20210818 11:43:59.579" endtime="20210818 11:44:04.426"/>
</kw>
<msg timestamp="20210818 11:44:04.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:43:59.578" endtime="20210818 11:44:04.426"/>
</kw>
<msg timestamp="20210818 11:44:04.426" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:43:59.577" endtime="20210818 11:44:04.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:44:04.427" endtime="20210818 11:44:04.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:43:59.575" endtime="20210818 11:44:04.427"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:43:59.499" endtime="20210818 11:44:04.429"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:28.977" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:40:28.976" endtime="20210818 11:40:28.977"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:28.977" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:28.977" endtime="20210818 11:40:28.977"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:28.978" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:28.978" endtime="20210818 11:40:28.978"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:28.979" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:28.978" endtime="20210818 11:40:28.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:28.980" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:28.980" level="INFO">${version_file_contents} = #Wed Aug 18 11:39:46 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286761781
clusterID=a06cfdfa-68e9-45c8-a170-14f0943c8762
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210818 11:40:28.980" endtime="20210818 11:40:28.981"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:28.981" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:28.981" endtime="20210818 11:40:28.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:28.982" endtime="20210818 11:40:28.982"/>
</kw>
<status status="PASS" starttime="20210818 11:40:28.979" endtime="20210818 11:40:28.982"/>
</kw>
<status status="PASS" starttime="20210818 11:40:28.979" endtime="20210818 11:40:28.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:28.975" endtime="20210818 11:40:28.983"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:28.907" endtime="20210818 11:40:28.984"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:44:08.817" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:44:11.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:44:11.681" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:08.813" endtime="20210818 11:44:11.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:44:11.683" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:11.682" endtime="20210818 11:44:11.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:44:11.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:44:11.683" endtime="20210818 11:44:11.684"/>
</kw>
<status status="PASS" starttime="20210818 11:44:08.812" endtime="20210818 11:44:11.684"/>
</kw>
<msg timestamp="20210818 11:44:11.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:44:08.812" endtime="20210818 11:44:11.684"/>
</kw>
<msg timestamp="20210818 11:44:11.685" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:08.811" endtime="20210818 11:44:11.685"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:44:11.685" endtime="20210818 11:44:11.685"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:44:11.689" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:44:14.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:44:14.524" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:11.687" endtime="20210818 11:44:14.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:44:14.526" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:14.525" endtime="20210818 11:44:14.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:44:14.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:44:14.527" endtime="20210818 11:44:14.529"/>
</kw>
<status status="PASS" starttime="20210818 11:44:11.687" endtime="20210818 11:44:14.529"/>
</kw>
<msg timestamp="20210818 11:44:14.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:44:11.686" endtime="20210818 11:44:14.530"/>
</kw>
<msg timestamp="20210818 11:44:14.530" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:11.685" endtime="20210818 11:44:14.530"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:44:14.530" endtime="20210818 11:44:14.531"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:44:14.536" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:44:20.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:44:20.265" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:14.533" endtime="20210818 11:44:20.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:44:20.266" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:20.266" endtime="20210818 11:44:20.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:44:20.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:44:20.267" endtime="20210818 11:44:20.267"/>
</kw>
<status status="PASS" starttime="20210818 11:44:14.532" endtime="20210818 11:44:20.268"/>
</kw>
<msg timestamp="20210818 11:44:20.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:44:14.532" endtime="20210818 11:44:20.268"/>
</kw>
<msg timestamp="20210818 11:44:20.269" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:14.531" endtime="20210818 11:44:20.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:44:20.269" endtime="20210818 11:44:20.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:44:08.810" endtime="20210818 11:44:20.270"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210818 11:44:08.741" endtime="20210818 11:44:20.271"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:44:24.632" level="INFO">${random} = 09315</msg>
<status status="PASS" starttime="20210818 11:44:24.631" endtime="20210818 11:44:24.632"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:44:24.638" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-09315 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:44:29.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:44:29.497" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:24.634" endtime="20210818 11:44:29.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:44:29.499" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:29.498" endtime="20210818 11:44:29.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:44:29.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:44:29.499" endtime="20210818 11:44:29.500"/>
</kw>
<status status="PASS" starttime="20210818 11:44:24.634" endtime="20210818 11:44:29.500"/>
</kw>
<msg timestamp="20210818 11:44:29.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:44:24.633" endtime="20210818 11:44:29.501"/>
</kw>
<msg timestamp="20210818 11:44:29.501" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:44:24.632" endtime="20210818 11:44:29.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:44:29.501" endtime="20210818 11:44:29.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:44:24.631" endtime="20210818 11:44:29.502"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:44:24.562" endtime="20210818 11:44:29.503"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:33.385" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210818 11:40:33.385" endtime="20210818 11:40:33.385"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:33.386" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:33.386" endtime="20210818 11:40:33.386"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:33.387" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:33.386" endtime="20210818 11:40:33.387"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:33.388" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:33.387" endtime="20210818 11:40:33.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:33.389" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:33.390" level="INFO">${version_file_contents} = #Wed Aug 18 11:39:46 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629286761124
clusterID=60f1035d-884d-4564-a480-c9b6b8a8b4f5
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210818 11:40:33.389" endtime="20210818 11:40:33.390"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:33.391" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:33.390" endtime="20210818 11:40:33.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:33.391" endtime="20210818 11:40:33.392"/>
</kw>
<status status="PASS" starttime="20210818 11:40:33.389" endtime="20210818 11:40:33.392"/>
</kw>
<status status="PASS" starttime="20210818 11:40:33.388" endtime="20210818 11:40:33.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:33.383" endtime="20210818 11:40:33.392"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:33.317" endtime="20210818 11:40:33.393"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:37.820" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:40:37.819" endtime="20210818 11:40:37.820"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:37.821" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:37.820" endtime="20210818 11:40:37.821"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:37.821" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:37.821" endtime="20210818 11:40:37.821"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:37.822" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:37.822" endtime="20210818 11:40:37.822"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:37.824" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:37.824" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:01 UTC 2021
cTime=1629286664942
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=8a186091-6c7f-4faa-af4d-2b312d7ce695
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:40:37.823" endtime="20210818 11:40:37.824"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:37.825" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:37.824" endtime="20210818 11:40:37.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:37.825" endtime="20210818 11:40:37.826"/>
</kw>
<status status="PASS" starttime="20210818 11:40:37.823" endtime="20210818 11:40:37.826"/>
</kw>
<status status="PASS" starttime="20210818 11:40:37.822" endtime="20210818 11:40:37.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:37.818" endtime="20210818 11:40:37.826"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:37.752" endtime="20210818 11:40:37.827"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:42.056" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:40:42.055" endtime="20210818 11:40:42.056"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:42.057" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:42.057" endtime="20210818 11:40:42.057"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:42.058" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:42.057" endtime="20210818 11:40:42.058"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:42.059" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:42.058" endtime="20210818 11:40:42.059"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:42.061" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:42.061" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:01 UTC 2021
cTime=1629286662810
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=05a523a0-502b-4884-b346-5757eae469db
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:40:42.060" endtime="20210818 11:40:42.061"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:42.062" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:42.061" endtime="20210818 11:40:42.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:42.065" endtime="20210818 11:40:42.065"/>
</kw>
<status status="PASS" starttime="20210818 11:40:42.060" endtime="20210818 11:40:42.065"/>
</kw>
<status status="PASS" starttime="20210818 11:40:42.059" endtime="20210818 11:40:42.066"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:42.054" endtime="20210818 11:40:42.066"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:41.978" endtime="20210818 11:40:42.067"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:46.402" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210818 11:40:46.401" endtime="20210818 11:40:46.402"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:46.403" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:46.402" endtime="20210818 11:40:46.403"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:46.403" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:46.403" endtime="20210818 11:40:46.403"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:46.404" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:46.403" endtime="20210818 11:40:46.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:46.406" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:46.406" level="INFO">${version_file_contents} = #Wed Aug 18 11:38:02 UTC 2021
cTime=1629286664712
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
omUuid=506b51e5-cea6-4a1b-a8fb-4e5b4c525e2c
nodeType=OM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f70...</msg>
<status status="PASS" starttime="20210818 11:40:46.405" endtime="20210818 11:40:46.406"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:46.407" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:46.406" endtime="20210818 11:40:46.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:46.407" endtime="20210818 11:40:46.408"/>
</kw>
<status status="PASS" starttime="20210818 11:40:46.405" endtime="20210818 11:40:46.408"/>
</kw>
<status status="PASS" starttime="20210818 11:40:46.404" endtime="20210818 11:40:46.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:46.400" endtime="20210818 11:40:46.408"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:46.333" endtime="20210818 11:40:46.409"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:40:50.627" level="INFO">${random} = 19389</msg>
<status status="PASS" starttime="20210818 11:40:50.626" endtime="20210818 11:40:50.627"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:40:50.633" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-19389 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:40:56.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:40:56.472" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:40:50.629" endtime="20210818 11:40:56.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:40:56.474" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:40:56.473" endtime="20210818 11:40:56.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:40:56.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:40:56.475" endtime="20210818 11:40:56.476"/>
</kw>
<status status="PASS" starttime="20210818 11:40:50.628" endtime="20210818 11:40:56.477"/>
</kw>
<msg timestamp="20210818 11:40:56.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:40:50.628" endtime="20210818 11:40:56.477"/>
</kw>
<msg timestamp="20210818 11:40:56.478" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:40:50.627" endtime="20210818 11:40:56.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:56.478" endtime="20210818 11:40:56.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:50.625" endtime="20210818 11:40:56.478"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:40:50.557" endtime="20210818 11:40:56.480"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:41:00.753" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:41:03.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:41:03.548" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:00.749" endtime="20210818 11:41:03.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:41:03.549" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:03.548" endtime="20210818 11:41:03.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:41:03.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:41:03.550" endtime="20210818 11:41:03.550"/>
</kw>
<status status="PASS" starttime="20210818 11:41:00.749" endtime="20210818 11:41:03.551"/>
</kw>
<msg timestamp="20210818 11:41:03.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:41:00.748" endtime="20210818 11:41:03.551"/>
</kw>
<msg timestamp="20210818 11:41:03.552" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:00.747" endtime="20210818 11:41:03.552"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:41:03.553" endtime="20210818 11:41:03.553"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:41:03.570" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:41:06.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:41:06.657" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:03.555" endtime="20210818 11:41:06.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:41:06.659" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:06.658" endtime="20210818 11:41:06.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:41:06.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:41:06.659" endtime="20210818 11:41:06.659"/>
</kw>
<status status="PASS" starttime="20210818 11:41:03.554" endtime="20210818 11:41:06.660"/>
</kw>
<msg timestamp="20210818 11:41:06.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:41:03.554" endtime="20210818 11:41:06.660"/>
</kw>
<msg timestamp="20210818 11:41:06.661" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:03.553" endtime="20210818 11:41:06.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:41:06.661" endtime="20210818 11:41:06.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:41:06.666" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:41:13.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:41:13.024" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:06.664" endtime="20210818 11:41:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:41:13.026" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:13.025" endtime="20210818 11:41:13.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:41:13.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:41:13.026" endtime="20210818 11:41:13.027"/>
</kw>
<status status="PASS" starttime="20210818 11:41:06.663" endtime="20210818 11:41:13.028"/>
</kw>
<msg timestamp="20210818 11:41:13.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:41:06.662" endtime="20210818 11:41:13.028"/>
</kw>
<msg timestamp="20210818 11:41:13.028" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:06.662" endtime="20210818 11:41:13.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:41:13.029" endtime="20210818 11:41:13.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:41:00.746" endtime="20210818 11:41:13.030"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210818 11:41:00.682" endtime="20210818 11:41:13.032"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210818 11:41:17.582" level="INFO">${random} = 40387</msg>
<status status="PASS" starttime="20210818 11:41:17.581" endtime="20210818 11:41:17.582"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210818 11:41:17.588" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-40387 2&gt;&amp;1'.</msg>
<msg timestamp="20210818 11:41:22.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210818 11:41:22.733" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:17.584" endtime="20210818 11:41:22.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210818 11:41:22.734" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:22.733" endtime="20210818 11:41:22.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210818 11:41:22.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210818 11:41:22.734" endtime="20210818 11:41:22.735"/>
</kw>
<status status="PASS" starttime="20210818 11:41:17.584" endtime="20210818 11:41:22.735"/>
</kw>
<msg timestamp="20210818 11:41:22.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210818 11:41:17.583" endtime="20210818 11:41:22.736"/>
</kw>
<msg timestamp="20210818 11:41:22.736" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210818 11:41:17.582" endtime="20210818 11:41:22.736"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:41:22.736" endtime="20210818 11:41:22.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:41:17.580" endtime="20210818 11:41:22.737"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210818 11:41:17.504" endtime="20210818 11:41:22.739"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:20.339" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210818 11:40:20.338" endtime="20210818 11:40:20.339"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210818 11:40:20.340" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210818 11:40:20.339" endtime="20210818 11:40:20.340"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210818 11:40:20.340" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210818 11:40:20.340" endtime="20210818 11:40:20.341"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210818 11:40:20.341" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210818 11:40:20.341" endtime="20210818 11:40:20.341"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210818 11:40:20.343" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210818 11:40:20.343" level="INFO">${version_file_contents} = #Wed Aug 18 11:37:43 UTC 2021
cTime=1629286663123
clusterID=CID-d68b9072-fdcd-417b-9292-b813ac45e742
nodeType=SCM
scmUuid=b7121423-dd6d-40b6-9392-6c6b63f0f703
layoutVersion=0
</msg>
<status status="PASS" starttime="20210818 11:40:20.342" endtime="20210818 11:40:20.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210818 11:40:20.344" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210818 11:40:20.343" endtime="20210818 11:40:20.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210818 11:40:20.345" endtime="20210818 11:40:20.345"/>
</kw>
<status status="PASS" starttime="20210818 11:40:20.342" endtime="20210818 11:40:20.345"/>
</kw>
<status status="PASS" starttime="20210818 11:40:20.341" endtime="20210818 11:40:20.345"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210818 11:40:20.337" endtime="20210818 11:40:20.346"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210818 11:40:20.267" endtime="20210818 11:40:20.347"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="173993"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="210705"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
