<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210802 10:58:55.672" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:51:25.208" level="INFO">${random} = 32218</msg>
<status status="PASS" starttime="20210802 10:51:25.207" endtime="20210802 10:51:25.208"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:51:25.210" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-32218 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:51:28.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:51:28.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:25.209" endtime="20210802 10:51:28.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:51:28.411" level="INFO"/>
<status status="PASS" starttime="20210802 10:51:28.411" endtime="20210802 10:51:28.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:51:28.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:51:28.412" endtime="20210802 10:51:28.412"/>
</kw>
<status status="PASS" starttime="20210802 10:51:25.208" endtime="20210802 10:51:28.412"/>
</kw>
<msg timestamp="20210802 10:51:28.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:51:25.208" endtime="20210802 10:51:28.412"/>
</kw>
<msg timestamp="20210802 10:51:28.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:25.208" endtime="20210802 10:51:28.413"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:51:28.413" endtime="20210802 10:51:28.413"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:51:25.206" endtime="20210802 10:51:28.413"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:51:25.171" endtime="20210802 10:51:28.414"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:51:14.460" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:51:16.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:51:16.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:14.459" endtime="20210802 10:51:16.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:51:16.479" level="INFO"/>
<status status="PASS" starttime="20210802 10:51:16.478" endtime="20210802 10:51:16.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:51:16.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:51:16.479" endtime="20210802 10:51:16.479"/>
</kw>
<status status="PASS" starttime="20210802 10:51:14.458" endtime="20210802 10:51:16.479"/>
</kw>
<msg timestamp="20210802 10:51:16.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:51:14.458" endtime="20210802 10:51:16.480"/>
</kw>
<msg timestamp="20210802 10:51:16.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:14.457" endtime="20210802 10:51:16.480"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:51:16.480" endtime="20210802 10:51:16.480"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:51:16.483" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:51:18.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:51:18.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:16.482" endtime="20210802 10:51:18.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:51:18.171" level="INFO"/>
<status status="PASS" starttime="20210802 10:51:18.171" endtime="20210802 10:51:18.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:51:18.172" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:51:18.172" endtime="20210802 10:51:18.172"/>
</kw>
<status status="PASS" starttime="20210802 10:51:16.481" endtime="20210802 10:51:18.172"/>
</kw>
<msg timestamp="20210802 10:51:18.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:51:16.481" endtime="20210802 10:51:18.172"/>
</kw>
<msg timestamp="20210802 10:51:18.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:16.480" endtime="20210802 10:51:18.172"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:51:18.173" endtime="20210802 10:51:18.173"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:51:18.177" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:51:22.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:51:22.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:18.176" endtime="20210802 10:51:22.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:51:22.255" level="INFO"/>
<status status="PASS" starttime="20210802 10:51:22.254" endtime="20210802 10:51:22.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:51:22.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:51:22.255" endtime="20210802 10:51:22.255"/>
</kw>
<status status="PASS" starttime="20210802 10:51:18.174" endtime="20210802 10:51:22.255"/>
</kw>
<msg timestamp="20210802 10:51:22.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:51:18.173" endtime="20210802 10:51:22.256"/>
</kw>
<msg timestamp="20210802 10:51:22.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:51:18.173" endtime="20210802 10:51:22.256"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:51:22.256" endtime="20210802 10:51:22.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:51:14.457" endtime="20210802 10:51:22.256"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210802 10:51:14.424" endtime="20210802 10:51:22.257"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:52:30.534" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:52:32.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:52:32.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:30.531" endtime="20210802 10:52:32.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:52:32.543" level="INFO"/>
<status status="PASS" starttime="20210802 10:52:32.542" endtime="20210802 10:52:32.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:52:32.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:52:32.543" endtime="20210802 10:52:32.544"/>
</kw>
<status status="PASS" starttime="20210802 10:52:30.531" endtime="20210802 10:52:32.544"/>
</kw>
<msg timestamp="20210802 10:52:32.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:52:30.530" endtime="20210802 10:52:32.544"/>
</kw>
<msg timestamp="20210802 10:52:32.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:30.530" endtime="20210802 10:52:32.544"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:52:32.545" endtime="20210802 10:52:32.545"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:52:32.550" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:52:34.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:52:34.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:32.547" endtime="20210802 10:52:34.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:52:34.225" level="INFO"/>
<status status="PASS" starttime="20210802 10:52:34.225" endtime="20210802 10:52:34.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:52:34.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:52:34.225" endtime="20210802 10:52:34.226"/>
</kw>
<status status="PASS" starttime="20210802 10:52:32.546" endtime="20210802 10:52:34.226"/>
</kw>
<msg timestamp="20210802 10:52:34.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:52:32.546" endtime="20210802 10:52:34.226"/>
</kw>
<msg timestamp="20210802 10:52:34.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:32.545" endtime="20210802 10:52:34.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:52:34.227" endtime="20210802 10:52:34.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:52:34.230" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:52:38.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:52:38.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:34.228" endtime="20210802 10:52:38.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:52:38.503" level="INFO"/>
<status status="PASS" starttime="20210802 10:52:38.503" endtime="20210802 10:52:38.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:52:38.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:52:38.504" endtime="20210802 10:52:38.504"/>
</kw>
<status status="PASS" starttime="20210802 10:52:34.228" endtime="20210802 10:52:38.504"/>
</kw>
<msg timestamp="20210802 10:52:38.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:52:34.228" endtime="20210802 10:52:38.505"/>
</kw>
<msg timestamp="20210802 10:52:38.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:34.227" endtime="20210802 10:52:38.505"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:52:38.505" endtime="20210802 10:52:38.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:52:30.529" endtime="20210802 10:52:38.506"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210802 10:52:30.487" endtime="20210802 10:52:38.507"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:52:41.714" level="INFO">${random} = 80876</msg>
<status status="PASS" starttime="20210802 10:52:41.714" endtime="20210802 10:52:41.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:52:41.719" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-80876 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:52:44.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:52:44.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:41.716" endtime="20210802 10:52:44.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:52:44.905" level="INFO"/>
<status status="PASS" starttime="20210802 10:52:44.904" endtime="20210802 10:52:44.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:52:44.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:52:44.905" endtime="20210802 10:52:44.905"/>
</kw>
<status status="PASS" starttime="20210802 10:52:41.715" endtime="20210802 10:52:44.906"/>
</kw>
<msg timestamp="20210802 10:52:44.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:52:41.715" endtime="20210802 10:52:44.906"/>
</kw>
<msg timestamp="20210802 10:52:44.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:41.714" endtime="20210802 10:52:44.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:52:44.906" endtime="20210802 10:52:44.906"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:52:41.713" endtime="20210802 10:52:44.907"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:52:41.672" endtime="20210802 10:52:44.908"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:52:23.539" level="INFO">${random} = 57626</msg>
<status status="PASS" starttime="20210802 10:52:23.539" endtime="20210802 10:52:23.539"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:52:23.544" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-57626 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:52:27.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:52:27.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:23.541" endtime="20210802 10:52:27.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:52:27.502" level="INFO"/>
<status status="PASS" starttime="20210802 10:52:27.500" endtime="20210802 10:52:27.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:52:27.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:52:27.504" endtime="20210802 10:52:27.505"/>
</kw>
<status status="PASS" starttime="20210802 10:52:23.540" endtime="20210802 10:52:27.505"/>
</kw>
<msg timestamp="20210802 10:52:27.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:52:23.540" endtime="20210802 10:52:27.506"/>
</kw>
<msg timestamp="20210802 10:52:27.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:52:23.539" endtime="20210802 10:52:27.506"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:52:27.506" endtime="20210802 10:52:27.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:52:23.538" endtime="20210802 10:52:27.507"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:52:23.491" endtime="20210802 10:52:27.509"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="26350"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:54:06.392" level="INFO">${random} = 40228</msg>
<status status="PASS" starttime="20210802 10:54:06.391" endtime="20210802 10:54:06.392"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:54:06.394" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-40228 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:54:09.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:54:09.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:54:06.393" endtime="20210802 10:54:09.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:54:09.608" level="INFO"/>
<status status="PASS" starttime="20210802 10:54:09.608" endtime="20210802 10:54:09.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:54:09.609" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:54:09.609" endtime="20210802 10:54:09.609"/>
</kw>
<status status="PASS" starttime="20210802 10:54:06.393" endtime="20210802 10:54:09.609"/>
</kw>
<msg timestamp="20210802 10:54:09.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:54:06.392" endtime="20210802 10:54:09.609"/>
</kw>
<msg timestamp="20210802 10:54:09.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:54:06.392" endtime="20210802 10:54:09.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:54:09.610" endtime="20210802 10:54:09.610"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:54:06.390" endtime="20210802 10:54:09.610"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:54:06.354" endtime="20210802 10:54:09.611"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:53:54.267" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:53:56.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:53:56.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:54.266" endtime="20210802 10:53:56.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:53:56.294" level="INFO"/>
<status status="PASS" starttime="20210802 10:53:56.293" endtime="20210802 10:53:56.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:53:56.295" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:53:56.294" endtime="20210802 10:53:56.295"/>
</kw>
<status status="PASS" starttime="20210802 10:53:54.266" endtime="20210802 10:53:56.296"/>
</kw>
<msg timestamp="20210802 10:53:56.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:53:54.266" endtime="20210802 10:53:56.296"/>
</kw>
<msg timestamp="20210802 10:53:56.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:54.265" endtime="20210802 10:53:56.296"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:53:56.296" endtime="20210802 10:53:56.305"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:53:56.310" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:53:58.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:53:58.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:56.307" endtime="20210802 10:53:58.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:53:58.452" level="INFO"/>
<status status="PASS" starttime="20210802 10:53:58.452" endtime="20210802 10:53:58.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:53:58.453" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:53:58.452" endtime="20210802 10:53:58.453"/>
</kw>
<status status="PASS" starttime="20210802 10:53:56.306" endtime="20210802 10:53:58.453"/>
</kw>
<msg timestamp="20210802 10:53:58.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:53:56.306" endtime="20210802 10:53:58.453"/>
</kw>
<msg timestamp="20210802 10:53:58.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:56.305" endtime="20210802 10:53:58.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:53:58.454" endtime="20210802 10:53:58.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:53:58.462" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:54:03.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:54:03.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:58.459" endtime="20210802 10:54:03.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:54:03.144" level="INFO"/>
<status status="PASS" starttime="20210802 10:54:03.143" endtime="20210802 10:54:03.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:54:03.144" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:54:03.144" endtime="20210802 10:54:03.145"/>
</kw>
<status status="PASS" starttime="20210802 10:53:58.456" endtime="20210802 10:54:03.145"/>
</kw>
<msg timestamp="20210802 10:54:03.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:53:58.455" endtime="20210802 10:54:03.145"/>
</kw>
<msg timestamp="20210802 10:54:03.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210802 10:53:58.455" endtime="20210802 10:54:03.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:54:03.145" endtime="20210802 10:54:03.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:53:54.264" endtime="20210802 10:54:03.146"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210802 10:53:54.228" endtime="20210802 10:54:03.148"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:25.699" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:55:25.699" endtime="20210802 10:55:25.700"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:25.700" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:25.700" endtime="20210802 10:55:25.700"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:25.700" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:25.700" endtime="20210802 10:55:25.701"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:25.701" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:25.701" endtime="20210802 10:55:25.701"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:25.702" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:25.703" level="INFO">${version_file_contents} = #Mon Aug 02 10:54:52 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901673450
clusterID=1a876dc5-7676-4e29-967f-39502c3860c9
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210802 10:55:25.702" endtime="20210802 10:55:25.703"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:25.703" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:25.703" endtime="20210802 10:55:25.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:25.703" endtime="20210802 10:55:25.704"/>
</kw>
<status status="PASS" starttime="20210802 10:55:25.702" endtime="20210802 10:55:25.704"/>
</kw>
<status status="PASS" starttime="20210802 10:55:25.701" endtime="20210802 10:55:25.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:25.698" endtime="20210802 10:55:25.704"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:25.652" endtime="20210802 10:55:25.705"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210802 10:56:11.333" endtime="20210802 10:56:11.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:56:11.338" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:57:48.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:57:48.946" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210802 10:56:11.335" endtime="20210802 10:57:48.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:57:48.947" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210802 10:57:48.946" endtime="20210802 10:57:48.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:57:48.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:57:48.947" endtime="20210802 10:57:48.948"/>
</kw>
<status status="PASS" starttime="20210802 10:56:11.334" endtime="20210802 10:57:48.948"/>
</kw>
<msg timestamp="20210802 10:57:48.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:56:11.334" endtime="20210802 10:57:48.948"/>
</kw>
<msg timestamp="20210802 10:57:48.949" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210802 10:56:11.334" endtime="20210802 10:57:48.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:57:48.949" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210802 10:57:48.949" endtime="20210802 10:57:48.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:56:11.332" endtime="20210802 10:57:48.949"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210802 10:57:48.951" endtime="20210802 10:57:48.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:57:48.954" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:57:51.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:57:51.164" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210802 10:57:48.952" endtime="20210802 10:57:51.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:57:51.165" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210802 10:57:51.164" endtime="20210802 10:57:51.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:57:51.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:57:51.165" endtime="20210802 10:57:51.166"/>
</kw>
<status status="PASS" starttime="20210802 10:57:48.952" endtime="20210802 10:57:51.166"/>
</kw>
<msg timestamp="20210802 10:57:51.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:57:48.952" endtime="20210802 10:57:51.166"/>
</kw>
<msg timestamp="20210802 10:57:51.166" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210802 10:57:48.951" endtime="20210802 10:57:51.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:57:51.167" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210802 10:57:51.167" endtime="20210802 10:57:51.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:57:48.950" endtime="20210802 10:57:51.167"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210802 10:56:11.293" endtime="20210802 10:57:51.168"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:57:54.493" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210802 10:57:54.492" endtime="20210802 10:57:54.493"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:57:54.493" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:57:54.493" endtime="20210802 10:57:54.493"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:57:54.494" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:57:54.493" endtime="20210802 10:57:54.494"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:57:54.494" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210802 10:57:54.494" endtime="20210802 10:57:54.494"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:57:54.495" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:57:54.496" level="INFO">${version_file_contents} = #Mon Aug 02 10:56:18 UTC 2021
cTime=1627901595341
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
nodeType=SCM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f938
layoutVersion=2
</msg>
<status status="PASS" starttime="20210802 10:57:54.495" endtime="20210802 10:57:54.496"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:57:54.496" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210802 10:57:54.496" endtime="20210802 10:57:54.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:57:54.496" endtime="20210802 10:57:54.497"/>
</kw>
<status status="PASS" starttime="20210802 10:57:54.495" endtime="20210802 10:57:54.497"/>
</kw>
<status status="PASS" starttime="20210802 10:57:54.495" endtime="20210802 10:57:54.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:57:54.491" endtime="20210802 10:57:54.497"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:57:54.446" endtime="20210802 10:57:54.498"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:57:57.837" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:57:57.837" endtime="20210802 10:57:57.837"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:57:57.838" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:57:57.838" endtime="20210802 10:57:57.838"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:57:57.838" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:57:57.838" endtime="20210802 10:57:57.839"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:57:57.839" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:57:57.839" endtime="20210802 10:57:57.839"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:57:57.840" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:57:57.840" level="INFO">${version_file_contents} = #Mon Aug 02 10:56:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901673450
clusterID=1a876dc5-7676-4e29-967f-39502c3860c9
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210802 10:57:57.840" endtime="20210802 10:57:57.840"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:57:57.841" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210802 10:57:57.840" endtime="20210802 10:57:57.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:57:57.841" endtime="20210802 10:57:57.842"/>
</kw>
<status status="PASS" starttime="20210802 10:57:57.839" endtime="20210802 10:57:57.842"/>
</kw>
<status status="PASS" starttime="20210802 10:57:57.839" endtime="20210802 10:57:57.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:57:57.836" endtime="20210802 10:57:57.842"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:57:57.789" endtime="20210802 10:57:57.843"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:00.967" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:58:00.967" endtime="20210802 10:58:00.967"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:00.968" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:58:00.968" endtime="20210802 10:58:00.968"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:58:00.968" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:58:00.968" endtime="20210802 10:58:00.968"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:58:00.969" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:58:00.968" endtime="20210802 10:58:00.969"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:58:00.970" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:58:00.970" level="INFO">${version_file_contents} = #Mon Aug 02 10:56:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901669367
clusterID=13b95ab3-92c8-4275-ae95-a378062e793f
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210802 10:58:00.970" endtime="20210802 10:58:00.970"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:58:00.971" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210802 10:58:00.970" endtime="20210802 10:58:00.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:00.971" endtime="20210802 10:58:00.971"/>
</kw>
<status status="PASS" starttime="20210802 10:58:00.969" endtime="20210802 10:58:00.971"/>
</kw>
<status status="PASS" starttime="20210802 10:58:00.969" endtime="20210802 10:58:00.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:00.966" endtime="20210802 10:58:00.972"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:58:00.924" endtime="20210802 10:58:00.973"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:04.228" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:58:04.227" endtime="20210802 10:58:04.228"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:04.228" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:58:04.228" endtime="20210802 10:58:04.228"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:58:04.229" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:58:04.228" endtime="20210802 10:58:04.229"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:58:04.229" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:58:04.229" endtime="20210802 10:58:04.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:58:04.230" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:58:04.231" level="INFO">${version_file_contents} = #Mon Aug 02 10:56:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901673678
clusterID=d940a45e-3e27-4405-9b3d-6c10fe6be9ba
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210802 10:58:04.230" endtime="20210802 10:58:04.231"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:58:04.231" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210802 10:58:04.231" endtime="20210802 10:58:04.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:04.231" endtime="20210802 10:58:04.232"/>
</kw>
<status status="PASS" starttime="20210802 10:58:04.230" endtime="20210802 10:58:04.232"/>
</kw>
<status status="PASS" starttime="20210802 10:58:04.230" endtime="20210802 10:58:04.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:04.226" endtime="20210802 10:58:04.232"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:58:04.181" endtime="20210802 10:58:04.233"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:07.554" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:58:07.553" endtime="20210802 10:58:07.554"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:07.555" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:58:07.554" endtime="20210802 10:58:07.555"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:58:07.555" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:58:07.555" endtime="20210802 10:58:07.555"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:58:07.556" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:58:07.555" endtime="20210802 10:58:07.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:58:07.557" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:58:07.557" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:32 UTC 2021
cTime=1627901599610
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=6593f10a-5d9f-42c2-b49d-97328af52235
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:58:07.557" endtime="20210802 10:58:07.557"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:58:07.558" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:58:07.557" endtime="20210802 10:58:07.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:07.558" endtime="20210802 10:58:07.558"/>
</kw>
<status status="PASS" starttime="20210802 10:58:07.556" endtime="20210802 10:58:07.558"/>
</kw>
<status status="PASS" starttime="20210802 10:58:07.556" endtime="20210802 10:58:07.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:07.553" endtime="20210802 10:58:07.559"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:58:07.507" endtime="20210802 10:58:07.559"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:10.739" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:58:10.738" endtime="20210802 10:58:10.739"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:10.740" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:58:10.739" endtime="20210802 10:58:10.740"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:58:10.740" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:58:10.740" endtime="20210802 10:58:10.740"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:58:10.741" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:58:10.740" endtime="20210802 10:58:10.741"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:58:10.742" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:58:10.742" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:32 UTC 2021
cTime=1627901599359
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=34d9fcb8-3567-4d86-91ec-b951d59206c0
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:58:10.741" endtime="20210802 10:58:10.742"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:58:10.742" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:58:10.742" endtime="20210802 10:58:10.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:10.743" endtime="20210802 10:58:10.743"/>
</kw>
<status status="PASS" starttime="20210802 10:58:10.741" endtime="20210802 10:58:10.743"/>
</kw>
<status status="PASS" starttime="20210802 10:58:10.741" endtime="20210802 10:58:10.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:10.737" endtime="20210802 10:58:10.744"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:58:10.695" endtime="20210802 10:58:10.744"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:13.884" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:58:13.883" endtime="20210802 10:58:13.884"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:58:13.884" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:58:13.884" endtime="20210802 10:58:13.884"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:58:13.884" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:58:13.884" endtime="20210802 10:58:13.885"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:58:13.885" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:58:13.885" endtime="20210802 10:58:13.885"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:58:13.886" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:58:13.886" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:34 UTC 2021
cTime=1627901597483
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=1df323fe-fc81-481b-942a-4a7c933c626f
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:58:13.886" endtime="20210802 10:58:13.886"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:58:13.887" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:58:13.886" endtime="20210802 10:58:13.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:13.887" endtime="20210802 10:58:13.887"/>
</kw>
<status status="PASS" starttime="20210802 10:58:13.886" endtime="20210802 10:58:13.887"/>
</kw>
<status status="PASS" starttime="20210802 10:58:13.885" endtime="20210802 10:58:13.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:13.882" endtime="20210802 10:58:13.888"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:58:13.842" endtime="20210802 10:58:13.888"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:58:16.861" level="INFO">${random} = 79569</msg>
<status status="PASS" starttime="20210802 10:58:16.861" endtime="20210802 10:58:16.862"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:16.866" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-79569 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:20.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:20.264" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:16.863" endtime="20210802 10:58:20.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:20.265" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:20.264" endtime="20210802 10:58:20.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:20.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:20.265" endtime="20210802 10:58:20.265"/>
</kw>
<status status="PASS" starttime="20210802 10:58:16.863" endtime="20210802 10:58:20.266"/>
</kw>
<msg timestamp="20210802 10:58:20.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:16.862" endtime="20210802 10:58:20.266"/>
</kw>
<msg timestamp="20210802 10:58:20.266" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:16.862" endtime="20210802 10:58:20.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:20.266" endtime="20210802 10:58:20.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:16.860" endtime="20210802 10:58:20.267"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:58:16.820" endtime="20210802 10:58:20.268"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:58:23.275" level="INFO">${random} = 25194</msg>
<status status="PASS" starttime="20210802 10:58:23.275" endtime="20210802 10:58:23.275"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:23.280" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-25194 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:26.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:26.797" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:23.277" endtime="20210802 10:58:26.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:26.798" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:26.797" endtime="20210802 10:58:26.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:26.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:26.798" endtime="20210802 10:58:26.799"/>
</kw>
<status status="PASS" starttime="20210802 10:58:23.276" endtime="20210802 10:58:26.799"/>
</kw>
<msg timestamp="20210802 10:58:26.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:23.276" endtime="20210802 10:58:26.799"/>
</kw>
<msg timestamp="20210802 10:58:26.799" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:23.275" endtime="20210802 10:58:26.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:26.800" endtime="20210802 10:58:26.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:23.274" endtime="20210802 10:58:26.800"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:58:23.233" endtime="20210802 10:58:26.801"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:28.851" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:55:28.850" endtime="20210802 10:55:28.851"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:28.851" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:28.851" endtime="20210802 10:55:28.851"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:28.852" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:28.851" endtime="20210802 10:55:28.852"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:28.852" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:28.852" endtime="20210802 10:55:28.852"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:28.853" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:28.853" level="INFO">${version_file_contents} = #Mon Aug 02 10:54:51 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901669367
clusterID=13b95ab3-92c8-4275-ae95-a378062e793f
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210802 10:55:28.853" endtime="20210802 10:55:28.853"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:28.854" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:28.853" endtime="20210802 10:55:28.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:28.854" endtime="20210802 10:55:28.854"/>
</kw>
<status status="PASS" starttime="20210802 10:55:28.852" endtime="20210802 10:55:28.854"/>
</kw>
<status status="PASS" starttime="20210802 10:55:28.852" endtime="20210802 10:55:28.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:28.849" endtime="20210802 10:55:28.855"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:28.807" endtime="20210802 10:55:28.855"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:29.963" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:31.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:31.995" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:29.960" endtime="20210802 10:58:31.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:31.996" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:31.995" endtime="20210802 10:58:31.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:31.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:31.996" endtime="20210802 10:58:31.997"/>
</kw>
<status status="PASS" starttime="20210802 10:58:29.960" endtime="20210802 10:58:31.997"/>
</kw>
<msg timestamp="20210802 10:58:31.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:29.959" endtime="20210802 10:58:31.997"/>
</kw>
<msg timestamp="20210802 10:58:31.998" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:29.959" endtime="20210802 10:58:31.998"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:31.998" endtime="20210802 10:58:31.998"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:32.002" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:34.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:34.009" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:32.000" endtime="20210802 10:58:34.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:34.010" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:34.009" endtime="20210802 10:58:34.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:34.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:34.010" endtime="20210802 10:58:34.011"/>
</kw>
<status status="PASS" starttime="20210802 10:58:31.999" endtime="20210802 10:58:34.011"/>
</kw>
<msg timestamp="20210802 10:58:34.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:31.999" endtime="20210802 10:58:34.011"/>
</kw>
<msg timestamp="20210802 10:58:34.011" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:31.998" endtime="20210802 10:58:34.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:34.011" endtime="20210802 10:58:34.012"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:34.015" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:38.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:38.102" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:34.013" endtime="20210802 10:58:38.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:38.103" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:38.102" endtime="20210802 10:58:38.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:38.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:38.103" endtime="20210802 10:58:38.104"/>
</kw>
<status status="PASS" starttime="20210802 10:58:34.013" endtime="20210802 10:58:38.104"/>
</kw>
<msg timestamp="20210802 10:58:38.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:34.013" endtime="20210802 10:58:38.104"/>
</kw>
<msg timestamp="20210802 10:58:38.104" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:34.012" endtime="20210802 10:58:38.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:38.105" endtime="20210802 10:58:38.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:29.958" endtime="20210802 10:58:38.105"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210802 10:58:29.918" endtime="20210802 10:58:38.106"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:58:41.375" level="INFO">${random} = 89955</msg>
<status status="PASS" starttime="20210802 10:58:41.374" endtime="20210802 10:58:41.375"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:58:41.380" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-89955 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:58:45.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:58:45.110" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:41.377" endtime="20210802 10:58:45.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:58:45.111" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:45.111" endtime="20210802 10:58:45.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:58:45.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:58:45.112" endtime="20210802 10:58:45.112"/>
</kw>
<status status="PASS" starttime="20210802 10:58:41.376" endtime="20210802 10:58:45.112"/>
</kw>
<msg timestamp="20210802 10:58:45.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:58:41.376" endtime="20210802 10:58:45.112"/>
</kw>
<msg timestamp="20210802 10:58:45.113" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:58:41.375" endtime="20210802 10:58:45.113"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:58:45.113" endtime="20210802 10:58:45.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:58:41.374" endtime="20210802 10:58:45.113"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:58:41.327" endtime="20210802 10:58:45.114"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:32.020" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210802 10:55:32.019" endtime="20210802 10:55:32.020"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:32.020" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:32.020" endtime="20210802 10:55:32.021"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:32.021" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:32.021" endtime="20210802 10:55:32.021"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:32.022" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:32.021" endtime="20210802 10:55:32.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:32.023" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:32.023" level="INFO">${version_file_contents} = #Mon Aug 02 10:54:53 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627901673678
clusterID=d940a45e-3e27-4405-9b3d-6c10fe6be9ba
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210802 10:55:32.022" endtime="20210802 10:55:32.023"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:32.023" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:32.023" endtime="20210802 10:55:32.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:32.024" endtime="20210802 10:55:32.024"/>
</kw>
<status status="PASS" starttime="20210802 10:55:32.022" endtime="20210802 10:55:32.024"/>
</kw>
<status status="PASS" starttime="20210802 10:55:32.022" endtime="20210802 10:55:32.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:32.019" endtime="20210802 10:55:32.024"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:31.964" endtime="20210802 10:55:32.025"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:35.352" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:55:35.351" endtime="20210802 10:55:35.352"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:35.352" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:35.352" endtime="20210802 10:55:35.352"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:35.353" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:35.352" endtime="20210802 10:55:35.353"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:35.353" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:35.353" endtime="20210802 10:55:35.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:35.354" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:35.355" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:32 UTC 2021
cTime=1627901599610
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=6593f10a-5d9f-42c2-b49d-97328af52235
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:55:35.354" endtime="20210802 10:55:35.355"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:35.355" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:35.355" endtime="20210802 10:55:35.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:35.355" endtime="20210802 10:55:35.356"/>
</kw>
<status status="PASS" starttime="20210802 10:55:35.354" endtime="20210802 10:55:35.356"/>
</kw>
<status status="PASS" starttime="20210802 10:55:35.353" endtime="20210802 10:55:35.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:35.350" endtime="20210802 10:55:35.356"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:35.302" endtime="20210802 10:55:35.357"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:38.680" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:55:38.680" endtime="20210802 10:55:38.681"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:38.681" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:38.681" endtime="20210802 10:55:38.681"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:38.681" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:38.681" endtime="20210802 10:55:38.682"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:38.682" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:38.682" endtime="20210802 10:55:38.682"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:38.683" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:38.684" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:32 UTC 2021
cTime=1627901599359
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=34d9fcb8-3567-4d86-91ec-b951d59206c0
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:55:38.683" endtime="20210802 10:55:38.684"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:38.684" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:38.684" endtime="20210802 10:55:38.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:38.684" endtime="20210802 10:55:38.685"/>
</kw>
<status status="PASS" starttime="20210802 10:55:38.683" endtime="20210802 10:55:38.685"/>
</kw>
<status status="PASS" starttime="20210802 10:55:38.682" endtime="20210802 10:55:38.685"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:38.679" endtime="20210802 10:55:38.685"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:38.634" endtime="20210802 10:55:38.686"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:42.027" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210802 10:55:42.026" endtime="20210802 10:55:42.027"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:42.027" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:42.027" endtime="20210802 10:55:42.027"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:42.028" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:42.027" endtime="20210802 10:55:42.028"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:42.028" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:42.028" endtime="20210802 10:55:42.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:42.030" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:42.030" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:34 UTC 2021
cTime=1627901597483
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
omUuid=1df323fe-fc81-481b-942a-4a7c933c626f
nodeType=OM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f93...</msg>
<status status="PASS" starttime="20210802 10:55:42.030" endtime="20210802 10:55:42.030"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:42.031" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:42.031" endtime="20210802 10:55:42.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:42.031" endtime="20210802 10:55:42.031"/>
</kw>
<status status="PASS" starttime="20210802 10:55:42.029" endtime="20210802 10:55:42.032"/>
</kw>
<status status="PASS" starttime="20210802 10:55:42.029" endtime="20210802 10:55:42.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:42.025" endtime="20210802 10:55:42.032"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:41.979" endtime="20210802 10:55:42.033"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:55:45.209" level="INFO">${random} = 53133</msg>
<status status="PASS" starttime="20210802 10:55:45.209" endtime="20210802 10:55:45.209"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:55:45.214" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-53133 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:55:49.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:55:49.108" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:45.211" endtime="20210802 10:55:49.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:55:49.110" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:49.109" endtime="20210802 10:55:49.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:55:49.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:55:49.110" endtime="20210802 10:55:49.110"/>
</kw>
<status status="PASS" starttime="20210802 10:55:45.211" endtime="20210802 10:55:49.111"/>
</kw>
<msg timestamp="20210802 10:55:49.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:55:45.210" endtime="20210802 10:55:49.111"/>
</kw>
<msg timestamp="20210802 10:55:49.111" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:45.210" endtime="20210802 10:55:49.111"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:49.111" endtime="20210802 10:55:49.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:45.208" endtime="20210802 10:55:49.112"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:55:45.163" endtime="20210802 10:55:49.113"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:55:52.321" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:55:54.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:55:54.466" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:52.318" endtime="20210802 10:55:54.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:55:54.473" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:54.472" endtime="20210802 10:55:54.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:55:54.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:55:54.473" endtime="20210802 10:55:54.473"/>
</kw>
<status status="PASS" starttime="20210802 10:55:52.317" endtime="20210802 10:55:54.474"/>
</kw>
<msg timestamp="20210802 10:55:54.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:55:52.317" endtime="20210802 10:55:54.474"/>
</kw>
<msg timestamp="20210802 10:55:54.474" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:52.316" endtime="20210802 10:55:54.474"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:54.474" endtime="20210802 10:55:54.475"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:55:54.479" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:55:56.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:55:56.955" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:54.476" endtime="20210802 10:55:56.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:55:56.956" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:56.955" endtime="20210802 10:55:56.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:55:56.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:55:56.957" endtime="20210802 10:55:56.958"/>
</kw>
<status status="PASS" starttime="20210802 10:55:54.475" endtime="20210802 10:55:56.958"/>
</kw>
<msg timestamp="20210802 10:55:56.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:55:54.475" endtime="20210802 10:55:56.958"/>
</kw>
<msg timestamp="20210802 10:55:56.958" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:54.475" endtime="20210802 10:55:56.958"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:56.959" endtime="20210802 10:55:56.959"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:55:56.967" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:56:01.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:56:01.771" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:56.962" endtime="20210802 10:56:01.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:56:01.772" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:56:01.771" endtime="20210802 10:56:01.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:56:01.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:56:01.772" endtime="20210802 10:56:01.772"/>
</kw>
<status status="PASS" starttime="20210802 10:55:56.961" endtime="20210802 10:56:01.773"/>
</kw>
<msg timestamp="20210802 10:56:01.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:55:56.961" endtime="20210802 10:56:01.773"/>
</kw>
<msg timestamp="20210802 10:56:01.773" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:55:56.959" endtime="20210802 10:56:01.773"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:56:01.773" endtime="20210802 10:56:01.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:52.315" endtime="20210802 10:56:01.774"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210802 10:55:52.269" endtime="20210802 10:56:01.775"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210802 10:56:04.881" level="INFO">${random} = 98912</msg>
<status status="PASS" starttime="20210802 10:56:04.880" endtime="20210802 10:56:04.881"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210802 10:56:04.886" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-98912 2&gt;&amp;1'.</msg>
<msg timestamp="20210802 10:56:08.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210802 10:56:08.235" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:56:04.882" endtime="20210802 10:56:08.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210802 10:56:08.236" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:56:08.235" endtime="20210802 10:56:08.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210802 10:56:08.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210802 10:56:08.236" endtime="20210802 10:56:08.237"/>
</kw>
<status status="PASS" starttime="20210802 10:56:04.882" endtime="20210802 10:56:08.237"/>
</kw>
<msg timestamp="20210802 10:56:08.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210802 10:56:04.882" endtime="20210802 10:56:08.237"/>
</kw>
<msg timestamp="20210802 10:56:08.237" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210802 10:56:04.881" endtime="20210802 10:56:08.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:56:08.237" endtime="20210802 10:56:08.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:56:04.879" endtime="20210802 10:56:08.238"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210802 10:56:04.836" endtime="20210802 10:56:08.239"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:22.029" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210802 10:55:22.029" endtime="20210802 10:55:22.030"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210802 10:55:22.030" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210802 10:55:22.030" endtime="20210802 10:55:22.030"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210802 10:55:22.031" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210802 10:55:22.030" endtime="20210802 10:55:22.031"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210802 10:55:22.031" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210802 10:55:22.031" endtime="20210802 10:55:22.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210802 10:55:22.032" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210802 10:55:22.032" level="INFO">${version_file_contents} = #Mon Aug 02 10:53:15 UTC 2021
cTime=1627901595341
clusterID=CID-a7a08dc9-36aa-42f6-83dd-723f4693a4ee
nodeType=SCM
scmUuid=4420c659-bef1-4a53-892c-a35802a3f938
layoutVersion=0
</msg>
<status status="PASS" starttime="20210802 10:55:22.032" endtime="20210802 10:55:22.032"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210802 10:55:22.033" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210802 10:55:22.033" endtime="20210802 10:55:22.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210802 10:55:22.033" endtime="20210802 10:55:22.034"/>
</kw>
<status status="PASS" starttime="20210802 10:55:22.032" endtime="20210802 10:55:22.034"/>
</kw>
<status status="PASS" starttime="20210802 10:55:22.031" endtime="20210802 10:55:22.034"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210802 10:55:22.028" endtime="20210802 10:55:22.034"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210802 10:55:21.965" endtime="20210802 10:55:22.035"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148649"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="174999"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
