<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210809 08:40:14.011" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:31:47.915" level="INFO">${random} = 97241</msg>
<status status="PASS" starttime="20210809 08:31:47.914" endtime="20210809 08:31:47.915"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:31:47.918" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-97241 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:31:51.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:31:51.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:47.917" endtime="20210809 08:31:51.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:31:51.904" level="INFO"/>
<status status="PASS" starttime="20210809 08:31:51.903" endtime="20210809 08:31:51.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:31:51.905" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:31:51.905" endtime="20210809 08:31:51.905"/>
</kw>
<status status="PASS" starttime="20210809 08:31:47.916" endtime="20210809 08:31:51.905"/>
</kw>
<msg timestamp="20210809 08:31:51.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:31:47.916" endtime="20210809 08:31:51.905"/>
</kw>
<msg timestamp="20210809 08:31:51.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:47.915" endtime="20210809 08:31:51.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:31:51.906" endtime="20210809 08:31:51.906"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:31:47.914" endtime="20210809 08:31:51.906"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:31:47.867" endtime="20210809 08:31:51.907"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:31:34.054" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:31:36.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:31:36.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:34.052" endtime="20210809 08:31:36.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:31:36.878" level="INFO"/>
<status status="PASS" starttime="20210809 08:31:36.878" endtime="20210809 08:31:36.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:31:36.879" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:31:36.879" endtime="20210809 08:31:36.879"/>
</kw>
<status status="PASS" starttime="20210809 08:31:34.052" endtime="20210809 08:31:36.879"/>
</kw>
<msg timestamp="20210809 08:31:36.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:31:34.052" endtime="20210809 08:31:36.880"/>
</kw>
<msg timestamp="20210809 08:31:36.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:34.050" endtime="20210809 08:31:36.880"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:31:36.880" endtime="20210809 08:31:36.881"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:31:36.884" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:31:39.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:31:39.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:36.882" endtime="20210809 08:31:39.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:31:39.097" level="INFO"/>
<status status="PASS" starttime="20210809 08:31:39.096" endtime="20210809 08:31:39.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:31:39.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:31:39.097" endtime="20210809 08:31:39.098"/>
</kw>
<status status="PASS" starttime="20210809 08:31:36.882" endtime="20210809 08:31:39.098"/>
</kw>
<msg timestamp="20210809 08:31:39.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:31:36.881" endtime="20210809 08:31:39.099"/>
</kw>
<msg timestamp="20210809 08:31:39.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:36.881" endtime="20210809 08:31:39.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:31:39.100" endtime="20210809 08:31:39.100"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:31:39.105" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:31:44.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:31:44.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:39.104" endtime="20210809 08:31:44.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:31:44.220" level="INFO"/>
<status status="PASS" starttime="20210809 08:31:44.219" endtime="20210809 08:31:44.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:31:44.221" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:31:44.220" endtime="20210809 08:31:44.221"/>
</kw>
<status status="PASS" starttime="20210809 08:31:39.101" endtime="20210809 08:31:44.221"/>
</kw>
<msg timestamp="20210809 08:31:44.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:31:39.101" endtime="20210809 08:31:44.222"/>
</kw>
<msg timestamp="20210809 08:31:44.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:31:39.100" endtime="20210809 08:31:44.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:31:44.222" endtime="20210809 08:31:44.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:31:34.050" endtime="20210809 08:31:44.223"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210809 08:31:34.002" endtime="20210809 08:31:44.223"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:33:07.898" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:33:10.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:33:10.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:07.895" endtime="20210809 08:33:10.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:33:10.308" level="INFO"/>
<status status="PASS" starttime="20210809 08:33:10.308" endtime="20210809 08:33:10.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:33:10.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:33:10.309" endtime="20210809 08:33:10.309"/>
</kw>
<status status="PASS" starttime="20210809 08:33:07.894" endtime="20210809 08:33:10.310"/>
</kw>
<msg timestamp="20210809 08:33:10.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:33:07.894" endtime="20210809 08:33:10.310"/>
</kw>
<msg timestamp="20210809 08:33:10.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:07.893" endtime="20210809 08:33:10.311"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:33:10.312" endtime="20210809 08:33:10.313"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:33:10.318" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:33:12.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:33:12.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:10.316" endtime="20210809 08:33:12.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:33:12.673" level="INFO"/>
<status status="PASS" starttime="20210809 08:33:12.672" endtime="20210809 08:33:12.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:33:12.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:33:12.673" endtime="20210809 08:33:12.674"/>
</kw>
<status status="PASS" starttime="20210809 08:33:10.315" endtime="20210809 08:33:12.674"/>
</kw>
<msg timestamp="20210809 08:33:12.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:33:10.314" endtime="20210809 08:33:12.674"/>
</kw>
<msg timestamp="20210809 08:33:12.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:10.313" endtime="20210809 08:33:12.675"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:33:12.675" endtime="20210809 08:33:12.676"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:33:12.681" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:33:17.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:33:17.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:12.678" endtime="20210809 08:33:17.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:33:17.933" level="INFO"/>
<status status="PASS" starttime="20210809 08:33:17.932" endtime="20210809 08:33:17.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:33:17.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:33:17.933" endtime="20210809 08:33:17.934"/>
</kw>
<status status="PASS" starttime="20210809 08:33:12.677" endtime="20210809 08:33:17.935"/>
</kw>
<msg timestamp="20210809 08:33:17.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:33:12.677" endtime="20210809 08:33:17.935"/>
</kw>
<msg timestamp="20210809 08:33:17.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:12.676" endtime="20210809 08:33:17.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:33:17.935" endtime="20210809 08:33:17.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:33:07.892" endtime="20210809 08:33:17.936"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210809 08:33:07.821" endtime="20210809 08:33:17.938"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:33:21.845" level="INFO">${random} = 61072</msg>
<status status="PASS" starttime="20210809 08:33:21.844" endtime="20210809 08:33:21.845"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:33:21.852" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-61072 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:33:26.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:33:26.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:21.847" endtime="20210809 08:33:26.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:33:26.212" level="INFO"/>
<status status="PASS" starttime="20210809 08:33:26.211" endtime="20210809 08:33:26.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:33:26.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:33:26.212" endtime="20210809 08:33:26.213"/>
</kw>
<status status="PASS" starttime="20210809 08:33:21.846" endtime="20210809 08:33:26.213"/>
</kw>
<msg timestamp="20210809 08:33:26.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:33:21.846" endtime="20210809 08:33:26.213"/>
</kw>
<msg timestamp="20210809 08:33:26.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:33:21.845" endtime="20210809 08:33:26.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:33:26.214" endtime="20210809 08:33:26.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:33:21.844" endtime="20210809 08:33:26.214"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:33:21.769" endtime="20210809 08:33:26.216"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:32:58.782" level="INFO">${random} = 61170</msg>
<status status="PASS" starttime="20210809 08:32:58.781" endtime="20210809 08:32:58.782"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:32:58.788" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-61170 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:33:03.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:33:03.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:32:58.784" endtime="20210809 08:33:03.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:33:03.948" level="INFO"/>
<status status="PASS" starttime="20210809 08:33:03.947" endtime="20210809 08:33:03.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:33:03.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:33:03.949" endtime="20210809 08:33:03.950"/>
</kw>
<status status="PASS" starttime="20210809 08:32:58.784" endtime="20210809 08:33:03.950"/>
</kw>
<msg timestamp="20210809 08:33:03.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:32:58.783" endtime="20210809 08:33:03.950"/>
</kw>
<msg timestamp="20210809 08:33:03.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:32:58.782" endtime="20210809 08:33:03.951"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:33:03.951" endtime="20210809 08:33:03.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:32:58.780" endtime="20210809 08:33:03.952"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:32:58.709" endtime="20210809 08:33:03.954"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="34070"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:35:04.669" level="INFO">${random} = 80632</msg>
<status status="PASS" starttime="20210809 08:35:04.668" endtime="20210809 08:35:04.669"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:35:04.672" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-80632 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:35:08.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:35:08.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:35:04.670" endtime="20210809 08:35:08.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:35:08.495" level="INFO"/>
<status status="PASS" starttime="20210809 08:35:08.494" endtime="20210809 08:35:08.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:35:08.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:35:08.495" endtime="20210809 08:35:08.496"/>
</kw>
<status status="PASS" starttime="20210809 08:35:04.670" endtime="20210809 08:35:08.497"/>
</kw>
<msg timestamp="20210809 08:35:08.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:35:04.670" endtime="20210809 08:35:08.497"/>
</kw>
<msg timestamp="20210809 08:35:08.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:35:04.669" endtime="20210809 08:35:08.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:35:08.497" endtime="20210809 08:35:08.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:35:04.667" endtime="20210809 08:35:08.498"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:35:04.615" endtime="20210809 08:35:08.499"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:34:50.649" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:34:52.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:34:52.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:50.648" endtime="20210809 08:34:52.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:34:52.839" level="INFO"/>
<status status="PASS" starttime="20210809 08:34:52.838" endtime="20210809 08:34:52.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:34:52.840" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:34:52.840" endtime="20210809 08:34:52.840"/>
</kw>
<status status="PASS" starttime="20210809 08:34:50.647" endtime="20210809 08:34:52.840"/>
</kw>
<msg timestamp="20210809 08:34:52.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:34:50.647" endtime="20210809 08:34:52.841"/>
</kw>
<msg timestamp="20210809 08:34:52.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:50.646" endtime="20210809 08:34:52.841"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:34:52.841" endtime="20210809 08:34:52.842"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:34:52.852" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:34:55.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:34:55.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:52.843" endtime="20210809 08:34:55.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:34:55.403" level="INFO"/>
<status status="PASS" starttime="20210809 08:34:55.402" endtime="20210809 08:34:55.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:34:55.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:34:55.403" endtime="20210809 08:34:55.404"/>
</kw>
<status status="PASS" starttime="20210809 08:34:52.843" endtime="20210809 08:34:55.404"/>
</kw>
<msg timestamp="20210809 08:34:55.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:34:52.842" endtime="20210809 08:34:55.404"/>
</kw>
<msg timestamp="20210809 08:34:55.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:52.842" endtime="20210809 08:34:55.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:34:55.405" endtime="20210809 08:34:55.405"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:34:55.410" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:35:00.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:35:00.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:55.409" endtime="20210809 08:35:00.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:35:00.584" level="INFO"/>
<status status="PASS" starttime="20210809 08:35:00.584" endtime="20210809 08:35:00.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:35:00.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:35:00.585" endtime="20210809 08:35:00.585"/>
</kw>
<status status="PASS" starttime="20210809 08:34:55.407" endtime="20210809 08:35:00.586"/>
</kw>
<msg timestamp="20210809 08:35:00.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:34:55.406" endtime="20210809 08:35:00.586"/>
</kw>
<msg timestamp="20210809 08:35:00.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210809 08:34:55.405" endtime="20210809 08:35:00.586"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:35:00.586" endtime="20210809 08:35:00.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:34:50.645" endtime="20210809 08:35:00.587"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210809 08:34:50.594" endtime="20210809 08:35:00.588"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:35.376" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:36:35.375" endtime="20210809 08:36:35.376"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:35.376" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:35.376" endtime="20210809 08:36:35.377"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:35.377" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:35.377" endtime="20210809 08:36:35.377"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:35.378" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:35.378" endtime="20210809 08:36:35.378"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:35.380" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:35.380" level="INFO">${version_file_contents} = #Mon Aug 09 08:35:57 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498133038
clusterID=e40e130b-2808-473f-b53a-92a6e0d55796
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210809 08:36:35.379" endtime="20210809 08:36:35.380"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:35.381" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:35.380" endtime="20210809 08:36:35.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:35.381" endtime="20210809 08:36:35.381"/>
</kw>
<status status="PASS" starttime="20210809 08:36:35.379" endtime="20210809 08:36:35.381"/>
</kw>
<status status="PASS" starttime="20210809 08:36:35.378" endtime="20210809 08:36:35.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:35.374" endtime="20210809 08:36:35.382"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:35.310" endtime="20210809 08:36:35.382"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210809 08:37:33.242" endtime="20210809 08:37:33.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:33.248" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:38:51.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:38:51.847" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210809 08:37:33.245" endtime="20210809 08:38:51.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:38:51.849" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210809 08:38:51.848" endtime="20210809 08:38:51.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:38:51.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:38:51.849" endtime="20210809 08:38:51.849"/>
</kw>
<status status="PASS" starttime="20210809 08:37:33.244" endtime="20210809 08:38:51.850"/>
</kw>
<msg timestamp="20210809 08:38:51.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:33.244" endtime="20210809 08:38:51.850"/>
</kw>
<msg timestamp="20210809 08:38:51.850" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210809 08:37:33.243" endtime="20210809 08:38:51.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:38:51.851" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210809 08:38:51.851" endtime="20210809 08:38:51.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:37:33.241" endtime="20210809 08:38:51.852"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210809 08:38:51.854" endtime="20210809 08:38:51.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:38:51.858" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:38:54.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:38:54.898" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210809 08:38:51.856" endtime="20210809 08:38:54.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:38:54.899" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210809 08:38:54.898" endtime="20210809 08:38:54.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:38:54.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:38:54.899" endtime="20210809 08:38:54.900"/>
</kw>
<status status="PASS" starttime="20210809 08:38:51.855" endtime="20210809 08:38:54.900"/>
</kw>
<msg timestamp="20210809 08:38:54.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:38:51.855" endtime="20210809 08:38:54.901"/>
</kw>
<msg timestamp="20210809 08:38:54.901" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210809 08:38:51.854" endtime="20210809 08:38:54.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:38:54.902" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210809 08:38:54.901" endtime="20210809 08:38:54.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:38:51.853" endtime="20210809 08:38:54.902"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210809 08:37:33.177" endtime="20210809 08:38:54.904"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:38:58.889" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210809 08:38:58.888" endtime="20210809 08:38:58.890"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:38:58.890" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:38:58.890" endtime="20210809 08:38:58.890"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:38:58.891" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:38:58.890" endtime="20210809 08:38:58.891"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:38:58.891" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210809 08:38:58.891" endtime="20210809 08:38:58.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:38:58.893" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:38:58.893" level="INFO">${version_file_contents} = #Mon Aug 09 08:37:41 UTC 2021
cTime=1628498043961
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
nodeType=SCM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c030778
layoutVersion=2
</msg>
<status status="PASS" starttime="20210809 08:38:58.893" endtime="20210809 08:38:58.893"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:38:58.894" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210809 08:38:58.894" endtime="20210809 08:38:58.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:38:58.894" endtime="20210809 08:38:58.895"/>
</kw>
<status status="PASS" starttime="20210809 08:38:58.892" endtime="20210809 08:38:58.895"/>
</kw>
<status status="PASS" starttime="20210809 08:38:58.892" endtime="20210809 08:38:58.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:38:58.888" endtime="20210809 08:38:58.895"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:38:58.825" endtime="20210809 08:38:58.896"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:03.175" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:39:03.174" endtime="20210809 08:39:03.175"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:03.176" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:03.175" endtime="20210809 08:39:03.176"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:03.177" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:03.176" endtime="20210809 08:39:03.177"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:03.178" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:03.177" endtime="20210809 08:39:03.178"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:03.179" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:03.180" level="INFO">${version_file_contents} = #Mon Aug 09 08:37:42 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498133038
clusterID=e40e130b-2808-473f-b53a-92a6e0d55796
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210809 08:39:03.179" endtime="20210809 08:39:03.180"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:03.180" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210809 08:39:03.180" endtime="20210809 08:39:03.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:03.181" endtime="20210809 08:39:03.181"/>
</kw>
<status status="PASS" starttime="20210809 08:39:03.178" endtime="20210809 08:39:03.182"/>
</kw>
<status status="PASS" starttime="20210809 08:39:03.178" endtime="20210809 08:39:03.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:03.173" endtime="20210809 08:39:03.182"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:03.104" endtime="20210809 08:39:03.183"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:07.429" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:39:07.428" endtime="20210809 08:39:07.429"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:07.430" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:07.429" endtime="20210809 08:39:07.430"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:07.431" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:07.430" endtime="20210809 08:39:07.431"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:07.432" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:07.431" endtime="20210809 08:39:07.432"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:07.434" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:07.434" level="INFO">${version_file_contents} = #Mon Aug 09 08:38:02 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498135404
clusterID=0724644f-0464-427d-a83c-a75be111f573
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210809 08:39:07.433" endtime="20210809 08:39:07.434"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:07.435" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210809 08:39:07.434" endtime="20210809 08:39:07.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:07.435" endtime="20210809 08:39:07.436"/>
</kw>
<status status="PASS" starttime="20210809 08:39:07.433" endtime="20210809 08:39:07.436"/>
</kw>
<status status="PASS" starttime="20210809 08:39:07.432" endtime="20210809 08:39:07.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:07.427" endtime="20210809 08:39:07.436"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:07.362" endtime="20210809 08:39:07.438"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:11.458" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:39:11.457" endtime="20210809 08:39:11.458"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:11.458" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:11.458" endtime="20210809 08:39:11.458"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:11.459" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:11.459" endtime="20210809 08:39:11.459"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:11.460" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:11.459" endtime="20210809 08:39:11.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:11.461" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:11.461" level="INFO">${version_file_contents} = #Mon Aug 09 08:37:42 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498135474
clusterID=464e3719-b1cd-4596-9ab8-8286b13ad340
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210809 08:39:11.461" endtime="20210809 08:39:11.461"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:11.462" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210809 08:39:11.461" endtime="20210809 08:39:11.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:11.462" endtime="20210809 08:39:11.463"/>
</kw>
<status status="PASS" starttime="20210809 08:39:11.460" endtime="20210809 08:39:11.463"/>
</kw>
<status status="PASS" starttime="20210809 08:39:11.460" endtime="20210809 08:39:11.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:11.456" endtime="20210809 08:39:11.463"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:11.379" endtime="20210809 08:39:11.464"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:15.402" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:39:15.401" endtime="20210809 08:39:15.402"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:15.403" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:15.402" endtime="20210809 08:39:15.403"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:15.404" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:15.403" endtime="20210809 08:39:15.404"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:15.405" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:15.404" endtime="20210809 08:39:15.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:15.406" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:15.407" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:22 UTC 2021
cTime=1628498041969
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=b1bf75e9-94b5-4d51-b4d3-67e724165cb8
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:39:15.406" endtime="20210809 08:39:15.407"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:15.407" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:39:15.407" endtime="20210809 08:39:15.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:15.408" endtime="20210809 08:39:15.408"/>
</kw>
<status status="PASS" starttime="20210809 08:39:15.405" endtime="20210809 08:39:15.409"/>
</kw>
<status status="PASS" starttime="20210809 08:39:15.405" endtime="20210809 08:39:15.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:15.400" endtime="20210809 08:39:15.409"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:15.331" endtime="20210809 08:39:15.411"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:19.491" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:39:19.490" endtime="20210809 08:39:19.491"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:19.491" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:19.491" endtime="20210809 08:39:19.492"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:19.492" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:19.492" endtime="20210809 08:39:19.492"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:19.493" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:19.493" endtime="20210809 08:39:19.493"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:19.495" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:19.495" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:24 UTC 2021
cTime=1628498047570
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=031fe32d-28cc-4661-b5a5-d32ccc95eb46
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:39:19.495" endtime="20210809 08:39:19.495"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:19.496" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:39:19.496" endtime="20210809 08:39:19.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:19.496" endtime="20210809 08:39:19.497"/>
</kw>
<status status="PASS" starttime="20210809 08:39:19.494" endtime="20210809 08:39:19.497"/>
</kw>
<status status="PASS" starttime="20210809 08:39:19.493" endtime="20210809 08:39:19.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:19.489" endtime="20210809 08:39:19.497"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:19.425" endtime="20210809 08:39:19.499"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:23.588" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:39:23.587" endtime="20210809 08:39:23.588"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:39:23.589" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:39:23.588" endtime="20210809 08:39:23.589"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:39:23.589" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:39:23.589" endtime="20210809 08:39:23.590"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:39:23.590" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:39:23.590" endtime="20210809 08:39:23.590"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:39:23.592" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:39:23.592" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:22 UTC 2021
cTime=1628498045053
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=d3a056c4-1228-4dfc-a5eb-0c8cf221cd04
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:39:23.591" endtime="20210809 08:39:23.592"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:39:23.593" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:39:23.592" endtime="20210809 08:39:23.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:23.593" endtime="20210809 08:39:23.594"/>
</kw>
<status status="PASS" starttime="20210809 08:39:23.591" endtime="20210809 08:39:23.594"/>
</kw>
<status status="PASS" starttime="20210809 08:39:23.591" endtime="20210809 08:39:23.594"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:23.586" endtime="20210809 08:39:23.594"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:39:23.523" endtime="20210809 08:39:23.596"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:39:27.511" level="INFO">${random} = 54827</msg>
<status status="PASS" starttime="20210809 08:39:27.511" endtime="20210809 08:39:27.511"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:27.517" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-54827 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:39:31.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:39:31.786" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:27.514" endtime="20210809 08:39:31.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:39:31.787" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:31.786" endtime="20210809 08:39:31.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:39:31.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:39:31.788" endtime="20210809 08:39:31.788"/>
</kw>
<status status="PASS" starttime="20210809 08:39:27.513" endtime="20210809 08:39:31.789"/>
</kw>
<msg timestamp="20210809 08:39:31.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:27.512" endtime="20210809 08:39:31.789"/>
</kw>
<msg timestamp="20210809 08:39:31.789" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:27.512" endtime="20210809 08:39:31.789"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:31.789" endtime="20210809 08:39:31.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:27.510" endtime="20210809 08:39:31.790"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:39:27.447" endtime="20210809 08:39:31.792"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:39:35.690" level="INFO">${random} = 48997</msg>
<status status="PASS" starttime="20210809 08:39:35.689" endtime="20210809 08:39:35.690"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:35.696" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-48997 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:39:39.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:39:39.835" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:35.692" endtime="20210809 08:39:39.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:39:39.836" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:39.836" endtime="20210809 08:39:39.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:39:39.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:39:39.837" endtime="20210809 08:39:39.838"/>
</kw>
<status status="PASS" starttime="20210809 08:39:35.691" endtime="20210809 08:39:39.838"/>
</kw>
<msg timestamp="20210809 08:39:39.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:35.691" endtime="20210809 08:39:39.838"/>
</kw>
<msg timestamp="20210809 08:39:39.838" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:35.690" endtime="20210809 08:39:39.838"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:39.839" endtime="20210809 08:39:39.839"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:35.689" endtime="20210809 08:39:39.839"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:39:35.624" endtime="20210809 08:39:39.840"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:39.292" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:36:39.292" endtime="20210809 08:36:39.293"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:39.293" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:39.293" endtime="20210809 08:36:39.293"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:39.294" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:39.293" endtime="20210809 08:36:39.294"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:39.295" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:39.294" endtime="20210809 08:36:39.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:39.296" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:39.297" level="INFO">${version_file_contents} = #Mon Aug 09 08:35:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498135404
clusterID=0724644f-0464-427d-a83c-a75be111f573
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210809 08:36:39.296" endtime="20210809 08:36:39.297"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:39.297" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:39.297" endtime="20210809 08:36:39.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:39.298" endtime="20210809 08:36:39.298"/>
</kw>
<status status="PASS" starttime="20210809 08:36:39.295" endtime="20210809 08:36:39.298"/>
</kw>
<status status="PASS" starttime="20210809 08:36:39.295" endtime="20210809 08:36:39.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:39.291" endtime="20210809 08:36:39.299"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:39.220" endtime="20210809 08:36:39.300"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:43.727" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:39:46.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:39:46.297" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:43.723" endtime="20210809 08:39:46.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:39:46.299" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:46.298" endtime="20210809 08:39:46.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:39:46.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:39:46.299" endtime="20210809 08:39:46.301"/>
</kw>
<status status="PASS" starttime="20210809 08:39:43.722" endtime="20210809 08:39:46.301"/>
</kw>
<msg timestamp="20210809 08:39:46.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:43.722" endtime="20210809 08:39:46.302"/>
</kw>
<msg timestamp="20210809 08:39:46.302" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:43.721" endtime="20210809 08:39:46.302"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:46.302" endtime="20210809 08:39:46.303"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:46.307" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:39:48.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:39:48.941" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:46.305" endtime="20210809 08:39:48.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:39:48.942" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:48.942" endtime="20210809 08:39:48.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:39:48.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:39:48.943" endtime="20210809 08:39:48.944"/>
</kw>
<status status="PASS" starttime="20210809 08:39:46.304" endtime="20210809 08:39:48.944"/>
</kw>
<msg timestamp="20210809 08:39:48.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:46.304" endtime="20210809 08:39:48.944"/>
</kw>
<msg timestamp="20210809 08:39:48.945" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:46.303" endtime="20210809 08:39:48.945"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:48.945" endtime="20210809 08:39:48.946"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:48.950" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:39:53.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:39:53.739" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:48.948" endtime="20210809 08:39:53.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:39:53.741" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:53.740" endtime="20210809 08:39:53.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:39:53.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:39:53.741" endtime="20210809 08:39:53.742"/>
</kw>
<status status="PASS" starttime="20210809 08:39:48.947" endtime="20210809 08:39:53.742"/>
</kw>
<msg timestamp="20210809 08:39:53.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:48.947" endtime="20210809 08:39:53.743"/>
</kw>
<msg timestamp="20210809 08:39:53.743" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:48.946" endtime="20210809 08:39:53.743"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:39:53.743" endtime="20210809 08:39:53.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:43.720" endtime="20210809 08:39:53.744"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210809 08:39:43.653" endtime="20210809 08:39:53.745"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:39:57.620" level="INFO">${random} = 77489</msg>
<status status="PASS" starttime="20210809 08:39:57.620" endtime="20210809 08:39:57.620"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:39:57.627" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-77489 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:40:02.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:40:02.195" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:57.622" endtime="20210809 08:40:02.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:40:02.196" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:40:02.196" endtime="20210809 08:40:02.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:40:02.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:40:02.197" endtime="20210809 08:40:02.198"/>
</kw>
<status status="PASS" starttime="20210809 08:39:57.622" endtime="20210809 08:40:02.198"/>
</kw>
<msg timestamp="20210809 08:40:02.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:39:57.621" endtime="20210809 08:40:02.198"/>
</kw>
<msg timestamp="20210809 08:40:02.198" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:39:57.620" endtime="20210809 08:40:02.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:40:02.199" endtime="20210809 08:40:02.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:39:57.619" endtime="20210809 08:40:02.199"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:39:57.552" endtime="20210809 08:40:02.201"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:43.314" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210809 08:36:43.313" endtime="20210809 08:36:43.314"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:43.314" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:43.314" endtime="20210809 08:36:43.315"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:43.315" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:43.315" endtime="20210809 08:36:43.315"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:43.316" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:43.316" endtime="20210809 08:36:43.316"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:43.318" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:43.318" level="INFO">${version_file_contents} = #Mon Aug 09 08:35:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628498135474
clusterID=464e3719-b1cd-4596-9ab8-8286b13ad340
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210809 08:36:43.317" endtime="20210809 08:36:43.318"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:43.319" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:43.318" endtime="20210809 08:36:43.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:43.319" endtime="20210809 08:36:43.319"/>
</kw>
<status status="PASS" starttime="20210809 08:36:43.317" endtime="20210809 08:36:43.320"/>
</kw>
<status status="PASS" starttime="20210809 08:36:43.316" endtime="20210809 08:36:43.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:43.312" endtime="20210809 08:36:43.320"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:43.244" endtime="20210809 08:36:43.321"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:47.618" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:36:47.618" endtime="20210809 08:36:47.619"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:47.619" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:47.619" endtime="20210809 08:36:47.619"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:47.620" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:47.619" endtime="20210809 08:36:47.620"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:47.621" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:47.620" endtime="20210809 08:36:47.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:47.622" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:47.623" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:22 UTC 2021
cTime=1628498041969
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=b1bf75e9-94b5-4d51-b4d3-67e724165cb8
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:36:47.622" endtime="20210809 08:36:47.623"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:47.623" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:47.623" endtime="20210809 08:36:47.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:47.624" endtime="20210809 08:36:47.624"/>
</kw>
<status status="PASS" starttime="20210809 08:36:47.621" endtime="20210809 08:36:47.624"/>
</kw>
<status status="PASS" starttime="20210809 08:36:47.621" endtime="20210809 08:36:47.624"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:47.617" endtime="20210809 08:36:47.625"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:47.553" endtime="20210809 08:36:47.625"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:51.799" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:36:51.797" endtime="20210809 08:36:51.799"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:51.800" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:51.800" endtime="20210809 08:36:51.800"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:51.801" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:51.801" endtime="20210809 08:36:51.801"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:51.802" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:51.801" endtime="20210809 08:36:51.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:51.804" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:51.804" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:24 UTC 2021
cTime=1628498047570
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=031fe32d-28cc-4661-b5a5-d32ccc95eb46
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:36:51.803" endtime="20210809 08:36:51.804"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:51.805" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:51.805" endtime="20210809 08:36:51.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:51.805" endtime="20210809 08:36:51.806"/>
</kw>
<status status="PASS" starttime="20210809 08:36:51.803" endtime="20210809 08:36:51.806"/>
</kw>
<status status="PASS" starttime="20210809 08:36:51.802" endtime="20210809 08:36:51.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:51.796" endtime="20210809 08:36:51.807"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:51.733" endtime="20210809 08:36:51.807"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:55.904" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210809 08:36:55.903" endtime="20210809 08:36:55.904"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:55.904" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:55.904" endtime="20210809 08:36:55.904"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:55.905" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:55.905" endtime="20210809 08:36:55.905"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:55.906" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:55.905" endtime="20210809 08:36:55.906"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:55.908" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:55.908" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:22 UTC 2021
cTime=1628498045053
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
omUuid=d3a056c4-1228-4dfc-a5eb-0c8cf221cd04
nodeType=OM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c03077...</msg>
<status status="PASS" starttime="20210809 08:36:55.907" endtime="20210809 08:36:55.908"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:55.909" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:55.908" endtime="20210809 08:36:55.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:55.909" endtime="20210809 08:36:55.909"/>
</kw>
<status status="PASS" starttime="20210809 08:36:55.907" endtime="20210809 08:36:55.910"/>
</kw>
<status status="PASS" starttime="20210809 08:36:55.907" endtime="20210809 08:36:55.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:55.902" endtime="20210809 08:36:55.910"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:55.837" endtime="20210809 08:36:55.911"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:37:00.039" level="INFO">${random} = 96428</msg>
<status status="PASS" starttime="20210809 08:37:00.039" endtime="20210809 08:37:00.040"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:00.045" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-96428 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:37:05.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:37:05.070" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:00.042" endtime="20210809 08:37:05.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:37:05.071" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:05.070" endtime="20210809 08:37:05.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:37:05.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:37:05.071" endtime="20210809 08:37:05.072"/>
</kw>
<status status="PASS" starttime="20210809 08:37:00.041" endtime="20210809 08:37:05.072"/>
</kw>
<msg timestamp="20210809 08:37:05.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:00.041" endtime="20210809 08:37:05.073"/>
</kw>
<msg timestamp="20210809 08:37:05.073" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:00.040" endtime="20210809 08:37:05.073"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:37:05.073" endtime="20210809 08:37:05.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:37:00.038" endtime="20210809 08:37:05.074"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:36:59.966" endtime="20210809 08:37:05.078"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:09.156" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:37:11.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:37:11.846" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:09.153" endtime="20210809 08:37:11.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:37:11.851" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:11.847" endtime="20210809 08:37:11.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:37:11.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:37:11.852" endtime="20210809 08:37:11.853"/>
</kw>
<status status="PASS" starttime="20210809 08:37:09.153" endtime="20210809 08:37:11.854"/>
</kw>
<msg timestamp="20210809 08:37:11.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:09.152" endtime="20210809 08:37:11.854"/>
</kw>
<msg timestamp="20210809 08:37:11.854" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:09.151" endtime="20210809 08:37:11.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:37:11.854" endtime="20210809 08:37:11.855"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:11.871" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:37:14.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:37:14.561" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:11.865" endtime="20210809 08:37:14.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:37:14.563" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:14.561" endtime="20210809 08:37:14.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:37:14.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:37:14.563" endtime="20210809 08:37:14.563"/>
</kw>
<status status="PASS" starttime="20210809 08:37:11.864" endtime="20210809 08:37:14.564"/>
</kw>
<msg timestamp="20210809 08:37:14.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:11.861" endtime="20210809 08:37:14.564"/>
</kw>
<msg timestamp="20210809 08:37:14.564" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:11.860" endtime="20210809 08:37:14.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:37:14.565" endtime="20210809 08:37:14.565"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:14.570" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:37:20.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:37:20.221" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:14.567" endtime="20210809 08:37:20.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:37:20.223" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:20.222" endtime="20210809 08:37:20.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:37:20.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:37:20.223" endtime="20210809 08:37:20.224"/>
</kw>
<status status="PASS" starttime="20210809 08:37:14.567" endtime="20210809 08:37:20.224"/>
</kw>
<msg timestamp="20210809 08:37:20.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:14.566" endtime="20210809 08:37:20.225"/>
</kw>
<msg timestamp="20210809 08:37:20.225" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:14.565" endtime="20210809 08:37:20.225"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:37:20.225" endtime="20210809 08:37:20.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:37:09.150" endtime="20210809 08:37:20.226"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210809 08:37:09.088" endtime="20210809 08:37:20.228"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210809 08:37:24.396" level="INFO">${random} = 90792</msg>
<status status="PASS" starttime="20210809 08:37:24.395" endtime="20210809 08:37:24.396"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210809 08:37:24.403" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-90792 2&gt;&amp;1'.</msg>
<msg timestamp="20210809 08:37:29.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210809 08:37:29.196" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:24.399" endtime="20210809 08:37:29.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210809 08:37:29.197" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:29.196" endtime="20210809 08:37:29.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210809 08:37:29.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210809 08:37:29.197" endtime="20210809 08:37:29.198"/>
</kw>
<status status="PASS" starttime="20210809 08:37:24.398" endtime="20210809 08:37:29.198"/>
</kw>
<msg timestamp="20210809 08:37:29.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210809 08:37:24.398" endtime="20210809 08:37:29.199"/>
</kw>
<msg timestamp="20210809 08:37:29.199" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210809 08:37:24.396" endtime="20210809 08:37:29.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:37:29.199" endtime="20210809 08:37:29.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:37:24.394" endtime="20210809 08:37:29.200"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210809 08:37:24.325" endtime="20210809 08:37:29.203"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:31.515" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210809 08:36:31.514" endtime="20210809 08:36:31.515"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210809 08:36:31.516" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210809 08:36:31.515" endtime="20210809 08:36:31.516"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210809 08:36:31.516" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210809 08:36:31.516" endtime="20210809 08:36:31.516"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210809 08:36:31.517" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210809 08:36:31.517" endtime="20210809 08:36:31.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210809 08:36:31.519" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210809 08:36:31.519" level="INFO">${version_file_contents} = #Mon Aug 09 08:34:03 UTC 2021
cTime=1628498043961
clusterID=CID-8d7c16a4-8478-44a4-98ad-415b894996cc
nodeType=SCM
scmUuid=fcc10e7d-94fa-4956-ace8-349d4c030778
layoutVersion=0
</msg>
<status status="PASS" starttime="20210809 08:36:31.519" endtime="20210809 08:36:31.519"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210809 08:36:31.520" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210809 08:36:31.520" endtime="20210809 08:36:31.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210809 08:36:31.520" endtime="20210809 08:36:31.521"/>
</kw>
<status status="PASS" starttime="20210809 08:36:31.518" endtime="20210809 08:36:31.521"/>
</kw>
<status status="PASS" starttime="20210809 08:36:31.518" endtime="20210809 08:36:31.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210809 08:36:31.514" endtime="20210809 08:36:31.522"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210809 08:36:31.453" endtime="20210809 08:36:31.523"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="141094"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="175164"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
