<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210817 02:13:01.419" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.023" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:31.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:31.027" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:22:31.019" endtime="20210817 01:22:31.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:31.029" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:22:31.028" endtime="20210817 01:22:31.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:31.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:31.029" endtime="20210817 01:22:31.030"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.018" endtime="20210817 01:22:31.030"/>
</kw>
<msg timestamp="20210817 01:22:31.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:31.018" endtime="20210817 01:22:31.030"/>
</kw>
<msg timestamp="20210817 01:22:31.030" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210817 01:22:31.017" endtime="20210817 01:22:31.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.035" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:31.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:31.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:22:31.033" endtime="20210817 01:22:31.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:31.045" level="INFO"/>
<status status="PASS" starttime="20210817 01:22:31.044" endtime="20210817 01:22:31.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:31.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:31.045" endtime="20210817 01:22:31.045"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.032" endtime="20210817 01:22:31.046"/>
</kw>
<msg timestamp="20210817 01:22:31.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:31.032" endtime="20210817 01:22:31.046"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.031" endtime="20210817 01:22:31.046"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.031" endtime="20210817 01:22:31.046"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.017" endtime="20210817 01:22:31.047"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.016" endtime="20210817 01:22:31.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.051" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:31.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:31.177" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210817 01:22:31.048" endtime="20210817 01:22:31.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:31.179" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 17 Aug 2021 01:22:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFfwFaTvWGRK5Dnm6K9yR26iS9vfLQdr7Wn7MIy1bMwnplCW/QuPMz8nJAliRdLrhH2RsqfdIP7sJrCmlTibjHQXx
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1629199351166&amp;s=RbqkQGJNOLmr+fuiuev7nf/QPlo3W2iwbYxsG0lQzO8="; Path=/; HttpOnly
Last-Modified: Tue, 17 Aug 2021 01:07:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210817 01:22:31.178" endtime="20210817 01:22:31.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:31.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:31.179" endtime="20210817 01:22:31.180"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.048" endtime="20210817 01:22:31.180"/>
</kw>
<msg timestamp="20210817 01:22:31.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:31.048" endtime="20210817 01:22:31.180"/>
</kw>
<msg timestamp="20210817 01:22:31.181" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210817 01:22:31.047" endtime="20210817 01:22:31.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:22:31.181" endtime="20210817 01:22:31.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:22:31.015" endtime="20210817 01:22:31.182"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.191" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:31.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:31.203" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:22:31.188" endtime="20210817 01:22:31.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:31.204" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:22:31.203" endtime="20210817 01:22:31.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:31.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:31.205" endtime="20210817 01:22:31.205"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.188" endtime="20210817 01:22:31.206"/>
</kw>
<msg timestamp="20210817 01:22:31.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:31.187" endtime="20210817 01:22:31.206"/>
</kw>
<msg timestamp="20210817 01:22:31.206" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:22:31.187" endtime="20210817 01:22:31.206"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:22:31.208" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:22:31.206" endtime="20210817 01:22:31.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.213" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:31.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:31.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:22:31.211" endtime="20210817 01:22:31.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:31.223" level="INFO"/>
<status status="PASS" starttime="20210817 01:22:31.222" endtime="20210817 01:22:31.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:31.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:31.223" endtime="20210817 01:22:31.224"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.210" endtime="20210817 01:22:31.224"/>
</kw>
<msg timestamp="20210817 01:22:31.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:31.210" endtime="20210817 01:22:31.224"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.209" endtime="20210817 01:22:31.225"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.209" endtime="20210817 01:22:31.225"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.186" endtime="20210817 01:22:31.225"/>
</kw>
<status status="PASS" starttime="20210817 01:22:31.186" endtime="20210817 01:22:31.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:31.229" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:31.185" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:22:31.227" endtime="20210817 01:27:31.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:27:31.186" endtime="20210817 01:27:31.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:27:31.186" endtime="20210817 01:27:31.187"/>
</kw>
<status status="FAIL" starttime="20210817 01:22:31.226" endtime="20210817 01:27:31.187"/>
</kw>
<msg timestamp="20210817 01:27:31.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:22:31.226" endtime="20210817 01:27:31.188"/>
</kw>
<status status="FAIL" starttime="20210817 01:22:31.225" endtime="20210817 01:27:31.188"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210817 01:27:31.188" endtime="20210817 01:27:31.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:27:31.188" endtime="20210817 01:27:31.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210817 01:22:31.184" endtime="20210817 01:27:31.189">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210817 01:22:30.982" endtime="20210817 01:27:31.191"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:31.220" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:34.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:34.565" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210817 01:27:31.216" endtime="20210817 01:27:34.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:34.566" level="INFO">om</msg>
<status status="PASS" starttime="20210817 01:27:34.565" endtime="20210817 01:27:34.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:34.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:34.567" endtime="20210817 01:27:34.568"/>
</kw>
<status status="PASS" starttime="20210817 01:27:31.214" endtime="20210817 01:27:34.569"/>
</kw>
<msg timestamp="20210817 01:27:34.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:31.214" endtime="20210817 01:27:34.569"/>
</kw>
<msg timestamp="20210817 01:27:34.570" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210817 01:27:31.213" endtime="20210817 01:27:34.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:34.570" endtime="20210817 01:27:34.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:34.576" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:37.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:37.676" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210817 01:27:34.573" endtime="20210817 01:27:37.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:37.678" level="INFO">om</msg>
<status status="PASS" starttime="20210817 01:27:37.677" endtime="20210817 01:27:37.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:37.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:37.678" endtime="20210817 01:27:37.679"/>
</kw>
<status status="PASS" starttime="20210817 01:27:34.572" endtime="20210817 01:27:37.679"/>
</kw>
<msg timestamp="20210817 01:27:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:34.572" endtime="20210817 01:27:37.679"/>
</kw>
<msg timestamp="20210817 01:27:37.680" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210817 01:27:34.571" endtime="20210817 01:27:37.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:37.680" endtime="20210817 01:27:37.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:27:31.211" endtime="20210817 01:27:37.681"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:37.688" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:40.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:40.931" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:27:37.685" endtime="20210817 01:27:40.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:40.933" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:27:40.932" endtime="20210817 01:27:40.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:40.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:40.934" endtime="20210817 01:27:40.935"/>
</kw>
<status status="PASS" starttime="20210817 01:27:37.684" endtime="20210817 01:27:40.936"/>
</kw>
<msg timestamp="20210817 01:27:40.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:37.684" endtime="20210817 01:27:40.936"/>
</kw>
<msg timestamp="20210817 01:27:40.937" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210817 01:27:37.683" endtime="20210817 01:27:40.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:40.937" endtime="20210817 01:27:40.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:40.946" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:44.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:44.208" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:27:40.942" endtime="20210817 01:27:44.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:44.209" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:27:44.208" endtime="20210817 01:27:44.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:44.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:44.209" endtime="20210817 01:27:44.210"/>
</kw>
<status status="PASS" starttime="20210817 01:27:40.941" endtime="20210817 01:27:44.210"/>
</kw>
<msg timestamp="20210817 01:27:44.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:40.940" endtime="20210817 01:27:44.210"/>
</kw>
<msg timestamp="20210817 01:27:44.211" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210817 01:27:40.939" endtime="20210817 01:27:44.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:44.211" endtime="20210817 01:27:44.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:27:37.682" endtime="20210817 01:27:44.212"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:44.221" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:47.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:47.077" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210817 01:27:44.218" endtime="20210817 01:27:47.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:47.079" level="INFO">om</msg>
<status status="PASS" starttime="20210817 01:27:47.078" endtime="20210817 01:27:47.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:47.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:47.079" endtime="20210817 01:27:47.080"/>
</kw>
<status status="PASS" starttime="20210817 01:27:44.217" endtime="20210817 01:27:47.080"/>
</kw>
<msg timestamp="20210817 01:27:47.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:44.216" endtime="20210817 01:27:47.080"/>
</kw>
<msg timestamp="20210817 01:27:47.081" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210817 01:27:44.215" endtime="20210817 01:27:47.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:47.081" endtime="20210817 01:27:47.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:47.081" endtime="20210817 01:27:47.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:47.089" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:49.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:27:49.799" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210817 01:27:47.086" endtime="20210817 01:27:49.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:49.801" level="INFO">om</msg>
<status status="PASS" starttime="20210817 01:27:49.800" endtime="20210817 01:27:49.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:49.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:49.801" endtime="20210817 01:27:49.802"/>
</kw>
<status status="PASS" starttime="20210817 01:27:47.084" endtime="20210817 01:27:49.802"/>
</kw>
<msg timestamp="20210817 01:27:49.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:47.083" endtime="20210817 01:27:49.803"/>
</kw>
<msg timestamp="20210817 01:27:49.803" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210817 01:27:47.082" endtime="20210817 01:27:49.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:49.804" endtime="20210817 01:27:49.804"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:49.805" endtime="20210817 01:27:49.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:27:44.213" endtime="20210817 01:27:49.806"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:49.811" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:52.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:27:52.785" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:49.809" endtime="20210817 01:27:52.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:52.786" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:52.785" endtime="20210817 01:27:52.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:52.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:52.787" endtime="20210817 01:27:52.787"/>
</kw>
<msg timestamp="20210817 01:27:52.788" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:49.808" endtime="20210817 01:27:52.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:52.788" endtime="20210817 01:27:52.789"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:52.792" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:27:55.557" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:27:55.557" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:52.789" endtime="20210817 01:27:55.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:27:55.558" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:55.558" endtime="20210817 01:27:55.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:27:55.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:27:55.559" endtime="20210817 01:27:55.561"/>
</kw>
<msg timestamp="20210817 01:27:55.561" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210817 01:27:52.789" endtime="20210817 01:27:55.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:27:55.562" endtime="20210817 01:27:55.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:27:49.807" endtime="20210817 01:27:55.563"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210817 01:27:31.197" endtime="20210817 01:27:55.566"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 01:27:55.591" level="INFO">${random} = 59601</msg>
<status status="PASS" starttime="20210817 01:27:55.591" endtime="20210817 01:27:55.591"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:27:55.593" level="INFO">${source} = 59601-source</msg>
<status status="PASS" starttime="20210817 01:27:55.591" endtime="20210817 01:27:55.594"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:27:55.596" level="INFO">${target} = 59601-target</msg>
<status status="PASS" starttime="20210817 01:27:55.594" endtime="20210817 01:27:55.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:27:55.601" level="INFO">Running command 'ozone sh volume create 59601-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:28:02.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:28:02.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:27:55.598" endtime="20210817 01:28:02.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:28:02.279" level="INFO"/>
<status status="PASS" starttime="20210817 01:28:02.277" endtime="20210817 01:28:02.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:28:02.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:28:02.280" endtime="20210817 01:28:02.281"/>
</kw>
<status status="PASS" starttime="20210817 01:27:55.597" endtime="20210817 01:28:02.282"/>
</kw>
<msg timestamp="20210817 01:28:02.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:27:55.597" endtime="20210817 01:28:02.282"/>
</kw>
<status status="PASS" starttime="20210817 01:27:55.596" endtime="20210817 01:28:02.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:28:02.288" level="INFO">Running command 'ozone sh volume create 59601-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:28:08.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:28:08.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:28:02.284" endtime="20210817 01:28:08.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:28:08.581" level="INFO"/>
<status status="PASS" starttime="20210817 01:28:08.580" endtime="20210817 01:28:08.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:28:08.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:28:08.582" endtime="20210817 01:28:08.583"/>
</kw>
<status status="PASS" starttime="20210817 01:28:02.284" endtime="20210817 01:28:08.583"/>
</kw>
<msg timestamp="20210817 01:28:08.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:28:02.283" endtime="20210817 01:28:08.584"/>
</kw>
<status status="PASS" starttime="20210817 01:28:02.283" endtime="20210817 01:28:08.584"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:28:08.591" level="INFO">Running command 'ozone sh bucket create 59601-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:28:16.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:28:16.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:28:08.589" endtime="20210817 01:28:16.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:28:16.362" level="INFO"/>
<status status="PASS" starttime="20210817 01:28:16.361" endtime="20210817 01:28:16.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:28:16.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:28:16.362" endtime="20210817 01:28:16.363"/>
</kw>
<status status="PASS" starttime="20210817 01:28:08.588" endtime="20210817 01:28:16.363"/>
</kw>
<msg timestamp="20210817 01:28:16.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:28:08.586" endtime="20210817 01:28:16.364"/>
</kw>
<status status="PASS" starttime="20210817 01:28:08.585" endtime="20210817 01:28:16.364"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:28:16.370" level="INFO">Running command 'ozone sh key put 59601-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:31:28.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:31:28.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:28:16.367" endtime="20210817 01:31:28.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:31:28.030" level="INFO"/>
<status status="PASS" starttime="20210817 01:31:28.028" endtime="20210817 01:31:28.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:31:28.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:31:28.031" endtime="20210817 01:31:28.032"/>
</kw>
<status status="PASS" starttime="20210817 01:28:16.366" endtime="20210817 01:31:28.033"/>
</kw>
<msg timestamp="20210817 01:31:28.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:28:16.366" endtime="20210817 01:31:28.033"/>
</kw>
<status status="PASS" starttime="20210817 01:28:16.365" endtime="20210817 01:31:28.034"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:31:28.041" level="INFO">Running command 'ozone sh bucket create 59601-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:31:36.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:31:36.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:31:28.038" endtime="20210817 01:31:36.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:31:36.291" level="INFO"/>
<status status="PASS" starttime="20210817 01:31:36.290" endtime="20210817 01:31:36.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:31:36.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:31:36.291" endtime="20210817 01:31:36.292"/>
</kw>
<status status="PASS" starttime="20210817 01:31:28.036" endtime="20210817 01:31:36.292"/>
</kw>
<msg timestamp="20210817 01:31:36.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:31:28.036" endtime="20210817 01:31:36.292"/>
</kw>
<status status="PASS" starttime="20210817 01:31:28.035" endtime="20210817 01:31:36.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:31:36.297" level="INFO">Running command 'ozone sh bucket link 59601-source/readable-bucket 59601-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:31:45.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:31:45.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:31:36.294" endtime="20210817 01:31:45.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:31:45.076" level="INFO"/>
<status status="PASS" starttime="20210817 01:31:45.075" endtime="20210817 01:31:45.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:31:45.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:31:45.076" endtime="20210817 01:31:45.077"/>
</kw>
<status status="PASS" starttime="20210817 01:31:36.294" endtime="20210817 01:31:45.077"/>
</kw>
<msg timestamp="20210817 01:31:45.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:31:36.293" endtime="20210817 01:31:45.077"/>
</kw>
<status status="PASS" starttime="20210817 01:31:36.293" endtime="20210817 01:31:45.078"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:31:45.082" level="INFO">Running command 'ozone sh bucket link 59601-source/readable-bucket 59601-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:31:53.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:31:53.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:31:45.079" endtime="20210817 01:31:53.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:31:53.285" level="INFO"/>
<status status="PASS" starttime="20210817 01:31:53.284" endtime="20210817 01:31:53.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:31:53.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:31:53.285" endtime="20210817 01:31:53.286"/>
</kw>
<status status="PASS" starttime="20210817 01:31:45.079" endtime="20210817 01:31:53.286"/>
</kw>
<msg timestamp="20210817 01:31:53.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:31:45.078" endtime="20210817 01:31:53.286"/>
</kw>
<status status="PASS" starttime="20210817 01:31:45.078" endtime="20210817 01:31:53.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:31:53.291" level="INFO">Running command 'ozone sh bucket link 59601-source/unreadable-bucket 59601-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:01.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:01.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:31:53.288" endtime="20210817 01:32:01.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:01.273" level="INFO"/>
<status status="PASS" starttime="20210817 01:32:01.272" endtime="20210817 01:32:01.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:01.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:01.274" endtime="20210817 01:32:01.275"/>
</kw>
<status status="PASS" starttime="20210817 01:31:53.288" endtime="20210817 01:32:01.276"/>
</kw>
<msg timestamp="20210817 01:32:01.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:31:53.288" endtime="20210817 01:32:01.276"/>
</kw>
<status status="PASS" starttime="20210817 01:31:53.287" endtime="20210817 01:32:01.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:01.282" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59601-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:10.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:10.248" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:01.280" endtime="20210817 01:32:10.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:10.252" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:10.251" endtime="20210817 01:32:10.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:10.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:10.253" endtime="20210817 01:32:10.255"/>
</kw>
<status status="PASS" starttime="20210817 01:32:01.279" endtime="20210817 01:32:10.255"/>
</kw>
<msg timestamp="20210817 01:32:10.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:01.279" endtime="20210817 01:32:10.257"/>
</kw>
<status status="PASS" starttime="20210817 01:32:01.277" endtime="20210817 01:32:10.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:10.267" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 59601-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:18.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:18.339" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:10.263" endtime="20210817 01:32:18.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:18.341" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:18.340" endtime="20210817 01:32:18.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:18.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:18.341" endtime="20210817 01:32:18.341"/>
</kw>
<status status="PASS" starttime="20210817 01:32:10.262" endtime="20210817 01:32:18.342"/>
</kw>
<msg timestamp="20210817 01:32:18.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:10.261" endtime="20210817 01:32:18.342"/>
</kw>
<status status="PASS" starttime="20210817 01:32:10.258" endtime="20210817 01:32:18.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:18.350" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 59601-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:26.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:26.202" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:18.346" endtime="20210817 01:32:26.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:26.204" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:26.203" endtime="20210817 01:32:26.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:26.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:26.204" endtime="20210817 01:32:26.205"/>
</kw>
<status status="PASS" starttime="20210817 01:32:18.345" endtime="20210817 01:32:26.205"/>
</kw>
<msg timestamp="20210817 01:32:26.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:18.344" endtime="20210817 01:32:26.205"/>
</kw>
<status status="PASS" starttime="20210817 01:32:18.343" endtime="20210817 01:32:26.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:26.210" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59601-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:31.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:31.973" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:26.207" endtime="20210817 01:32:31.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:31.975" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:31.974" endtime="20210817 01:32:31.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:31.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:31.976" endtime="20210817 01:32:31.977"/>
</kw>
<status status="PASS" starttime="20210817 01:32:26.207" endtime="20210817 01:32:31.978"/>
</kw>
<msg timestamp="20210817 01:32:31.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:26.206" endtime="20210817 01:32:31.978"/>
</kw>
<status status="PASS" starttime="20210817 01:32:26.206" endtime="20210817 01:32:31.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:31.986" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59601-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:40.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:40.483" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:31.983" endtime="20210817 01:32:40.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:40.486" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:32:40.484" endtime="20210817 01:32:40.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:40.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:40.487" endtime="20210817 01:32:40.488"/>
</kw>
<status status="PASS" starttime="20210817 01:32:31.981" endtime="20210817 01:32:40.489"/>
</kw>
<msg timestamp="20210817 01:32:40.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:31.981" endtime="20210817 01:32:40.489"/>
</kw>
<status status="PASS" starttime="20210817 01:32:31.979" endtime="20210817 01:32:40.490"/>
</kw>
<status status="PASS" starttime="20210817 01:28:08.585" endtime="20210817 01:32:40.491"/>
</kw>
<status status="PASS" starttime="20210817 01:28:08.585" endtime="20210817 01:32:40.491"/>
</kw>
<status status="PASS" starttime="20210817 01:27:55.590" endtime="20210817 01:32:40.492"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:40.504" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:40.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:40.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:32:40.500" endtime="20210817 01:32:40.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:40.518" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:32:40.516" endtime="20210817 01:32:40.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:40.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:40.518" endtime="20210817 01:32:40.519"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.498" endtime="20210817 01:32:40.520"/>
</kw>
<msg timestamp="20210817 01:32:40.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:40.498" endtime="20210817 01:32:40.520"/>
</kw>
<msg timestamp="20210817 01:32:40.520" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:32:40.497" endtime="20210817 01:32:40.520"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:32:40.522" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:32:40.520" endtime="20210817 01:32:40.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:40.529" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:40.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:40.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:32:40.526" endtime="20210817 01:32:40.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:40.563" level="INFO"/>
<status status="PASS" starttime="20210817 01:32:40.562" endtime="20210817 01:32:40.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:40.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:40.564" endtime="20210817 01:32:40.564"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.525" endtime="20210817 01:32:40.565"/>
</kw>
<msg timestamp="20210817 01:32:40.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:40.525" endtime="20210817 01:32:40.565"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.524" endtime="20210817 01:32:40.565"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.523" endtime="20210817 01:32:40.566"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.496" endtime="20210817 01:32:40.566"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.494" endtime="20210817 01:32:40.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:40.572" level="INFO">Running command 'ozone sh bucket link 59601-source/no-such-bucket 59601-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:48.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:48.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:32:40.569" endtime="20210817 01:32:48.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:48.004" level="INFO"/>
<status status="PASS" starttime="20210817 01:32:48.003" endtime="20210817 01:32:48.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:48.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:48.004" endtime="20210817 01:32:48.004"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.568" endtime="20210817 01:32:48.005"/>
</kw>
<msg timestamp="20210817 01:32:48.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:40.567" endtime="20210817 01:32:48.005"/>
</kw>
<status status="PASS" starttime="20210817 01:32:40.566" endtime="20210817 01:32:48.005"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:48.008" level="INFO">Running command 'ozone sh key list 59601-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:54.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:32:54.200" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210817 01:32:48.006" endtime="20210817 01:32:54.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:54.201" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210817 01:32:54.201" endtime="20210817 01:32:54.201"/>
</kw>
<msg timestamp="20210817 01:32:54.202" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210817 01:32:48.006" endtime="20210817 01:32:54.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:32:54.202" endtime="20210817 01:32:54.203"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:32:40.492" endtime="20210817 01:32:54.203"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:54.216" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:54.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:54.228" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:32:54.212" endtime="20210817 01:32:54.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:54.229" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:32:54.229" endtime="20210817 01:32:54.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:54.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:54.230" endtime="20210817 01:32:54.234"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.210" endtime="20210817 01:32:54.234"/>
</kw>
<msg timestamp="20210817 01:32:54.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:54.210" endtime="20210817 01:32:54.235"/>
</kw>
<msg timestamp="20210817 01:32:54.235" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:32:54.208" endtime="20210817 01:32:54.235"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:32:54.237" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:32:54.235" endtime="20210817 01:32:54.237"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:54.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:32:54.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:32:54.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:32:54.240" endtime="20210817 01:32:54.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:32:54.257" level="INFO"/>
<status status="PASS" starttime="20210817 01:32:54.256" endtime="20210817 01:32:54.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:32:54.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:32:54.257" endtime="20210817 01:32:54.258"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.239" endtime="20210817 01:32:54.259"/>
</kw>
<msg timestamp="20210817 01:32:54.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:54.239" endtime="20210817 01:32:54.259"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.238" endtime="20210817 01:32:54.260"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.237" endtime="20210817 01:32:54.260"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.207" endtime="20210817 01:32:54.260"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.206" endtime="20210817 01:32:54.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:32:54.265" level="INFO">Running command 'ozone sh bucket link 59601-source/bucket1 59601-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:33:01.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:33:01.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:32:54.263" endtime="20210817 01:33:01.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:33:01.724" level="INFO"/>
<status status="PASS" starttime="20210817 01:33:01.723" endtime="20210817 01:33:01.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:33:01.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:33:01.724" endtime="20210817 01:33:01.725"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.262" endtime="20210817 01:33:01.725"/>
</kw>
<msg timestamp="20210817 01:33:01.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:32:54.262" endtime="20210817 01:33:01.726"/>
</kw>
<status status="PASS" starttime="20210817 01:32:54.261" endtime="20210817 01:33:01.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:33:01.731" level="INFO">Running command 'ozone sh bucket create 59601-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:33:10.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:33:10.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:33:01.728" endtime="20210817 01:33:10.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:33:10.823" level="INFO"/>
<status status="PASS" starttime="20210817 01:33:10.822" endtime="20210817 01:33:10.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:33:10.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:33:10.823" endtime="20210817 01:33:10.824"/>
</kw>
<status status="PASS" starttime="20210817 01:33:01.727" endtime="20210817 01:33:10.825"/>
</kw>
<msg timestamp="20210817 01:33:10.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:33:01.727" endtime="20210817 01:33:10.825"/>
</kw>
<status status="PASS" starttime="20210817 01:33:01.726" endtime="20210817 01:33:10.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:33:10.829" level="INFO">Running command 'ozone sh key put 59601-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:34:54.206" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:33:10.827" endtime="20210817 01:34:54.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:34:54.207" endtime="20210817 01:34:54.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:34:54.207" endtime="20210817 01:34:54.207"/>
</kw>
<status status="FAIL" starttime="20210817 01:33:10.827" endtime="20210817 01:34:54.208"/>
</kw>
<msg timestamp="20210817 01:34:54.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:33:10.826" endtime="20210817 01:34:54.208"/>
</kw>
<status status="FAIL" starttime="20210817 01:33:10.825" endtime="20210817 01:34:54.208"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210817 01:34:54.208" endtime="20210817 01:34:54.208"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210817 01:32:54.204" endtime="20210817 01:34:54.209">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:34:54.219" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:34:54.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:34:54.224" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:34:54.215" endtime="20210817 01:34:54.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:34:54.226" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:34:54.225" endtime="20210817 01:34:54.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:34:54.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:34:54.227" endtime="20210817 01:34:54.228"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.214" endtime="20210817 01:34:54.228"/>
</kw>
<msg timestamp="20210817 01:34:54.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:34:54.213" endtime="20210817 01:34:54.228"/>
</kw>
<msg timestamp="20210817 01:34:54.228" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:34:54.213" endtime="20210817 01:34:54.229"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:34:54.230" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:34:54.229" endtime="20210817 01:34:54.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:34:54.237" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:34:54.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:34:54.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:34:54.233" endtime="20210817 01:34:54.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:34:54.253" level="INFO"/>
<status status="PASS" starttime="20210817 01:34:54.253" endtime="20210817 01:34:54.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:34:54.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:34:54.254" endtime="20210817 01:34:54.254"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.232" endtime="20210817 01:34:54.255"/>
</kw>
<msg timestamp="20210817 01:34:54.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:34:54.231" endtime="20210817 01:34:54.255"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.230" endtime="20210817 01:34:54.255"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.230" endtime="20210817 01:34:54.255"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.212" endtime="20210817 01:34:54.256"/>
</kw>
<status status="PASS" starttime="20210817 01:34:54.212" endtime="20210817 01:34:54.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:34:54.263" level="INFO">Running command 'ozone sh key put 59601-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:36:54.211" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:34:54.258" endtime="20210817 01:36:54.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:36:54.212" endtime="20210817 01:36:54.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:36:54.212" endtime="20210817 01:36:54.212"/>
</kw>
<status status="FAIL" starttime="20210817 01:34:54.257" endtime="20210817 01:36:54.213"/>
</kw>
<msg timestamp="20210817 01:36:54.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:34:54.257" endtime="20210817 01:36:54.213"/>
</kw>
<status status="FAIL" starttime="20210817 01:34:54.256" endtime="20210817 01:36:54.213"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210817 01:36:54.214" endtime="20210817 01:36:54.214"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210817 01:34:54.210" endtime="20210817 01:36:54.214">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:36:54.225" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:36:54.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:36:54.229" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:36:54.221" endtime="20210817 01:36:54.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:36:54.232" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:36:54.231" endtime="20210817 01:36:54.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:36:54.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:36:54.232" endtime="20210817 01:36:54.233"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.221" endtime="20210817 01:36:54.233"/>
</kw>
<msg timestamp="20210817 01:36:54.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:36:54.220" endtime="20210817 01:36:54.234"/>
</kw>
<msg timestamp="20210817 01:36:54.234" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:36:54.220" endtime="20210817 01:36:54.234"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:36:54.236" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:36:54.235" endtime="20210817 01:36:54.236"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:36:54.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:36:54.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:36:54.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:36:54.240" endtime="20210817 01:36:54.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:36:54.254" level="INFO"/>
<status status="PASS" starttime="20210817 01:36:54.253" endtime="20210817 01:36:54.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:36:54.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:36:54.254" endtime="20210817 01:36:54.255"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.239" endtime="20210817 01:36:54.256"/>
</kw>
<msg timestamp="20210817 01:36:54.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:36:54.238" endtime="20210817 01:36:54.256"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.237" endtime="20210817 01:36:54.257"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.236" endtime="20210817 01:36:54.257"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.219" endtime="20210817 01:36:54.257"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.218" endtime="20210817 01:36:54.257"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:36:54.263" level="INFO">Running command 'ozone sh key list 59601-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:03.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:03.019" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210817 01:36:54.260" endtime="20210817 01:37:03.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:03.020" level="INFO">key1</msg>
<status status="PASS" starttime="20210817 01:37:03.020" endtime="20210817 01:37:03.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:03.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:03.021" endtime="20210817 01:37:03.022"/>
</kw>
<status status="PASS" starttime="20210817 01:36:54.259" endtime="20210817 01:37:03.022"/>
</kw>
<msg timestamp="20210817 01:37:03.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:36:54.259" endtime="20210817 01:37:03.023"/>
</kw>
<msg timestamp="20210817 01:37:03.023" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210817 01:36:54.257" endtime="20210817 01:37:03.023"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:03.032" level="INFO">Running command 'ozone sh key list 59601-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:11.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:11.905" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210817 01:37:03.028" endtime="20210817 01:37:11.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:11.907" level="INFO">key1</msg>
<status status="PASS" starttime="20210817 01:37:11.906" endtime="20210817 01:37:11.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:11.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:11.908" endtime="20210817 01:37:11.909"/>
</kw>
<status status="PASS" starttime="20210817 01:37:03.027" endtime="20210817 01:37:11.909"/>
</kw>
<msg timestamp="20210817 01:37:11.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:03.026" endtime="20210817 01:37:11.909"/>
</kw>
<msg timestamp="20210817 01:37:11.910" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210817 01:37:03.024" endtime="20210817 01:37:11.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:37:11.911" endtime="20210817 01:37:11.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:11.912" endtime="20210817 01:37:11.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210817 01:37:11.914" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210817 01:37:11.913" endtime="20210817 01:37:11.914"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210817 01:36:54.216" endtime="20210817 01:37:11.914">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:11.924" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:11.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:11.929" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:37:11.921" endtime="20210817 01:37:11.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:11.930" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:37:11.929" endtime="20210817 01:37:11.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:11.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:11.930" endtime="20210817 01:37:11.932"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.920" endtime="20210817 01:37:11.933"/>
</kw>
<msg timestamp="20210817 01:37:11.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:11.920" endtime="20210817 01:37:11.933"/>
</kw>
<msg timestamp="20210817 01:37:11.934" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:37:11.919" endtime="20210817 01:37:11.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:37:11.935" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:37:11.934" endtime="20210817 01:37:11.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:11.941" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:11.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:11.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:37:11.938" endtime="20210817 01:37:11.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:11.963" level="INFO"/>
<status status="PASS" starttime="20210817 01:37:11.962" endtime="20210817 01:37:11.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:11.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:11.964" endtime="20210817 01:37:11.965"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.937" endtime="20210817 01:37:11.965"/>
</kw>
<msg timestamp="20210817 01:37:11.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:11.937" endtime="20210817 01:37:11.966"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.935" endtime="20210817 01:37:11.966"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.935" endtime="20210817 01:37:11.966"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.918" endtime="20210817 01:37:11.967"/>
</kw>
<status status="PASS" starttime="20210817 01:37:11.917" endtime="20210817 01:37:11.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:11.974" level="INFO">Running command 'ozone sh key delete 59601-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:19.098" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:37:19.098" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210817 01:37:11.971" endtime="20210817 01:37:19.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:19.100" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210817 01:37:19.099" endtime="20210817 01:37:19.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:19.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210817 01:37:19.101" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210817 01:37:19.100" endtime="20210817 01:37:19.101"/>
</kw>
<status status="FAIL" starttime="20210817 01:37:11.969" endtime="20210817 01:37:19.102"/>
</kw>
<msg timestamp="20210817 01:37:19.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:37:11.969" endtime="20210817 01:37:19.102"/>
</kw>
<status status="FAIL" starttime="20210817 01:37:11.968" endtime="20210817 01:37:19.102"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210817 01:37:19.102" endtime="20210817 01:37:19.102"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:37:19.103" endtime="20210817 01:37:19.103"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210817 01:37:11.916" endtime="20210817 01:37:19.103">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:19.110" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:19.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:19.113" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:37:19.108" endtime="20210817 01:37:19.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:19.114" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:37:19.114" endtime="20210817 01:37:19.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:19.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:19.115" endtime="20210817 01:37:19.116"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.107" endtime="20210817 01:37:19.116"/>
</kw>
<msg timestamp="20210817 01:37:19.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:19.107" endtime="20210817 01:37:19.116"/>
</kw>
<msg timestamp="20210817 01:37:19.116" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:37:19.106" endtime="20210817 01:37:19.117"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:37:19.117" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:37:19.117" endtime="20210817 01:37:19.117"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:19.123" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:19.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:19.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:37:19.120" endtime="20210817 01:37:19.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:19.132" level="INFO"/>
<status status="PASS" starttime="20210817 01:37:19.131" endtime="20210817 01:37:19.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:19.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:19.132" endtime="20210817 01:37:19.133"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.119" endtime="20210817 01:37:19.133"/>
</kw>
<msg timestamp="20210817 01:37:19.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:19.119" endtime="20210817 01:37:19.133"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.118" endtime="20210817 01:37:19.133"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.118" endtime="20210817 01:37:19.134"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.105" endtime="20210817 01:37:19.134"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.105" endtime="20210817 01:37:19.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:19.138" level="INFO">Running command 'ozone sh bucket list 59601-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:26.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:26.907" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210817 01:37:19.136" endtime="20210817 01:37:26.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:26.909" level="INFO">{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:32:47.949Z",
  "modificationTime" : "2021-08-17T01:32:47.949Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:32:01.076Z",
  "modificationTime" : "2021-08-17T01:32:40.351Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:33:01.641Z",
  "modificationTime" : "2021-08-17T01:33:01.641Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:31:44.982Z",
  "modificationTime" : "2021-08-17T01:32:31.873Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:31:53.042Z",
  "modificationTime" : "2021-08-17T01:31:53.042Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210817 01:37:26.908" endtime="20210817 01:37:26.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:26.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:26.909" endtime="20210817 01:37:26.910"/>
</kw>
<status status="PASS" starttime="20210817 01:37:19.135" endtime="20210817 01:37:26.910"/>
</kw>
<msg timestamp="20210817 01:37:26.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:19.135" endtime="20210817 01:37:26.911"/>
</kw>
<msg timestamp="20210817 01:37:26.911" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210817 01:37:19.134" endtime="20210817 01:37:26.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:26.911" endtime="20210817 01:37:26.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:26.912" endtime="20210817 01:37:26.913"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:37:19.104" endtime="20210817 01:37:26.913"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:26.925" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:26.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:26.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:37:26.921" endtime="20210817 01:37:26.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:26.933" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:37:26.931" endtime="20210817 01:37:26.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:26.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:26.933" endtime="20210817 01:37:26.935"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.920" endtime="20210817 01:37:26.935"/>
</kw>
<msg timestamp="20210817 01:37:26.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:26.919" endtime="20210817 01:37:26.936"/>
</kw>
<msg timestamp="20210817 01:37:26.937" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:37:26.918" endtime="20210817 01:37:26.938"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:37:26.939" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:37:26.938" endtime="20210817 01:37:26.939"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:26.947" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:26.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:26.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:37:26.944" endtime="20210817 01:37:26.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:26.960" level="INFO"/>
<status status="PASS" starttime="20210817 01:37:26.959" endtime="20210817 01:37:26.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:26.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:26.960" endtime="20210817 01:37:26.961"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.942" endtime="20210817 01:37:26.961"/>
</kw>
<msg timestamp="20210817 01:37:26.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:26.942" endtime="20210817 01:37:26.962"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.941" endtime="20210817 01:37:26.962"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.940" endtime="20210817 01:37:26.962"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.917" endtime="20210817 01:37:26.962"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.916" endtime="20210817 01:37:26.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:26.968" level="INFO">Running command 'ozone sh bucket info 59601-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:33.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:33.340" level="INFO">${output} = {
  "volumeName" : "59601-target",
  "bucketName" : "link1",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-17T01:33:01.641Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210817 01:37:26.965" endtime="20210817 01:37:33.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:33.342" level="INFO">{
  "volumeName" : "59601-target",
  "bucketName" : "link1",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-17T01:33:01.641Z",
  "modificationTime" : "2021-08-17T01:33:01.641Z"
}</msg>
<status status="PASS" starttime="20210817 01:37:33.341" endtime="20210817 01:37:33.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:33.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:33.342" endtime="20210817 01:37:33.343"/>
</kw>
<status status="PASS" starttime="20210817 01:37:26.965" endtime="20210817 01:37:33.343"/>
</kw>
<msg timestamp="20210817 01:37:33.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:26.964" endtime="20210817 01:37:33.343"/>
</kw>
<msg timestamp="20210817 01:37:33.344" level="INFO">${result} = {
  "volumeName" : "59601-target",
  "bucketName" : "link1",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-17T01:33:01.641Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210817 01:37:26.963" endtime="20210817 01:37:33.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.344" endtime="20210817 01:37:33.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.345" endtime="20210817 01:37:33.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.346" endtime="20210817 01:37:33.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.346" endtime="20210817 01:37:33.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.347" endtime="20210817 01:37:33.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.348" endtime="20210817 01:37:33.349"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:37:33.349" endtime="20210817 01:37:33.349"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:37:26.914" endtime="20210817 01:37:33.350"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:33.361" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:33.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:33.367" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:37:33.358" endtime="20210817 01:37:33.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:33.369" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:37:33.368" endtime="20210817 01:37:33.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:33.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:33.369" endtime="20210817 01:37:33.370"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.357" endtime="20210817 01:37:33.371"/>
</kw>
<msg timestamp="20210817 01:37:33.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:33.356" endtime="20210817 01:37:33.371"/>
</kw>
<msg timestamp="20210817 01:37:33.372" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:37:33.355" endtime="20210817 01:37:33.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:37:33.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:37:33.372" endtime="20210817 01:37:33.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:33.380" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:33.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:33.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:37:33.377" endtime="20210817 01:37:33.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:33.393" level="INFO"/>
<status status="PASS" starttime="20210817 01:37:33.392" endtime="20210817 01:37:33.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:33.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:33.393" endtime="20210817 01:37:33.394"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.376" endtime="20210817 01:37:33.395"/>
</kw>
<msg timestamp="20210817 01:37:33.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:33.375" endtime="20210817 01:37:33.395"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.374" endtime="20210817 01:37:33.396"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.373" endtime="20210817 01:37:33.396"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.354" endtime="20210817 01:37:33.397"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.353" endtime="20210817 01:37:33.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:33.402" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 59601-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:40.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:40.144" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:37:33.400" endtime="20210817 01:37:40.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:40.146" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:37:40.145" endtime="20210817 01:37:40.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:40.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:40.146" endtime="20210817 01:37:40.147"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.398" endtime="20210817 01:37:40.147"/>
</kw>
<msg timestamp="20210817 01:37:40.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:33.398" endtime="20210817 01:37:40.148"/>
</kw>
<status status="PASS" starttime="20210817 01:37:33.397" endtime="20210817 01:37:40.148"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:40.155" level="INFO">Running command 'ozone sh bucket getacl 59601-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:47.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:47.788" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210817 01:37:40.151" endtime="20210817 01:37:47.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:47.792" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210817 01:37:47.790" endtime="20210817 01:37:47.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:47.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:47.793" endtime="20210817 01:37:47.793"/>
</kw>
<status status="PASS" starttime="20210817 01:37:40.150" endtime="20210817 01:37:47.794"/>
</kw>
<msg timestamp="20210817 01:37:47.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:40.150" endtime="20210817 01:37:47.794"/>
</kw>
<msg timestamp="20210817 01:37:47.795" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210817 01:37:40.149" endtime="20210817 01:37:47.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:37:47.795" endtime="20210817 01:37:47.796"/>
</kw>
<status status="PASS" starttime="20210817 01:37:40.148" endtime="20210817 01:37:47.797"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:47.805" level="INFO">Running command 'ozone sh bucket getacl 59601-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:37:55.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:37:55.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:37:47.801" endtime="20210817 01:37:55.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:37:55.968" level="INFO"/>
<status status="PASS" starttime="20210817 01:37:55.965" endtime="20210817 01:37:55.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:37:55.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:37:55.968" endtime="20210817 01:37:55.969"/>
</kw>
<status status="PASS" starttime="20210817 01:37:47.801" endtime="20210817 01:37:55.969"/>
</kw>
<msg timestamp="20210817 01:37:55.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:47.800" endtime="20210817 01:37:55.969"/>
</kw>
<msg timestamp="20210817 01:37:55.969" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210817 01:37:47.799" endtime="20210817 01:37:55.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:37:55.970" endtime="20210817 01:37:55.970"/>
</kw>
<status status="PASS" starttime="20210817 01:37:47.797" endtime="20210817 01:37:55.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:37:55.975" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 59601-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:01.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:01.973" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:37:55.973" endtime="20210817 01:38:01.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:01.974" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:38:01.973" endtime="20210817 01:38:01.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:01.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:01.975" endtime="20210817 01:38:01.975"/>
</kw>
<status status="PASS" starttime="20210817 01:37:55.972" endtime="20210817 01:38:01.976"/>
</kw>
<msg timestamp="20210817 01:38:01.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:37:55.972" endtime="20210817 01:38:01.976"/>
</kw>
<status status="PASS" starttime="20210817 01:37:55.971" endtime="20210817 01:38:01.976"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:01.982" level="INFO">Running command 'ozone sh bucket getacl 59601-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:09.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:09.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:01.980" endtime="20210817 01:38:09.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:09.055" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:09.053" endtime="20210817 01:38:09.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:09.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:09.056" endtime="20210817 01:38:09.057"/>
</kw>
<status status="PASS" starttime="20210817 01:38:01.979" endtime="20210817 01:38:09.058"/>
</kw>
<msg timestamp="20210817 01:38:09.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:01.979" endtime="20210817 01:38:09.059"/>
</kw>
<msg timestamp="20210817 01:38:09.059" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210817 01:38:01.978" endtime="20210817 01:38:09.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:38:09.060" endtime="20210817 01:38:09.061"/>
</kw>
<status status="PASS" starttime="20210817 01:38:01.976" endtime="20210817 01:38:09.062"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:09.072" level="INFO">Running command 'ozone sh bucket getacl 59601-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:18.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:18.354" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210817 01:38:09.069" endtime="20210817 01:38:18.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:18.356" level="INFO">READ</msg>
<status status="PASS" starttime="20210817 01:38:18.355" endtime="20210817 01:38:18.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:18.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:18.356" endtime="20210817 01:38:18.357"/>
</kw>
<status status="PASS" starttime="20210817 01:38:09.067" endtime="20210817 01:38:18.357"/>
</kw>
<msg timestamp="20210817 01:38:18.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:09.067" endtime="20210817 01:38:18.357"/>
</kw>
<msg timestamp="20210817 01:38:18.358" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210817 01:38:09.065" endtime="20210817 01:38:18.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:38:18.358" endtime="20210817 01:38:18.359"/>
</kw>
<status status="PASS" starttime="20210817 01:38:09.062" endtime="20210817 01:38:18.359"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:37:33.352" endtime="20210817 01:38:18.359"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:18.370" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:18.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:18.375" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:38:18.366" endtime="20210817 01:38:18.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:18.377" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:38:18.376" endtime="20210817 01:38:18.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:18.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:18.378" endtime="20210817 01:38:18.379"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.365" endtime="20210817 01:38:18.380"/>
</kw>
<msg timestamp="20210817 01:38:18.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:18.365" endtime="20210817 01:38:18.380"/>
</kw>
<msg timestamp="20210817 01:38:18.380" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:38:18.364" endtime="20210817 01:38:18.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:38:18.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:38:18.381" endtime="20210817 01:38:18.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:18.389" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:18.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:18.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:18.386" endtime="20210817 01:38:18.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:18.423" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:18.422" endtime="20210817 01:38:18.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:18.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:18.423" endtime="20210817 01:38:18.424"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.385" endtime="20210817 01:38:18.424"/>
</kw>
<msg timestamp="20210817 01:38:18.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:18.384" endtime="20210817 01:38:18.425"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.383" endtime="20210817 01:38:18.425"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.383" endtime="20210817 01:38:18.425"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.363" endtime="20210817 01:38:18.426"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.362" endtime="20210817 01:38:18.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:18.431" level="INFO">Running command 'ozone sh bucket link 59601-source/bucket2 59601-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:26.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:26.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:18.428" endtime="20210817 01:38:26.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:26.057" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:26.055" endtime="20210817 01:38:26.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:26.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:26.058" endtime="20210817 01:38:26.059"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.427" endtime="20210817 01:38:26.059"/>
</kw>
<msg timestamp="20210817 01:38:26.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:18.427" endtime="20210817 01:38:26.060"/>
</kw>
<status status="PASS" starttime="20210817 01:38:18.426" endtime="20210817 01:38:26.060"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:26.063" level="INFO">Running command 'ozone sh bucket create 59601-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:34.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:38:34.238" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:26.061" endtime="20210817 01:38:34.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:34.242" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:34.240" endtime="20210817 01:38:34.242"/>
</kw>
<msg timestamp="20210817 01:38:34.243" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:26.060" endtime="20210817 01:38:34.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:38:34.243" endtime="20210817 01:38:34.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:34.251" level="INFO">Running command 'ozone sh bucket create 59601-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:40.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:40.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:34.248" endtime="20210817 01:38:40.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:40.326" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:40.325" endtime="20210817 01:38:40.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:40.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:40.326" endtime="20210817 01:38:40.327"/>
</kw>
<status status="PASS" starttime="20210817 01:38:34.246" endtime="20210817 01:38:40.328"/>
</kw>
<msg timestamp="20210817 01:38:40.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:34.246" endtime="20210817 01:38:40.328"/>
</kw>
<status status="PASS" starttime="20210817 01:38:34.244" endtime="20210817 01:38:40.328"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:40.331" level="INFO">Running command 'ozone sh bucket link 59601-source/bucket1 59601-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.006" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:38:48.006" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:40.329" endtime="20210817 01:38:48.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.008" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:48.007" endtime="20210817 01:38:48.008"/>
</kw>
<msg timestamp="20210817 01:38:48.009" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210817 01:38:40.328" endtime="20210817 01:38:48.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:38:48.009" endtime="20210817 01:38:48.010"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:38:18.360" endtime="20210817 01:38:48.010"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.022" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:48.028" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:38:48.019" endtime="20210817 01:38:48.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.030" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:38:48.029" endtime="20210817 01:38:48.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:48.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:48.031" endtime="20210817 01:38:48.032"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.018" endtime="20210817 01:38:48.032"/>
</kw>
<msg timestamp="20210817 01:38:48.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:48.018" endtime="20210817 01:38:48.033"/>
</kw>
<msg timestamp="20210817 01:38:48.033" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:38:48.017" endtime="20210817 01:38:48.033"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:38:48.035" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:38:48.033" endtime="20210817 01:38:48.035"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.040" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:48.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:48.038" endtime="20210817 01:38:48.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.054" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:48.053" endtime="20210817 01:38:48.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:48.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:48.055" endtime="20210817 01:38:48.055"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.037" endtime="20210817 01:38:48.056"/>
</kw>
<msg timestamp="20210817 01:38:48.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:48.037" endtime="20210817 01:38:48.056"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.036" endtime="20210817 01:38:48.057"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.035" endtime="20210817 01:38:48.057"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.015" endtime="20210817 01:38:48.057"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.014" endtime="20210817 01:38:48.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.063" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:48.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:48.061" endtime="20210817 01:38:48.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.069" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:48.069" endtime="20210817 01:38:48.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:48.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:48.070" endtime="20210817 01:38:48.071"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.060" endtime="20210817 01:38:48.071"/>
</kw>
<msg timestamp="20210817 01:38:48.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:48.060" endtime="20210817 01:38:48.071"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.059" endtime="20210817 01:38:48.072"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.077" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:48.083" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:38:48.075" endtime="20210817 01:38:48.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.085" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:38:48.084" endtime="20210817 01:38:48.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:48.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:48.086" endtime="20210817 01:38:48.087"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.074" endtime="20210817 01:38:48.087"/>
</kw>
<msg timestamp="20210817 01:38:48.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:48.074" endtime="20210817 01:38:48.087"/>
</kw>
<msg timestamp="20210817 01:38:48.088" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:38:48.073" endtime="20210817 01:38:48.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:38:48.089" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:38:48.088" endtime="20210817 01:38:48.089"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.098" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:48.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:48.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:48.094" endtime="20210817 01:38:48.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:48.108" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:48.106" endtime="20210817 01:38:48.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:48.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:48.108" endtime="20210817 01:38:48.109"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.092" endtime="20210817 01:38:48.109"/>
</kw>
<msg timestamp="20210817 01:38:48.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:48.092" endtime="20210817 01:38:48.110"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.089" endtime="20210817 01:38:48.110"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.089" endtime="20210817 01:38:48.110"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.072" endtime="20210817 01:38:48.111"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.072" endtime="20210817 01:38:48.111"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:48.114" level="INFO">Running command 'ozone sh key list 59601-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.537" level="INFO">${output} = {
  "volumeName" : "59601-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-17T01:28:23.362Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210817 01:38:48.112" endtime="20210817 01:38:56.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.539" level="INFO">{
  "volumeName" : "59601-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-17T01:28:23.362Z",
  "modificationTime" : "2021-08-17T01:31:27.447Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210817 01:38:56.538" endtime="20210817 01:38:56.540"/>
</kw>
<msg timestamp="20210817 01:38:56.540" level="INFO">${result} = {
  "volumeName" : "59601-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-17T01:28:23.362Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210817 01:38:48.111" endtime="20210817 01:38:56.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:38:56.540" endtime="20210817 01:38:56.541"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.058" endtime="20210817 01:38:56.541"/>
</kw>
<status status="PASS" starttime="20210817 01:38:48.057" endtime="20210817 01:38:56.541"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:38:48.012" endtime="20210817 01:38:56.542"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.554" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.559" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:38:56.550" endtime="20210817 01:38:56.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.561" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:38:56.560" endtime="20210817 01:38:56.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:56.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:56.562" endtime="20210817 01:38:56.563"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.550" endtime="20210817 01:38:56.563"/>
</kw>
<msg timestamp="20210817 01:38:56.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:56.549" endtime="20210817 01:38:56.564"/>
</kw>
<msg timestamp="20210817 01:38:56.564" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:38:56.548" endtime="20210817 01:38:56.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:38:56.566" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:38:56.565" endtime="20210817 01:38:56.566"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:56.569" endtime="20210817 01:38:56.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.584" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:56.582" endtime="20210817 01:38:56.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:56.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:56.584" endtime="20210817 01:38:56.585"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.568" endtime="20210817 01:38:56.586"/>
</kw>
<msg timestamp="20210817 01:38:56.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:56.568" endtime="20210817 01:38:56.586"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.567" endtime="20210817 01:38:56.587"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.566" endtime="20210817 01:38:56.587"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.548" endtime="20210817 01:38:56.587"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.547" endtime="20210817 01:38:56.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.594" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:56.591" endtime="20210817 01:38:56.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.601" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:56.600" endtime="20210817 01:38:56.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:56.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:56.602" endtime="20210817 01:38:56.603"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.590" endtime="20210817 01:38:56.604"/>
</kw>
<msg timestamp="20210817 01:38:56.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:56.590" endtime="20210817 01:38:56.604"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.589" endtime="20210817 01:38:56.604"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.616" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:38:56.608" endtime="20210817 01:38:56.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.618" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:38:56.618" endtime="20210817 01:38:56.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:56.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:56.619" endtime="20210817 01:38:56.620"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.607" endtime="20210817 01:38:56.621"/>
</kw>
<msg timestamp="20210817 01:38:56.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:56.607" endtime="20210817 01:38:56.621"/>
</kw>
<msg timestamp="20210817 01:38:56.621" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:38:56.606" endtime="20210817 01:38:56.621"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:38:56.623" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:38:56.622" endtime="20210817 01:38:56.623"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.630" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:38:56.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:38:56.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:38:56.626" endtime="20210817 01:38:56.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:38:56.640" level="INFO"/>
<status status="PASS" starttime="20210817 01:38:56.639" endtime="20210817 01:38:56.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:38:56.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:38:56.640" endtime="20210817 01:38:56.641"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.626" endtime="20210817 01:38:56.641"/>
</kw>
<msg timestamp="20210817 01:38:56.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:38:56.625" endtime="20210817 01:38:56.642"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.624" endtime="20210817 01:38:56.642"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.623" endtime="20210817 01:38:56.642"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.605" endtime="20210817 01:38:56.643"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.605" endtime="20210817 01:38:56.643"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:38:56.647" level="INFO">Running command 'ozone sh key list 59601-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.441" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:39:04.441" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59601-target unreadable-link null</msg>
<status status="PASS" starttime="20210817 01:38:56.645" endtime="20210817 01:39:04.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.444" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59601-target unreadable-link null</msg>
<status status="PASS" starttime="20210817 01:39:04.442" endtime="20210817 01:39:04.444"/>
</kw>
<msg timestamp="20210817 01:39:04.445" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59601-target unreadable-link null</msg>
<status status="PASS" starttime="20210817 01:38:56.643" endtime="20210817 01:39:04.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:39:04.446" endtime="20210817 01:39:04.447"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.588" endtime="20210817 01:39:04.447"/>
</kw>
<status status="PASS" starttime="20210817 01:38:56.588" endtime="20210817 01:39:04.447"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:38:56.543" endtime="20210817 01:39:04.448"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:04.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:39:04.458" endtime="20210817 01:39:04.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.471" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:39:04.469" endtime="20210817 01:39:04.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:04.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:04.472" endtime="20210817 01:39:04.473"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.457" endtime="20210817 01:39:04.474"/>
</kw>
<msg timestamp="20210817 01:39:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.456" endtime="20210817 01:39:04.475"/>
</kw>
<msg timestamp="20210817 01:39:04.475" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:39:04.455" endtime="20210817 01:39:04.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:39:04.477" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:39:04.476" endtime="20210817 01:39:04.477"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:04.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:04.481" endtime="20210817 01:39:04.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.496" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:04.496" endtime="20210817 01:39:04.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:04.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:04.497" endtime="20210817 01:39:04.498"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.480" endtime="20210817 01:39:04.498"/>
</kw>
<msg timestamp="20210817 01:39:04.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.479" endtime="20210817 01:39:04.499"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.478" endtime="20210817 01:39:04.499"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.477" endtime="20210817 01:39:04.499"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.453" endtime="20210817 01:39:04.499"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.452" endtime="20210817 01:39:04.500"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.506" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:04.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:04.503" endtime="20210817 01:39:04.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.513" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:04.512" endtime="20210817 01:39:04.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:04.513" endtime="20210817 01:39:04.514"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.502" endtime="20210817 01:39:04.515"/>
</kw>
<msg timestamp="20210817 01:39:04.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.502" endtime="20210817 01:39:04.515"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.501" endtime="20210817 01:39:04.515"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.521" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:04.526" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:39:04.519" endtime="20210817 01:39:04.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.528" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:39:04.527" endtime="20210817 01:39:04.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:04.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:04.529" endtime="20210817 01:39:04.530"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.518" endtime="20210817 01:39:04.530"/>
</kw>
<msg timestamp="20210817 01:39:04.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.518" endtime="20210817 01:39:04.530"/>
</kw>
<msg timestamp="20210817 01:39:04.531" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:39:04.517" endtime="20210817 01:39:04.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:39:04.532" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:39:04.531" endtime="20210817 01:39:04.532"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.538" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:04.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:04.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:04.536" endtime="20210817 01:39:04.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:04.549" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:04.548" endtime="20210817 01:39:04.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:04.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:04.550" endtime="20210817 01:39:04.550"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.535" endtime="20210817 01:39:04.551"/>
</kw>
<msg timestamp="20210817 01:39:04.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.534" endtime="20210817 01:39:04.551"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.533" endtime="20210817 01:39:04.552"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.533" endtime="20210817 01:39:04.552"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.516" endtime="20210817 01:39:04.552"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.515" endtime="20210817 01:39:04.552"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:04.558" level="INFO">Running command 'ozone sh bucket info 59601-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:13.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:13.885" level="INFO">${output} = {
  "volumeName" : "59601-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-17T01:32:01.076Z...</msg>
<status status="PASS" starttime="20210817 01:39:04.555" endtime="20210817 01:39:13.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:13.887" level="INFO">{
  "volumeName" : "59601-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-17T01:32:01.076Z",
  "modificationTime" : "2021-08-17T01:32:40.351Z"
}</msg>
<status status="PASS" starttime="20210817 01:39:13.886" endtime="20210817 01:39:13.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:13.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:13.887" endtime="20210817 01:39:13.888"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.554" endtime="20210817 01:39:13.891"/>
</kw>
<msg timestamp="20210817 01:39:13.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:04.554" endtime="20210817 01:39:13.892"/>
</kw>
<msg timestamp="20210817 01:39:13.892" level="INFO">${result} = {
  "volumeName" : "59601-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-17T01:32:01.076Z...</msg>
<status status="PASS" starttime="20210817 01:39:04.553" endtime="20210817 01:39:13.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:39:13.892" endtime="20210817 01:39:13.893"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:39:13.893" endtime="20210817 01:39:13.893"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:13.902" level="INFO">Running command 'ozone sh key list 59601-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:21.570" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:39:21.570" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59601-source unreadable-bucket </msg>
<status status="PASS" starttime="20210817 01:39:13.894" endtime="20210817 01:39:21.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:21.572" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59601-source unreadable-bucket </msg>
<status status="PASS" starttime="20210817 01:39:21.571" endtime="20210817 01:39:21.572"/>
</kw>
<msg timestamp="20210817 01:39:21.572" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59601-source unreadable-bucket </msg>
<status status="PASS" starttime="20210817 01:39:13.893" endtime="20210817 01:39:21.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:39:21.573" endtime="20210817 01:39:21.573"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.501" endtime="20210817 01:39:21.573"/>
</kw>
<status status="PASS" starttime="20210817 01:39:04.500" endtime="20210817 01:39:21.574"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:39:04.450" endtime="20210817 01:39:21.574"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:21.581" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:21.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:21.585" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:39:21.579" endtime="20210817 01:39:21.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:21.586" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:39:21.585" endtime="20210817 01:39:21.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:21.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:21.586" endtime="20210817 01:39:21.587"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.579" endtime="20210817 01:39:21.587"/>
</kw>
<msg timestamp="20210817 01:39:21.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:21.578" endtime="20210817 01:39:21.588"/>
</kw>
<msg timestamp="20210817 01:39:21.588" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:39:21.577" endtime="20210817 01:39:21.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:39:21.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:39:21.589" endtime="20210817 01:39:21.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:21.594" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:21.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:21.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:21.592" endtime="20210817 01:39:21.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:21.604" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:21.603" endtime="20210817 01:39:21.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:21.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:21.604" endtime="20210817 01:39:21.605"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.591" endtime="20210817 01:39:21.605"/>
</kw>
<msg timestamp="20210817 01:39:21.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:21.591" endtime="20210817 01:39:21.605"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.590" endtime="20210817 01:39:21.606"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.590" endtime="20210817 01:39:21.606"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.577" endtime="20210817 01:39:21.606"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.576" endtime="20210817 01:39:21.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:21.611" level="INFO">Running command 'ozone sh bucket link 59601-target/loop1 59601-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:28.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:28.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:21.608" endtime="20210817 01:39:28.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:28.700" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:28.697" endtime="20210817 01:39:28.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:28.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:28.700" endtime="20210817 01:39:28.702"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.608" endtime="20210817 01:39:28.702"/>
</kw>
<msg timestamp="20210817 01:39:28.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:21.607" endtime="20210817 01:39:28.703"/>
</kw>
<status status="PASS" starttime="20210817 01:39:21.606" endtime="20210817 01:39:28.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:28.710" level="INFO">Running command 'ozone sh bucket link 59601-target/loop2 59601-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:36.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:36.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:28.707" endtime="20210817 01:39:36.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:36.311" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:36.310" endtime="20210817 01:39:36.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:36.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:36.311" endtime="20210817 01:39:36.312"/>
</kw>
<status status="PASS" starttime="20210817 01:39:28.706" endtime="20210817 01:39:36.313"/>
</kw>
<msg timestamp="20210817 01:39:36.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:28.705" endtime="20210817 01:39:36.313"/>
</kw>
<status status="PASS" starttime="20210817 01:39:28.704" endtime="20210817 01:39:36.313"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:36.325" level="INFO">Running command 'ozone sh bucket link 59601-target/loop3 59601-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:44.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:44.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:36.320" endtime="20210817 01:39:44.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:44.441" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:44.439" endtime="20210817 01:39:44.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:44.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:44.441" endtime="20210817 01:39:44.442"/>
</kw>
<status status="PASS" starttime="20210817 01:39:36.319" endtime="20210817 01:39:44.443"/>
</kw>
<msg timestamp="20210817 01:39:44.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:36.314" endtime="20210817 01:39:44.443"/>
</kw>
<status status="PASS" starttime="20210817 01:39:36.313" endtime="20210817 01:39:44.444"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:44.448" level="INFO">Running command 'ozone sh key list 59601-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:52.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:39:52.507" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210817 01:39:44.445" endtime="20210817 01:39:52.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:52.510" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210817 01:39:52.508" endtime="20210817 01:39:52.510"/>
</kw>
<msg timestamp="20210817 01:39:52.510" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210817 01:39:44.444" endtime="20210817 01:39:52.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:39:52.511" endtime="20210817 01:39:52.511"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:39:21.575" endtime="20210817 01:39:52.511"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:52.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:52.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:52.531" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:39:52.521" endtime="20210817 01:39:52.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:52.534" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:39:52.532" endtime="20210817 01:39:52.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:52.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:52.534" endtime="20210817 01:39:52.536"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.519" endtime="20210817 01:39:52.537"/>
</kw>
<msg timestamp="20210817 01:39:52.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:52.519" endtime="20210817 01:39:52.537"/>
</kw>
<msg timestamp="20210817 01:39:52.538" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:39:52.517" endtime="20210817 01:39:52.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:39:52.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:39:52.539" endtime="20210817 01:39:52.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:52.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:52.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:52.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:52.545" endtime="20210817 01:39:52.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:52.563" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:52.562" endtime="20210817 01:39:52.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:52.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:52.564" endtime="20210817 01:39:52.566"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.543" endtime="20210817 01:39:52.567"/>
</kw>
<msg timestamp="20210817 01:39:52.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:52.543" endtime="20210817 01:39:52.567"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.541" endtime="20210817 01:39:52.567"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.540" endtime="20210817 01:39:52.567"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.516" endtime="20210817 01:39:52.568"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.515" endtime="20210817 01:39:52.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:52.573" level="INFO">Running command 'ozone sh bucket link 59601-source/bucket1 59601-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:39:59.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:39:59.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:39:52.570" endtime="20210817 01:39:59.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:39:59.956" level="INFO"/>
<status status="PASS" starttime="20210817 01:39:59.955" endtime="20210817 01:39:59.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:39:59.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:39:59.956" endtime="20210817 01:39:59.957"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.569" endtime="20210817 01:39:59.958"/>
</kw>
<msg timestamp="20210817 01:39:59.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:39:52.569" endtime="20210817 01:39:59.958"/>
</kw>
<status status="PASS" starttime="20210817 01:39:52.568" endtime="20210817 01:39:59.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:39:59.966" level="INFO">Running command 'ozone sh key put 59601-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:41:52.515" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:39:59.963" endtime="20210817 01:41:52.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:41:52.515" endtime="20210817 01:41:52.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:41:52.516" endtime="20210817 01:41:52.516"/>
</kw>
<status status="FAIL" starttime="20210817 01:39:59.962" endtime="20210817 01:41:52.516"/>
</kw>
<msg timestamp="20210817 01:41:52.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:39:59.961" endtime="20210817 01:41:52.517"/>
</kw>
<status status="FAIL" starttime="20210817 01:39:59.959" endtime="20210817 01:41:52.517"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210817 01:41:52.517" endtime="20210817 01:41:52.517"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210817 01:39:52.513" endtime="20210817 01:41:52.518">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:41:52.529" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:41:52.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:41:52.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:41:52.525" endtime="20210817 01:41:52.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:41:52.533" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:41:52.533" endtime="20210817 01:41:52.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:41:52.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:41:52.534" endtime="20210817 01:41:52.534"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.524" endtime="20210817 01:41:52.535"/>
</kw>
<msg timestamp="20210817 01:41:52.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:41:52.523" endtime="20210817 01:41:52.535"/>
</kw>
<msg timestamp="20210817 01:41:52.535" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:41:52.522" endtime="20210817 01:41:52.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:41:52.537" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:41:52.536" endtime="20210817 01:41:52.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:41:52.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:41:52.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:41:52.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:41:52.539" endtime="20210817 01:41:52.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:41:52.552" level="INFO"/>
<status status="PASS" starttime="20210817 01:41:52.551" endtime="20210817 01:41:52.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:41:52.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:41:52.552" endtime="20210817 01:41:52.553"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.539" endtime="20210817 01:41:52.554"/>
</kw>
<msg timestamp="20210817 01:41:52.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:41:52.538" endtime="20210817 01:41:52.554"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.537" endtime="20210817 01:41:52.555"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.537" endtime="20210817 01:41:52.555"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.521" endtime="20210817 01:41:52.555"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.520" endtime="20210817 01:41:52.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:41:52.561" level="INFO">Running command 'ozone sh bucket delete 59601-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:00.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:00.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:41:52.557" endtime="20210817 01:42:00.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:00.651" level="INFO"/>
<status status="PASS" starttime="20210817 01:42:00.647" endtime="20210817 01:42:00.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:00.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:00.651" endtime="20210817 01:42:00.652"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.557" endtime="20210817 01:42:00.652"/>
</kw>
<msg timestamp="20210817 01:42:00.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:41:52.556" endtime="20210817 01:42:00.652"/>
</kw>
<status status="PASS" starttime="20210817 01:41:52.556" endtime="20210817 01:42:00.653"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:00.664" level="INFO">Running command 'ozone sh bucket list 59601-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:08.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:08.445" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T...</msg>
<status status="PASS" starttime="20210817 01:42:00.657" endtime="20210817 01:42:08.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:08.446" level="INFO">{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:38:40.147Z",
  "modificationTime" : "2021-08-17T01:38:40.147Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:32:47.949Z",
  "modificationTime" : "2021-08-17T01:32:47.949Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:32:01.076Z",
  "modificationTime" : "2021-08-17T01:32:40.351Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:38:25.971Z",
  "modificationTime" : "2021-08-17T01:38:25.971Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:39:59.846Z",
  "modificationTime" : "2021-08-17T01:39:59.846Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:39:44.366Z",
  "modificationTime" : "2021-08-17T01:39:44.366Z",
  "sourceVolume" : "59601-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:39:28.622Z",
  "modificationTime" : "2021-08-17T01:39:28.622Z",
  "sourceVolume" : "59601-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:39:36.164Z",
  "modificationTime" : "2021-08-17T01:39:36.164Z",
  "sourceVolume" : "59601-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:31:44.982Z",
  "modificationTime" : "2021-08-17T01:32:31.873Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T01:31:53.042Z",
  "modificationTime" : "2021-08-17T01:31:53.042Z",
  "sourceVolume" : "59601-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210817 01:42:08.445" endtime="20210817 01:42:08.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:08.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:08.446" endtime="20210817 01:42:08.447"/>
</kw>
<status status="PASS" starttime="20210817 01:42:00.654" endtime="20210817 01:42:08.447"/>
</kw>
<msg timestamp="20210817 01:42:08.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:00.654" endtime="20210817 01:42:08.448"/>
</kw>
<msg timestamp="20210817 01:42:08.448" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "59601-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-17T...</msg>
<status status="PASS" starttime="20210817 01:42:00.653" endtime="20210817 01:42:08.448"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:08.448" endtime="20210817 01:42:08.449"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:08.453" level="INFO">Running command 'ozone sh key list 59601-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:15.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:15.955" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210817 01:42:08.451" endtime="20210817 01:42:15.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:15.957" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210817 01:42:15.956" endtime="20210817 01:42:15.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:15.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:15.957" endtime="20210817 01:42:15.958"/>
</kw>
<status status="PASS" starttime="20210817 01:42:08.450" endtime="20210817 01:42:15.958"/>
</kw>
<msg timestamp="20210817 01:42:15.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:08.450" endtime="20210817 01:42:15.958"/>
</kw>
<msg timestamp="20210817 01:42:15.959" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210817 01:42:08.449" endtime="20210817 01:42:15.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:15.959" endtime="20210817 01:42:15.960"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:41:52.519" endtime="20210817 01:42:15.960"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210817 01:27:55.570" endtime="20210817 01:42:15.963"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 01:42:16.005" level="INFO">${random} = 40895</msg>
<status status="PASS" starttime="20210817 01:42:16.004" endtime="20210817 01:42:16.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:42:16.005" level="INFO">${prefix} = 40895</msg>
<status status="PASS" starttime="20210817 01:42:16.005" endtime="20210817 01:42:16.006"/>
</kw>
<status status="PASS" starttime="20210817 01:42:16.003" endtime="20210817 01:42:16.006"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:16.013" level="INFO">Running command 'ozone sh volume info /40895-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:24.103" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:42:24.103" level="INFO">${output} = VOLUME_NOT_FOUND Volume 40895-rpcbasic is not found</msg>
<status status="PASS" starttime="20210817 01:42:16.010" endtime="20210817 01:42:24.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:24.105" level="INFO">VOLUME_NOT_FOUND Volume 40895-rpcbasic is not found</msg>
<status status="PASS" starttime="20210817 01:42:24.104" endtime="20210817 01:42:24.105"/>
</kw>
<msg timestamp="20210817 01:42:24.105" level="INFO">${result} = VOLUME_NOT_FOUND Volume 40895-rpcbasic is not found</msg>
<status status="PASS" starttime="20210817 01:42:16.009" endtime="20210817 01:42:24.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:24.105" endtime="20210817 01:42:24.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:24.112" level="INFO">Running command 'ozone sh volume create /40895-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:32.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:32.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:42:24.109" endtime="20210817 01:42:32.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:32.539" level="INFO"/>
<status status="PASS" starttime="20210817 01:42:32.538" endtime="20210817 01:42:32.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:32.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:32.540" endtime="20210817 01:42:32.541"/>
</kw>
<status status="PASS" starttime="20210817 01:42:24.108" endtime="20210817 01:42:32.542"/>
</kw>
<msg timestamp="20210817 01:42:32.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:24.107" endtime="20210817 01:42:32.542"/>
</kw>
<msg timestamp="20210817 01:42:32.543" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210817 01:42:24.106" endtime="20210817 01:42:32.544"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:32.544" endtime="20210817 01:42:32.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:32.554" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="40895-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:41.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:41.606" level="INFO">${output} = {
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 01:42:32.549" endtime="20210817 01:42:41.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:41.609" level="INFO">{
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T01:42:32.448Z",
  "modificationTime": "2021-08-17T01:42:32.448Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 01:42:41.608" endtime="20210817 01:42:41.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:41.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:41.609" endtime="20210817 01:42:41.609"/>
</kw>
<status status="PASS" starttime="20210817 01:42:32.548" endtime="20210817 01:42:41.610"/>
</kw>
<msg timestamp="20210817 01:42:41.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:32.548" endtime="20210817 01:42:41.610"/>
</kw>
<msg timestamp="20210817 01:42:41.610" level="INFO">${result} = {
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 01:42:32.545" endtime="20210817 01:42:41.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:41.611" endtime="20210817 01:42:41.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:41.621" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="40895-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:50.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:50.601" level="INFO">${output} = {
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 01:42:41.617" endtime="20210817 01:42:50.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:50.603" level="INFO">{
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T01:42:32.448Z",
  "modificationTime": "2021-08-17T01:42:32.448Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 01:42:50.602" endtime="20210817 01:42:50.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:50.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:50.604" endtime="20210817 01:42:50.605"/>
</kw>
<status status="PASS" starttime="20210817 01:42:41.615" endtime="20210817 01:42:50.605"/>
</kw>
<msg timestamp="20210817 01:42:50.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:41.614" endtime="20210817 01:42:50.606"/>
</kw>
<msg timestamp="20210817 01:42:50.606" level="INFO">${result} = {
  "metadata": {},
  "name": "40895-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 01:42:41.613" endtime="20210817 01:42:50.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:42:50.607" endtime="20210817 01:42:50.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:50.615" level="INFO">Running command 'ozone sh volume setquota /40895-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:42:59.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:42:59.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:42:50.612" endtime="20210817 01:42:59.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:42:59.608" level="INFO"/>
<status status="PASS" starttime="20210817 01:42:59.607" endtime="20210817 01:42:59.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:42:59.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:42:59.608" endtime="20210817 01:42:59.610"/>
</kw>
<status status="PASS" starttime="20210817 01:42:50.611" endtime="20210817 01:42:59.610"/>
</kw>
<msg timestamp="20210817 01:42:59.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:50.610" endtime="20210817 01:42:59.611"/>
</kw>
<status status="PASS" starttime="20210817 01:42:50.608" endtime="20210817 01:42:59.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:42:59.620" level="INFO">Running command 'ozone sh volume info /40895-rpcbasic | jq -r '. | select(.name=="40895-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:07.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:07.896" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:42:59.617" endtime="20210817 01:43:07.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:07.898" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 01:43:07.897" endtime="20210817 01:43:07.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:07.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:07.898" endtime="20210817 01:43:07.899"/>
</kw>
<status status="PASS" starttime="20210817 01:42:59.616" endtime="20210817 01:43:07.900"/>
</kw>
<msg timestamp="20210817 01:43:07.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:42:59.615" endtime="20210817 01:43:07.901"/>
</kw>
<msg timestamp="20210817 01:43:07.901" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:42:59.612" endtime="20210817 01:43:07.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:43:07.901" endtime="20210817 01:43:07.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:07.910" level="INFO">Running command 'ozone sh bucket create /40895-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:17.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:17.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:43:07.906" endtime="20210817 01:43:17.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:17.033" level="INFO"/>
<status status="PASS" starttime="20210817 01:43:17.032" endtime="20210817 01:43:17.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:17.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:17.034" endtime="20210817 01:43:17.035"/>
</kw>
<status status="PASS" starttime="20210817 01:43:07.905" endtime="20210817 01:43:17.036"/>
</kw>
<msg timestamp="20210817 01:43:17.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:07.904" endtime="20210817 01:43:17.036"/>
</kw>
<status status="PASS" starttime="20210817 01:43:07.903" endtime="20210817 01:43:17.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:17.044" level="INFO">Running command 'ozone sh bucket info /40895-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:25.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:25.644" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210817 01:43:17.041" endtime="20210817 01:43:25.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:25.646" level="INFO">DISK</msg>
<status status="PASS" starttime="20210817 01:43:25.645" endtime="20210817 01:43:25.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:25.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:25.646" endtime="20210817 01:43:25.647"/>
</kw>
<status status="PASS" starttime="20210817 01:43:17.040" endtime="20210817 01:43:25.648"/>
</kw>
<msg timestamp="20210817 01:43:25.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:17.040" endtime="20210817 01:43:25.649"/>
</kw>
<msg timestamp="20210817 01:43:25.649" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210817 01:43:17.037" endtime="20210817 01:43:25.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:43:25.649" endtime="20210817 01:43:25.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:25.658" level="INFO">Running command 'ozone sh bucket info /40895-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:34.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:34.143" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:43:25.654" endtime="20210817 01:43:34.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:34.145" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 01:43:34.144" endtime="20210817 01:43:34.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:34.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:34.145" endtime="20210817 01:43:34.146"/>
</kw>
<status status="PASS" starttime="20210817 01:43:25.652" endtime="20210817 01:43:34.147"/>
</kw>
<msg timestamp="20210817 01:43:34.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:25.652" endtime="20210817 01:43:34.147"/>
</kw>
<msg timestamp="20210817 01:43:34.148" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:43:25.651" endtime="20210817 01:43:34.148"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:43:34.149" endtime="20210817 01:43:34.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:34.158" level="INFO">Running command 'ozone sh bucket info /40895-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:42.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:42.709" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210817 01:43:34.154" endtime="20210817 01:43:42.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:42.712" level="INFO">100</msg>
<status status="PASS" starttime="20210817 01:43:42.710" endtime="20210817 01:43:42.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:42.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:42.713" endtime="20210817 01:43:42.714"/>
</kw>
<status status="PASS" starttime="20210817 01:43:34.153" endtime="20210817 01:43:42.715"/>
</kw>
<msg timestamp="20210817 01:43:42.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:34.152" endtime="20210817 01:43:42.715"/>
</kw>
<msg timestamp="20210817 01:43:42.716" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210817 01:43:34.150" endtime="20210817 01:43:42.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:43:42.716" endtime="20210817 01:43:42.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:42.725" level="INFO">Running command 'ozone sh bucket setquota /40895-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:50.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:50.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:43:42.722" endtime="20210817 01:43:50.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:50.685" level="INFO"/>
<status status="PASS" starttime="20210817 01:43:50.684" endtime="20210817 01:43:50.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:50.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:50.685" endtime="20210817 01:43:50.686"/>
</kw>
<status status="PASS" starttime="20210817 01:43:42.721" endtime="20210817 01:43:50.686"/>
</kw>
<msg timestamp="20210817 01:43:50.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:42.720" endtime="20210817 01:43:50.687"/>
</kw>
<status status="PASS" starttime="20210817 01:43:42.718" endtime="20210817 01:43:50.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:50.692" level="INFO">Running command 'ozone sh bucket info /40895-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:43:57.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:43:57.916" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210817 01:43:50.689" endtime="20210817 01:43:57.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:43:57.918" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210817 01:43:57.917" endtime="20210817 01:43:57.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:43:57.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:43:57.918" endtime="20210817 01:43:57.920"/>
</kw>
<status status="PASS" starttime="20210817 01:43:50.689" endtime="20210817 01:43:57.921"/>
</kw>
<msg timestamp="20210817 01:43:57.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:50.688" endtime="20210817 01:43:57.921"/>
</kw>
<msg timestamp="20210817 01:43:57.922" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210817 01:43:50.687" endtime="20210817 01:43:57.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:43:57.922" endtime="20210817 01:43:57.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:43:57.929" level="INFO">Running command 'ozone sh bucket info /40895-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:44:05.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:44:05.226" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210817 01:43:57.925" endtime="20210817 01:44:05.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:44:05.227" level="INFO">1000</msg>
<status status="PASS" starttime="20210817 01:44:05.226" endtime="20210817 01:44:05.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:44:05.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:44:05.227" endtime="20210817 01:44:05.228"/>
</kw>
<status status="PASS" starttime="20210817 01:43:57.924" endtime="20210817 01:44:05.228"/>
</kw>
<msg timestamp="20210817 01:44:05.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:43:57.924" endtime="20210817 01:44:05.229"/>
</kw>
<msg timestamp="20210817 01:44:05.229" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210817 01:43:57.923" endtime="20210817 01:44:05.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:44:05.229" endtime="20210817 01:44:05.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:44:05.234" level="INFO">Running command 'ozone sh bucket list /40895-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:44:14.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:44:14.359" level="INFO">${output} = 40895-rpcbasic</msg>
<status status="PASS" starttime="20210817 01:44:05.232" endtime="20210817 01:44:14.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:44:14.362" level="INFO">40895-rpcbasic</msg>
<status status="PASS" starttime="20210817 01:44:14.361" endtime="20210817 01:44:14.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:44:14.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:44:14.363" endtime="20210817 01:44:14.364"/>
</kw>
<status status="PASS" starttime="20210817 01:44:05.231" endtime="20210817 01:44:14.365"/>
</kw>
<msg timestamp="20210817 01:44:14.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:44:05.231" endtime="20210817 01:44:14.365"/>
</kw>
<msg timestamp="20210817 01:44:14.365" level="INFO">${result} = 40895-rpcbasic</msg>
<status status="PASS" starttime="20210817 01:44:05.230" endtime="20210817 01:44:14.365"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:44:14.365" endtime="20210817 01:44:14.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:44:14.379" level="INFO">Running command 'ozone sh key put /40895-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:16.007" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:44:14.375" endtime="20210817 01:47:16.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.008" endtime="20210817 01:47:16.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.008" endtime="20210817 01:47:16.008"/>
</kw>
<status status="FAIL" starttime="20210817 01:44:14.372" endtime="20210817 01:47:16.009"/>
</kw>
<msg timestamp="20210817 01:47:16.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:44:14.372" endtime="20210817 01:47:16.009"/>
</kw>
<status status="FAIL" starttime="20210817 01:44:14.370" endtime="20210817 01:47:16.009"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.010" endtime="20210817 01:47:16.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.010" endtime="20210817 01:47:16.010"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.010" endtime="20210817 01:47:16.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.010" endtime="20210817 01:47:16.011"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.011" endtime="20210817 01:47:16.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.011" endtime="20210817 01:47:16.011"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.011" endtime="20210817 01:47:16.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.011" endtime="20210817 01:47:16.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.012" endtime="20210817 01:47:16.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.012" endtime="20210817 01:47:16.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.012" endtime="20210817 01:47:16.012"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.013" endtime="20210817 01:47:16.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.013" endtime="20210817 01:47:16.013"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.013" endtime="20210817 01:47:16.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.013" endtime="20210817 01:47:16.013"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.014" endtime="20210817 01:47:16.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.014" endtime="20210817 01:47:16.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.014" endtime="20210817 01:47:16.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.014" endtime="20210817 01:47:16.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.014" endtime="20210817 01:47:16.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.015" endtime="20210817 01:47:16.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.015" endtime="20210817 01:47:16.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.015" endtime="20210817 01:47:16.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.016" endtime="20210817 01:47:16.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.016" endtime="20210817 01:47:16.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.016" endtime="20210817 01:47:16.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.016" endtime="20210817 01:47:16.016"/>
</kw>
<status status="FAIL" starttime="20210817 01:44:14.367" endtime="20210817 01:47:16.017"/>
</kw>
<status status="FAIL" starttime="20210817 01:44:14.366" endtime="20210817 01:47:16.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.017" endtime="20210817 01:47:16.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.017" endtime="20210817 01:47:16.017"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.017" endtime="20210817 01:47:16.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.018" endtime="20210817 01:47:16.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.018" endtime="20210817 01:47:16.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.018" endtime="20210817 01:47:16.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.018" endtime="20210817 01:47:16.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.019" endtime="20210817 01:47:16.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.019" endtime="20210817 01:47:16.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.019" endtime="20210817 01:47:16.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.019" endtime="20210817 01:47:16.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.020" endtime="20210817 01:47:16.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.020" endtime="20210817 01:47:16.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.021" endtime="20210817 01:47:16.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.021" endtime="20210817 01:47:16.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.022" endtime="20210817 01:47:16.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.022" endtime="20210817 01:47:16.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.022" endtime="20210817 01:47:16.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.023" endtime="20210817 01:47:16.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.023" endtime="20210817 01:47:16.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.023" endtime="20210817 01:47:16.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.023" endtime="20210817 01:47:16.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.024" endtime="20210817 01:47:16.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:47:16.024" endtime="20210817 01:47:16.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.024" endtime="20210817 01:47:16.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:47:16.024" endtime="20210817 01:47:16.024"/>
</kw>
<status status="FAIL" starttime="20210817 01:42:16.007" endtime="20210817 01:47:16.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210817 01:42:16.006" endtime="20210817 01:47:16.025">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210817 01:42:15.970" endtime="20210817 01:47:16.027"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 01:47:16.042" level="INFO">${random} = 63167</msg>
<status status="PASS" starttime="20210817 01:47:16.041" endtime="20210817 01:47:16.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:47:16.043" level="INFO">${prefix} = 63167</msg>
<status status="PASS" starttime="20210817 01:47:16.042" endtime="20210817 01:47:16.043"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.041" endtime="20210817 01:47:16.043"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:16.051" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:16.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:16.055" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:47:16.048" endtime="20210817 01:47:16.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:16.057" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:47:16.056" endtime="20210817 01:47:16.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:16.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:16.057" endtime="20210817 01:47:16.059"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.047" endtime="20210817 01:47:16.060"/>
</kw>
<msg timestamp="20210817 01:47:16.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:16.047" endtime="20210817 01:47:16.060"/>
</kw>
<msg timestamp="20210817 01:47:16.060" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:47:16.046" endtime="20210817 01:47:16.061"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:47:16.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:47:16.061" endtime="20210817 01:47:16.063"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:16.070" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:16.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:16.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:47:16.067" endtime="20210817 01:47:16.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:16.130" level="INFO"/>
<status status="PASS" starttime="20210817 01:47:16.129" endtime="20210817 01:47:16.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:16.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:16.131" endtime="20210817 01:47:16.131"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.066" endtime="20210817 01:47:16.132"/>
</kw>
<msg timestamp="20210817 01:47:16.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:16.065" endtime="20210817 01:47:16.132"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.064" endtime="20210817 01:47:16.132"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.064" endtime="20210817 01:47:16.132"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.045" endtime="20210817 01:47:16.133"/>
</kw>
<status status="PASS" starttime="20210817 01:47:16.045" endtime="20210817 01:47:16.133"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:16.138" level="INFO">Running command 'ozone sh volume info o3://om:9862/63167-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:23.802" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 01:47:23.802" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63167-rpcwoport is not found</msg>
<status status="PASS" starttime="20210817 01:47:16.134" endtime="20210817 01:47:23.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:23.805" level="INFO">VOLUME_NOT_FOUND Volume 63167-rpcwoport is not found</msg>
<status status="PASS" starttime="20210817 01:47:23.803" endtime="20210817 01:47:23.805"/>
</kw>
<msg timestamp="20210817 01:47:23.806" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63167-rpcwoport is not found</msg>
<status status="PASS" starttime="20210817 01:47:16.134" endtime="20210817 01:47:23.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:47:23.807" endtime="20210817 01:47:23.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:23.815" level="INFO">Running command 'ozone sh volume create o3://om:9862/63167-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:31.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:31.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:47:23.811" endtime="20210817 01:47:31.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:31.569" level="INFO"/>
<status status="PASS" starttime="20210817 01:47:31.568" endtime="20210817 01:47:31.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:31.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:31.569" endtime="20210817 01:47:31.570"/>
</kw>
<status status="PASS" starttime="20210817 01:47:23.810" endtime="20210817 01:47:31.570"/>
</kw>
<msg timestamp="20210817 01:47:31.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:23.809" endtime="20210817 01:47:31.571"/>
</kw>
<msg timestamp="20210817 01:47:31.571" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210817 01:47:23.808" endtime="20210817 01:47:31.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:47:31.572" endtime="20210817 01:47:31.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:31.579" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="63167-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:38.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:38.511" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210817 01:47:31.576" endtime="20210817 01:47:38.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:38.513" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T01:47:31.480Z",
  "modificationTime": "2021-08-17T01:47:31.480Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 01:47:38.512" endtime="20210817 01:47:38.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:38.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:38.514" endtime="20210817 01:47:38.515"/>
</kw>
<status status="PASS" starttime="20210817 01:47:31.575" endtime="20210817 01:47:38.516"/>
</kw>
<msg timestamp="20210817 01:47:38.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:31.575" endtime="20210817 01:47:38.517"/>
</kw>
<msg timestamp="20210817 01:47:38.517" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210817 01:47:31.573" endtime="20210817 01:47:38.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:47:38.518" endtime="20210817 01:47:38.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:38.526" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63167-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:47.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:47.095" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210817 01:47:38.522" endtime="20210817 01:47:47.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:47.096" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T01:47:31.480Z",
  "modificationTime": "2021-08-17T01:47:31.480Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 01:47:47.095" endtime="20210817 01:47:47.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:47.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:47.097" endtime="20210817 01:47:47.097"/>
</kw>
<status status="PASS" starttime="20210817 01:47:38.521" endtime="20210817 01:47:47.098"/>
</kw>
<msg timestamp="20210817 01:47:47.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:38.520" endtime="20210817 01:47:47.098"/>
</kw>
<msg timestamp="20210817 01:47:47.098" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210817 01:47:38.519" endtime="20210817 01:47:47.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 01:47:47.099" endtime="20210817 01:47:47.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:47.104" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/63167-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:47:52.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:47:52.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:47:47.101" endtime="20210817 01:47:52.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:47:52.937" level="INFO"/>
<status status="PASS" starttime="20210817 01:47:52.936" endtime="20210817 01:47:52.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:47:52.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:47:52.937" endtime="20210817 01:47:52.938"/>
</kw>
<status status="PASS" starttime="20210817 01:47:47.101" endtime="20210817 01:47:52.938"/>
</kw>
<msg timestamp="20210817 01:47:52.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:47.100" endtime="20210817 01:47:52.939"/>
</kw>
<status status="PASS" starttime="20210817 01:47:47.099" endtime="20210817 01:47:52.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:47:52.947" level="INFO">Running command 'ozone sh volume info o3://om:9862/63167-rpcwoport | jq -r '. | select(.name=="63167-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:02.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:02.188" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:47:52.944" endtime="20210817 01:48:02.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:02.190" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 01:48:02.189" endtime="20210817 01:48:02.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:02.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:02.190" endtime="20210817 01:48:02.193"/>
</kw>
<status status="PASS" starttime="20210817 01:47:52.943" endtime="20210817 01:48:02.195"/>
</kw>
<msg timestamp="20210817 01:48:02.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:47:52.942" endtime="20210817 01:48:02.195"/>
</kw>
<msg timestamp="20210817 01:48:02.196" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:47:52.940" endtime="20210817 01:48:02.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:02.197" endtime="20210817 01:48:02.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:02.208" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63167-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:10.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:10.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:48:02.203" endtime="20210817 01:48:10.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:10.099" level="INFO"/>
<status status="PASS" starttime="20210817 01:48:10.096" endtime="20210817 01:48:10.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:10.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:10.099" endtime="20210817 01:48:10.100"/>
</kw>
<status status="PASS" starttime="20210817 01:48:02.202" endtime="20210817 01:48:10.101"/>
</kw>
<msg timestamp="20210817 01:48:10.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:02.201" endtime="20210817 01:48:10.101"/>
</kw>
<status status="PASS" starttime="20210817 01:48:02.199" endtime="20210817 01:48:10.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:10.108" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63167-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:17.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:17.288" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210817 01:48:10.105" endtime="20210817 01:48:17.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:17.291" level="INFO">DISK</msg>
<status status="PASS" starttime="20210817 01:48:17.289" endtime="20210817 01:48:17.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:17.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:17.291" endtime="20210817 01:48:17.292"/>
</kw>
<status status="PASS" starttime="20210817 01:48:10.103" endtime="20210817 01:48:17.293"/>
</kw>
<msg timestamp="20210817 01:48:17.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:10.102" endtime="20210817 01:48:17.293"/>
</kw>
<msg timestamp="20210817 01:48:17.293" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210817 01:48:10.101" endtime="20210817 01:48:17.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:17.293" endtime="20210817 01:48:17.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:17.300" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63167-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:24.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:24.974" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:48:17.298" endtime="20210817 01:48:24.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:24.977" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 01:48:24.975" endtime="20210817 01:48:24.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:24.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:24.978" endtime="20210817 01:48:24.979"/>
</kw>
<status status="PASS" starttime="20210817 01:48:17.297" endtime="20210817 01:48:24.979"/>
</kw>
<msg timestamp="20210817 01:48:24.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:17.296" endtime="20210817 01:48:24.980"/>
</kw>
<msg timestamp="20210817 01:48:24.980" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 01:48:17.294" endtime="20210817 01:48:24.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:24.981" endtime="20210817 01:48:24.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:24.989" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63167-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:33.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:33.410" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210817 01:48:24.986" endtime="20210817 01:48:33.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:33.413" level="INFO">100</msg>
<status status="PASS" starttime="20210817 01:48:33.411" endtime="20210817 01:48:33.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:33.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:33.414" endtime="20210817 01:48:33.415"/>
</kw>
<status status="PASS" starttime="20210817 01:48:24.985" endtime="20210817 01:48:33.416"/>
</kw>
<msg timestamp="20210817 01:48:33.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:24.985" endtime="20210817 01:48:33.417"/>
</kw>
<msg timestamp="20210817 01:48:33.417" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210817 01:48:24.982" endtime="20210817 01:48:33.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:33.418" endtime="20210817 01:48:33.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:33.430" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/63167-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:41.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:41.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:48:33.424" endtime="20210817 01:48:41.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:41.368" level="INFO"/>
<status status="PASS" starttime="20210817 01:48:41.367" endtime="20210817 01:48:41.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:41.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:41.369" endtime="20210817 01:48:41.371"/>
</kw>
<status status="PASS" starttime="20210817 01:48:33.422" endtime="20210817 01:48:41.371"/>
</kw>
<msg timestamp="20210817 01:48:41.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:33.421" endtime="20210817 01:48:41.372"/>
</kw>
<status status="PASS" starttime="20210817 01:48:33.419" endtime="20210817 01:48:41.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:41.382" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63167-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:49.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:49.309" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210817 01:48:41.378" endtime="20210817 01:48:49.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:49.311" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210817 01:48:49.310" endtime="20210817 01:48:49.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:49.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:49.312" endtime="20210817 01:48:49.313"/>
</kw>
<status status="PASS" starttime="20210817 01:48:41.376" endtime="20210817 01:48:49.314"/>
</kw>
<msg timestamp="20210817 01:48:49.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:41.375" endtime="20210817 01:48:49.314"/>
</kw>
<msg timestamp="20210817 01:48:49.315" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210817 01:48:41.373" endtime="20210817 01:48:49.315"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:49.315" endtime="20210817 01:48:49.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:49.324" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63167-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:48:56.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:48:56.084" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210817 01:48:49.320" endtime="20210817 01:48:56.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:48:56.087" level="INFO">1000</msg>
<status status="PASS" starttime="20210817 01:48:56.085" endtime="20210817 01:48:56.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:48:56.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:48:56.087" endtime="20210817 01:48:56.088"/>
</kw>
<status status="PASS" starttime="20210817 01:48:49.319" endtime="20210817 01:48:56.089"/>
</kw>
<msg timestamp="20210817 01:48:56.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:49.318" endtime="20210817 01:48:56.089"/>
</kw>
<msg timestamp="20210817 01:48:56.089" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210817 01:48:49.316" endtime="20210817 01:48:56.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:48:56.090" endtime="20210817 01:48:56.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:48:56.096" level="INFO">Running command 'ozone sh bucket list o3://om:9862/63167-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:49:04.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:49:04.310" level="INFO">${output} = 63167-rpcwoport</msg>
<status status="PASS" starttime="20210817 01:48:56.093" endtime="20210817 01:49:04.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:49:04.312" level="INFO">63167-rpcwoport</msg>
<status status="PASS" starttime="20210817 01:49:04.311" endtime="20210817 01:49:04.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:49:04.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:49:04.312" endtime="20210817 01:49:04.313"/>
</kw>
<status status="PASS" starttime="20210817 01:48:56.092" endtime="20210817 01:49:04.313"/>
</kw>
<msg timestamp="20210817 01:49:04.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:48:56.092" endtime="20210817 01:49:04.314"/>
</kw>
<msg timestamp="20210817 01:49:04.314" level="INFO">${result} = 63167-rpcwoport</msg>
<status status="PASS" starttime="20210817 01:48:56.090" endtime="20210817 01:49:04.314"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 01:49:04.314" endtime="20210817 01:49:04.315"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:49:04.322" level="INFO">Running command 'ozone sh key put o3://om:9862/63167-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:16.052" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 01:49:04.320" endtime="20210817 01:52:16.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.053" endtime="20210817 01:52:16.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.053" endtime="20210817 01:52:16.053"/>
</kw>
<status status="FAIL" starttime="20210817 01:49:04.319" endtime="20210817 01:52:16.053"/>
</kw>
<msg timestamp="20210817 01:52:16.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 01:49:04.318" endtime="20210817 01:52:16.054"/>
</kw>
<status status="FAIL" starttime="20210817 01:49:04.317" endtime="20210817 01:52:16.054"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.054" endtime="20210817 01:52:16.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.055" endtime="20210817 01:52:16.055"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.055" endtime="20210817 01:52:16.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.055" endtime="20210817 01:52:16.055"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.055" endtime="20210817 01:52:16.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.055" endtime="20210817 01:52:16.055"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.056" endtime="20210817 01:52:16.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.056" endtime="20210817 01:52:16.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.058" endtime="20210817 01:52:16.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.058" endtime="20210817 01:52:16.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.058" endtime="20210817 01:52:16.058"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.059" endtime="20210817 01:52:16.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.059" endtime="20210817 01:52:16.059"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.059" endtime="20210817 01:52:16.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.059" endtime="20210817 01:52:16.059"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.060" endtime="20210817 01:52:16.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.060" endtime="20210817 01:52:16.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.060" endtime="20210817 01:52:16.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.060" endtime="20210817 01:52:16.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.060" endtime="20210817 01:52:16.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.061" endtime="20210817 01:52:16.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.061" endtime="20210817 01:52:16.061"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.061" endtime="20210817 01:52:16.061"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.061" endtime="20210817 01:52:16.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.062" endtime="20210817 01:52:16.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.062" endtime="20210817 01:52:16.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.062" endtime="20210817 01:52:16.062"/>
</kw>
<status status="FAIL" starttime="20210817 01:49:04.316" endtime="20210817 01:52:16.063"/>
</kw>
<status status="FAIL" starttime="20210817 01:49:04.315" endtime="20210817 01:52:16.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.063" endtime="20210817 01:52:16.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.063" endtime="20210817 01:52:16.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.063" endtime="20210817 01:52:16.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.064" endtime="20210817 01:52:16.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.064" endtime="20210817 01:52:16.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.064" endtime="20210817 01:52:16.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.064" endtime="20210817 01:52:16.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.064" endtime="20210817 01:52:16.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.065" endtime="20210817 01:52:16.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.065" endtime="20210817 01:52:16.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.065" endtime="20210817 01:52:16.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.065" endtime="20210817 01:52:16.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.065" endtime="20210817 01:52:16.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.066" endtime="20210817 01:52:16.067"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.067" endtime="20210817 01:52:16.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.067" endtime="20210817 01:52:16.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.068" endtime="20210817 01:52:16.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.068" endtime="20210817 01:52:16.069"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.069" endtime="20210817 01:52:16.069"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.069" endtime="20210817 01:52:16.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.070" endtime="20210817 01:52:16.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.070" endtime="20210817 01:52:16.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.070" endtime="20210817 01:52:16.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 01:52:16.071" endtime="20210817 01:52:16.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.071" endtime="20210817 01:52:16.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 01:52:16.071" endtime="20210817 01:52:16.071"/>
</kw>
<status status="FAIL" starttime="20210817 01:47:16.133" endtime="20210817 01:52:16.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210817 01:47:16.043" endtime="20210817 01:52:16.072">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:16.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:16.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:16.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:52:16.080" endtime="20210817 01:52:16.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:16.093" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:52:16.091" endtime="20210817 01:52:16.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:16.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:16.093" endtime="20210817 01:52:16.095"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.078" endtime="20210817 01:52:16.096"/>
</kw>
<msg timestamp="20210817 01:52:16.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:16.078" endtime="20210817 01:52:16.096"/>
</kw>
<msg timestamp="20210817 01:52:16.097" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:52:16.077" endtime="20210817 01:52:16.097"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:52:16.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:52:16.097" endtime="20210817 01:52:16.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:16.120" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:16.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:16.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:52:16.103" endtime="20210817 01:52:16.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:16.153" level="INFO"/>
<status status="PASS" starttime="20210817 01:52:16.153" endtime="20210817 01:52:16.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:16.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:16.154" endtime="20210817 01:52:16.154"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.102" endtime="20210817 01:52:16.155"/>
</kw>
<msg timestamp="20210817 01:52:16.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:16.102" endtime="20210817 01:52:16.155"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.100" endtime="20210817 01:52:16.155"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.099" endtime="20210817 01:52:16.155"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.076" endtime="20210817 01:52:16.156"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.075" endtime="20210817 01:52:16.156"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:16.162" level="INFO">Running command 'ozone sh volume create o3://om:9862/63167-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:24.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:24.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:52:16.159" endtime="20210817 01:52:24.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:24.870" level="INFO"/>
<status status="PASS" starttime="20210817 01:52:24.868" endtime="20210817 01:52:24.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:24.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:24.870" endtime="20210817 01:52:24.871"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.158" endtime="20210817 01:52:24.872"/>
</kw>
<msg timestamp="20210817 01:52:24.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:16.158" endtime="20210817 01:52:24.873"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.157" endtime="20210817 01:52:24.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:24.878" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63167-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:32.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:32.810" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:24.876" endtime="20210817 01:52:32.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:32.813" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:52:32.811" endtime="20210817 01:52:32.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:32.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:32.814" endtime="20210817 01:52:32.816"/>
</kw>
<status status="PASS" starttime="20210817 01:52:24.875" endtime="20210817 01:52:32.817"/>
</kw>
<msg timestamp="20210817 01:52:32.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:24.875" endtime="20210817 01:52:32.818"/>
</kw>
<msg timestamp="20210817 01:52:32.819" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:24.874" endtime="20210817 01:52:32.819"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:52:32.820" endtime="20210817 01:52:32.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:32.829" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/63167-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:40.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:40.188" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210817 01:52:32.825" endtime="20210817 01:52:40.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:40.190" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210817 01:52:40.189" endtime="20210817 01:52:40.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:40.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:40.190" endtime="20210817 01:52:40.191"/>
</kw>
<status status="PASS" starttime="20210817 01:52:32.824" endtime="20210817 01:52:40.191"/>
</kw>
<msg timestamp="20210817 01:52:40.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:32.823" endtime="20210817 01:52:40.191"/>
</kw>
<msg timestamp="20210817 01:52:40.192" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210817 01:52:32.822" endtime="20210817 01:52:40.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:40.196" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63167-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:47.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:47.225" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:40.194" endtime="20210817 01:52:47.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:47.228" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:52:47.226" endtime="20210817 01:52:47.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:47.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:47.228" endtime="20210817 01:52:47.230"/>
</kw>
<status status="PASS" starttime="20210817 01:52:40.193" endtime="20210817 01:52:47.231"/>
</kw>
<msg timestamp="20210817 01:52:47.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:40.193" endtime="20210817 01:52:47.231"/>
</kw>
<msg timestamp="20210817 01:52:47.232" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:40.192" endtime="20210817 01:52:47.232"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:52:47.233" endtime="20210817 01:52:47.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:47.244" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/63167-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:52:55.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:52:55.092" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:52:47.241" endtime="20210817 01:52:55.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:52:55.094" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:52:55.093" endtime="20210817 01:52:55.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:52:55.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:52:55.094" endtime="20210817 01:52:55.095"/>
</kw>
<status status="PASS" starttime="20210817 01:52:47.240" endtime="20210817 01:52:55.095"/>
</kw>
<msg timestamp="20210817 01:52:55.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:47.239" endtime="20210817 01:52:55.096"/>
</kw>
<msg timestamp="20210817 01:52:55.096" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:52:47.237" endtime="20210817 01:52:55.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:52:55.101" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63167-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:03.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:03.792" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:55.098" endtime="20210817 01:53:03.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:03.794" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:53:03.793" endtime="20210817 01:53:03.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:03.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:03.794" endtime="20210817 01:53:03.795"/>
</kw>
<status status="PASS" starttime="20210817 01:52:55.097" endtime="20210817 01:53:03.796"/>
</kw>
<msg timestamp="20210817 01:53:03.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:52:55.097" endtime="20210817 01:53:03.796"/>
</kw>
<msg timestamp="20210817 01:53:03.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:52:55.096" endtime="20210817 01:53:03.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:53:03.797" endtime="20210817 01:53:03.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:03.805" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/63167-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:11.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:11.597" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:53:03.802" endtime="20210817 01:53:11.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:11.599" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:53:11.597" endtime="20210817 01:53:11.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:11.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:11.599" endtime="20210817 01:53:11.600"/>
</kw>
<status status="PASS" starttime="20210817 01:53:03.801" endtime="20210817 01:53:11.600"/>
</kw>
<msg timestamp="20210817 01:53:11.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:03.800" endtime="20210817 01:53:11.600"/>
</kw>
<msg timestamp="20210817 01:53:11.601" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:53:03.799" endtime="20210817 01:53:11.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:11.607" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63167-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:19.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:19.945" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:53:11.603" endtime="20210817 01:53:19.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:19.947" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:53:19.946" endtime="20210817 01:53:19.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:19.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:19.947" endtime="20210817 01:53:19.948"/>
</kw>
<status status="PASS" starttime="20210817 01:53:11.602" endtime="20210817 01:53:19.948"/>
</kw>
<msg timestamp="20210817 01:53:19.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:11.602" endtime="20210817 01:53:19.949"/>
</kw>
<msg timestamp="20210817 01:53:19.949" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:53:11.601" endtime="20210817 01:53:19.949"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:53:19.950" endtime="20210817 01:53:19.950"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:53:19.950" endtime="20210817 01:53:19.952"/>
</kw>
<status status="PASS" starttime="20210817 01:52:16.156" endtime="20210817 01:53:19.952"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:52:16.074" endtime="20210817 01:53:19.952"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:19.965" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:19.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:19.974" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:53:19.961" endtime="20210817 01:53:19.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:19.977" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:53:19.975" endtime="20210817 01:53:19.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:19.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:19.977" endtime="20210817 01:53:19.980"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.959" endtime="20210817 01:53:19.981"/>
</kw>
<msg timestamp="20210817 01:53:19.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:19.959" endtime="20210817 01:53:19.982"/>
</kw>
<msg timestamp="20210817 01:53:19.983" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:53:19.958" endtime="20210817 01:53:19.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:53:19.986" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:53:19.985" endtime="20210817 01:53:19.986"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:19.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:20.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:20.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:53:19.991" endtime="20210817 01:53:20.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:20.008" level="INFO"/>
<status status="PASS" starttime="20210817 01:53:20.007" endtime="20210817 01:53:20.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:20.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:20.009" endtime="20210817 01:53:20.010"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.989" endtime="20210817 01:53:20.010"/>
</kw>
<msg timestamp="20210817 01:53:20.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:19.988" endtime="20210817 01:53:20.011"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.987" endtime="20210817 01:53:20.011"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.986" endtime="20210817 01:53:20.011"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.956" endtime="20210817 01:53:20.011"/>
</kw>
<status status="PASS" starttime="20210817 01:53:19.955" endtime="20210817 01:53:20.011"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:20.018" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63167-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:28.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:28.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:53:20.015" endtime="20210817 01:53:28.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:28.982" level="INFO"/>
<status status="PASS" starttime="20210817 01:53:28.979" endtime="20210817 01:53:28.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:28.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:28.983" endtime="20210817 01:53:28.986"/>
</kw>
<status status="PASS" starttime="20210817 01:53:20.014" endtime="20210817 01:53:28.987"/>
</kw>
<msg timestamp="20210817 01:53:28.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:20.014" endtime="20210817 01:53:28.988"/>
</kw>
<status status="PASS" starttime="20210817 01:53:20.012" endtime="20210817 01:53:28.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:28.997" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63167-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:37.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:37.459" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:28.992" endtime="20210817 01:53:37.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:37.461" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:53:37.459" endtime="20210817 01:53:37.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:37.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:37.461" endtime="20210817 01:53:37.462"/>
</kw>
<status status="PASS" starttime="20210817 01:53:28.991" endtime="20210817 01:53:37.463"/>
</kw>
<msg timestamp="20210817 01:53:37.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:28.990" endtime="20210817 01:53:37.463"/>
</kw>
<msg timestamp="20210817 01:53:37.464" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:28.989" endtime="20210817 01:53:37.464"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:53:37.465" endtime="20210817 01:53:37.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:37.475" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/63167-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:43.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:43.592" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210817 01:53:37.470" endtime="20210817 01:53:43.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:43.594" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210817 01:53:43.593" endtime="20210817 01:53:43.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:43.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:43.595" endtime="20210817 01:53:43.596"/>
</kw>
<status status="PASS" starttime="20210817 01:53:37.469" endtime="20210817 01:53:43.597"/>
</kw>
<msg timestamp="20210817 01:53:43.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:37.468" endtime="20210817 01:53:43.597"/>
</kw>
<msg timestamp="20210817 01:53:43.598" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210817 01:53:37.467" endtime="20210817 01:53:43.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:43.605" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63167-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:52.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:52.184" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:43.601" endtime="20210817 01:53:52.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:52.186" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:53:52.185" endtime="20210817 01:53:52.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:52.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:52.186" endtime="20210817 01:53:52.187"/>
</kw>
<status status="PASS" starttime="20210817 01:53:43.600" endtime="20210817 01:53:52.187"/>
</kw>
<msg timestamp="20210817 01:53:52.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:43.599" endtime="20210817 01:53:52.188"/>
</kw>
<msg timestamp="20210817 01:53:52.189" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:43.598" endtime="20210817 01:53:52.189"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:53:52.189" endtime="20210817 01:53:52.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:52.198" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/63167-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:53:59.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:53:59.981" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:53:52.195" endtime="20210817 01:53:59.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:53:59.983" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:53:59.982" endtime="20210817 01:53:59.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:53:59.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:53:59.984" endtime="20210817 01:53:59.986"/>
</kw>
<status status="PASS" starttime="20210817 01:53:52.194" endtime="20210817 01:53:59.986"/>
</kw>
<msg timestamp="20210817 01:53:59.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:52.193" endtime="20210817 01:53:59.987"/>
</kw>
<msg timestamp="20210817 01:53:59.987" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:53:52.191" endtime="20210817 01:53:59.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:53:59.992" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63167-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:54:08.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:54:08.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:59.989" endtime="20210817 01:54:08.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:54:08.379" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:54:08.378" endtime="20210817 01:54:08.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:54:08.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:54:08.379" endtime="20210817 01:54:08.380"/>
</kw>
<status status="PASS" starttime="20210817 01:53:59.989" endtime="20210817 01:54:08.381"/>
</kw>
<msg timestamp="20210817 01:54:08.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:53:59.989" endtime="20210817 01:54:08.382"/>
</kw>
<msg timestamp="20210817 01:54:08.382" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:53:59.988" endtime="20210817 01:54:08.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:54:08.383" endtime="20210817 01:54:08.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:54:08.392" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/63167-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:54:16.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:54:16.756" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:54:08.389" endtime="20210817 01:54:16.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:54:16.760" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:54:16.758" endtime="20210817 01:54:16.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:54:16.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:54:16.760" endtime="20210817 01:54:16.762"/>
</kw>
<status status="PASS" starttime="20210817 01:54:08.387" endtime="20210817 01:54:16.763"/>
</kw>
<msg timestamp="20210817 01:54:16.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:54:08.386" endtime="20210817 01:54:16.764"/>
</kw>
<msg timestamp="20210817 01:54:16.765" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:54:08.385" endtime="20210817 01:54:16.765"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:54:16.775" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63167-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:54:25.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:54:25.004" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210817 01:54:16.770" endtime="20210817 01:54:25.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:54:25.006" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:54:25.005" endtime="20210817 01:54:25.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:54:25.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:54:25.006" endtime="20210817 01:54:25.007"/>
</kw>
<status status="PASS" starttime="20210817 01:54:16.769" endtime="20210817 01:54:25.007"/>
</kw>
<msg timestamp="20210817 01:54:25.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:54:16.768" endtime="20210817 01:54:25.008"/>
</kw>
<msg timestamp="20210817 01:54:25.008" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210817 01:54:16.766" endtime="20210817 01:54:25.008"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:54:25.008" endtime="20210817 01:54:25.009"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:54:25.009" endtime="20210817 01:54:25.009"/>
</kw>
<status status="PASS" starttime="20210817 01:53:20.012" endtime="20210817 01:54:25.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:53:19.953" endtime="20210817 01:54:25.010"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:54:25.019" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:54:25.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:54:25.022" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:54:25.015" endtime="20210817 01:54:25.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:54:25.024" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:54:25.023" endtime="20210817 01:54:25.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:54:25.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:54:25.024" endtime="20210817 01:54:25.025"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.015" endtime="20210817 01:54:25.025"/>
</kw>
<msg timestamp="20210817 01:54:25.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:54:25.014" endtime="20210817 01:54:25.025"/>
</kw>
<msg timestamp="20210817 01:54:25.026" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:54:25.014" endtime="20210817 01:54:25.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:54:25.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:54:25.026" endtime="20210817 01:54:25.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:54:25.034" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:54:25.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:54:25.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:54:25.030" endtime="20210817 01:54:25.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:54:25.045" level="INFO"/>
<status status="PASS" starttime="20210817 01:54:25.044" endtime="20210817 01:54:25.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:54:25.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:54:25.046" endtime="20210817 01:54:25.047"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.030" endtime="20210817 01:54:25.047"/>
</kw>
<msg timestamp="20210817 01:54:25.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:54:25.028" endtime="20210817 01:54:25.047"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.027" endtime="20210817 01:54:25.048"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.027" endtime="20210817 01:54:25.048"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.013" endtime="20210817 01:54:25.048"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.012" endtime="20210817 01:54:25.048"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:54:25.054" level="INFO">Running command 'ozone sh key put o3://om:9862/63167-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:57:37.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:57:37.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:54:25.051" endtime="20210817 01:57:37.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:57:37.453" level="INFO"/>
<status status="PASS" starttime="20210817 01:57:37.452" endtime="20210817 01:57:37.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:57:37.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:57:37.453" endtime="20210817 01:57:37.454"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.050" endtime="20210817 01:57:37.455"/>
</kw>
<msg timestamp="20210817 01:57:37.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:54:25.050" endtime="20210817 01:57:37.455"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.049" endtime="20210817 01:57:37.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:57:37.460" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63167-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:57:43.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:57:43.994" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:57:37.457" endtime="20210817 01:57:43.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:57:43.995" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:57:43.994" endtime="20210817 01:57:43.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:57:43.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:57:43.996" endtime="20210817 01:57:43.997"/>
</kw>
<status status="PASS" starttime="20210817 01:57:37.457" endtime="20210817 01:57:43.997"/>
</kw>
<msg timestamp="20210817 01:57:43.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:57:37.456" endtime="20210817 01:57:43.997"/>
</kw>
<msg timestamp="20210817 01:57:43.998" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:57:37.455" endtime="20210817 01:57:43.998"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:57:43.998" endtime="20210817 01:57:43.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:57:44.004" level="INFO">Running command 'ozone sh key addacl o3://om:9862/63167-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:57:51.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:57:51.434" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:57:44.001" endtime="20210817 01:57:51.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:57:51.436" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:57:51.435" endtime="20210817 01:57:51.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:57:51.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:57:51.436" endtime="20210817 01:57:51.437"/>
</kw>
<status status="PASS" starttime="20210817 01:57:44.000" endtime="20210817 01:57:51.437"/>
</kw>
<msg timestamp="20210817 01:57:51.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:57:44.000" endtime="20210817 01:57:51.437"/>
</kw>
<msg timestamp="20210817 01:57:51.438" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210817 01:57:43.999" endtime="20210817 01:57:51.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:57:51.443" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63167-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:57:59.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:57:59.934" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:57:51.440" endtime="20210817 01:57:59.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:57:59.936" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:57:59.934" endtime="20210817 01:57:59.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:57:59.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:57:59.936" endtime="20210817 01:57:59.937"/>
</kw>
<status status="PASS" starttime="20210817 01:57:51.439" endtime="20210817 01:57:59.937"/>
</kw>
<msg timestamp="20210817 01:57:59.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:57:51.439" endtime="20210817 01:57:59.938"/>
</kw>
<msg timestamp="20210817 01:57:59.939" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:57:51.438" endtime="20210817 01:57:59.939"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:57:59.939" endtime="20210817 01:57:59.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:57:59.947" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/63167-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:07.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:07.965" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:57:59.944" endtime="20210817 01:58:07.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:07.968" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:58:07.966" endtime="20210817 01:58:07.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:07.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:07.968" endtime="20210817 01:58:07.969"/>
</kw>
<status status="PASS" starttime="20210817 01:57:59.943" endtime="20210817 01:58:07.969"/>
</kw>
<msg timestamp="20210817 01:58:07.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:57:59.942" endtime="20210817 01:58:07.969"/>
</kw>
<msg timestamp="20210817 01:58:07.970" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210817 01:57:59.941" endtime="20210817 01:58:07.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:07.975" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63167-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:17.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:17.349" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:58:07.973" endtime="20210817 01:58:17.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:17.350" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:58:17.350" endtime="20210817 01:58:17.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:17.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:17.351" endtime="20210817 01:58:17.352"/>
</kw>
<status status="PASS" starttime="20210817 01:58:07.972" endtime="20210817 01:58:17.352"/>
</kw>
<msg timestamp="20210817 01:58:17.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:07.971" endtime="20210817 01:58:17.353"/>
</kw>
<msg timestamp="20210817 01:58:17.353" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 01:58:07.970" endtime="20210817 01:58:17.353"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:58:17.353" endtime="20210817 01:58:17.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:17.359" level="INFO">Running command 'ozone sh key setacl o3://om:9862/63167-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:25.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:25.261" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:58:17.357" endtime="20210817 01:58:25.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:25.262" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:58:25.261" endtime="20210817 01:58:25.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:25.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:25.263" endtime="20210817 01:58:25.264"/>
</kw>
<status status="PASS" starttime="20210817 01:58:17.356" endtime="20210817 01:58:25.265"/>
</kw>
<msg timestamp="20210817 01:58:25.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:17.355" endtime="20210817 01:58:25.265"/>
</kw>
<msg timestamp="20210817 01:58:25.266" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:58:17.354" endtime="20210817 01:58:25.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:25.273" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63167-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:33.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:33.383" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210817 01:58:25.270" endtime="20210817 01:58:33.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:33.385" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:58:33.384" endtime="20210817 01:58:33.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:33.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:33.386" endtime="20210817 01:58:33.387"/>
</kw>
<status status="PASS" starttime="20210817 01:58:25.269" endtime="20210817 01:58:33.387"/>
</kw>
<msg timestamp="20210817 01:58:33.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:25.268" endtime="20210817 01:58:33.387"/>
</kw>
<msg timestamp="20210817 01:58:33.388" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210817 01:58:25.266" endtime="20210817 01:58:33.388"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:58:33.388" endtime="20210817 01:58:33.388"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:58:33.389" endtime="20210817 01:58:33.390"/>
</kw>
<status status="PASS" starttime="20210817 01:54:25.048" endtime="20210817 01:58:33.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:54:25.011" endtime="20210817 01:58:33.391"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:33.404" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:33.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:33.416" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:58:33.401" endtime="20210817 01:58:33.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:33.419" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:58:33.417" endtime="20210817 01:58:33.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:33.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:33.420" endtime="20210817 01:58:33.421"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.399" endtime="20210817 01:58:33.422"/>
</kw>
<msg timestamp="20210817 01:58:33.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:33.398" endtime="20210817 01:58:33.422"/>
</kw>
<msg timestamp="20210817 01:58:33.423" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:58:33.398" endtime="20210817 01:58:33.423"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:58:33.424" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:58:33.423" endtime="20210817 01:58:33.424"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:33.431" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:33.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:33.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:58:33.428" endtime="20210817 01:58:33.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:33.493" level="INFO"/>
<status status="PASS" starttime="20210817 01:58:33.492" endtime="20210817 01:58:33.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:33.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:33.494" endtime="20210817 01:58:33.494"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.426" endtime="20210817 01:58:33.495"/>
</kw>
<msg timestamp="20210817 01:58:33.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:33.426" endtime="20210817 01:58:33.495"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.425" endtime="20210817 01:58:33.495"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.424" endtime="20210817 01:58:33.495"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.397" endtime="20210817 01:58:33.496"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.394" endtime="20210817 01:58:33.496"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:33.501" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:41.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:41.335" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210817 01:58:33.499" endtime="20210817 01:58:41.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:41.337" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210817 01:58:41.336" endtime="20210817 01:58:41.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:41.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:41.337" endtime="20210817 01:58:41.339"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.498" endtime="20210817 01:58:41.339"/>
</kw>
<msg timestamp="20210817 01:58:41.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:33.498" endtime="20210817 01:58:41.339"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.497" endtime="20210817 01:58:41.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:41.344" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:49.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:49.745" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:58:41.342" endtime="20210817 01:58:49.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:49.747" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:58:49.746" endtime="20210817 01:58:49.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:49.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:49.748" endtime="20210817 01:58:49.749"/>
</kw>
<status status="PASS" starttime="20210817 01:58:41.341" endtime="20210817 01:58:49.750"/>
</kw>
<msg timestamp="20210817 01:58:49.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:41.341" endtime="20210817 01:58:49.751"/>
</kw>
<msg timestamp="20210817 01:58:49.751" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:58:41.340" endtime="20210817 01:58:49.751"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:58:49.752" endtime="20210817 01:58:49.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:49.763" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:58:57.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:58:57.410" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210817 01:58:49.759" endtime="20210817 01:58:57.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:58:57.412" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210817 01:58:57.411" endtime="20210817 01:58:57.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:58:57.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:58:57.413" endtime="20210817 01:58:57.413"/>
</kw>
<status status="PASS" starttime="20210817 01:58:49.758" endtime="20210817 01:58:57.414"/>
</kw>
<msg timestamp="20210817 01:58:57.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:49.757" endtime="20210817 01:58:57.414"/>
</kw>
<msg timestamp="20210817 01:58:57.415" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210817 01:58:49.754" endtime="20210817 01:58:57.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:58:57.422" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:59:06.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:59:06.001" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:58:57.417" endtime="20210817 01:59:06.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:59:06.003" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:59:06.002" endtime="20210817 01:59:06.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:59:06.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:59:06.003" endtime="20210817 01:59:06.004"/>
</kw>
<status status="PASS" starttime="20210817 01:58:57.416" endtime="20210817 01:59:06.005"/>
</kw>
<msg timestamp="20210817 01:59:06.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:58:57.416" endtime="20210817 01:59:06.005"/>
</kw>
<msg timestamp="20210817 01:59:06.006" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210817 01:58:57.415" endtime="20210817 01:59:06.006"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:59:06.006" endtime="20210817 01:59:06.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:59:06.016" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:59:13.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:59:13.811" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:59:06.013" endtime="20210817 01:59:13.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:59:13.814" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:59:13.812" endtime="20210817 01:59:13.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:59:13.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:59:13.814" endtime="20210817 01:59:13.816"/>
</kw>
<status status="PASS" starttime="20210817 01:59:06.011" endtime="20210817 01:59:13.816"/>
</kw>
<msg timestamp="20210817 01:59:13.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:59:06.010" endtime="20210817 01:59:13.817"/>
</kw>
<msg timestamp="20210817 01:59:13.817" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210817 01:59:06.009" endtime="20210817 01:59:13.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:59:13.825" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:59:22.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:59:22.192" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210817 01:59:13.821" endtime="20210817 01:59:22.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:59:22.194" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210817 01:59:22.193" endtime="20210817 01:59:22.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:59:22.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:59:22.195" endtime="20210817 01:59:22.196"/>
</kw>
<status status="PASS" starttime="20210817 01:59:13.820" endtime="20210817 01:59:22.196"/>
</kw>
<msg timestamp="20210817 01:59:22.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:59:13.819" endtime="20210817 01:59:22.197"/>
</kw>
<msg timestamp="20210817 01:59:22.197" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210817 01:59:13.818" endtime="20210817 01:59:22.197"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:59:22.198" endtime="20210817 01:59:22.199"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 01:59:22.199" endtime="20210817 01:59:22.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:59:22.206" level="INFO">Running command 'ozone sh key put o3://om:9862/63167-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:35.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:02:35.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:59:22.204" endtime="20210817 02:02:35.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:35.171" level="INFO"/>
<status status="PASS" starttime="20210817 02:02:35.170" endtime="20210817 02:02:35.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:02:35.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:02:35.171" endtime="20210817 02:02:35.172"/>
</kw>
<status status="PASS" starttime="20210817 01:59:22.201" endtime="20210817 02:02:35.172"/>
</kw>
<msg timestamp="20210817 02:02:35.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:59:22.201" endtime="20210817 02:02:35.172"/>
</kw>
<status status="PASS" starttime="20210817 01:59:22.200" endtime="20210817 02:02:35.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:35.178" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63167-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:42.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:02:42.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 02:02:35.175" endtime="20210817 02:02:42.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:42.307" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210817 02:02:42.306" endtime="20210817 02:02:42.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:02:42.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:02:42.307" endtime="20210817 02:02:42.308"/>
</kw>
<status status="PASS" starttime="20210817 02:02:35.174" endtime="20210817 02:02:42.308"/>
</kw>
<msg timestamp="20210817 02:02:42.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:02:35.174" endtime="20210817 02:02:42.308"/>
</kw>
<msg timestamp="20210817 02:02:42.309" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210817 02:02:35.173" endtime="20210817 02:02:42.309"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 02:02:42.309" endtime="20210817 02:02:42.310"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210817 02:02:42.310" endtime="20210817 02:02:42.311"/>
</kw>
<status status="PASS" starttime="20210817 01:58:33.496" endtime="20210817 02:02:42.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 01:58:33.392" endtime="20210817 02:02:42.311"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:42.319" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:42.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:02:42.322" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 02:02:42.316" endtime="20210817 02:02:42.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:42.323" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 02:02:42.323" endtime="20210817 02:02:42.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:02:42.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:02:42.324" endtime="20210817 02:02:42.324"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.316" endtime="20210817 02:02:42.325"/>
</kw>
<msg timestamp="20210817 02:02:42.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:02:42.315" endtime="20210817 02:02:42.325"/>
</kw>
<msg timestamp="20210817 02:02:42.325" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 02:02:42.315" endtime="20210817 02:02:42.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 02:02:42.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 02:02:42.326" endtime="20210817 02:02:42.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:42.336" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:42.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:02:42.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:02:42.329" endtime="20210817 02:02:42.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:42.353" level="INFO"/>
<status status="PASS" starttime="20210817 02:02:42.352" endtime="20210817 02:02:42.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:02:42.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:02:42.353" endtime="20210817 02:02:42.354"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.328" endtime="20210817 02:02:42.354"/>
</kw>
<msg timestamp="20210817 02:02:42.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:02:42.328" endtime="20210817 02:02:42.354"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.327" endtime="20210817 02:02:42.355"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.326" endtime="20210817 02:02:42.355"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.314" endtime="20210817 02:02:42.355"/>
</kw>
<status status="PASS" starttime="20210817 02:02:42.313" endtime="20210817 02:02:42.355"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:42.360" level="INFO">Running command 'ozone sh volume info o3:///63167-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:50.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 02:02:50.653" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63167-rpcwport is not found</msg>
<status status="PASS" starttime="20210817 02:02:42.358" endtime="20210817 02:02:50.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:50.656" level="INFO">VOLUME_NOT_FOUND Volume 63167-rpcwport is not found</msg>
<status status="PASS" starttime="20210817 02:02:50.654" endtime="20210817 02:02:50.656"/>
</kw>
<msg timestamp="20210817 02:02:50.657" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63167-rpcwport is not found</msg>
<status status="PASS" starttime="20210817 02:02:42.357" endtime="20210817 02:02:50.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:02:50.658" endtime="20210817 02:02:50.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:50.665" level="INFO">Running command 'ozone sh volume create o3:///63167-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:02:58.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:02:58.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:02:50.661" endtime="20210817 02:02:58.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:02:58.202" level="INFO"/>
<status status="PASS" starttime="20210817 02:02:58.201" endtime="20210817 02:02:58.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:02:58.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:02:58.202" endtime="20210817 02:02:58.204"/>
</kw>
<status status="PASS" starttime="20210817 02:02:50.660" endtime="20210817 02:02:58.204"/>
</kw>
<msg timestamp="20210817 02:02:58.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:02:50.659" endtime="20210817 02:02:58.205"/>
</kw>
<msg timestamp="20210817 02:02:58.205" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210817 02:02:50.659" endtime="20210817 02:02:58.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:02:58.206" endtime="20210817 02:02:58.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:02:58.214" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="63167-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:06.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:06.809" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 02:02:58.211" endtime="20210817 02:03:06.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:06.811" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T02:02:58.111Z",
  "modificationTime": "2021-08-17T02:02:58.111Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 02:03:06.809" endtime="20210817 02:03:06.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:06.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:06.811" endtime="20210817 02:03:06.812"/>
</kw>
<status status="PASS" starttime="20210817 02:02:58.210" endtime="20210817 02:03:06.812"/>
</kw>
<msg timestamp="20210817 02:03:06.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:02:58.209" endtime="20210817 02:03:06.813"/>
</kw>
<msg timestamp="20210817 02:03:06.813" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 02:02:58.208" endtime="20210817 02:03:06.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:03:06.813" endtime="20210817 02:03:06.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:06.821" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63167-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:15.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:15.946" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 02:03:06.817" endtime="20210817 02:03:15.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:15.949" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T02:02:58.111Z",
  "modificationTime": "2021-08-17T02:02:58.111Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 02:03:15.947" endtime="20210817 02:03:15.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:15.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:15.949" endtime="20210817 02:03:15.954"/>
</kw>
<status status="PASS" starttime="20210817 02:03:06.816" endtime="20210817 02:03:15.955"/>
</kw>
<msg timestamp="20210817 02:03:15.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:06.815" endtime="20210817 02:03:15.956"/>
</kw>
<msg timestamp="20210817 02:03:15.957" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210817 02:03:06.814" endtime="20210817 02:03:15.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:03:15.958" endtime="20210817 02:03:15.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:15.981" level="INFO">Running command 'ozone sh volume setquota o3:///63167-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:24.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:24.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:03:15.967" endtime="20210817 02:03:24.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:24.942" level="INFO"/>
<status status="PASS" starttime="20210817 02:03:24.941" endtime="20210817 02:03:24.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:24.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:24.942" endtime="20210817 02:03:24.943"/>
</kw>
<status status="PASS" starttime="20210817 02:03:15.965" endtime="20210817 02:03:24.943"/>
</kw>
<msg timestamp="20210817 02:03:24.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:15.964" endtime="20210817 02:03:24.943"/>
</kw>
<status status="PASS" starttime="20210817 02:03:15.961" endtime="20210817 02:03:24.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:24.949" level="INFO">Running command 'ozone sh volume info o3:///63167-rpcwport | jq -r '. | select(.name=="63167-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:33.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:33.439" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:24.946" endtime="20210817 02:03:33.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:33.441" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:33.440" endtime="20210817 02:03:33.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:33.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:33.442" endtime="20210817 02:03:33.442"/>
</kw>
<status status="PASS" starttime="20210817 02:03:24.945" endtime="20210817 02:03:33.443"/>
</kw>
<msg timestamp="20210817 02:03:33.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:24.945" endtime="20210817 02:03:33.443"/>
</kw>
<msg timestamp="20210817 02:03:33.444" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:24.944" endtime="20210817 02:03:33.444"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:03:33.444" endtime="20210817 02:03:33.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:33.451" level="INFO">Running command 'ozone sh bucket create o3:///63167-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:41.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:41.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:03:33.448" endtime="20210817 02:03:41.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:41.626" level="INFO"/>
<status status="PASS" starttime="20210817 02:03:41.624" endtime="20210817 02:03:41.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:41.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:41.626" endtime="20210817 02:03:41.627"/>
</kw>
<status status="PASS" starttime="20210817 02:03:33.447" endtime="20210817 02:03:41.627"/>
</kw>
<msg timestamp="20210817 02:03:41.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:33.446" endtime="20210817 02:03:41.628"/>
</kw>
<status status="PASS" starttime="20210817 02:03:33.445" endtime="20210817 02:03:41.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:41.634" level="INFO">Running command 'ozone sh bucket info o3:///63167-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:50.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:50.646" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210817 02:03:41.631" endtime="20210817 02:03:50.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:50.649" level="INFO">DISK</msg>
<status status="PASS" starttime="20210817 02:03:50.648" endtime="20210817 02:03:50.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:50.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:50.649" endtime="20210817 02:03:50.650"/>
</kw>
<status status="PASS" starttime="20210817 02:03:41.630" endtime="20210817 02:03:50.651"/>
</kw>
<msg timestamp="20210817 02:03:50.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:41.629" endtime="20210817 02:03:50.651"/>
</kw>
<msg timestamp="20210817 02:03:50.652" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210817 02:03:41.628" endtime="20210817 02:03:50.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:03:50.652" endtime="20210817 02:03:50.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:50.659" level="INFO">Running command 'ozone sh bucket info o3:///63167-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:03:59.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:03:59.447" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:50.656" endtime="20210817 02:03:59.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:03:59.448" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:59.448" endtime="20210817 02:03:59.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:03:59.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:03:59.449" endtime="20210817 02:03:59.451"/>
</kw>
<status status="PASS" starttime="20210817 02:03:50.655" endtime="20210817 02:03:59.452"/>
</kw>
<msg timestamp="20210817 02:03:59.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:50.654" endtime="20210817 02:03:59.452"/>
</kw>
<msg timestamp="20210817 02:03:59.453" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:03:50.653" endtime="20210817 02:03:59.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:03:59.453" endtime="20210817 02:03:59.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:03:59.459" level="INFO">Running command 'ozone sh bucket info o3:///63167-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:04:08.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:04:08.490" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210817 02:03:59.456" endtime="20210817 02:04:08.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:04:08.492" level="INFO">100</msg>
<status status="PASS" starttime="20210817 02:04:08.491" endtime="20210817 02:04:08.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:04:08.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:04:08.492" endtime="20210817 02:04:08.493"/>
</kw>
<status status="PASS" starttime="20210817 02:03:59.455" endtime="20210817 02:04:08.493"/>
</kw>
<msg timestamp="20210817 02:04:08.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:03:59.455" endtime="20210817 02:04:08.493"/>
</kw>
<msg timestamp="20210817 02:04:08.494" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210817 02:03:59.454" endtime="20210817 02:04:08.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:04:08.494" endtime="20210817 02:04:08.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:04:08.500" level="INFO">Running command 'ozone sh bucket setquota o3:///63167-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:04:14.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:04:14.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:04:08.497" endtime="20210817 02:04:14.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:04:14.586" level="INFO"/>
<status status="PASS" starttime="20210817 02:04:14.585" endtime="20210817 02:04:14.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:04:14.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:04:14.586" endtime="20210817 02:04:14.587"/>
</kw>
<status status="PASS" starttime="20210817 02:04:08.496" endtime="20210817 02:04:14.587"/>
</kw>
<msg timestamp="20210817 02:04:14.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:04:08.496" endtime="20210817 02:04:14.588"/>
</kw>
<status status="PASS" starttime="20210817 02:04:08.495" endtime="20210817 02:04:14.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:04:14.593" level="INFO">Running command 'ozone sh bucket info o3:///63167-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:04:23.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:04:23.014" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210817 02:04:14.590" endtime="20210817 02:04:23.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:04:23.015" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210817 02:04:23.014" endtime="20210817 02:04:23.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:04:23.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:04:23.016" endtime="20210817 02:04:23.017"/>
</kw>
<status status="PASS" starttime="20210817 02:04:14.590" endtime="20210817 02:04:23.017"/>
</kw>
<msg timestamp="20210817 02:04:23.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:04:14.589" endtime="20210817 02:04:23.017"/>
</kw>
<msg timestamp="20210817 02:04:23.018" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210817 02:04:14.588" endtime="20210817 02:04:23.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:04:23.018" endtime="20210817 02:04:23.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:04:23.024" level="INFO">Running command 'ozone sh bucket info o3:///63167-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:04:31.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:04:31.058" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210817 02:04:23.022" endtime="20210817 02:04:31.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:04:31.061" level="INFO">1000</msg>
<status status="PASS" starttime="20210817 02:04:31.059" endtime="20210817 02:04:31.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:04:31.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:04:31.061" endtime="20210817 02:04:31.062"/>
</kw>
<status status="PASS" starttime="20210817 02:04:23.021" endtime="20210817 02:04:31.063"/>
</kw>
<msg timestamp="20210817 02:04:31.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:04:23.020" endtime="20210817 02:04:31.063"/>
</kw>
<msg timestamp="20210817 02:04:31.063" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210817 02:04:23.019" endtime="20210817 02:04:31.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:04:31.064" endtime="20210817 02:04:31.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:04:31.072" level="INFO">Running command 'ozone sh bucket list o3:///63167-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:04:39.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:04:39.485" level="INFO">${output} = 63167-rpcwport</msg>
<status status="PASS" starttime="20210817 02:04:31.069" endtime="20210817 02:04:39.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:04:39.488" level="INFO">63167-rpcwport</msg>
<status status="PASS" starttime="20210817 02:04:39.487" endtime="20210817 02:04:39.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:04:39.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:04:39.489" endtime="20210817 02:04:39.490"/>
</kw>
<status status="PASS" starttime="20210817 02:04:31.068" endtime="20210817 02:04:39.491"/>
</kw>
<msg timestamp="20210817 02:04:39.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:04:31.067" endtime="20210817 02:04:39.492"/>
</kw>
<msg timestamp="20210817 02:04:39.492" level="INFO">${result} = 63167-rpcwport</msg>
<status status="PASS" starttime="20210817 02:04:31.065" endtime="20210817 02:04:39.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:04:39.493" endtime="20210817 02:04:39.494"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:04:39.505" level="INFO">Running command 'ozone sh key put o3:///63167-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:07:42.313" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 02:04:39.501" endtime="20210817 02:07:42.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.314" endtime="20210817 02:07:42.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.315" endtime="20210817 02:07:42.315"/>
</kw>
<status status="FAIL" starttime="20210817 02:04:39.499" endtime="20210817 02:07:42.315"/>
</kw>
<msg timestamp="20210817 02:07:42.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 02:04:39.499" endtime="20210817 02:07:42.315"/>
</kw>
<status status="FAIL" starttime="20210817 02:04:39.497" endtime="20210817 02:07:42.316"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.316" endtime="20210817 02:07:42.316"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.316" endtime="20210817 02:07:42.316"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.316" endtime="20210817 02:07:42.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.317" endtime="20210817 02:07:42.317"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.317" endtime="20210817 02:07:42.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.317" endtime="20210817 02:07:42.317"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.317" endtime="20210817 02:07:42.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.318" endtime="20210817 02:07:42.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.318" endtime="20210817 02:07:42.318"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.319" endtime="20210817 02:07:42.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.319" endtime="20210817 02:07:42.319"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.319" endtime="20210817 02:07:42.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.320" endtime="20210817 02:07:42.320"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.320" endtime="20210817 02:07:42.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.320" endtime="20210817 02:07:42.320"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.320" endtime="20210817 02:07:42.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.320" endtime="20210817 02:07:42.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.321" endtime="20210817 02:07:42.321"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.321" endtime="20210817 02:07:42.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.321" endtime="20210817 02:07:42.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.322" endtime="20210817 02:07:42.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.322" endtime="20210817 02:07:42.322"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.322" endtime="20210817 02:07:42.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.323" endtime="20210817 02:07:42.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.323" endtime="20210817 02:07:42.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.323" endtime="20210817 02:07:42.323"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.324" endtime="20210817 02:07:42.324"/>
</kw>
<status status="FAIL" starttime="20210817 02:04:39.495" endtime="20210817 02:07:42.324"/>
</kw>
<status status="FAIL" starttime="20210817 02:04:39.495" endtime="20210817 02:07:42.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.324" endtime="20210817 02:07:42.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.324" endtime="20210817 02:07:42.324"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.325" endtime="20210817 02:07:42.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.325" endtime="20210817 02:07:42.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.325" endtime="20210817 02:07:42.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.326" endtime="20210817 02:07:42.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.326" endtime="20210817 02:07:42.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.327" endtime="20210817 02:07:42.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.327" endtime="20210817 02:07:42.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.327" endtime="20210817 02:07:42.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.328" endtime="20210817 02:07:42.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.328" endtime="20210817 02:07:42.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.329" endtime="20210817 02:07:42.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.329" endtime="20210817 02:07:42.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.329" endtime="20210817 02:07:42.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.329" endtime="20210817 02:07:42.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.330" endtime="20210817 02:07:42.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.330" endtime="20210817 02:07:42.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.331" endtime="20210817 02:07:42.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.331" endtime="20210817 02:07:42.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.331" endtime="20210817 02:07:42.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.332" endtime="20210817 02:07:42.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.332" endtime="20210817 02:07:42.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:07:42.332" endtime="20210817 02:07:42.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.333" endtime="20210817 02:07:42.333"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:07:42.333" endtime="20210817 02:07:42.333"/>
</kw>
<status status="FAIL" starttime="20210817 02:02:42.355" endtime="20210817 02:07:42.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210817 02:02:42.312" endtime="20210817 02:07:42.334">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:07:42.343" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:07:42.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:07:42.350" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 02:07:42.340" endtime="20210817 02:07:42.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:07:42.352" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 02:07:42.351" endtime="20210817 02:07:42.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:07:42.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:07:42.353" endtime="20210817 02:07:42.354"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.340" endtime="20210817 02:07:42.355"/>
</kw>
<msg timestamp="20210817 02:07:42.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:07:42.339" endtime="20210817 02:07:42.355"/>
</kw>
<msg timestamp="20210817 02:07:42.356" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 02:07:42.339" endtime="20210817 02:07:42.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 02:07:42.357" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 02:07:42.356" endtime="20210817 02:07:42.358"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:07:42.364" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:07:42.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:07:42.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:07:42.362" endtime="20210817 02:07:42.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:07:42.400" level="INFO"/>
<status status="PASS" starttime="20210817 02:07:42.399" endtime="20210817 02:07:42.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:07:42.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:07:42.400" endtime="20210817 02:07:42.401"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.361" endtime="20210817 02:07:42.402"/>
</kw>
<msg timestamp="20210817 02:07:42.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:07:42.360" endtime="20210817 02:07:42.402"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.359" endtime="20210817 02:07:42.402"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.358" endtime="20210817 02:07:42.402"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.337" endtime="20210817 02:07:42.402"/>
</kw>
<status status="PASS" starttime="20210817 02:07:42.336" endtime="20210817 02:07:42.403"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:07:42.409" level="INFO">Running command 'ozone sh volume info /63167-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:07:49.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20210817 02:07:49.287" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63167-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210817 02:07:42.406" endtime="20210817 02:07:49.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:07:49.288" level="INFO">VOLUME_NOT_FOUND Volume 63167-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210817 02:07:49.287" endtime="20210817 02:07:49.288"/>
</kw>
<msg timestamp="20210817 02:07:49.289" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63167-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210817 02:07:42.405" endtime="20210817 02:07:49.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:07:49.289" endtime="20210817 02:07:49.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:07:49.294" level="INFO">Running command 'ozone sh volume create /63167-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:07:57.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:07:57.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:07:49.292" endtime="20210817 02:07:57.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:07:57.814" level="INFO"/>
<status status="PASS" starttime="20210817 02:07:57.814" endtime="20210817 02:07:57.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:07:57.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:07:57.815" endtime="20210817 02:07:57.816"/>
</kw>
<status status="PASS" starttime="20210817 02:07:49.291" endtime="20210817 02:07:57.816"/>
</kw>
<msg timestamp="20210817 02:07:57.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:07:49.291" endtime="20210817 02:07:57.816"/>
</kw>
<msg timestamp="20210817 02:07:57.817" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210817 02:07:49.290" endtime="20210817 02:07:57.817"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:07:57.817" endtime="20210817 02:07:57.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:07:57.824" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="63167-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:07.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:07.271" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210817 02:07:57.821" endtime="20210817 02:08:07.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:07.274" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T02:07:57.723Z",
  "modificationTime": "2021-08-17T02:07:57.723Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 02:08:07.271" endtime="20210817 02:08:07.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:07.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:07.274" endtime="20210817 02:08:07.276"/>
</kw>
<status status="PASS" starttime="20210817 02:07:57.819" endtime="20210817 02:08:07.277"/>
</kw>
<msg timestamp="20210817 02:08:07.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:07:57.819" endtime="20210817 02:08:07.278"/>
</kw>
<msg timestamp="20210817 02:08:07.279" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210817 02:07:57.818" endtime="20210817 02:08:07.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:08:07.279" endtime="20210817 02:08:07.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:07.290" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63167-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:15.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:15.902" level="INFO">${output} = {
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210817 02:08:07.286" endtime="20210817 02:08:15.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:15.904" level="INFO">{
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-17T02:07:57.723Z",
  "modificationTime": "2021-08-17T02:07:57.723Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210817 02:08:15.903" endtime="20210817 02:08:15.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:15.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:15.905" endtime="20210817 02:08:15.906"/>
</kw>
<status status="PASS" starttime="20210817 02:08:07.284" endtime="20210817 02:08:15.907"/>
</kw>
<msg timestamp="20210817 02:08:15.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:07.283" endtime="20210817 02:08:15.907"/>
</kw>
<msg timestamp="20210817 02:08:15.908" level="INFO">${result} = {
  "metadata": {},
  "name": "63167-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210817 02:08:07.281" endtime="20210817 02:08:15.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 02:08:15.909" endtime="20210817 02:08:15.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:15.916" level="INFO">Running command 'ozone sh volume setquota /63167-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:23.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:23.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:08:15.914" endtime="20210817 02:08:23.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:23.284" level="INFO"/>
<status status="PASS" starttime="20210817 02:08:23.283" endtime="20210817 02:08:23.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:23.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:23.284" endtime="20210817 02:08:23.285"/>
</kw>
<status status="PASS" starttime="20210817 02:08:15.913" endtime="20210817 02:08:23.286"/>
</kw>
<msg timestamp="20210817 02:08:23.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:15.912" endtime="20210817 02:08:23.286"/>
</kw>
<status status="PASS" starttime="20210817 02:08:15.910" endtime="20210817 02:08:23.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:23.293" level="INFO">Running command 'ozone sh volume info /63167-rpcwoscheme | jq -r '. | select(.name=="63167-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:31.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:31.263" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:23.290" endtime="20210817 02:08:31.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:31.265" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:31.264" endtime="20210817 02:08:31.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:31.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:31.265" endtime="20210817 02:08:31.266"/>
</kw>
<status status="PASS" starttime="20210817 02:08:23.289" endtime="20210817 02:08:31.267"/>
</kw>
<msg timestamp="20210817 02:08:31.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:23.289" endtime="20210817 02:08:31.267"/>
</kw>
<msg timestamp="20210817 02:08:31.268" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:23.287" endtime="20210817 02:08:31.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:08:31.268" endtime="20210817 02:08:31.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:31.275" level="INFO">Running command 'ozone sh bucket create /63167-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:39.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:39.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:08:31.272" endtime="20210817 02:08:39.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:39.190" level="INFO"/>
<status status="PASS" starttime="20210817 02:08:39.189" endtime="20210817 02:08:39.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:39.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:39.191" endtime="20210817 02:08:39.192"/>
</kw>
<status status="PASS" starttime="20210817 02:08:31.270" endtime="20210817 02:08:39.192"/>
</kw>
<msg timestamp="20210817 02:08:39.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:31.270" endtime="20210817 02:08:39.192"/>
</kw>
<status status="PASS" starttime="20210817 02:08:31.269" endtime="20210817 02:08:39.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:39.199" level="INFO">Running command 'ozone sh bucket info /63167-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:47.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:47.431" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210817 02:08:39.196" endtime="20210817 02:08:47.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:47.432" level="INFO">DISK</msg>
<status status="PASS" starttime="20210817 02:08:47.432" endtime="20210817 02:08:47.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:47.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:47.433" endtime="20210817 02:08:47.434"/>
</kw>
<status status="PASS" starttime="20210817 02:08:39.195" endtime="20210817 02:08:47.434"/>
</kw>
<msg timestamp="20210817 02:08:47.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:39.195" endtime="20210817 02:08:47.434"/>
</kw>
<msg timestamp="20210817 02:08:47.435" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210817 02:08:39.193" endtime="20210817 02:08:47.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:08:47.435" endtime="20210817 02:08:47.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:47.441" level="INFO">Running command 'ozone sh bucket info /63167-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:08:55.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:08:55.433" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:47.439" endtime="20210817 02:08:55.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:08:55.434" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:55.434" endtime="20210817 02:08:55.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:08:55.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:08:55.435" endtime="20210817 02:08:55.435"/>
</kw>
<status status="PASS" starttime="20210817 02:08:47.438" endtime="20210817 02:08:55.436"/>
</kw>
<msg timestamp="20210817 02:08:55.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:47.437" endtime="20210817 02:08:55.436"/>
</kw>
<msg timestamp="20210817 02:08:55.437" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210817 02:08:47.436" endtime="20210817 02:08:55.437"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:08:55.437" endtime="20210817 02:08:55.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:08:55.443" level="INFO">Running command 'ozone sh bucket info /63167-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:09:03.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:09:03.756" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210817 02:08:55.440" endtime="20210817 02:09:03.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:09:03.757" level="INFO">100</msg>
<status status="PASS" starttime="20210817 02:09:03.756" endtime="20210817 02:09:03.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:09:03.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:09:03.758" endtime="20210817 02:09:03.760"/>
</kw>
<status status="PASS" starttime="20210817 02:08:55.439" endtime="20210817 02:09:03.760"/>
</kw>
<msg timestamp="20210817 02:09:03.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:08:55.439" endtime="20210817 02:09:03.760"/>
</kw>
<msg timestamp="20210817 02:09:03.761" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210817 02:08:55.438" endtime="20210817 02:09:03.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:09:03.761" endtime="20210817 02:09:03.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:09:03.769" level="INFO">Running command 'ozone sh bucket setquota /63167-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:09:13.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:09:13.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 02:09:03.764" endtime="20210817 02:09:13.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:09:13.549" level="INFO"/>
<status status="PASS" starttime="20210817 02:09:13.549" endtime="20210817 02:09:13.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:09:13.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:09:13.550" endtime="20210817 02:09:13.551"/>
</kw>
<status status="PASS" starttime="20210817 02:09:03.763" endtime="20210817 02:09:13.551"/>
</kw>
<msg timestamp="20210817 02:09:13.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:09:03.763" endtime="20210817 02:09:13.551"/>
</kw>
<status status="PASS" starttime="20210817 02:09:03.762" endtime="20210817 02:09:13.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:09:13.556" level="INFO">Running command 'ozone sh bucket info /63167-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:09:20.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:09:20.173" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210817 02:09:13.554" endtime="20210817 02:09:20.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:09:20.175" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210817 02:09:20.174" endtime="20210817 02:09:20.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:09:20.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:09:20.175" endtime="20210817 02:09:20.176"/>
</kw>
<status status="PASS" starttime="20210817 02:09:13.553" endtime="20210817 02:09:20.176"/>
</kw>
<msg timestamp="20210817 02:09:20.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:09:13.553" endtime="20210817 02:09:20.176"/>
</kw>
<msg timestamp="20210817 02:09:20.177" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210817 02:09:13.552" endtime="20210817 02:09:20.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:09:20.177" endtime="20210817 02:09:20.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:09:20.184" level="INFO">Running command 'ozone sh bucket info /63167-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:09:27.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:09:27.703" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210817 02:09:20.181" endtime="20210817 02:09:27.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:09:27.705" level="INFO">1000</msg>
<status status="PASS" starttime="20210817 02:09:27.704" endtime="20210817 02:09:27.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:09:27.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:09:27.706" endtime="20210817 02:09:27.706"/>
</kw>
<status status="PASS" starttime="20210817 02:09:20.180" endtime="20210817 02:09:27.707"/>
</kw>
<msg timestamp="20210817 02:09:27.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:09:20.179" endtime="20210817 02:09:27.707"/>
</kw>
<msg timestamp="20210817 02:09:27.707" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210817 02:09:20.178" endtime="20210817 02:09:27.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:09:27.708" endtime="20210817 02:09:27.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:09:27.716" level="INFO">Running command 'ozone sh bucket list /63167-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:09:36.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 02:09:36.301" level="INFO">${output} = 63167-rpcwoscheme</msg>
<status status="PASS" starttime="20210817 02:09:27.713" endtime="20210817 02:09:36.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 02:09:36.302" level="INFO">63167-rpcwoscheme</msg>
<status status="PASS" starttime="20210817 02:09:36.301" endtime="20210817 02:09:36.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 02:09:36.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 02:09:36.302" endtime="20210817 02:09:36.303"/>
</kw>
<status status="PASS" starttime="20210817 02:09:27.712" endtime="20210817 02:09:36.304"/>
</kw>
<msg timestamp="20210817 02:09:36.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 02:09:27.711" endtime="20210817 02:09:36.304"/>
</kw>
<msg timestamp="20210817 02:09:36.304" level="INFO">${result} = 63167-rpcwoscheme</msg>
<status status="PASS" starttime="20210817 02:09:27.709" endtime="20210817 02:09:36.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210817 02:09:36.305" endtime="20210817 02:09:36.306"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 02:09:36.315" level="INFO">Running command 'ozone sh key put /63167-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 02:12:42.336" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210817 02:09:36.312" endtime="20210817 02:12:42.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.337" endtime="20210817 02:12:42.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.337" endtime="20210817 02:12:42.337"/>
</kw>
<status status="FAIL" starttime="20210817 02:09:36.311" endtime="20210817 02:12:42.338"/>
</kw>
<msg timestamp="20210817 02:12:42.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210817 02:09:36.310" endtime="20210817 02:12:42.338"/>
</kw>
<status status="FAIL" starttime="20210817 02:09:36.309" endtime="20210817 02:12:42.338"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.339" endtime="20210817 02:12:42.339"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.339" endtime="20210817 02:12:42.339"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.340" endtime="20210817 02:12:42.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.340" endtime="20210817 02:12:42.340"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.340" endtime="20210817 02:12:42.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.340" endtime="20210817 02:12:42.341"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.341" endtime="20210817 02:12:42.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.341" endtime="20210817 02:12:42.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.341" endtime="20210817 02:12:42.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.341" endtime="20210817 02:12:42.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.342" endtime="20210817 02:12:42.342"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.342" endtime="20210817 02:12:42.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.342" endtime="20210817 02:12:42.342"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.342" endtime="20210817 02:12:42.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.343" endtime="20210817 02:12:42.343"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.343" endtime="20210817 02:12:42.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.343" endtime="20210817 02:12:42.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.344" endtime="20210817 02:12:42.344"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.344" endtime="20210817 02:12:42.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.344" endtime="20210817 02:12:42.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.344" endtime="20210817 02:12:42.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.344" endtime="20210817 02:12:42.345"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.345" endtime="20210817 02:12:42.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.345" endtime="20210817 02:12:42.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.345" endtime="20210817 02:12:42.345"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.345" endtime="20210817 02:12:42.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.346" endtime="20210817 02:12:42.346"/>
</kw>
<status status="FAIL" starttime="20210817 02:09:36.306" endtime="20210817 02:12:42.347"/>
</kw>
<status status="FAIL" starttime="20210817 02:09:36.306" endtime="20210817 02:12:42.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.347" endtime="20210817 02:12:42.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.347" endtime="20210817 02:12:42.347"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.347" endtime="20210817 02:12:42.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.348" endtime="20210817 02:12:42.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.348" endtime="20210817 02:12:42.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.348" endtime="20210817 02:12:42.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.348" endtime="20210817 02:12:42.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.349" endtime="20210817 02:12:42.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.349" endtime="20210817 02:12:42.349"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.349" endtime="20210817 02:12:42.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.349" endtime="20210817 02:12:42.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.350" endtime="20210817 02:12:42.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.350" endtime="20210817 02:12:42.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.350" endtime="20210817 02:12:42.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.350" endtime="20210817 02:12:42.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.351" endtime="20210817 02:12:42.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.351" endtime="20210817 02:12:42.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.351" endtime="20210817 02:12:42.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.351" endtime="20210817 02:12:42.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.352" endtime="20210817 02:12:42.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.352" endtime="20210817 02:12:42.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.352" endtime="20210817 02:12:42.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.352" endtime="20210817 02:12:42.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210817 02:12:42.352" endtime="20210817 02:12:42.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.353" endtime="20210817 02:12:42.353"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210817 02:12:42.353" endtime="20210817 02:12:42.353"/>
</kw>
<status status="FAIL" starttime="20210817 02:07:42.403" endtime="20210817 02:12:42.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210817 02:07:42.335" endtime="20210817 02:12:42.354">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210817 01:47:16.029" endtime="20210817 02:12:42.355"/>
</suite>
<status status="FAIL" starttime="20210817 01:22:30.945" endtime="20210817 02:12:42.364"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:25.132" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:25.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:25.136" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210817 01:22:25.128" endtime="20210817 01:22:25.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:25.138" level="INFO">scm</msg>
<status status="PASS" starttime="20210817 01:22:25.137" endtime="20210817 01:22:25.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:25.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:25.138" endtime="20210817 01:22:25.139"/>
</kw>
<status status="PASS" starttime="20210817 01:22:25.127" endtime="20210817 01:22:25.139"/>
</kw>
<msg timestamp="20210817 01:22:25.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:25.127" endtime="20210817 01:22:25.139"/>
</kw>
<msg timestamp="20210817 01:22:25.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210817 01:22:25.126" endtime="20210817 01:22:25.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210817 01:22:25.140" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210817 01:22:25.140" endtime="20210817 01:22:25.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 01:22:25.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 01:22:25.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 01:22:25.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 01:22:25.143" endtime="20210817 01:22:25.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 01:22:25.154" level="INFO"/>
<status status="PASS" starttime="20210817 01:22:25.154" endtime="20210817 01:22:25.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 01:22:25.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 01:22:25.155" endtime="20210817 01:22:25.155"/>
</kw>
<status status="PASS" starttime="20210817 01:22:25.142" endtime="20210817 01:22:25.156"/>
</kw>
<msg timestamp="20210817 01:22:25.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 01:22:25.142" endtime="20210817 01:22:25.156"/>
</kw>
<status status="PASS" starttime="20210817 01:22:25.141" endtime="20210817 01:22:25.156"/>
</kw>
<status status="PASS" starttime="20210817 01:22:25.141" endtime="20210817 01:22:25.156"/>
</kw>
<status status="PASS" starttime="20210817 01:22:25.125" endtime="20210817 01:22:25.156"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210817 01:22:25.124" endtime="20210817 01:22:25.157"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210817 01:22:25.059" endtime="20210817 01:22:25.158"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3011518"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
