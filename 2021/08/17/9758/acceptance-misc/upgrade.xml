<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210817 22:43:06.128" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:34:25.373" level="INFO">${random} = 60605</msg>
<status status="PASS" starttime="20210817 22:34:25.372" endtime="20210817 22:34:25.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:34:25.376" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-60605 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:34:29.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:34:29.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:25.374" endtime="20210817 22:34:29.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:34:29.283" level="INFO"/>
<status status="PASS" starttime="20210817 22:34:29.282" endtime="20210817 22:34:29.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:34:29.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:34:29.283" endtime="20210817 22:34:29.284"/>
</kw>
<status status="PASS" starttime="20210817 22:34:25.374" endtime="20210817 22:34:29.284"/>
</kw>
<msg timestamp="20210817 22:34:29.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:34:25.374" endtime="20210817 22:34:29.284"/>
</kw>
<msg timestamp="20210817 22:34:29.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:25.373" endtime="20210817 22:34:29.285"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:34:29.285" endtime="20210817 22:34:29.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:34:25.371" endtime="20210817 22:34:29.285"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:34:25.318" endtime="20210817 22:34:29.286"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:34:12.397" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:34:14.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:34:14.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:12.396" endtime="20210817 22:34:14.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:34:14.913" level="INFO"/>
<status status="PASS" starttime="20210817 22:34:14.912" endtime="20210817 22:34:14.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:34:14.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:34:14.913" endtime="20210817 22:34:14.914"/>
</kw>
<status status="PASS" starttime="20210817 22:34:12.395" endtime="20210817 22:34:14.914"/>
</kw>
<msg timestamp="20210817 22:34:14.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:34:12.395" endtime="20210817 22:34:14.914"/>
</kw>
<msg timestamp="20210817 22:34:14.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:12.394" endtime="20210817 22:34:14.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:34:14.915" endtime="20210817 22:34:14.915"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:34:14.918" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:34:16.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:34:16.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:14.917" endtime="20210817 22:34:16.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:34:16.972" level="INFO"/>
<status status="PASS" starttime="20210817 22:34:16.972" endtime="20210817 22:34:16.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:34:16.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:34:16.973" endtime="20210817 22:34:16.973"/>
</kw>
<status status="PASS" starttime="20210817 22:34:14.916" endtime="20210817 22:34:16.974"/>
</kw>
<msg timestamp="20210817 22:34:16.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:34:14.916" endtime="20210817 22:34:16.974"/>
</kw>
<msg timestamp="20210817 22:34:16.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:14.915" endtime="20210817 22:34:16.974"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:34:16.974" endtime="20210817 22:34:16.975"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:34:16.980" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:34:21.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:34:21.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:16.978" endtime="20210817 22:34:21.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:34:21.717" level="INFO"/>
<status status="PASS" starttime="20210817 22:34:21.717" endtime="20210817 22:34:21.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:34:21.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:34:21.718" endtime="20210817 22:34:21.719"/>
</kw>
<status status="PASS" starttime="20210817 22:34:16.976" endtime="20210817 22:34:21.719"/>
</kw>
<msg timestamp="20210817 22:34:21.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:34:16.976" endtime="20210817 22:34:21.720"/>
</kw>
<msg timestamp="20210817 22:34:21.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:34:16.975" endtime="20210817 22:34:21.720"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:34:21.720" endtime="20210817 22:34:21.721"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:34:12.393" endtime="20210817 22:34:21.721"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210817 22:34:12.342" endtime="20210817 22:34:21.722"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:35:45.197" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:35:47.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:35:47.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:45.194" endtime="20210817 22:35:47.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:35:47.844" level="INFO"/>
<status status="PASS" starttime="20210817 22:35:47.843" endtime="20210817 22:35:47.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:35:47.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:35:47.844" endtime="20210817 22:35:47.844"/>
</kw>
<status status="PASS" starttime="20210817 22:35:45.194" endtime="20210817 22:35:47.845"/>
</kw>
<msg timestamp="20210817 22:35:47.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:35:45.193" endtime="20210817 22:35:47.845"/>
</kw>
<msg timestamp="20210817 22:35:47.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:45.192" endtime="20210817 22:35:47.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:35:47.846" endtime="20210817 22:35:47.846"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:35:47.850" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:35:50.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:35:50.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:47.848" endtime="20210817 22:35:50.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:35:50.287" level="INFO"/>
<status status="PASS" starttime="20210817 22:35:50.286" endtime="20210817 22:35:50.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:35:50.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:35:50.287" endtime="20210817 22:35:50.288"/>
</kw>
<status status="PASS" starttime="20210817 22:35:47.847" endtime="20210817 22:35:50.288"/>
</kw>
<msg timestamp="20210817 22:35:50.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:35:47.847" endtime="20210817 22:35:50.289"/>
</kw>
<msg timestamp="20210817 22:35:50.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:47.846" endtime="20210817 22:35:50.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:35:50.289" endtime="20210817 22:35:50.290"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:35:50.294" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:35:55.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:35:55.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:50.292" endtime="20210817 22:35:55.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:35:55.106" level="INFO"/>
<status status="PASS" starttime="20210817 22:35:55.105" endtime="20210817 22:35:55.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:35:55.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:35:55.106" endtime="20210817 22:35:55.106"/>
</kw>
<status status="PASS" starttime="20210817 22:35:50.291" endtime="20210817 22:35:55.107"/>
</kw>
<msg timestamp="20210817 22:35:55.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:35:50.291" endtime="20210817 22:35:55.107"/>
</kw>
<msg timestamp="20210817 22:35:55.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:50.290" endtime="20210817 22:35:55.107"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:35:55.108" endtime="20210817 22:35:55.108"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:35:45.191" endtime="20210817 22:35:55.108"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210817 22:35:45.127" endtime="20210817 22:35:55.110"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:35:58.893" level="INFO">${random} = 11781</msg>
<status status="PASS" starttime="20210817 22:35:58.893" endtime="20210817 22:35:58.894"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:35:58.899" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-11781 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:36:03.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:36:03.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:58.896" endtime="20210817 22:36:03.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:36:03.270" level="INFO"/>
<status status="PASS" starttime="20210817 22:36:03.270" endtime="20210817 22:36:03.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:36:03.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:36:03.271" endtime="20210817 22:36:03.271"/>
</kw>
<status status="PASS" starttime="20210817 22:35:58.895" endtime="20210817 22:36:03.272"/>
</kw>
<msg timestamp="20210817 22:36:03.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:35:58.895" endtime="20210817 22:36:03.272"/>
</kw>
<msg timestamp="20210817 22:36:03.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:58.894" endtime="20210817 22:36:03.272"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:36:03.272" endtime="20210817 22:36:03.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:35:58.892" endtime="20210817 22:36:03.273"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:35:58.829" endtime="20210817 22:36:03.274"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:35:36.613" level="INFO">${random} = 22402</msg>
<status status="PASS" starttime="20210817 22:35:36.612" endtime="20210817 22:35:36.613"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:35:36.619" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-22402 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:35:41.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:35:41.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:36.615" endtime="20210817 22:35:41.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:35:41.420" level="INFO"/>
<status status="PASS" starttime="20210817 22:35:41.419" endtime="20210817 22:35:41.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:35:41.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:35:41.420" endtime="20210817 22:35:41.421"/>
</kw>
<status status="PASS" starttime="20210817 22:35:36.615" endtime="20210817 22:35:41.422"/>
</kw>
<msg timestamp="20210817 22:35:41.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:35:36.614" endtime="20210817 22:35:41.422"/>
</kw>
<msg timestamp="20210817 22:35:41.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:35:36.613" endtime="20210817 22:35:41.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:35:41.422" endtime="20210817 22:35:41.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:35:36.611" endtime="20210817 22:35:41.423"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:35:36.548" endtime="20210817 22:35:41.425"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="32653"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:37:45.462" level="INFO">${random} = 08332</msg>
<status status="PASS" starttime="20210817 22:37:45.462" endtime="20210817 22:37:45.462"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:37:45.465" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-08332 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:37:49.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:37:49.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:45.464" endtime="20210817 22:37:49.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:37:49.357" level="INFO"/>
<status status="PASS" starttime="20210817 22:37:49.357" endtime="20210817 22:37:49.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:37:49.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:37:49.358" endtime="20210817 22:37:49.358"/>
</kw>
<status status="PASS" starttime="20210817 22:37:45.463" endtime="20210817 22:37:49.358"/>
</kw>
<msg timestamp="20210817 22:37:49.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:37:45.463" endtime="20210817 22:37:49.359"/>
</kw>
<msg timestamp="20210817 22:37:49.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:45.462" endtime="20210817 22:37:49.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:37:49.359" endtime="20210817 22:37:49.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:37:45.461" endtime="20210817 22:37:49.360"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:37:45.412" endtime="20210817 22:37:49.361"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:37:31.959" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:37:34.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:37:34.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:31.957" endtime="20210817 22:37:34.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:37:34.272" level="INFO"/>
<status status="PASS" starttime="20210817 22:37:34.272" endtime="20210817 22:37:34.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:37:34.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:37:34.273" endtime="20210817 22:37:34.273"/>
</kw>
<status status="PASS" starttime="20210817 22:37:31.957" endtime="20210817 22:37:34.274"/>
</kw>
<msg timestamp="20210817 22:37:34.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:37:31.957" endtime="20210817 22:37:34.281"/>
</kw>
<msg timestamp="20210817 22:37:34.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:31.956" endtime="20210817 22:37:34.282"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:37:34.282" endtime="20210817 22:37:34.282"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:37:34.289" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:37:36.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:37:36.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:34.284" endtime="20210817 22:37:36.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:37:36.441" level="INFO"/>
<status status="PASS" starttime="20210817 22:37:36.441" endtime="20210817 22:37:36.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:37:36.442" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:37:36.442" endtime="20210817 22:37:36.442"/>
</kw>
<status status="PASS" starttime="20210817 22:37:34.284" endtime="20210817 22:37:36.443"/>
</kw>
<msg timestamp="20210817 22:37:36.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:37:34.283" endtime="20210817 22:37:36.443"/>
</kw>
<msg timestamp="20210817 22:37:36.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:34.283" endtime="20210817 22:37:36.443"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:37:36.443" endtime="20210817 22:37:36.451"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:37:36.459" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:37:41.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:37:41.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:36.455" endtime="20210817 22:37:41.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:37:41.629" level="INFO"/>
<status status="PASS" starttime="20210817 22:37:41.628" endtime="20210817 22:37:41.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:37:41.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:37:41.629" endtime="20210817 22:37:41.630"/>
</kw>
<status status="PASS" starttime="20210817 22:37:36.452" endtime="20210817 22:37:41.630"/>
</kw>
<msg timestamp="20210817 22:37:41.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:37:36.452" endtime="20210817 22:37:41.630"/>
</kw>
<msg timestamp="20210817 22:37:41.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210817 22:37:36.452" endtime="20210817 22:37:41.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:37:41.631" endtime="20210817 22:37:41.631"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:37:31.955" endtime="20210817 22:37:41.632"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210817 22:37:31.902" endtime="20210817 22:37:41.633"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:17.938" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:39:17.937" endtime="20210817 22:39:17.938"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:17.939" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:17.939" endtime="20210817 22:39:17.939"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:17.940" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:17.939" endtime="20210817 22:39:17.940"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:17.941" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:17.940" endtime="20210817 22:39:17.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:17.942" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:17.942" level="INFO">${version_file_contents} = #Tue Aug 17 22:38:39 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239895480
clusterID=08f2e171-c437-4993-b491-aa620787b641
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210817 22:39:17.942" endtime="20210817 22:39:17.942"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:17.943" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:17.943" endtime="20210817 22:39:17.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:17.943" endtime="20210817 22:39:17.944"/>
</kw>
<status status="PASS" starttime="20210817 22:39:17.941" endtime="20210817 22:39:17.944"/>
</kw>
<status status="PASS" starttime="20210817 22:39:17.941" endtime="20210817 22:39:17.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:17.937" endtime="20210817 22:39:17.944"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:17.870" endtime="20210817 22:39:17.945"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210817 22:40:13.850" endtime="20210817 22:40:13.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:40:13.856" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:41:42.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:41:42.310" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210817 22:40:13.853" endtime="20210817 22:41:42.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:41:42.311" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210817 22:41:42.310" endtime="20210817 22:41:42.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:41:42.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:41:42.311" endtime="20210817 22:41:42.312"/>
</kw>
<status status="PASS" starttime="20210817 22:40:13.852" endtime="20210817 22:41:42.312"/>
</kw>
<msg timestamp="20210817 22:41:42.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:40:13.852" endtime="20210817 22:41:42.313"/>
</kw>
<msg timestamp="20210817 22:41:42.313" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210817 22:40:13.851" endtime="20210817 22:41:42.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:41:42.314" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210817 22:41:42.313" endtime="20210817 22:41:42.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:40:13.849" endtime="20210817 22:41:42.314"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210817 22:41:42.316" endtime="20210817 22:41:42.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:41:42.321" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:41:45.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:41:45.428" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210817 22:41:42.319" endtime="20210817 22:41:45.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:41:45.429" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210817 22:41:45.428" endtime="20210817 22:41:45.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:41:45.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:41:45.429" endtime="20210817 22:41:45.430"/>
</kw>
<status status="PASS" starttime="20210817 22:41:42.318" endtime="20210817 22:41:45.430"/>
</kw>
<msg timestamp="20210817 22:41:45.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:41:42.317" endtime="20210817 22:41:45.431"/>
</kw>
<msg timestamp="20210817 22:41:45.431" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210817 22:41:42.317" endtime="20210817 22:41:45.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:41:45.432" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210817 22:41:45.431" endtime="20210817 22:41:45.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:41:42.315" endtime="20210817 22:41:45.432"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210817 22:40:13.785" endtime="20210817 22:41:45.433"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:49.426" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210817 22:41:49.425" endtime="20210817 22:41:49.426"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:49.427" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:41:49.426" endtime="20210817 22:41:49.427"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:41:49.427" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:41:49.427" endtime="20210817 22:41:49.428"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:41:49.428" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210817 22:41:49.428" endtime="20210817 22:41:49.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:41:49.429" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:41:49.430" level="INFO">${version_file_contents} = #Tue Aug 17 22:40:21 UTC 2021
cTime=1629239806631
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
nodeType=SCM
scmUuid=22f496e6-982c-41f8-82c5-94c451c72484
layoutVersion=2
</msg>
<status status="PASS" starttime="20210817 22:41:49.429" endtime="20210817 22:41:49.430"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:41:49.430" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210817 22:41:49.430" endtime="20210817 22:41:49.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:41:49.431" endtime="20210817 22:41:49.431"/>
</kw>
<status status="PASS" starttime="20210817 22:41:49.429" endtime="20210817 22:41:49.431"/>
</kw>
<status status="PASS" starttime="20210817 22:41:49.428" endtime="20210817 22:41:49.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:41:49.424" endtime="20210817 22:41:49.431"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:41:49.364" endtime="20210817 22:41:49.432"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:53.354" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:41:53.353" endtime="20210817 22:41:53.354"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:53.355" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:41:53.355" endtime="20210817 22:41:53.355"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:41:53.356" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:41:53.355" endtime="20210817 22:41:53.356"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:41:53.356" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:41:53.356" endtime="20210817 22:41:53.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:41:53.358" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:41:53.358" level="INFO">${version_file_contents} = #Tue Aug 17 22:40:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239895480
clusterID=08f2e171-c437-4993-b491-aa620787b641
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210817 22:41:53.358" endtime="20210817 22:41:53.358"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:41:53.359" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210817 22:41:53.359" endtime="20210817 22:41:53.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:41:53.359" endtime="20210817 22:41:53.360"/>
</kw>
<status status="PASS" starttime="20210817 22:41:53.357" endtime="20210817 22:41:53.361"/>
</kw>
<status status="PASS" starttime="20210817 22:41:53.357" endtime="20210817 22:41:53.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:41:53.352" endtime="20210817 22:41:53.362"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:41:53.285" endtime="20210817 22:41:53.363"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:57.339" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:41:57.339" endtime="20210817 22:41:57.340"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:41:57.340" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:41:57.340" endtime="20210817 22:41:57.340"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:41:57.341" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:41:57.340" endtime="20210817 22:41:57.341"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:41:57.341" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:41:57.341" endtime="20210817 22:41:57.342"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:41:57.343" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:41:57.343" level="INFO">${version_file_contents} = #Tue Aug 17 22:40:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239893570
clusterID=8b72f30a-3056-4827-9a10-b280beb5c5c9
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210817 22:41:57.342" endtime="20210817 22:41:57.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:41:57.344" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210817 22:41:57.343" endtime="20210817 22:41:57.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:41:57.344" endtime="20210817 22:41:57.345"/>
</kw>
<status status="PASS" starttime="20210817 22:41:57.342" endtime="20210817 22:41:57.345"/>
</kw>
<status status="PASS" starttime="20210817 22:41:57.342" endtime="20210817 22:41:57.345"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:41:57.338" endtime="20210817 22:41:57.345"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:41:57.272" endtime="20210817 22:41:57.346"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:01.278" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:42:01.278" endtime="20210817 22:42:01.278"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:01.279" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:42:01.278" endtime="20210817 22:42:01.279"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:42:01.279" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:42:01.279" endtime="20210817 22:42:01.280"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:42:01.280" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:42:01.280" endtime="20210817 22:42:01.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:42:01.282" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:42:01.283" level="INFO">${version_file_contents} = #Tue Aug 17 22:40:32 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239895405
clusterID=11f225eb-d376-481e-b988-45f23ae8f4a3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210817 22:42:01.282" endtime="20210817 22:42:01.283"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:42:01.284" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210817 22:42:01.283" endtime="20210817 22:42:01.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:01.284" endtime="20210817 22:42:01.284"/>
</kw>
<status status="PASS" starttime="20210817 22:42:01.281" endtime="20210817 22:42:01.285"/>
</kw>
<status status="PASS" starttime="20210817 22:42:01.280" endtime="20210817 22:42:01.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:01.277" endtime="20210817 22:42:01.285"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:42:01.212" endtime="20210817 22:42:01.286"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:05.236" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:42:05.235" endtime="20210817 22:42:05.236"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:05.236" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:42:05.236" endtime="20210817 22:42:05.236"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:42:05.237" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:42:05.237" endtime="20210817 22:42:05.237"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:42:05.238" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:42:05.237" endtime="20210817 22:42:05.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:42:05.240" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:42:05.240" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:02 UTC 2021
cTime=1629239805580
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=4ad2f50d-0ab8-48d2-a5ae-f8e31b619d24
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:42:05.239" endtime="20210817 22:42:05.240"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:42:05.241" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:42:05.240" endtime="20210817 22:42:05.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:05.241" endtime="20210817 22:42:05.241"/>
</kw>
<status status="PASS" starttime="20210817 22:42:05.239" endtime="20210817 22:42:05.242"/>
</kw>
<status status="PASS" starttime="20210817 22:42:05.238" endtime="20210817 22:42:05.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:05.234" endtime="20210817 22:42:05.242"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:42:05.167" endtime="20210817 22:42:05.243"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:09.181" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:42:09.180" endtime="20210817 22:42:09.181"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:09.182" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:42:09.181" endtime="20210817 22:42:09.182"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:42:09.183" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:42:09.183" endtime="20210817 22:42:09.183"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:42:09.184" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:42:09.184" endtime="20210817 22:42:09.184"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:42:09.187" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:42:09.187" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:03 UTC 2021
cTime=1629239806693
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=7cf33014-3bb6-4992-9714-cf3bf92ccf67
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:42:09.186" endtime="20210817 22:42:09.187"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:42:09.188" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:42:09.187" endtime="20210817 22:42:09.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:09.188" endtime="20210817 22:42:09.188"/>
</kw>
<status status="PASS" starttime="20210817 22:42:09.185" endtime="20210817 22:42:09.189"/>
</kw>
<status status="PASS" starttime="20210817 22:42:09.185" endtime="20210817 22:42:09.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:09.180" endtime="20210817 22:42:09.189"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:42:09.117" endtime="20210817 22:42:09.190"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:13.107" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:42:13.106" endtime="20210817 22:42:13.107"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:42:13.108" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:42:13.107" endtime="20210817 22:42:13.108"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:42:13.109" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:42:13.108" endtime="20210817 22:42:13.109"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:42:13.110" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:42:13.109" endtime="20210817 22:42:13.110"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:42:13.111" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:42:13.111" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:03 UTC 2021
cTime=1629239806498
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=36a5c855-488f-431b-a2a6-bfbb6b97fbbd
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:42:13.111" endtime="20210817 22:42:13.111"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:42:13.112" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:42:13.112" endtime="20210817 22:42:13.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:13.112" endtime="20210817 22:42:13.113"/>
</kw>
<status status="PASS" starttime="20210817 22:42:13.110" endtime="20210817 22:42:13.113"/>
</kw>
<status status="PASS" starttime="20210817 22:42:13.110" endtime="20210817 22:42:13.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:13.105" endtime="20210817 22:42:13.113"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:42:13.041" endtime="20210817 22:42:13.115"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:42:16.981" level="INFO">${random} = 93544</msg>
<status status="PASS" starttime="20210817 22:42:16.980" endtime="20210817 22:42:16.981"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:16.987" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-93544 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:21.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:21.316" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:16.983" endtime="20210817 22:42:21.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:21.318" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:21.317" endtime="20210817 22:42:21.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:21.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:21.318" endtime="20210817 22:42:21.319"/>
</kw>
<status status="PASS" starttime="20210817 22:42:16.982" endtime="20210817 22:42:21.320"/>
</kw>
<msg timestamp="20210817 22:42:21.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:16.982" endtime="20210817 22:42:21.320"/>
</kw>
<msg timestamp="20210817 22:42:21.320" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:16.981" endtime="20210817 22:42:21.320"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:21.320" endtime="20210817 22:42:21.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:16.979" endtime="20210817 22:42:21.321"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:42:16.912" endtime="20210817 22:42:21.323"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:42:25.276" level="INFO">${random} = 73567</msg>
<status status="PASS" starttime="20210817 22:42:25.276" endtime="20210817 22:42:25.276"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:25.282" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-73567 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:29.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:29.680" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:25.278" endtime="20210817 22:42:29.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:29.681" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:29.680" endtime="20210817 22:42:29.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:29.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:29.681" endtime="20210817 22:42:29.682"/>
</kw>
<status status="PASS" starttime="20210817 22:42:25.278" endtime="20210817 22:42:29.682"/>
</kw>
<msg timestamp="20210817 22:42:29.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:25.277" endtime="20210817 22:42:29.682"/>
</kw>
<msg timestamp="20210817 22:42:29.682" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:25.277" endtime="20210817 22:42:29.682"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:29.683" endtime="20210817 22:42:29.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:25.275" endtime="20210817 22:42:29.683"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:42:25.212" endtime="20210817 22:42:29.685"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:21.849" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:39:21.848" endtime="20210817 22:39:21.849"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:21.850" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:21.849" endtime="20210817 22:39:21.850"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:21.850" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:21.850" endtime="20210817 22:39:21.850"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:21.851" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:21.851" endtime="20210817 22:39:21.851"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:21.853" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:21.853" level="INFO">${version_file_contents} = #Tue Aug 17 22:38:39 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239893570
clusterID=8b72f30a-3056-4827-9a10-b280beb5c5c9
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210817 22:39:21.852" endtime="20210817 22:39:21.853"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:21.854" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:21.853" endtime="20210817 22:39:21.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:21.854" endtime="20210817 22:39:21.854"/>
</kw>
<status status="PASS" starttime="20210817 22:39:21.852" endtime="20210817 22:39:21.854"/>
</kw>
<status status="PASS" starttime="20210817 22:39:21.851" endtime="20210817 22:39:21.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:21.847" endtime="20210817 22:39:21.855"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:21.782" endtime="20210817 22:39:21.856"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:33.606" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:36.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:36.170" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:33.603" endtime="20210817 22:42:36.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:36.171" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:36.171" endtime="20210817 22:42:36.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:36.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:36.172" endtime="20210817 22:42:36.173"/>
</kw>
<status status="PASS" starttime="20210817 22:42:33.602" endtime="20210817 22:42:36.173"/>
</kw>
<msg timestamp="20210817 22:42:36.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:33.602" endtime="20210817 22:42:36.173"/>
</kw>
<msg timestamp="20210817 22:42:36.174" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:33.601" endtime="20210817 22:42:36.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:36.174" endtime="20210817 22:42:36.174"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:36.179" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:38.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:38.653" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:36.176" endtime="20210817 22:42:38.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:38.655" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:38.654" endtime="20210817 22:42:38.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:38.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:38.655" endtime="20210817 22:42:38.656"/>
</kw>
<status status="PASS" starttime="20210817 22:42:36.176" endtime="20210817 22:42:38.656"/>
</kw>
<msg timestamp="20210817 22:42:38.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:36.175" endtime="20210817 22:42:38.657"/>
</kw>
<msg timestamp="20210817 22:42:38.657" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:36.175" endtime="20210817 22:42:38.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:38.657" endtime="20210817 22:42:38.657"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:38.661" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:43.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:43.397" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:38.659" endtime="20210817 22:42:43.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:43.399" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:43.398" endtime="20210817 22:42:43.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:43.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:43.399" endtime="20210817 22:42:43.400"/>
</kw>
<status status="PASS" starttime="20210817 22:42:38.659" endtime="20210817 22:42:43.400"/>
</kw>
<msg timestamp="20210817 22:42:43.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:38.658" endtime="20210817 22:42:43.400"/>
</kw>
<msg timestamp="20210817 22:42:43.401" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:38.658" endtime="20210817 22:42:43.401"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:43.401" endtime="20210817 22:42:43.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:33.600" endtime="20210817 22:42:43.402"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210817 22:42:33.533" endtime="20210817 22:42:43.403"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:42:47.323" level="INFO">${random} = 32952</msg>
<status status="PASS" starttime="20210817 22:42:47.323" endtime="20210817 22:42:47.323"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:42:47.329" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-32952 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:42:51.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:42:51.720" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:47.326" endtime="20210817 22:42:51.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:42:51.721" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:51.721" endtime="20210817 22:42:51.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:42:51.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:42:51.722" endtime="20210817 22:42:51.723"/>
</kw>
<status status="PASS" starttime="20210817 22:42:47.325" endtime="20210817 22:42:51.723"/>
</kw>
<msg timestamp="20210817 22:42:51.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:42:47.324" endtime="20210817 22:42:51.724"/>
</kw>
<msg timestamp="20210817 22:42:51.724" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:42:47.324" endtime="20210817 22:42:51.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:42:51.725" endtime="20210817 22:42:51.725"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:42:47.322" endtime="20210817 22:42:51.726"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:42:47.262" endtime="20210817 22:42:51.727"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:25.746" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210817 22:39:25.745" endtime="20210817 22:39:25.746"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:25.747" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:25.746" endtime="20210817 22:39:25.747"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:25.748" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:25.747" endtime="20210817 22:39:25.748"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:25.748" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:25.748" endtime="20210817 22:39:25.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:25.750" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:25.751" level="INFO">${version_file_contents} = #Tue Aug 17 22:38:40 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1629239895405
clusterID=11f225eb-d376-481e-b988-45f23ae8f4a3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210817 22:39:25.750" endtime="20210817 22:39:25.751"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:25.751" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:25.751" endtime="20210817 22:39:25.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:25.752" endtime="20210817 22:39:25.752"/>
</kw>
<status status="PASS" starttime="20210817 22:39:25.749" endtime="20210817 22:39:25.752"/>
</kw>
<status status="PASS" starttime="20210817 22:39:25.749" endtime="20210817 22:39:25.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:25.744" endtime="20210817 22:39:25.753"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:25.683" endtime="20210817 22:39:25.753"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:29.664" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:39:29.663" endtime="20210817 22:39:29.664"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:29.665" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:29.664" endtime="20210817 22:39:29.665"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:29.665" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:29.665" endtime="20210817 22:39:29.665"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:29.666" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:29.666" endtime="20210817 22:39:29.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:29.667" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:29.668" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:02 UTC 2021
cTime=1629239805580
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=4ad2f50d-0ab8-48d2-a5ae-f8e31b619d24
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:39:29.667" endtime="20210817 22:39:29.668"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:29.668" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:29.668" endtime="20210817 22:39:29.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:29.669" endtime="20210817 22:39:29.669"/>
</kw>
<status status="PASS" starttime="20210817 22:39:29.667" endtime="20210817 22:39:29.669"/>
</kw>
<status status="PASS" starttime="20210817 22:39:29.666" endtime="20210817 22:39:29.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:29.663" endtime="20210817 22:39:29.670"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:29.594" endtime="20210817 22:39:29.670"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:33.559" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:39:33.559" endtime="20210817 22:39:33.560"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:33.560" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:33.560" endtime="20210817 22:39:33.560"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:33.561" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:33.560" endtime="20210817 22:39:33.561"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:33.561" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:33.561" endtime="20210817 22:39:33.562"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:33.563" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:33.563" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:03 UTC 2021
cTime=1629239806693
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=7cf33014-3bb6-4992-9714-cf3bf92ccf67
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:39:33.563" endtime="20210817 22:39:33.563"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:33.564" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:33.564" endtime="20210817 22:39:33.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:33.565" endtime="20210817 22:39:33.565"/>
</kw>
<status status="PASS" starttime="20210817 22:39:33.562" endtime="20210817 22:39:33.565"/>
</kw>
<status status="PASS" starttime="20210817 22:39:33.562" endtime="20210817 22:39:33.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:33.558" endtime="20210817 22:39:33.565"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:33.493" endtime="20210817 22:39:33.566"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:37.514" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210817 22:39:37.513" endtime="20210817 22:39:37.514"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:37.515" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:37.514" endtime="20210817 22:39:37.515"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:37.515" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:37.515" endtime="20210817 22:39:37.516"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:37.516" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:37.516" endtime="20210817 22:39:37.516"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:37.517" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:37.518" level="INFO">${version_file_contents} = #Tue Aug 17 22:37:03 UTC 2021
cTime=1629239806498
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
omUuid=36a5c855-488f-431b-a2a6-bfbb6b97fbbd
nodeType=OM
scmUuid=22f496e6-982c-41f8-82c5-94c451c7248...</msg>
<status status="PASS" starttime="20210817 22:39:37.517" endtime="20210817 22:39:37.518"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:37.518" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:37.518" endtime="20210817 22:39:37.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:37.519" endtime="20210817 22:39:37.519"/>
</kw>
<status status="PASS" starttime="20210817 22:39:37.517" endtime="20210817 22:39:37.520"/>
</kw>
<status status="PASS" starttime="20210817 22:39:37.516" endtime="20210817 22:39:37.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:37.513" endtime="20210817 22:39:37.520"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:37.451" endtime="20210817 22:39:37.521"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:39:41.400" level="INFO">${random} = 11401</msg>
<status status="PASS" starttime="20210817 22:39:41.399" endtime="20210817 22:39:41.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:39:41.406" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-11401 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:39:46.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:39:46.546" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:41.402" endtime="20210817 22:39:46.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:39:46.548" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:46.547" endtime="20210817 22:39:46.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:39:46.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:39:46.548" endtime="20210817 22:39:46.549"/>
</kw>
<status status="PASS" starttime="20210817 22:39:41.401" endtime="20210817 22:39:46.549"/>
</kw>
<msg timestamp="20210817 22:39:46.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:39:41.401" endtime="20210817 22:39:46.549"/>
</kw>
<msg timestamp="20210817 22:39:46.550" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:41.400" endtime="20210817 22:39:46.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:46.550" endtime="20210817 22:39:46.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:41.398" endtime="20210817 22:39:46.551"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:39:41.328" endtime="20210817 22:39:46.552"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:39:50.465" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:39:53.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:39:53.236" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:50.461" endtime="20210817 22:39:53.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:39:53.238" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:53.237" endtime="20210817 22:39:53.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:39:53.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:39:53.238" endtime="20210817 22:39:53.239"/>
</kw>
<status status="PASS" starttime="20210817 22:39:50.460" endtime="20210817 22:39:53.239"/>
</kw>
<msg timestamp="20210817 22:39:53.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:39:50.460" endtime="20210817 22:39:53.239"/>
</kw>
<msg timestamp="20210817 22:39:53.240" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:50.459" endtime="20210817 22:39:53.240"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:53.240" endtime="20210817 22:39:53.241"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:39:53.253" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:39:55.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:39:55.905" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:53.247" endtime="20210817 22:39:55.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:39:55.906" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:55.905" endtime="20210817 22:39:55.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:39:55.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:39:55.906" endtime="20210817 22:39:55.907"/>
</kw>
<status status="PASS" starttime="20210817 22:39:53.246" endtime="20210817 22:39:55.907"/>
</kw>
<msg timestamp="20210817 22:39:55.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:39:53.243" endtime="20210817 22:39:55.908"/>
</kw>
<msg timestamp="20210817 22:39:55.908" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:53.242" endtime="20210817 22:39:55.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:55.908" endtime="20210817 22:39:55.909"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:39:55.916" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:40:01.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:40:01.632" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:55.911" endtime="20210817 22:40:01.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:40:01.634" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:40:01.633" endtime="20210817 22:40:01.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:40:01.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:40:01.634" endtime="20210817 22:40:01.635"/>
</kw>
<status status="PASS" starttime="20210817 22:39:55.910" endtime="20210817 22:40:01.635"/>
</kw>
<msg timestamp="20210817 22:40:01.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:39:55.910" endtime="20210817 22:40:01.635"/>
</kw>
<msg timestamp="20210817 22:40:01.636" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:39:55.909" endtime="20210817 22:40:01.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:40:01.636" endtime="20210817 22:40:01.637"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:50.458" endtime="20210817 22:40:01.637"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210817 22:39:50.385" endtime="20210817 22:40:01.638"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210817 22:40:05.472" level="INFO">${random} = 79510</msg>
<status status="PASS" starttime="20210817 22:40:05.472" endtime="20210817 22:40:05.472"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210817 22:40:05.478" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-79510 2&gt;&amp;1'.</msg>
<msg timestamp="20210817 22:40:10.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210817 22:40:10.018" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:40:05.474" endtime="20210817 22:40:10.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210817 22:40:10.019" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:40:10.018" endtime="20210817 22:40:10.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210817 22:40:10.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210817 22:40:10.019" endtime="20210817 22:40:10.020"/>
</kw>
<status status="PASS" starttime="20210817 22:40:05.474" endtime="20210817 22:40:10.021"/>
</kw>
<msg timestamp="20210817 22:40:10.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210817 22:40:05.473" endtime="20210817 22:40:10.021"/>
</kw>
<msg timestamp="20210817 22:40:10.021" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210817 22:40:05.472" endtime="20210817 22:40:10.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:40:10.022" endtime="20210817 22:40:10.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:40:05.471" endtime="20210817 22:40:10.022"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210817 22:40:05.409" endtime="20210817 22:40:10.024"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:13.962" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210817 22:39:13.961" endtime="20210817 22:39:13.962"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210817 22:39:13.963" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210817 22:39:13.962" endtime="20210817 22:39:13.963"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210817 22:39:13.963" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210817 22:39:13.963" endtime="20210817 22:39:13.963"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210817 22:39:13.964" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210817 22:39:13.964" endtime="20210817 22:39:13.964"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210817 22:39:13.967" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210817 22:39:13.967" level="INFO">${version_file_contents} = #Tue Aug 17 22:36:46 UTC 2021
cTime=1629239806631
clusterID=CID-c538a6a1-8887-4db4-a8ed-39732e2c780d
nodeType=SCM
scmUuid=22f496e6-982c-41f8-82c5-94c451c72484
layoutVersion=0
</msg>
<status status="PASS" starttime="20210817 22:39:13.966" endtime="20210817 22:39:13.967"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210817 22:39:13.968" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210817 22:39:13.967" endtime="20210817 22:39:13.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210817 22:39:13.968" endtime="20210817 22:39:13.968"/>
</kw>
<status status="PASS" starttime="20210817 22:39:13.965" endtime="20210817 22:39:13.969"/>
</kw>
<status status="PASS" starttime="20210817 22:39:13.964" endtime="20210817 22:39:13.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210817 22:39:13.960" endtime="20210817 22:39:13.969"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210817 22:39:13.895" endtime="20210817 22:39:13.970"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="150669"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="183322"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
