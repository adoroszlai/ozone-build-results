<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210811 23:48:22.174" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:40:49.263" level="INFO">${random} = 10695</msg>
<status status="PASS" starttime="20210811 23:40:49.262" endtime="20210811 23:40:49.263"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:40:49.265" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-10695 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:40:52.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:40:52.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:49.264" endtime="20210811 23:40:52.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:40:52.474" level="INFO"/>
<status status="PASS" starttime="20210811 23:40:52.474" endtime="20210811 23:40:52.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:40:52.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:40:52.475" endtime="20210811 23:40:52.475"/>
</kw>
<status status="PASS" starttime="20210811 23:40:49.264" endtime="20210811 23:40:52.475"/>
</kw>
<msg timestamp="20210811 23:40:52.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:40:49.264" endtime="20210811 23:40:52.476"/>
</kw>
<msg timestamp="20210811 23:40:52.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:49.263" endtime="20210811 23:40:52.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:40:52.476" endtime="20210811 23:40:52.476"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:40:49.262" endtime="20210811 23:40:52.476"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:40:49.227" endtime="20210811 23:40:52.477"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:40:37.861" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:40:40.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:40:40.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:37.860" endtime="20210811 23:40:40.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:40:40.170" level="INFO"/>
<status status="PASS" starttime="20210811 23:40:40.169" endtime="20210811 23:40:40.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:40:40.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:40:40.170" endtime="20210811 23:40:40.170"/>
</kw>
<status status="PASS" starttime="20210811 23:40:37.859" endtime="20210811 23:40:40.171"/>
</kw>
<msg timestamp="20210811 23:40:40.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:40:37.859" endtime="20210811 23:40:40.171"/>
</kw>
<msg timestamp="20210811 23:40:40.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:37.859" endtime="20210811 23:40:40.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:40:40.171" endtime="20210811 23:40:40.171"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:40:40.174" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:40:41.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:40:41.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:40.173" endtime="20210811 23:40:41.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:40:41.914" level="INFO"/>
<status status="PASS" starttime="20210811 23:40:41.914" endtime="20210811 23:40:41.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:40:41.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:40:41.914" endtime="20210811 23:40:41.915"/>
</kw>
<status status="PASS" starttime="20210811 23:40:40.172" endtime="20210811 23:40:41.915"/>
</kw>
<msg timestamp="20210811 23:40:41.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:40:40.172" endtime="20210811 23:40:41.915"/>
</kw>
<msg timestamp="20210811 23:40:41.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:40.171" endtime="20210811 23:40:41.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:40:41.916" endtime="20210811 23:40:41.916"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:40:41.920" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:40:46.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:40:46.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:41.919" endtime="20210811 23:40:46.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:40:46.251" level="INFO"/>
<status status="PASS" starttime="20210811 23:40:46.251" endtime="20210811 23:40:46.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:40:46.252" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:40:46.251" endtime="20210811 23:40:46.252"/>
</kw>
<status status="PASS" starttime="20210811 23:40:41.917" endtime="20210811 23:40:46.252"/>
</kw>
<msg timestamp="20210811 23:40:46.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:40:41.917" endtime="20210811 23:40:46.252"/>
</kw>
<msg timestamp="20210811 23:40:46.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:40:41.916" endtime="20210811 23:40:46.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:40:46.253" endtime="20210811 23:40:46.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:40:37.858" endtime="20210811 23:40:46.253"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210811 23:40:37.820" endtime="20210811 23:40:46.254"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:41:54.864" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:41:56.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:41:56.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:54.861" endtime="20210811 23:41:56.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:41:56.866" level="INFO"/>
<status status="PASS" starttime="20210811 23:41:56.865" endtime="20210811 23:41:56.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:41:56.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:41:56.866" endtime="20210811 23:41:56.866"/>
</kw>
<status status="PASS" starttime="20210811 23:41:54.861" endtime="20210811 23:41:56.867"/>
</kw>
<msg timestamp="20210811 23:41:56.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:41:54.861" endtime="20210811 23:41:56.867"/>
</kw>
<msg timestamp="20210811 23:41:56.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:54.860" endtime="20210811 23:41:56.867"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:41:56.867" endtime="20210811 23:41:56.868"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:41:56.872" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:41:58.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:41:58.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:56.869" endtime="20210811 23:41:58.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:41:58.887" level="INFO"/>
<status status="PASS" starttime="20210811 23:41:58.886" endtime="20210811 23:41:58.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:41:58.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:41:58.887" endtime="20210811 23:41:58.887"/>
</kw>
<status status="PASS" starttime="20210811 23:41:56.868" endtime="20210811 23:41:58.888"/>
</kw>
<msg timestamp="20210811 23:41:58.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:41:56.868" endtime="20210811 23:41:58.888"/>
</kw>
<msg timestamp="20210811 23:41:58.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:56.868" endtime="20210811 23:41:58.888"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:41:58.888" endtime="20210811 23:41:58.889"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:41:58.892" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:42:02.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:42:02.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:58.890" endtime="20210811 23:42:02.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:42:03.001" level="INFO"/>
<status status="PASS" starttime="20210811 23:42:03.000" endtime="20210811 23:42:03.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:42:03.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:42:03.001" endtime="20210811 23:42:03.001"/>
</kw>
<status status="PASS" starttime="20210811 23:41:58.890" endtime="20210811 23:42:03.002"/>
</kw>
<msg timestamp="20210811 23:42:03.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:41:58.889" endtime="20210811 23:42:03.002"/>
</kw>
<msg timestamp="20210811 23:42:03.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:58.889" endtime="20210811 23:42:03.002"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:42:03.002" endtime="20210811 23:42:03.002"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:41:54.859" endtime="20210811 23:42:03.003"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210811 23:41:54.815" endtime="20210811 23:42:03.004"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:42:06.134" level="INFO">${random} = 02441</msg>
<status status="PASS" starttime="20210811 23:42:06.133" endtime="20210811 23:42:06.134"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:42:06.138" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-02441 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:42:09.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:42:09.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:42:06.135" endtime="20210811 23:42:09.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:42:09.682" level="INFO"/>
<status status="PASS" starttime="20210811 23:42:09.681" endtime="20210811 23:42:09.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:42:09.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:42:09.682" endtime="20210811 23:42:09.682"/>
</kw>
<status status="PASS" starttime="20210811 23:42:06.135" endtime="20210811 23:42:09.683"/>
</kw>
<msg timestamp="20210811 23:42:09.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:42:06.135" endtime="20210811 23:42:09.683"/>
</kw>
<msg timestamp="20210811 23:42:09.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:42:06.134" endtime="20210811 23:42:09.683"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:42:09.683" endtime="20210811 23:42:09.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:42:06.132" endtime="20210811 23:42:09.684"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:42:06.086" endtime="20210811 23:42:09.685"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:41:47.717" level="INFO">${random} = 63915</msg>
<status status="PASS" starttime="20210811 23:41:47.717" endtime="20210811 23:41:47.717"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:41:47.722" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-63915 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:41:51.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:41:51.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:47.719" endtime="20210811 23:41:51.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:41:51.698" level="INFO"/>
<status status="PASS" starttime="20210811 23:41:51.697" endtime="20210811 23:41:51.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:41:51.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:41:51.698" endtime="20210811 23:41:51.699"/>
</kw>
<status status="PASS" starttime="20210811 23:41:47.719" endtime="20210811 23:41:51.699"/>
</kw>
<msg timestamp="20210811 23:41:51.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:41:47.718" endtime="20210811 23:41:51.699"/>
</kw>
<msg timestamp="20210811 23:41:51.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:41:47.717" endtime="20210811 23:41:51.699"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:41:51.700" endtime="20210811 23:41:51.700"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:41:47.716" endtime="20210811 23:41:51.700"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:41:47.671" endtime="20210811 23:41:51.702"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="27503"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:43:34.187" level="INFO">${random} = 57628</msg>
<status status="PASS" starttime="20210811 23:43:34.186" endtime="20210811 23:43:34.187"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:43:34.189" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-57628 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:43:37.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:43:37.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:34.188" endtime="20210811 23:43:37.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:43:37.269" level="INFO"/>
<status status="PASS" starttime="20210811 23:43:37.269" endtime="20210811 23:43:37.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:43:37.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:43:37.270" endtime="20210811 23:43:37.270"/>
</kw>
<status status="PASS" starttime="20210811 23:43:34.188" endtime="20210811 23:43:37.270"/>
</kw>
<msg timestamp="20210811 23:43:37.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:43:34.188" endtime="20210811 23:43:37.270"/>
</kw>
<msg timestamp="20210811 23:43:37.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:34.187" endtime="20210811 23:43:37.271"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:43:37.271" endtime="20210811 23:43:37.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:43:34.185" endtime="20210811 23:43:37.271"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:43:34.146" endtime="20210811 23:43:37.273"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:43:22.638" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:43:24.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:43:24.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:22.636" endtime="20210811 23:43:24.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:43:24.637" level="INFO"/>
<status status="PASS" starttime="20210811 23:43:24.635" endtime="20210811 23:43:24.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:43:24.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:43:24.638" endtime="20210811 23:43:24.638"/>
</kw>
<status status="PASS" starttime="20210811 23:43:22.636" endtime="20210811 23:43:24.638"/>
</kw>
<msg timestamp="20210811 23:43:24.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:43:22.636" endtime="20210811 23:43:24.639"/>
</kw>
<msg timestamp="20210811 23:43:24.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:22.635" endtime="20210811 23:43:24.639"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:43:24.639" endtime="20210811 23:43:24.639"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:43:24.652" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:43:26.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:43:26.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:24.640" endtime="20210811 23:43:26.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:43:26.636" level="INFO"/>
<status status="PASS" starttime="20210811 23:43:26.635" endtime="20210811 23:43:26.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:43:26.636" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:43:26.636" endtime="20210811 23:43:26.636"/>
</kw>
<status status="PASS" starttime="20210811 23:43:24.640" endtime="20210811 23:43:26.637"/>
</kw>
<msg timestamp="20210811 23:43:26.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:43:24.640" endtime="20210811 23:43:26.637"/>
</kw>
<msg timestamp="20210811 23:43:26.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:24.639" endtime="20210811 23:43:26.637"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:43:26.637" endtime="20210811 23:43:26.637"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:43:26.641" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:43:30.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:43:30.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:26.640" endtime="20210811 23:43:30.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:43:30.967" level="INFO"/>
<status status="PASS" starttime="20210811 23:43:30.966" endtime="20210811 23:43:30.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:43:30.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:43:30.967" endtime="20210811 23:43:30.968"/>
</kw>
<status status="PASS" starttime="20210811 23:43:26.638" endtime="20210811 23:43:30.968"/>
</kw>
<msg timestamp="20210811 23:43:30.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:43:26.638" endtime="20210811 23:43:30.968"/>
</kw>
<msg timestamp="20210811 23:43:30.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 23:43:26.637" endtime="20210811 23:43:30.968"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:43:30.968" endtime="20210811 23:43:30.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:43:22.635" endtime="20210811 23:43:30.969"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210811 23:43:22.600" endtime="20210811 23:43:30.970"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:52.378" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:44:52.378" endtime="20210811 23:44:52.378"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:52.379" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:44:52.379" endtime="20210811 23:44:52.379"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:44:52.379" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:44:52.379" endtime="20210811 23:44:52.379"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:44:52.380" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:44:52.380" endtime="20210811 23:44:52.380"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:44:52.381" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:44:52.381" level="INFO">${version_file_contents} = #Wed Aug 11 23:44:20 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725441586
clusterID=3f2beda1-9756-430c-b190-754ec3c0bab9
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210811 23:44:52.381" endtime="20210811 23:44:52.381"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:44:52.382" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:44:52.381" endtime="20210811 23:44:52.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:44:52.382" endtime="20210811 23:44:52.382"/>
</kw>
<status status="PASS" starttime="20210811 23:44:52.380" endtime="20210811 23:44:52.383"/>
</kw>
<status status="PASS" starttime="20210811 23:44:52.380" endtime="20210811 23:44:52.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:44:52.377" endtime="20210811 23:44:52.383"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:44:52.331" endtime="20210811 23:44:52.383"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 23:45:39.392" endtime="20210811 23:45:39.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:39.397" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:12.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:12.113" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210811 23:45:39.394" endtime="20210811 23:47:12.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:12.115" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210811 23:47:12.114" endtime="20210811 23:47:12.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:12.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:12.115" endtime="20210811 23:47:12.115"/>
</kw>
<status status="PASS" starttime="20210811 23:45:39.394" endtime="20210811 23:47:12.116"/>
</kw>
<msg timestamp="20210811 23:47:12.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:39.394" endtime="20210811 23:47:12.116"/>
</kw>
<msg timestamp="20210811 23:47:12.116" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210811 23:45:39.393" endtime="20210811 23:47:12.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:12.116" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210811 23:47:12.116" endtime="20210811 23:47:12.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:39.392" endtime="20210811 23:47:12.117"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 23:47:12.119" endtime="20210811 23:47:12.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:12.122" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:14.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:14.365" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210811 23:47:12.120" endtime="20210811 23:47:14.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:14.366" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210811 23:47:14.365" endtime="20210811 23:47:14.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:14.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:14.366" endtime="20210811 23:47:14.367"/>
</kw>
<status status="PASS" starttime="20210811 23:47:12.120" endtime="20210811 23:47:14.367"/>
</kw>
<msg timestamp="20210811 23:47:14.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:12.120" endtime="20210811 23:47:14.367"/>
</kw>
<msg timestamp="20210811 23:47:14.368" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210811 23:47:12.119" endtime="20210811 23:47:14.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:14.368" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210811 23:47:14.368" endtime="20210811 23:47:14.368"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:12.118" endtime="20210811 23:47:14.368"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210811 23:45:39.346" endtime="20210811 23:47:14.369"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:17.644" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210811 23:47:17.643" endtime="20210811 23:47:17.644"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:17.644" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:17.644" endtime="20210811 23:47:17.644"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:17.645" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:17.645" endtime="20210811 23:47:17.645"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:17.645" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:17.645" endtime="20210811 23:47:17.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:17.647" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:17.647" level="INFO">${version_file_contents} = #Wed Aug 11 23:45:46 UTC 2021
cTime=1628725366950
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
nodeType=SCM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde57
layoutVersion=2
</msg>
<status status="PASS" starttime="20210811 23:47:17.646" endtime="20210811 23:47:17.647"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:17.647" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210811 23:47:17.647" endtime="20210811 23:47:17.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:17.648" endtime="20210811 23:47:17.648"/>
</kw>
<status status="PASS" starttime="20210811 23:47:17.646" endtime="20210811 23:47:17.648"/>
</kw>
<status status="PASS" starttime="20210811 23:47:17.646" endtime="20210811 23:47:17.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:17.643" endtime="20210811 23:47:17.648"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:17.598" endtime="20210811 23:47:17.649"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:20.933" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:47:20.932" endtime="20210811 23:47:20.933"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:20.934" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:20.933" endtime="20210811 23:47:20.934"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:20.934" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:20.934" endtime="20210811 23:47:20.934"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:20.935" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:20.934" endtime="20210811 23:47:20.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:20.936" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:20.936" level="INFO">${version_file_contents} = #Wed Aug 11 23:45:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725441586
clusterID=3f2beda1-9756-430c-b190-754ec3c0bab9
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210811 23:47:20.935" endtime="20210811 23:47:20.936"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:20.936" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210811 23:47:20.936" endtime="20210811 23:47:20.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:20.937" endtime="20210811 23:47:20.937"/>
</kw>
<status status="PASS" starttime="20210811 23:47:20.935" endtime="20210811 23:47:20.937"/>
</kw>
<status status="PASS" starttime="20210811 23:47:20.935" endtime="20210811 23:47:20.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:20.932" endtime="20210811 23:47:20.937"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:20.888" endtime="20210811 23:47:20.938"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:24.251" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:47:24.250" endtime="20210811 23:47:24.251"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:24.251" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:24.251" endtime="20210811 23:47:24.252"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:24.252" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:24.252" endtime="20210811 23:47:24.252"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:24.252" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:24.252" endtime="20210811 23:47:24.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:24.254" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:24.254" level="INFO">${version_file_contents} = #Wed Aug 11 23:45:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725440376
clusterID=39df7899-2c96-4ba9-869e-46f317bc73ce
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210811 23:47:24.253" endtime="20210811 23:47:24.254"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:24.254" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210811 23:47:24.254" endtime="20210811 23:47:24.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:24.255" endtime="20210811 23:47:24.255"/>
</kw>
<status status="PASS" starttime="20210811 23:47:24.253" endtime="20210811 23:47:24.255"/>
</kw>
<status status="PASS" starttime="20210811 23:47:24.253" endtime="20210811 23:47:24.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:24.250" endtime="20210811 23:47:24.255"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:24.199" endtime="20210811 23:47:24.256"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:27.544" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:47:27.543" endtime="20210811 23:47:27.544"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:27.544" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:27.544" endtime="20210811 23:47:27.544"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:27.545" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:27.544" endtime="20210811 23:47:27.545"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:27.545" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:27.545" endtime="20210811 23:47:27.545"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:27.546" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:27.546" level="INFO">${version_file_contents} = #Wed Aug 11 23:45:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725441450
clusterID=d11e66e2-df22-4e7e-ae73-65474a95cad3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210811 23:47:27.546" endtime="20210811 23:47:27.546"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:27.547" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210811 23:47:27.547" endtime="20210811 23:47:27.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:27.547" endtime="20210811 23:47:27.548"/>
</kw>
<status status="PASS" starttime="20210811 23:47:27.546" endtime="20210811 23:47:27.548"/>
</kw>
<status status="PASS" starttime="20210811 23:47:27.545" endtime="20210811 23:47:27.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:27.542" endtime="20210811 23:47:27.548"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:27.497" endtime="20210811 23:47:27.549"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:30.841" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:47:30.841" endtime="20210811 23:47:30.841"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:30.842" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:30.842" endtime="20210811 23:47:30.842"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:30.842" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:30.842" endtime="20210811 23:47:30.842"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:30.843" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:30.843" endtime="20210811 23:47:30.843"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:30.844" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:30.844" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:00 UTC 2021
cTime=1628725367031
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=a32ef4c0-efcb-4a64-adb6-44e7a5c1175b
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:47:30.844" endtime="20210811 23:47:30.844"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:30.845" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:47:30.844" endtime="20210811 23:47:30.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:30.845" endtime="20210811 23:47:30.846"/>
</kw>
<status status="PASS" starttime="20210811 23:47:30.843" endtime="20210811 23:47:30.846"/>
</kw>
<status status="PASS" starttime="20210811 23:47:30.843" endtime="20210811 23:47:30.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:30.840" endtime="20210811 23:47:30.846"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:30.790" endtime="20210811 23:47:30.846"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:34.127" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:47:34.126" endtime="20210811 23:47:34.127"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:34.128" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:34.127" endtime="20210811 23:47:34.128"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:34.128" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:34.128" endtime="20210811 23:47:34.128"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:34.129" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:34.128" endtime="20210811 23:47:34.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:34.130" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:34.130" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:00 UTC 2021
cTime=1628725368028
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=d06b37f2-6702-44d1-b80e-307c5e51da7a
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:47:34.129" endtime="20210811 23:47:34.130"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:34.131" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:47:34.130" endtime="20210811 23:47:34.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:34.131" endtime="20210811 23:47:34.131"/>
</kw>
<status status="PASS" starttime="20210811 23:47:34.129" endtime="20210811 23:47:34.131"/>
</kw>
<status status="PASS" starttime="20210811 23:47:34.129" endtime="20210811 23:47:34.131"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:34.126" endtime="20210811 23:47:34.131"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:34.081" endtime="20210811 23:47:34.132"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:37.451" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:47:37.450" endtime="20210811 23:47:37.451"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:47:37.451" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:47:37.451" endtime="20210811 23:47:37.451"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:47:37.452" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:47:37.451" endtime="20210811 23:47:37.452"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:47:37.452" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:47:37.452" endtime="20210811 23:47:37.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:47:37.453" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:47:37.453" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:02 UTC 2021
cTime=1628725366566
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=163bf4cb-dea8-475c-b778-575fc2f9ee29
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:47:37.453" endtime="20210811 23:47:37.453"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:47:37.454" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:47:37.454" endtime="20210811 23:47:37.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:37.454" endtime="20210811 23:47:37.455"/>
</kw>
<status status="PASS" starttime="20210811 23:47:37.453" endtime="20210811 23:47:37.455"/>
</kw>
<status status="PASS" starttime="20210811 23:47:37.452" endtime="20210811 23:47:37.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:37.449" endtime="20210811 23:47:37.455"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:47:37.405" endtime="20210811 23:47:37.455"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:47:40.653" level="INFO">${random} = 21595</msg>
<status status="PASS" starttime="20210811 23:47:40.653" endtime="20210811 23:47:40.653"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:40.658" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-21595 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:44.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:44.084" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:40.655" endtime="20210811 23:47:44.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:44.085" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:44.085" endtime="20210811 23:47:44.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:44.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:44.086" endtime="20210811 23:47:44.086"/>
</kw>
<status status="PASS" starttime="20210811 23:47:40.654" endtime="20210811 23:47:44.086"/>
</kw>
<msg timestamp="20210811 23:47:44.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:40.654" endtime="20210811 23:47:44.087"/>
</kw>
<msg timestamp="20210811 23:47:44.087" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:40.653" endtime="20210811 23:47:44.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:44.087" endtime="20210811 23:47:44.088"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:40.652" endtime="20210811 23:47:44.088"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:47:40.607" endtime="20210811 23:47:44.089"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:47:47.313" level="INFO">${random} = 24130</msg>
<status status="PASS" starttime="20210811 23:47:47.312" endtime="20210811 23:47:47.313"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:47.317" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-24130 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:50.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:50.853" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:47.314" endtime="20210811 23:47:50.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:50.854" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:50.853" endtime="20210811 23:47:50.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:50.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:50.854" endtime="20210811 23:47:50.854"/>
</kw>
<status status="PASS" starttime="20210811 23:47:47.314" endtime="20210811 23:47:50.855"/>
</kw>
<msg timestamp="20210811 23:47:50.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:47.314" endtime="20210811 23:47:50.855"/>
</kw>
<msg timestamp="20210811 23:47:50.855" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:47.313" endtime="20210811 23:47:50.855"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:50.855" endtime="20210811 23:47:50.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:47.311" endtime="20210811 23:47:50.856"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:47:47.266" endtime="20210811 23:47:50.858"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:55.742" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:44:55.742" endtime="20210811 23:44:55.742"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:55.743" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:44:55.743" endtime="20210811 23:44:55.743"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:44:55.743" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:44:55.743" endtime="20210811 23:44:55.743"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:44:55.744" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:44:55.744" endtime="20210811 23:44:55.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:44:55.745" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:44:55.745" level="INFO">${version_file_contents} = #Wed Aug 11 23:44:20 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725440376
clusterID=39df7899-2c96-4ba9-869e-46f317bc73ce
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210811 23:44:55.745" endtime="20210811 23:44:55.745"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:44:55.746" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:44:55.745" endtime="20210811 23:44:55.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:44:55.746" endtime="20210811 23:44:55.746"/>
</kw>
<status status="PASS" starttime="20210811 23:44:55.744" endtime="20210811 23:44:55.746"/>
</kw>
<status status="PASS" starttime="20210811 23:44:55.744" endtime="20210811 23:44:55.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:44:55.741" endtime="20210811 23:44:55.747"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:44:55.697" endtime="20210811 23:44:55.747"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:54.079" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:56.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:56.051" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:54.076" endtime="20210811 23:47:56.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:56.052" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:56.051" endtime="20210811 23:47:56.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:56.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:56.052" endtime="20210811 23:47:56.053"/>
</kw>
<status status="PASS" starttime="20210811 23:47:54.075" endtime="20210811 23:47:56.053"/>
</kw>
<msg timestamp="20210811 23:47:56.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:54.075" endtime="20210811 23:47:56.053"/>
</kw>
<msg timestamp="20210811 23:47:56.054" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:54.074" endtime="20210811 23:47:56.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:56.054" endtime="20210811 23:47:56.054"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:56.058" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:47:58.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:47:58.053" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:56.056" endtime="20210811 23:47:58.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:47:58.054" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:58.053" endtime="20210811 23:47:58.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:47:58.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:47:58.054" endtime="20210811 23:47:58.055"/>
</kw>
<status status="PASS" starttime="20210811 23:47:56.055" endtime="20210811 23:47:58.055"/>
</kw>
<msg timestamp="20210811 23:47:58.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:56.055" endtime="20210811 23:47:58.055"/>
</kw>
<msg timestamp="20210811 23:47:58.055" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:56.054" endtime="20210811 23:47:58.055"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:47:58.056" endtime="20210811 23:47:58.056"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:47:58.059" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:48:02.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:48:02.141" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:58.057" endtime="20210811 23:48:02.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:48:02.142" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:48:02.141" endtime="20210811 23:48:02.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:48:02.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:48:02.142" endtime="20210811 23:48:02.143"/>
</kw>
<status status="PASS" starttime="20210811 23:47:58.057" endtime="20210811 23:48:02.143"/>
</kw>
<msg timestamp="20210811 23:48:02.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:47:58.057" endtime="20210811 23:48:02.143"/>
</kw>
<msg timestamp="20210811 23:48:02.143" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:47:58.056" endtime="20210811 23:48:02.144"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:48:02.144" endtime="20210811 23:48:02.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:47:54.074" endtime="20210811 23:48:02.144"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210811 23:47:54.028" endtime="20210811 23:48:02.145"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:48:05.376" level="INFO">${random} = 58290</msg>
<status status="PASS" starttime="20210811 23:48:05.376" endtime="20210811 23:48:05.376"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:48:05.381" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-58290 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:48:08.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:48:08.937" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:48:05.378" endtime="20210811 23:48:08.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:48:08.938" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:48:08.937" endtime="20210811 23:48:08.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:48:08.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:48:08.938" endtime="20210811 23:48:08.939"/>
</kw>
<status status="PASS" starttime="20210811 23:48:05.378" endtime="20210811 23:48:08.939"/>
</kw>
<msg timestamp="20210811 23:48:08.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:48:05.377" endtime="20210811 23:48:08.939"/>
</kw>
<msg timestamp="20210811 23:48:08.940" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:48:05.377" endtime="20210811 23:48:08.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:48:08.940" endtime="20210811 23:48:08.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:48:05.375" endtime="20210811 23:48:08.940"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:48:05.332" endtime="20210811 23:48:08.941"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:59.052" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210811 23:44:59.051" endtime="20210811 23:44:59.052"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:59.052" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:44:59.052" endtime="20210811 23:44:59.053"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:44:59.053" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:44:59.053" endtime="20210811 23:44:59.053"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:44:59.053" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210811 23:44:59.053" endtime="20210811 23:44:59.054"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:44:59.055" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:44:59.055" level="INFO">${version_file_contents} = #Wed Aug 11 23:44:20 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628725441450
clusterID=d11e66e2-df22-4e7e-ae73-65474a95cad3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210811 23:44:59.054" endtime="20210811 23:44:59.055"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:44:59.055" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:44:59.055" endtime="20210811 23:44:59.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:44:59.056" endtime="20210811 23:44:59.056"/>
</kw>
<status status="PASS" starttime="20210811 23:44:59.054" endtime="20210811 23:44:59.056"/>
</kw>
<status status="PASS" starttime="20210811 23:44:59.054" endtime="20210811 23:44:59.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:44:59.051" endtime="20210811 23:44:59.056"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:44:59.006" endtime="20210811 23:44:59.057"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:02.408" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:45:02.407" endtime="20210811 23:45:02.408"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:02.408" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:45:02.408" endtime="20210811 23:45:02.409"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:45:02.409" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:45:02.409" endtime="20210811 23:45:02.409"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:45:02.409" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:45:02.409" endtime="20210811 23:45:02.410"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:45:02.411" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:45:02.411" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:00 UTC 2021
cTime=1628725367031
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=a32ef4c0-efcb-4a64-adb6-44e7a5c1175b
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:45:02.410" endtime="20210811 23:45:02.411"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:45:02.411" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:45:02.411" endtime="20210811 23:45:02.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:02.412" endtime="20210811 23:45:02.412"/>
</kw>
<status status="PASS" starttime="20210811 23:45:02.410" endtime="20210811 23:45:02.412"/>
</kw>
<status status="PASS" starttime="20210811 23:45:02.410" endtime="20210811 23:45:02.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:02.407" endtime="20210811 23:45:02.412"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:45:02.361" endtime="20210811 23:45:02.413"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:05.724" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:45:05.723" endtime="20210811 23:45:05.724"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:05.725" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:45:05.724" endtime="20210811 23:45:05.725"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:45:05.725" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:45:05.725" endtime="20210811 23:45:05.725"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:45:05.726" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:45:05.725" endtime="20210811 23:45:05.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:45:05.727" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:45:05.727" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:00 UTC 2021
cTime=1628725368028
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=d06b37f2-6702-44d1-b80e-307c5e51da7a
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:45:05.726" endtime="20210811 23:45:05.727"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:45:05.728" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:45:05.727" endtime="20210811 23:45:05.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:05.728" endtime="20210811 23:45:05.728"/>
</kw>
<status status="PASS" starttime="20210811 23:45:05.726" endtime="20210811 23:45:05.728"/>
</kw>
<status status="PASS" starttime="20210811 23:45:05.726" endtime="20210811 23:45:05.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:05.723" endtime="20210811 23:45:05.728"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:45:05.679" endtime="20210811 23:45:05.729"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:09.018" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210811 23:45:09.018" endtime="20210811 23:45:09.018"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:45:09.019" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:45:09.019" endtime="20210811 23:45:09.019"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:45:09.019" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:45:09.019" endtime="20210811 23:45:09.019"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:45:09.020" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210811 23:45:09.020" endtime="20210811 23:45:09.020"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:45:09.021" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:45:09.021" level="INFO">${version_file_contents} = #Wed Aug 11 23:43:02 UTC 2021
cTime=1628725366566
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
omUuid=163bf4cb-dea8-475c-b778-575fc2f9ee29
nodeType=OM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde5...</msg>
<status status="PASS" starttime="20210811 23:45:09.021" endtime="20210811 23:45:09.021"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:45:09.022" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:45:09.021" endtime="20210811 23:45:09.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:09.022" endtime="20210811 23:45:09.022"/>
</kw>
<status status="PASS" starttime="20210811 23:45:09.020" endtime="20210811 23:45:09.023"/>
</kw>
<status status="PASS" starttime="20210811 23:45:09.020" endtime="20210811 23:45:09.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:09.017" endtime="20210811 23:45:09.023"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:45:08.972" endtime="20210811 23:45:09.024"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:45:12.284" level="INFO">${random} = 03020</msg>
<status status="PASS" starttime="20210811 23:45:12.284" endtime="20210811 23:45:12.284"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:12.289" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-03020 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:45:16.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:45:16.178" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:12.286" endtime="20210811 23:45:16.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:45:16.179" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:16.179" endtime="20210811 23:45:16.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:45:16.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:45:16.180" endtime="20210811 23:45:16.180"/>
</kw>
<status status="PASS" starttime="20210811 23:45:12.285" endtime="20210811 23:45:16.180"/>
</kw>
<msg timestamp="20210811 23:45:16.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:12.285" endtime="20210811 23:45:16.180"/>
</kw>
<msg timestamp="20210811 23:45:16.181" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:12.284" endtime="20210811 23:45:16.181"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:16.181" endtime="20210811 23:45:16.181"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:12.283" endtime="20210811 23:45:16.182"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:45:12.236" endtime="20210811 23:45:16.183"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:19.452" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:45:21.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:45:21.716" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:19.449" endtime="20210811 23:45:21.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:45:21.718" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:21.717" endtime="20210811 23:45:21.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:45:21.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:45:21.718" endtime="20210811 23:45:21.718"/>
</kw>
<status status="PASS" starttime="20210811 23:45:19.448" endtime="20210811 23:45:21.719"/>
</kw>
<msg timestamp="20210811 23:45:21.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:19.448" endtime="20210811 23:45:21.719"/>
</kw>
<msg timestamp="20210811 23:45:21.720" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:19.447" endtime="20210811 23:45:21.720"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:21.720" endtime="20210811 23:45:21.721"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:21.732" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:45:24.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:45:24.027" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:21.727" endtime="20210811 23:45:24.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:45:24.028" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:24.028" endtime="20210811 23:45:24.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:45:24.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:45:24.029" endtime="20210811 23:45:24.029"/>
</kw>
<status status="PASS" starttime="20210811 23:45:21.726" endtime="20210811 23:45:24.029"/>
</kw>
<msg timestamp="20210811 23:45:24.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:21.725" endtime="20210811 23:45:24.030"/>
</kw>
<msg timestamp="20210811 23:45:24.030" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:21.721" endtime="20210811 23:45:24.030"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:24.030" endtime="20210811 23:45:24.030"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:24.034" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:45:29.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:45:29.192" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:24.032" endtime="20210811 23:45:29.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:45:29.193" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:29.192" endtime="20210811 23:45:29.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:45:29.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:45:29.193" endtime="20210811 23:45:29.194"/>
</kw>
<status status="PASS" starttime="20210811 23:45:24.031" endtime="20210811 23:45:29.194"/>
</kw>
<msg timestamp="20210811 23:45:29.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:24.031" endtime="20210811 23:45:29.194"/>
</kw>
<msg timestamp="20210811 23:45:29.194" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:24.031" endtime="20210811 23:45:29.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:29.195" endtime="20210811 23:45:29.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:19.447" endtime="20210811 23:45:29.195"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210811 23:45:19.402" endtime="20210811 23:45:29.196"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 23:45:32.416" level="INFO">${random} = 26959</msg>
<status status="PASS" starttime="20210811 23:45:32.416" endtime="20210811 23:45:32.417"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 23:45:32.421" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-26959 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 23:45:36.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 23:45:36.115" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:32.418" endtime="20210811 23:45:36.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 23:45:36.116" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:36.116" endtime="20210811 23:45:36.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 23:45:36.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 23:45:36.117" endtime="20210811 23:45:36.117"/>
</kw>
<status status="PASS" starttime="20210811 23:45:32.418" endtime="20210811 23:45:36.117"/>
</kw>
<msg timestamp="20210811 23:45:36.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 23:45:32.417" endtime="20210811 23:45:36.118"/>
</kw>
<msg timestamp="20210811 23:45:36.118" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210811 23:45:32.417" endtime="20210811 23:45:36.118"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:45:36.118" endtime="20210811 23:45:36.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:45:32.415" endtime="20210811 23:45:36.119"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210811 23:45:32.371" endtime="20210811 23:45:36.120"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:49.086" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210811 23:44:49.085" endtime="20210811 23:44:49.086"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210811 23:44:49.086" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210811 23:44:49.086" endtime="20210811 23:44:49.086"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210811 23:44:49.087" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210811 23:44:49.086" endtime="20210811 23:44:49.087"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210811 23:44:49.087" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210811 23:44:49.087" endtime="20210811 23:44:49.087"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210811 23:44:49.088" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210811 23:44:49.089" level="INFO">${version_file_contents} = #Wed Aug 11 23:42:46 UTC 2021
cTime=1628725366950
clusterID=CID-87c3a69d-e95d-43e4-ad2a-f5ed3331c4fb
nodeType=SCM
scmUuid=fb3ac054-7e29-44ef-94c8-d60e71dbde57
layoutVersion=0
</msg>
<status status="PASS" starttime="20210811 23:44:49.088" endtime="20210811 23:44:49.089"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210811 23:44:49.089" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210811 23:44:49.089" endtime="20210811 23:44:49.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 23:44:49.089" endtime="20210811 23:44:49.090"/>
</kw>
<status status="PASS" starttime="20210811 23:44:49.088" endtime="20210811 23:44:49.090"/>
</kw>
<status status="PASS" starttime="20210811 23:44:49.088" endtime="20210811 23:44:49.090"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 23:44:49.084" endtime="20210811 23:44:49.090"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210811 23:44:49.039" endtime="20210811 23:44:49.091"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="143536"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="171039"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
