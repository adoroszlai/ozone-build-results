<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210811 22:52:24.572" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:33:56.556" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:33:56.555" endtime="20210811 22:33:56.556"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:33:56.556" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:33:56.556" endtime="20210811 22:33:56.556"/>
</kw>
<status status="PASS" starttime="20210811 22:33:56.555" endtime="20210811 22:33:56.556"/>
</kw>
<msg timestamp="20210811 22:33:56.557" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:33:56.554" endtime="20210811 22:33:56.557"/>
</kw>
<status status="PASS" starttime="20210811 22:33:56.554" endtime="20210811 22:33:56.557"/>
</kw>
<msg timestamp="20210811 22:33:56.557" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:33:56.553" endtime="20210811 22:33:56.557"/>
</kw>
<msg timestamp="20210811 22:33:56.557" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:33:56.553" endtime="20210811 22:33:56.557"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:33:56.558" level="INFO">${random} = 66594</msg>
<status status="PASS" starttime="20210811 22:33:56.557" endtime="20210811 22:33:56.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:56.563" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-66594 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:00.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:00.030" level="INFO">${output} = 2021-08-11 22:33:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:33:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:33:56.559" endtime="20210811 22:34:00.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:00.031" level="INFO">2021-08-11 22:33:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:33:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:33:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:33:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:34:00.030" endtime="20210811 22:34:00.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:00.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:00.031" endtime="20210811 22:34:00.032"/>
</kw>
<status status="PASS" starttime="20210811 22:33:56.558" endtime="20210811 22:34:00.032"/>
</kw>
<msg timestamp="20210811 22:34:00.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:56.558" endtime="20210811 22:34:00.032"/>
</kw>
<msg timestamp="20210811 22:34:00.032" level="INFO">${result} = 2021-08-11 22:33:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:33:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:33:56.558" endtime="20210811 22:34:00.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:00.036" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:01.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:01.608" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 o3fs://bucket1.volume1.om/ozone-66594
dr...</msg>
<status status="PASS" starttime="20210811 22:34:00.034" endtime="20210811 22:34:01.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:01.609" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 o3fs://bucket1.volume1.om/ozone-66594
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:34:01.608" endtime="20210811 22:34:01.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:01.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:01.609" endtime="20210811 22:34:01.609"/>
</kw>
<status status="PASS" starttime="20210811 22:34:00.033" endtime="20210811 22:34:01.610"/>
</kw>
<msg timestamp="20210811 22:34:01.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:00.033" endtime="20210811 22:34:01.610"/>
</kw>
<msg timestamp="20210811 22:34:01.610" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 o3fs://bucket1.volume1.om/ozone-66594
dr...</msg>
<status status="PASS" starttime="20210811 22:34:00.033" endtime="20210811 22:34:01.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:34:01.610" endtime="20210811 22:34:01.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:01.614" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-66594 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:04.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:04.375" level="INFO">${output} = 2021-08-11 22:34:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:34:01.612" endtime="20210811 22:34:04.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:04.376" level="INFO">2021-08-11 22:34:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:34:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210811 22:34:04.375" endtime="20210811 22:34:04.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:04.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:04.376" endtime="20210811 22:34:04.377"/>
</kw>
<status status="PASS" starttime="20210811 22:34:01.612" endtime="20210811 22:34:04.377"/>
</kw>
<msg timestamp="20210811 22:34:04.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:01.611" endtime="20210811 22:34:04.377"/>
</kw>
<msg timestamp="20210811 22:34:04.378" level="INFO">${result} = 2021-08-11 22:34:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:34:01.611" endtime="20210811 22:34:04.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:34:04.378" endtime="20210811 22:34:04.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:33:56.552" endtime="20210811 22:34:04.379"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:33:56.507" endtime="20210811 22:34:04.380"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:08.569" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:08.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:08.574" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:08.566" endtime="20210811 22:34:08.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:08.575" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:08.574" endtime="20210811 22:34:08.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:08.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:08.575" endtime="20210811 22:34:08.576"/>
</kw>
<status status="PASS" starttime="20210811 22:34:08.565" endtime="20210811 22:34:08.576"/>
</kw>
<msg timestamp="20210811 22:34:08.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:08.565" endtime="20210811 22:34:08.576"/>
</kw>
<msg timestamp="20210811 22:34:08.576" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:08.565" endtime="20210811 22:34:08.576"/>
</kw>
<msg timestamp="20210811 22:34:08.577" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:08.564" endtime="20210811 22:34:08.577"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:34:08.581" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:34:08.580" endtime="20210811 22:34:08.581"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:34:08.581" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:34:08.581" endtime="20210811 22:34:08.581"/>
</kw>
<status status="PASS" starttime="20210811 22:34:08.580" endtime="20210811 22:34:08.581"/>
</kw>
<msg timestamp="20210811 22:34:08.582" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:34:08.579" endtime="20210811 22:34:08.582"/>
</kw>
<status status="PASS" starttime="20210811 22:34:08.579" endtime="20210811 22:34:08.582"/>
</kw>
<msg timestamp="20210811 22:34:08.582" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:34:08.578" endtime="20210811 22:34:08.582"/>
</kw>
<msg timestamp="20210811 22:34:08.582" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:34:08.577" endtime="20210811 22:34:08.582"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:08.585" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:51.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:51.168" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:34:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210811 22:34:08.583" endtime="20210811 22:34:51.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:51.169" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:34:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:34:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:34:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:34:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:34:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-11 22:34:14 INFO  JobSubmitter:198 - number of splits:3
2021-08-11 22:34:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628721162120_0001
2021-08-11 22:34:15 INFO  YarnClientImpl:273 - Submitted application application_1628721162120_0001
2021-08-11 22:34:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628721162120_0001/
2021-08-11 22:34:15 INFO  Job:1339 - Running job: job_1628721162120_0001
2021-08-11 22:34:24 INFO  Job:1360 - Job job_1628721162120_0001 running in uber mode : false
2021-08-11 22:34:24 INFO  Job:1367 -  map 0% reduce 0%
2021-08-11 22:34:30 INFO  Job:1367 -  map 33% reduce 0%
2021-08-11 22:34:35 INFO  Job:1367 -  map 67% reduce 0%
2021-08-11 22:34:40 INFO  Job:1367 -  map 100% reduce 0%
2021-08-11 22:34:44 INFO  Job:1367 -  map 100% reduce 100%
2021-08-11 22:34:50 INFO  Job:1378 - Job job_1628721162120_0001 completed successfully
2021-08-11 22:34:50 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=632773
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36820
		Total time spent by all reduces in occupied slots (ms)=13276
		Total time spent by all map tasks (ms)=9205
		Total time spent by all reduce tasks (ms)=3319
		Total vcore-milliseconds taken by all map tasks=9205
		Total vcore-milliseconds taken by all reduce tasks=3319
		Total megabyte-milliseconds taken by all map tasks=37703680
		Total megabyte-milliseconds taken by all reduce tasks=13594624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=910
		CPU time spent (ms)=6680
		Physical memory (bytes) snapshot=1744048128
		Virtual memory (bytes) snapshot=15811096576
		Total committed heap usage (bytes)=1661468672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.234 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:34:51.168" endtime="20210811 22:34:51.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:51.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:51.169" endtime="20210811 22:34:51.170"/>
</kw>
<status status="PASS" starttime="20210811 22:34:08.583" endtime="20210811 22:34:51.170"/>
</kw>
<msg timestamp="20210811 22:34:51.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:08.583" endtime="20210811 22:34:51.170"/>
</kw>
<msg timestamp="20210811 22:34:51.170" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:34:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210811 22:34:08.582" endtime="20210811 22:34:51.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:34:51.170" endtime="20210811 22:34:51.171"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:34:08.563" endtime="20210811 22:34:51.171"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:51.175" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:34:51.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:34:51.181" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:51.174" endtime="20210811 22:34:51.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:34:51.182" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:51.182" endtime="20210811 22:34:51.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:34:51.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:34:51.183" endtime="20210811 22:34:51.183"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.173" endtime="20210811 22:34:51.183"/>
</kw>
<msg timestamp="20210811 22:34:51.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:51.173" endtime="20210811 22:34:51.184"/>
</kw>
<msg timestamp="20210811 22:34:51.184" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:51.173" endtime="20210811 22:34:51.184"/>
</kw>
<msg timestamp="20210811 22:34:51.184" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:34:51.172" endtime="20210811 22:34:51.184"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:34:51.184" level="INFO">${random} = ZjdUX99U</msg>
<status status="PASS" starttime="20210811 22:34:51.184" endtime="20210811 22:34:51.185"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:34:51.188" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:34:51.187" endtime="20210811 22:34:51.188"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:34:51.188" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.188" endtime="20210811 22:34:51.188"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.187" endtime="20210811 22:34:51.188"/>
</kw>
<msg timestamp="20210811 22:34:51.188" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.186" endtime="20210811 22:34:51.188"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.186" endtime="20210811 22:34:51.189"/>
</kw>
<msg timestamp="20210811 22:34:51.189" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:34:51.185" endtime="20210811 22:34:51.189"/>
</kw>
<msg timestamp="20210811 22:34:51.189" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:34:51.185" endtime="20210811 22:34:51.189"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:34:51.192" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:34:51.191" endtime="20210811 22:34:51.192"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:34:51.192" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.192" endtime="20210811 22:34:51.192"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.191" endtime="20210811 22:34:51.193"/>
</kw>
<msg timestamp="20210811 22:34:51.193" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.191" endtime="20210811 22:34:51.193"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.190" endtime="20210811 22:34:51.193"/>
</kw>
<msg timestamp="20210811 22:34:51.193" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:34:51.190" endtime="20210811 22:34:51.193"/>
</kw>
<msg timestamp="20210811 22:34:51.193" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:34:51.189" endtime="20210811 22:34:51.193"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:34:51.196" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:34:51.196" endtime="20210811 22:34:51.196"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:34:51.196" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.196" endtime="20210811 22:34:51.196"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.195" endtime="20210811 22:34:51.197"/>
</kw>
<msg timestamp="20210811 22:34:51.197" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:34:51.195" endtime="20210811 22:34:51.197"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.194" endtime="20210811 22:34:51.197"/>
</kw>
<msg timestamp="20210811 22:34:51.197" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ZjdUX99U.txt</msg>
<status status="PASS" starttime="20210811 22:34:51.194" endtime="20210811 22:34:51.197"/>
</kw>
<msg timestamp="20210811 22:34:51.198" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ZjdUX99U.txt</msg>
<status status="PASS" starttime="20210811 22:34:51.193" endtime="20210811 22:34:51.198"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:34:51.202" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ZjdUX99U.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:35:22.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:35:22.864" level="INFO">${output} = 2021-08-11 22:34:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:34:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210811 22:34:51.200" endtime="20210811 22:35:22.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:35:22.865" level="INFO">2021-08-11 22:34:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:34:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:34:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:34:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:34:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:34:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:34:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-11 22:34:56 INFO  JobSubmitter:198 - number of splits:3
2021-08-11 22:34:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628721162120_0002
2021-08-11 22:34:57 INFO  YarnClientImpl:273 - Submitted application application_1628721162120_0002
2021-08-11 22:34:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628721162120_0002/
2021-08-11 22:34:57 INFO  Job:1339 - Running job: job_1628721162120_0002
2021-08-11 22:35:03 INFO  Job:1360 - Job job_1628721162120_0002 running in uber mode : false
2021-08-11 22:35:03 INFO  Job:1367 -  map 0% reduce 0%
2021-08-11 22:35:09 INFO  Job:1367 -  map 33% reduce 0%
2021-08-11 22:35:14 INFO  Job:1367 -  map 67% reduce 0%
2021-08-11 22:35:18 INFO  Job:1367 -  map 100% reduce 0%
2021-08-11 22:35:21 INFO  Job:1367 -  map 100% reduce 100%
2021-08-11 22:35:22 INFO  Job:1378 - Job job_1628721162120_0002 completed successfully
2021-08-11 22:35:22 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=695619
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35476
		Total time spent by all reduces in occupied slots (ms)=13428
		Total time spent by all map tasks (ms)=8869
		Total time spent by all reduce tasks (ms)=3357
		Total vcore-milliseconds taken by all map tasks=8869
		Total vcore-milliseconds taken by all reduce tasks=3357
		Total megabyte-milliseconds taken by all map tasks=36327424
		Total megabyte-milliseconds taken by all reduce tasks=13750272
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=556
		CPU time spent (ms)=6470
		Physical memory (bytes) snapshot=1278963712
		Virtual memory (bytes) snapshot=15810891776
		Total committed heap usage (bytes)=1052770304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:35:22.864" endtime="20210811 22:35:22.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:35:22.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:35:22.865" endtime="20210811 22:35:22.866"/>
</kw>
<status status="PASS" starttime="20210811 22:34:51.199" endtime="20210811 22:35:22.866"/>
</kw>
<msg timestamp="20210811 22:35:22.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:34:51.198" endtime="20210811 22:35:22.866"/>
</kw>
<msg timestamp="20210811 22:35:22.867" level="INFO">${output} = 2021-08-11 22:34:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:34:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210811 22:34:51.198" endtime="20210811 22:35:22.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:35:22.867" endtime="20210811 22:35:22.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:35:22.868" endtime="20210811 22:35:22.868"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:34:51.172" endtime="20210811 22:35:22.868"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:34:08.518" endtime="20210811 22:35:22.869"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:35:27.305" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:35:27.305" endtime="20210811 22:35:27.305"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:35:27.305" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:35:27.305" endtime="20210811 22:35:27.305"/>
</kw>
<status status="PASS" starttime="20210811 22:35:27.304" endtime="20210811 22:35:27.306"/>
</kw>
<msg timestamp="20210811 22:35:27.306" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:35:27.304" endtime="20210811 22:35:27.306"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:35:27.306" endtime="20210811 22:35:27.307"/>
</kw>
<msg timestamp="20210811 22:35:27.307" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:35:27.306" endtime="20210811 22:35:27.307"/>
</kw>
<status status="PASS" starttime="20210811 22:35:27.303" endtime="20210811 22:35:27.307"/>
</kw>
<msg timestamp="20210811 22:35:27.307" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:35:27.303" endtime="20210811 22:35:27.307"/>
</kw>
<msg timestamp="20210811 22:35:27.307" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:35:27.302" endtime="20210811 22:35:27.307"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:35:27.308" level="INFO">${random} = 92397</msg>
<status status="PASS" starttime="20210811 22:35:27.307" endtime="20210811 22:35:27.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:35:27.313" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92397 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:35:30.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:35:30.419" level="INFO">${output} = 2021-08-11 22:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:35:27.309" endtime="20210811 22:35:30.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:35:30.420" level="INFO">2021-08-11 22:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:35:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:35:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:35:30.420" endtime="20210811 22:35:30.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:35:30.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:35:30.420" endtime="20210811 22:35:30.421"/>
</kw>
<status status="PASS" starttime="20210811 22:35:27.308" endtime="20210811 22:35:30.421"/>
</kw>
<msg timestamp="20210811 22:35:30.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:35:27.308" endtime="20210811 22:35:30.421"/>
</kw>
<msg timestamp="20210811 22:35:30.422" level="INFO">${result} = 2021-08-11 22:35:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:35:27.308" endtime="20210811 22:35:30.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:35:30.425" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:35:32.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:35:32.088" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 ofs://om/volume1/bucket1/ozone-66594
-rw-...</msg>
<status status="PASS" starttime="20210811 22:35:30.423" endtime="20210811 22:35:32.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:35:32.089" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 ofs://om/volume1/bucket1/ozone-66594
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:35 ofs://om/volume1/bucket1/ozone-92397
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:35 ofs://om/volume1/bucket1/wordcount-ZjdUX99U.txt</msg>
<status status="PASS" starttime="20210811 22:35:32.088" endtime="20210811 22:35:32.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:35:32.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:35:32.089" endtime="20210811 22:35:32.089"/>
</kw>
<status status="PASS" starttime="20210811 22:35:30.423" endtime="20210811 22:35:32.090"/>
</kw>
<msg timestamp="20210811 22:35:32.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:35:30.422" endtime="20210811 22:35:32.090"/>
</kw>
<msg timestamp="20210811 22:35:32.090" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-11 22:33 ofs://om/volume1/bucket1/ozone-66594
-rw-...</msg>
<status status="PASS" starttime="20210811 22:35:30.422" endtime="20210811 22:35:32.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:35:32.090" endtime="20210811 22:35:32.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:35:32.094" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-92397 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:35:34.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:35:34.869" level="INFO">${output} = 2021-08-11 22:35:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:35:32.092" endtime="20210811 22:35:34.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:35:34.870" level="INFO">2021-08-11 22:35:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:35:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210811 22:35:34.869" endtime="20210811 22:35:34.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:35:34.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:35:34.872" endtime="20210811 22:35:34.873"/>
</kw>
<status status="PASS" starttime="20210811 22:35:32.091" endtime="20210811 22:35:34.873"/>
</kw>
<msg timestamp="20210811 22:35:34.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:35:32.091" endtime="20210811 22:35:34.873"/>
</kw>
<msg timestamp="20210811 22:35:34.874" level="INFO">${result} = 2021-08-11 22:35:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 ...</msg>
<status status="PASS" starttime="20210811 22:35:32.091" endtime="20210811 22:35:34.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:35:34.874" endtime="20210811 22:35:34.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:35:27.301" endtime="20210811 22:35:34.875"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:35:27.256" endtime="20210811 22:35:34.876"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:35:39.091" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:35:39.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:35:39.097" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:35:39.088" endtime="20210811 22:35:39.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:35:39.097" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:35:39.097" endtime="20210811 22:35:39.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:35:39.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:35:39.098" endtime="20210811 22:35:39.098"/>
</kw>
<status status="PASS" starttime="20210811 22:35:39.087" endtime="20210811 22:35:39.098"/>
</kw>
<msg timestamp="20210811 22:35:39.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:35:39.087" endtime="20210811 22:35:39.099"/>
</kw>
<msg timestamp="20210811 22:35:39.099" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:35:39.086" endtime="20210811 22:35:39.099"/>
</kw>
<msg timestamp="20210811 22:35:39.099" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:35:39.086" endtime="20210811 22:35:39.099"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:35:39.103" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:35:39.103" endtime="20210811 22:35:39.103"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:35:39.104" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:35:39.103" endtime="20210811 22:35:39.104"/>
</kw>
<status status="PASS" starttime="20210811 22:35:39.102" endtime="20210811 22:35:39.104"/>
</kw>
<msg timestamp="20210811 22:35:39.104" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:35:39.102" endtime="20210811 22:35:39.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:35:39.104" endtime="20210811 22:35:39.105"/>
</kw>
<msg timestamp="20210811 22:35:39.105" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:35:39.104" endtime="20210811 22:35:39.105"/>
</kw>
<status status="PASS" starttime="20210811 22:35:39.101" endtime="20210811 22:35:39.105"/>
</kw>
<msg timestamp="20210811 22:35:39.105" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:35:39.101" endtime="20210811 22:35:39.105"/>
</kw>
<msg timestamp="20210811 22:35:39.105" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:35:39.099" endtime="20210811 22:35:39.105"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:35:39.108" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:36:11.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:36:11.142" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210811 22:35:39.107" endtime="20210811 22:36:11.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:36:11.144" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:35:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:35:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:35:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:35:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:35:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-11 22:35:44 INFO  JobSubmitter:198 - number of splits:3
2021-08-11 22:35:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628721162120_0003
2021-08-11 22:35:45 INFO  YarnClientImpl:273 - Submitted application application_1628721162120_0003
2021-08-11 22:35:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628721162120_0003/
2021-08-11 22:35:45 INFO  Job:1339 - Running job: job_1628721162120_0003
2021-08-11 22:35:51 INFO  Job:1360 - Job job_1628721162120_0003 running in uber mode : false
2021-08-11 22:35:51 INFO  Job:1367 -  map 0% reduce 0%
2021-08-11 22:35:57 INFO  Job:1367 -  map 33% reduce 0%
2021-08-11 22:36:02 INFO  Job:1367 -  map 67% reduce 0%
2021-08-11 22:36:06 INFO  Job:1367 -  map 100% reduce 0%
2021-08-11 22:36:09 INFO  Job:1367 -  map 100% reduce 100%
2021-08-11 22:36:10 INFO  Job:1378 - Job job_1628721162120_0003 completed successfully
2021-08-11 22:36:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=632561
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34732
		Total time spent by all reduces in occupied slots (ms)=13496
		Total time spent by all map tasks (ms)=8683
		Total time spent by all reduce tasks (ms)=3374
		Total vcore-milliseconds taken by all map tasks=8683
		Total vcore-milliseconds taken by all reduce tasks=3374
		Total megabyte-milliseconds taken by all map tasks=35565568
		Total megabyte-milliseconds taken by all reduce tasks=13819904
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=544
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1313112064
		Virtual memory (bytes) snapshot=15821684736
		Total committed heap usage (bytes)=1120403456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.749 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:36:11.143" endtime="20210811 22:36:11.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:36:11.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:36:11.144" endtime="20210811 22:36:11.144"/>
</kw>
<status status="PASS" starttime="20210811 22:35:39.106" endtime="20210811 22:36:11.145"/>
</kw>
<msg timestamp="20210811 22:36:11.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:35:39.106" endtime="20210811 22:36:11.145"/>
</kw>
<msg timestamp="20210811 22:36:11.145" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:35:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:35:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210811 22:35:39.106" endtime="20210811 22:36:11.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:36:11.145" endtime="20210811 22:36:11.146"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:35:39.085" endtime="20210811 22:36:11.146"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:36:11.151" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:36:11.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:36:11.156" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:36:11.149" endtime="20210811 22:36:11.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:36:11.157" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:36:11.156" endtime="20210811 22:36:11.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:36:11.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:36:11.157" endtime="20210811 22:36:11.158"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.148" endtime="20210811 22:36:11.158"/>
</kw>
<msg timestamp="20210811 22:36:11.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:36:11.148" endtime="20210811 22:36:11.158"/>
</kw>
<msg timestamp="20210811 22:36:11.158" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:36:11.148" endtime="20210811 22:36:11.158"/>
</kw>
<msg timestamp="20210811 22:36:11.158" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210811 22:36:11.147" endtime="20210811 22:36:11.159"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:36:11.159" level="INFO">${random} = zPFZy340</msg>
<status status="PASS" starttime="20210811 22:36:11.159" endtime="20210811 22:36:11.159"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:36:11.162" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:36:11.162" endtime="20210811 22:36:11.162"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:36:11.163" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.162" endtime="20210811 22:36:11.163"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.161" endtime="20210811 22:36:11.163"/>
</kw>
<msg timestamp="20210811 22:36:11.163" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.161" endtime="20210811 22:36:11.163"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:36:11.164" endtime="20210811 22:36:11.164"/>
</kw>
<msg timestamp="20210811 22:36:11.164" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:36:11.163" endtime="20210811 22:36:11.164"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.160" endtime="20210811 22:36:11.164"/>
</kw>
<msg timestamp="20210811 22:36:11.164" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:36:11.160" endtime="20210811 22:36:11.164"/>
</kw>
<msg timestamp="20210811 22:36:11.164" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:36:11.159" endtime="20210811 22:36:11.165"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:36:11.167" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:36:11.167" endtime="20210811 22:36:11.167"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:36:11.168" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.168" endtime="20210811 22:36:11.168"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.167" endtime="20210811 22:36:11.168"/>
</kw>
<msg timestamp="20210811 22:36:11.168" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.166" endtime="20210811 22:36:11.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:36:11.170" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210811 22:36:11.169" endtime="20210811 22:36:11.170"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:36:11.170" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210811 22:36:11.170" endtime="20210811 22:36:11.170"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.169" endtime="20210811 22:36:11.170"/>
</kw>
<msg timestamp="20210811 22:36:11.170" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210811 22:36:11.168" endtime="20210811 22:36:11.170"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.166" endtime="20210811 22:36:11.171"/>
</kw>
<msg timestamp="20210811 22:36:11.171" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:36:11.165" endtime="20210811 22:36:11.171"/>
</kw>
<msg timestamp="20210811 22:36:11.171" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:36:11.165" endtime="20210811 22:36:11.171"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:36:11.174" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:36:11.174" endtime="20210811 22:36:11.174"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:36:11.175" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.174" endtime="20210811 22:36:11.175"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.173" endtime="20210811 22:36:11.175"/>
</kw>
<msg timestamp="20210811 22:36:11.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:36:11.173" endtime="20210811 22:36:11.175"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:36:11.176" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210811 22:36:11.176" endtime="20210811 22:36:11.176"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:36:11.177" level="INFO">${result} = /wordcount-zPFZy340.txt</msg>
<status status="PASS" starttime="20210811 22:36:11.176" endtime="20210811 22:36:11.177"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.176" endtime="20210811 22:36:11.177"/>
</kw>
<msg timestamp="20210811 22:36:11.177" level="INFO">${path_with_leading} = /wordcount-zPFZy340.txt</msg>
<status status="PASS" starttime="20210811 22:36:11.175" endtime="20210811 22:36:11.177"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.172" endtime="20210811 22:36:11.177"/>
</kw>
<msg timestamp="20210811 22:36:11.177" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-zPFZy340.txt</msg>
<status status="PASS" starttime="20210811 22:36:11.172" endtime="20210811 22:36:11.178"/>
</kw>
<msg timestamp="20210811 22:36:11.178" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-zPFZy340.txt</msg>
<status status="PASS" starttime="20210811 22:36:11.171" endtime="20210811 22:36:11.178"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:36:11.181" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-zPFZy340.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:36:49.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:36:49.590" level="INFO">${output} = 2021-08-11 22:36:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:36:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210811 22:36:11.179" endtime="20210811 22:36:49.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:36:49.591" level="INFO">2021-08-11 22:36:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:36:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:36:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:36:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-11 22:36:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-11 22:36:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:36:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-11 22:36:14 INFO  JobSubmitter:198 - number of splits:3
2021-08-11 22:36:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628721162120_0004
2021-08-11 22:36:14 INFO  YarnClientImpl:273 - Submitted application application_1628721162120_0004
2021-08-11 22:36:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628721162120_0004/
2021-08-11 22:36:14 INFO  Job:1339 - Running job: job_1628721162120_0004
2021-08-11 22:36:22 INFO  Job:1360 - Job job_1628721162120_0004 running in uber mode : false
2021-08-11 22:36:22 INFO  Job:1367 -  map 0% reduce 0%
2021-08-11 22:36:29 INFO  Job:1367 -  map 33% reduce 0%
2021-08-11 22:36:34 INFO  Job:1367 -  map 67% reduce 0%
2021-08-11 22:36:39 INFO  Job:1367 -  map 100% reduce 0%
2021-08-11 22:36:43 INFO  Job:1367 -  map 100% reduce 100%
2021-08-11 22:36:49 INFO  Job:1378 - Job job_1628721162120_0004 completed successfully
2021-08-11 22:36:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=695535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37628
		Total time spent by all reduces in occupied slots (ms)=13484
		Total time spent by all map tasks (ms)=9407
		Total time spent by all reduce tasks (ms)=3371
		Total vcore-milliseconds taken by all map tasks=9407
		Total vcore-milliseconds taken by all reduce tasks=3371
		Total megabyte-milliseconds taken by all map tasks=38531072
		Total megabyte-milliseconds taken by all reduce tasks=13807616
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=6920
		Physical memory (bytes) snapshot=1305075712
		Virtual memory (bytes) snapshot=15814553600
		Total committed heap usage (bytes)=1064304640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:36:49.590" endtime="20210811 22:36:49.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:36:49.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:36:49.591" endtime="20210811 22:36:49.592"/>
</kw>
<status status="PASS" starttime="20210811 22:36:11.179" endtime="20210811 22:36:49.592"/>
</kw>
<msg timestamp="20210811 22:36:49.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:36:11.178" endtime="20210811 22:36:49.592"/>
</kw>
<msg timestamp="20210811 22:36:49.592" level="INFO">${output} = 2021-08-11 22:36:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-08-11 22:36:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210811 22:36:11.178" endtime="20210811 22:36:49.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:36:49.593" endtime="20210811 22:36:49.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:36:49.593" endtime="20210811 22:36:49.593"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:36:11.147" endtime="20210811 22:36:49.594"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:35:39.040" endtime="20210811 22:36:49.595"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:17.604" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:26.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20210811 22:33:26.813" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:33:17.599" endtime="20210811 22:33:26.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:26.814" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:33:26.814" endtime="20210811 22:33:26.814"/>
</kw>
<msg timestamp="20210811 22:33:26.815" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:33:17.598" endtime="20210811 22:33:26.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:26.819" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:28.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:28.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:26.817" endtime="20210811 22:33:28.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:28.924" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:28.924" endtime="20210811 22:33:28.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:28.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:28.925" endtime="20210811 22:33:28.925"/>
</kw>
<status status="PASS" starttime="20210811 22:33:26.816" endtime="20210811 22:33:28.925"/>
</kw>
<msg timestamp="20210811 22:33:28.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:26.816" endtime="20210811 22:33:28.926"/>
</kw>
<msg timestamp="20210811 22:33:28.926" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210811 22:33:26.816" endtime="20210811 22:33:28.926"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:33:28.926" endtime="20210811 22:33:28.926"/>
</kw>
<status status="PASS" starttime="20210811 22:33:26.815" endtime="20210811 22:33:28.927"/>
</kw>
<status status="PASS" starttime="20210811 22:33:26.815" endtime="20210811 22:33:28.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:28.931" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:31.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:31.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:28.929" endtime="20210811 22:33:31.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:31.025" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:31.024" endtime="20210811 22:33:31.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:31.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:31.025" endtime="20210811 22:33:31.025"/>
</kw>
<status status="PASS" starttime="20210811 22:33:28.929" endtime="20210811 22:33:31.026"/>
</kw>
<msg timestamp="20210811 22:33:31.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:28.928" endtime="20210811 22:33:31.026"/>
</kw>
<status status="PASS" starttime="20210811 22:33:28.928" endtime="20210811 22:33:31.026"/>
</kw>
<status status="PASS" starttime="20210811 22:33:28.927" endtime="20210811 22:33:31.026"/>
</kw>
<status status="PASS" starttime="20210811 22:33:28.927" endtime="20210811 22:33:31.026"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 22:33:31.026" endtime="20210811 22:33:31.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:31.030" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:33.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:33.357" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:33...</msg>
<status status="PASS" starttime="20210811 22:33:31.028" endtime="20210811 22:33:33.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:33.358" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:33:30.999Z",
  "modificationTime" : "2021-08-11T22:33:30.999Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210811 22:33:33.358" endtime="20210811 22:33:33.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:33.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:33.359" endtime="20210811 22:33:33.359"/>
</kw>
<status status="PASS" starttime="20210811 22:33:31.028" endtime="20210811 22:33:33.359"/>
</kw>
<msg timestamp="20210811 22:33:33.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:31.027" endtime="20210811 22:33:33.360"/>
</kw>
<msg timestamp="20210811 22:33:33.360" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:33...</msg>
<status status="PASS" starttime="20210811 22:33:31.027" endtime="20210811 22:33:33.360"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:33:33.360" endtime="20210811 22:33:33.360"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:33:33.364" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:33:33.364" endtime="20210811 22:33:33.364"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:33:33.365" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:33:33.365" endtime="20210811 22:33:33.365"/>
</kw>
<status status="PASS" starttime="20210811 22:33:33.363" endtime="20210811 22:33:33.366"/>
</kw>
<msg timestamp="20210811 22:33:33.366" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:33:33.362" endtime="20210811 22:33:33.366"/>
</kw>
<status status="PASS" starttime="20210811 22:33:33.362" endtime="20210811 22:33:33.366"/>
</kw>
<msg timestamp="20210811 22:33:33.366" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:33:33.361" endtime="20210811 22:33:33.366"/>
</kw>
<msg timestamp="20210811 22:33:33.366" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:33:33.360" endtime="20210811 22:33:33.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:33.369" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:35.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:35.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:33.368" endtime="20210811 22:33:35.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:35.690" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:35.689" endtime="20210811 22:33:35.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:35.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:35.690" endtime="20210811 22:33:35.691"/>
</kw>
<status status="PASS" starttime="20210811 22:33:33.367" endtime="20210811 22:33:35.691"/>
</kw>
<msg timestamp="20210811 22:33:35.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:33.367" endtime="20210811 22:33:35.691"/>
</kw>
<status status="PASS" starttime="20210811 22:33:33.367" endtime="20210811 22:33:35.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:35.694" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:40.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:40.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:35.693" endtime="20210811 22:33:40.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:40.209" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:40.208" endtime="20210811 22:33:40.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:40.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:40.209" endtime="20210811 22:33:40.209"/>
</kw>
<status status="PASS" starttime="20210811 22:33:35.692" endtime="20210811 22:33:40.210"/>
</kw>
<msg timestamp="20210811 22:33:40.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:35.692" endtime="20210811 22:33:40.210"/>
</kw>
<status status="PASS" starttime="20210811 22:33:35.691" endtime="20210811 22:33:40.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:40.213" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:44.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:44.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:40.211" endtime="20210811 22:33:44.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:44.216" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:44.216" endtime="20210811 22:33:44.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:44.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:44.217" endtime="20210811 22:33:44.217"/>
</kw>
<status status="PASS" starttime="20210811 22:33:40.211" endtime="20210811 22:33:44.217"/>
</kw>
<msg timestamp="20210811 22:33:44.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:40.211" endtime="20210811 22:33:44.218"/>
</kw>
<status status="PASS" starttime="20210811 22:33:40.210" endtime="20210811 22:33:44.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:44.221" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:48.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:48.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:44.219" endtime="20210811 22:33:48.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:48.077" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:48.076" endtime="20210811 22:33:48.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:48.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:48.077" endtime="20210811 22:33:48.077"/>
</kw>
<status status="PASS" starttime="20210811 22:33:44.219" endtime="20210811 22:33:48.078"/>
</kw>
<msg timestamp="20210811 22:33:48.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:44.218" endtime="20210811 22:33:48.078"/>
</kw>
<status status="PASS" starttime="20210811 22:33:44.218" endtime="20210811 22:33:48.078"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:33:17.598" endtime="20210811 22:33:48.078"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:33:48.084" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:33:48.083" endtime="20210811 22:33:48.084"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:33:48.084" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:33:48.084" endtime="20210811 22:33:48.084"/>
</kw>
<status status="PASS" starttime="20210811 22:33:48.083" endtime="20210811 22:33:48.085"/>
</kw>
<msg timestamp="20210811 22:33:48.085" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:33:48.082" endtime="20210811 22:33:48.085"/>
</kw>
<status status="PASS" starttime="20210811 22:33:48.081" endtime="20210811 22:33:48.085"/>
</kw>
<msg timestamp="20210811 22:33:48.085" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:33:48.081" endtime="20210811 22:33:48.085"/>
</kw>
<msg timestamp="20210811 22:33:48.085" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:33:48.080" endtime="20210811 22:33:48.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:48.088" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:50.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:50.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:48.087" endtime="20210811 22:33:50.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:50.234" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:50.233" endtime="20210811 22:33:50.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:50.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:50.234" endtime="20210811 22:33:50.234"/>
</kw>
<status status="PASS" starttime="20210811 22:33:48.086" endtime="20210811 22:33:50.235"/>
</kw>
<msg timestamp="20210811 22:33:50.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:48.086" endtime="20210811 22:33:50.235"/>
</kw>
<status status="PASS" starttime="20210811 22:33:48.086" endtime="20210811 22:33:50.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:33:50.238" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:33:52.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:33:52.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:33:50.236" endtime="20210811 22:33:52.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:33:52.347" level="INFO"/>
<status status="PASS" starttime="20210811 22:33:52.346" endtime="20210811 22:33:52.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:33:52.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:33:52.347" endtime="20210811 22:33:52.348"/>
</kw>
<status status="PASS" starttime="20210811 22:33:50.236" endtime="20210811 22:33:52.348"/>
</kw>
<msg timestamp="20210811 22:33:52.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:33:50.236" endtime="20210811 22:33:52.348"/>
</kw>
<status status="PASS" starttime="20210811 22:33:50.235" endtime="20210811 22:33:52.349"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:33:48.079" endtime="20210811 22:33:52.349"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210811 22:33:17.528" endtime="20210811 22:33:52.350"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="195221"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:39:04.321" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:39:04.321" endtime="20210811 22:39:04.321"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:39:04.321" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:39:04.321" endtime="20210811 22:39:04.321"/>
</kw>
<status status="PASS" starttime="20210811 22:39:04.320" endtime="20210811 22:39:04.322"/>
</kw>
<msg timestamp="20210811 22:39:04.322" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:39:04.320" endtime="20210811 22:39:04.322"/>
</kw>
<status status="PASS" starttime="20210811 22:39:04.319" endtime="20210811 22:39:04.322"/>
</kw>
<msg timestamp="20210811 22:39:04.322" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:04.319" endtime="20210811 22:39:04.322"/>
</kw>
<msg timestamp="20210811 22:39:04.322" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:04.318" endtime="20210811 22:39:04.322"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:39:04.323" level="INFO">${random} = 64341</msg>
<status status="PASS" starttime="20210811 22:39:04.322" endtime="20210811 22:39:04.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:04.328" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-64341 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:10.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:10.405" level="INFO">${output} = 2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:04.324" endtime="20210811 22:39:10.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:10.406" level="INFO">2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:39:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:39:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:39:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:39:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:39:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:39:10.406" endtime="20210811 22:39:10.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:10.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:10.407" endtime="20210811 22:39:10.407"/>
</kw>
<status status="PASS" starttime="20210811 22:39:04.324" endtime="20210811 22:39:10.407"/>
</kw>
<msg timestamp="20210811 22:39:10.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:04.323" endtime="20210811 22:39:10.407"/>
</kw>
<msg timestamp="20210811 22:39:10.408" level="INFO">${result} = 2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:04.323" endtime="20210811 22:39:10.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:10.411" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:12.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:12.050" level="INFO">${output} = 2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:10.409" endtime="20210811 22:39:12.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:12.051" level="INFO">2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-11 22:39 o3fs://bucket1.volume1.om/ozone-64341
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:38 o3fs://bucket1.volume1.om/user
2021-08-11 22:39:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:39:12.050" endtime="20210811 22:39:12.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:12.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:12.051" endtime="20210811 22:39:12.052"/>
</kw>
<status status="PASS" starttime="20210811 22:39:10.409" endtime="20210811 22:39:12.052"/>
</kw>
<msg timestamp="20210811 22:39:12.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:10.408" endtime="20210811 22:39:12.052"/>
</kw>
<msg timestamp="20210811 22:39:12.052" level="INFO">${result} = 2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:10.408" endtime="20210811 22:39:12.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:39:12.053" endtime="20210811 22:39:12.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:12.056" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-64341 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:15.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:15.111" level="INFO">${output} = 2021-08-11 22:39:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:12.055" endtime="20210811 22:39:15.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:15.112" level="INFO">2021-08-11 22:39:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:39:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:39:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:39:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-08-11 22:39:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:39:15.112" endtime="20210811 22:39:15.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:15.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:15.113" endtime="20210811 22:39:15.113"/>
</kw>
<status status="PASS" starttime="20210811 22:39:12.054" endtime="20210811 22:39:15.114"/>
</kw>
<msg timestamp="20210811 22:39:15.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:12.054" endtime="20210811 22:39:15.114"/>
</kw>
<msg timestamp="20210811 22:39:15.115" level="INFO">${result} = 2021-08-11 22:39:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:12.053" endtime="20210811 22:39:15.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:39:15.115" endtime="20210811 22:39:15.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:39:04.317" endtime="20210811 22:39:15.116"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:39:04.271" endtime="20210811 22:39:15.117"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:19.305" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:19.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:19.310" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:19.302" endtime="20210811 22:39:19.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:19.311" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:19.310" endtime="20210811 22:39:19.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:19.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:19.311" endtime="20210811 22:39:19.312"/>
</kw>
<status status="PASS" starttime="20210811 22:39:19.302" endtime="20210811 22:39:19.312"/>
</kw>
<msg timestamp="20210811 22:39:19.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:19.301" endtime="20210811 22:39:19.312"/>
</kw>
<msg timestamp="20210811 22:39:19.312" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:19.301" endtime="20210811 22:39:19.312"/>
</kw>
<msg timestamp="20210811 22:39:19.312" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:19.301" endtime="20210811 22:39:19.312"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:39:19.316" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:39:19.316" endtime="20210811 22:39:19.316"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:39:19.317" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:39:19.317" endtime="20210811 22:39:19.317"/>
</kw>
<status status="PASS" starttime="20210811 22:39:19.316" endtime="20210811 22:39:19.317"/>
</kw>
<msg timestamp="20210811 22:39:19.317" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:39:19.315" endtime="20210811 22:39:19.317"/>
</kw>
<status status="PASS" starttime="20210811 22:39:19.315" endtime="20210811 22:39:19.317"/>
</kw>
<msg timestamp="20210811 22:39:19.318" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:19.314" endtime="20210811 22:39:19.318"/>
</kw>
<msg timestamp="20210811 22:39:19.318" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:19.313" endtime="20210811 22:39:19.318"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:19.320" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:54.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:54.975" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39...</msg>
<status status="PASS" starttime="20210811 22:39:19.319" endtime="20210811 22:39:54.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:54.976" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:39:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:39:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:39:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:39:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-08-11 22:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:22 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:39:23 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:39:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721456385_0001
2021-08-11 22:39:23 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:39:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:23 INFO  Configuration:2752 - resource-types.xml not found
2021-08-11 22:39:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-11 22:39:23 INFO  YarnClientImpl:324 - Submitted application application_1628721456385_0001
2021-08-11 22:39:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628721456385_0001/
2021-08-11 22:39:23 INFO  Job:1619 - Running job: job_1628721456385_0001
2021-08-11 22:39:33 INFO  Job:1640 - Job job_1628721456385_0001 running in uber mode : false
2021-08-11 22:39:33 INFO  Job:1647 -  map 0% reduce 0%
2021-08-11 22:39:39 INFO  Job:1647 -  map 33% reduce 0%
2021-08-11 22:39:44 INFO  Job:1647 -  map 67% reduce 0%
2021-08-11 22:39:49 INFO  Job:1647 -  map 100% reduce 0%
2021-08-11 22:39:53 INFO  Job:1647 -  map 100% reduce 100%
2021-08-11 22:39:54 INFO  Job:1658 - Job job_1628721456385_0001 completed successfully
2021-08-11 22:39:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1041109
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36900
		Total time spent by all reduces in occupied slots (ms)=13788
		Total time spent by all map tasks (ms)=9225
		Total time spent by all reduce tasks (ms)=3447
		Total vcore-milliseconds taken by all map tasks=9225
		Total vcore-milliseconds taken by all reduce tasks=3447
		Total megabyte-milliseconds taken by all map tasks=37785600
		Total megabyte-milliseconds taken by all reduce tasks=14118912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=532
		CPU time spent (ms)=6150
		Physical memory (bytes) snapshot=1557323776
		Virtual memory (bytes) snapshot=15826284544
		Total committed heap usage (bytes)=1397227520
		Peak Map Physical memory (bytes)=405774336
		Peak Map Virtual memory (bytes)=3956076544
		Peak Reduce Physical memory (bytes)=346693632
		Peak Reduce Virtual memory (bytes)=3972083712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.974 seconds
2021-08-11 22:39:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:54 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-08-11 22:39:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:39:54.975" endtime="20210811 22:39:54.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:54.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:54.976" endtime="20210811 22:39:54.977"/>
</kw>
<status status="PASS" starttime="20210811 22:39:19.319" endtime="20210811 22:39:54.977"/>
</kw>
<msg timestamp="20210811 22:39:54.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:19.318" endtime="20210811 22:39:54.977"/>
</kw>
<msg timestamp="20210811 22:39:54.977" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39...</msg>
<status status="PASS" starttime="20210811 22:39:19.318" endtime="20210811 22:39:54.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:39:54.978" endtime="20210811 22:39:54.978"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:39:19.300" endtime="20210811 22:39:54.978"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:54.983" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:39:54.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:39:54.988" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:54.981" endtime="20210811 22:39:54.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:39:54.989" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:54.988" endtime="20210811 22:39:54.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:39:54.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:39:54.989" endtime="20210811 22:39:54.990"/>
</kw>
<status status="PASS" starttime="20210811 22:39:54.980" endtime="20210811 22:39:54.990"/>
</kw>
<msg timestamp="20210811 22:39:54.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:54.980" endtime="20210811 22:39:54.990"/>
</kw>
<msg timestamp="20210811 22:39:54.990" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:54.980" endtime="20210811 22:39:54.990"/>
</kw>
<msg timestamp="20210811 22:39:54.990" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:39:54.979" endtime="20210811 22:39:54.990"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:39:54.991" level="INFO">${random} = Bm7eIDb9</msg>
<status status="PASS" starttime="20210811 22:39:54.991" endtime="20210811 22:39:54.991"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:39:54.994" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:39:54.994" endtime="20210811 22:39:54.994"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:39:54.995" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:39:54.994" endtime="20210811 22:39:54.995"/>
</kw>
<status status="PASS" starttime="20210811 22:39:54.993" endtime="20210811 22:39:54.995"/>
</kw>
<msg timestamp="20210811 22:39:54.995" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:39:54.993" endtime="20210811 22:39:54.995"/>
</kw>
<status status="PASS" starttime="20210811 22:39:54.992" endtime="20210811 22:39:54.995"/>
</kw>
<msg timestamp="20210811 22:39:54.995" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:54.992" endtime="20210811 22:39:54.995"/>
</kw>
<msg timestamp="20210811 22:39:54.996" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:39:54.991" endtime="20210811 22:39:54.996"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:39:54.998" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:39:54.998" endtime="20210811 22:39:54.998"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:39:54.999" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:39:54.999" endtime="20210811 22:39:54.999"/>
</kw>
<status status="PASS" starttime="20210811 22:39:54.998" endtime="20210811 22:39:54.999"/>
</kw>
<msg timestamp="20210811 22:39:54.999" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:39:54.997" endtime="20210811 22:39:54.999"/>
</kw>
<status status="PASS" starttime="20210811 22:39:54.997" endtime="20210811 22:39:55.000"/>
</kw>
<msg timestamp="20210811 22:39:55.000" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:39:54.996" endtime="20210811 22:39:55.000"/>
</kw>
<msg timestamp="20210811 22:39:55.000" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:39:54.996" endtime="20210811 22:39:55.000"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:39:55.003" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:39:55.002" endtime="20210811 22:39:55.003"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:39:55.003" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:39:55.003" endtime="20210811 22:39:55.003"/>
</kw>
<status status="PASS" starttime="20210811 22:39:55.002" endtime="20210811 22:39:55.003"/>
</kw>
<msg timestamp="20210811 22:39:55.003" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:39:55.002" endtime="20210811 22:39:55.003"/>
</kw>
<status status="PASS" starttime="20210811 22:39:55.001" endtime="20210811 22:39:55.004"/>
</kw>
<msg timestamp="20210811 22:39:55.004" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-Bm7eIDb9.txt</msg>
<status status="PASS" starttime="20210811 22:39:55.001" endtime="20210811 22:39:55.004"/>
</kw>
<msg timestamp="20210811 22:39:55.004" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-Bm7eIDb9.txt</msg>
<status status="PASS" starttime="20210811 22:39:55.000" endtime="20210811 22:39:55.004"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:39:55.010" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-Bm7eIDb9.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:40:32.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:40:32.564" level="INFO">${output} = 2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:55.005" endtime="20210811 22:40:32.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:40:32.565" level="INFO">2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:39:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:39:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:39:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:39:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:39:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:39:58 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:39:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721456385_0002
2021-08-11 22:39:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:58 INFO  Configuration:2752 - resource-types.xml not found
2021-08-11 22:39:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-11 22:39:58 INFO  YarnClientImpl:324 - Submitted application application_1628721456385_0002
2021-08-11 22:39:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628721456385_0002/
2021-08-11 22:39:58 INFO  Job:1619 - Running job: job_1628721456385_0002
2021-08-11 22:40:06 INFO  Job:1640 - Job job_1628721456385_0002 running in uber mode : false
2021-08-11 22:40:06 INFO  Job:1647 -  map 0% reduce 0%
2021-08-11 22:40:11 INFO  Job:1647 -  map 33% reduce 0%
2021-08-11 22:40:16 INFO  Job:1647 -  map 67% reduce 0%
2021-08-11 22:40:22 INFO  Job:1647 -  map 100% reduce 0%
2021-08-11 22:40:26 INFO  Job:1647 -  map 100% reduce 100%
2021-08-11 22:40:32 INFO  Job:1658 - Job job_1628721456385_0002 completed successfully
2021-08-11 22:40:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1103867
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37228
		Total time spent by all reduces in occupied slots (ms)=13668
		Total time spent by all map tasks (ms)=9307
		Total time spent by all reduce tasks (ms)=3417
		Total vcore-milliseconds taken by all map tasks=9307
		Total vcore-milliseconds taken by all reduce tasks=3417
		Total megabyte-milliseconds taken by all map tasks=38121472
		Total megabyte-milliseconds taken by all reduce tasks=13996032
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=787
		CPU time spent (ms)=6700
		Physical memory (bytes) snapshot=1696026624
		Virtual memory (bytes) snapshot=15806328832
		Total committed heap usage (bytes)=1611137024
		Peak Map Physical memory (bytes)=565207040
		Peak Map Virtual memory (bytes)=3950616576
		Peak Reduce Physical memory (bytes)=339324928
		Peak Reduce Virtual memory (bytes)=3969495040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-08-11 22:40:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:40:32.564" endtime="20210811 22:40:32.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:40:32.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:40:32.566" endtime="20210811 22:40:32.566"/>
</kw>
<status status="PASS" starttime="20210811 22:39:55.005" endtime="20210811 22:40:32.566"/>
</kw>
<msg timestamp="20210811 22:40:32.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:39:55.005" endtime="20210811 22:40:32.566"/>
</kw>
<msg timestamp="20210811 22:40:32.567" level="INFO">${output} = 2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:39:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:39:55.004" endtime="20210811 22:40:32.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:40:32.567" endtime="20210811 22:40:32.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:40:32.568" endtime="20210811 22:40:32.568"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:39:54.979" endtime="20210811 22:40:32.568"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:39:19.255" endtime="20210811 22:40:32.569"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:40:36.932" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:40:36.932" endtime="20210811 22:40:36.932"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:40:36.933" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:40:36.932" endtime="20210811 22:40:36.933"/>
</kw>
<status status="PASS" starttime="20210811 22:40:36.931" endtime="20210811 22:40:36.933"/>
</kw>
<msg timestamp="20210811 22:40:36.933" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:40:36.931" endtime="20210811 22:40:36.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:40:36.934" endtime="20210811 22:40:36.934"/>
</kw>
<msg timestamp="20210811 22:40:36.934" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:40:36.933" endtime="20210811 22:40:36.934"/>
</kw>
<status status="PASS" starttime="20210811 22:40:36.930" endtime="20210811 22:40:36.934"/>
</kw>
<msg timestamp="20210811 22:40:36.934" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:40:36.930" endtime="20210811 22:40:36.934"/>
</kw>
<msg timestamp="20210811 22:40:36.935" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:40:36.929" endtime="20210811 22:40:36.935"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:40:36.935" level="INFO">${random} = 87123</msg>
<status status="PASS" starttime="20210811 22:40:36.935" endtime="20210811 22:40:36.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:40:36.940" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-87123 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:40:40.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:40:40.167" level="INFO">${output} = 2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:36.936" endtime="20210811 22:40:40.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:40:40.168" level="INFO">2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:40:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:40:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:40:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:40:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:40:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:40:40.167" endtime="20210811 22:40:40.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:40:40.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:40:40.168" endtime="20210811 22:40:40.169"/>
</kw>
<status status="PASS" starttime="20210811 22:40:36.936" endtime="20210811 22:40:40.169"/>
</kw>
<msg timestamp="20210811 22:40:40.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:40:36.936" endtime="20210811 22:40:40.169"/>
</kw>
<msg timestamp="20210811 22:40:40.170" level="INFO">${result} = 2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:36.935" endtime="20210811 22:40:40.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:40:40.173" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:40:41.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:40:41.879" level="INFO">${output} = 2021-08-11 22:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:40.171" endtime="20210811 22:40:41.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:40:41.880" level="INFO">2021-08-11 22:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-11 22:39 ofs://om/volume1/bucket1/ozone-64341
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-11 22:40 ofs://om/volume1/bucket1/ozone-87123
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:40 ofs://om/volume1/bucket1/wordcount-Bm7eIDb9.txt
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:40:41.879" endtime="20210811 22:40:41.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:40:41.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:40:41.880" endtime="20210811 22:40:41.881"/>
</kw>
<status status="PASS" starttime="20210811 22:40:40.171" endtime="20210811 22:40:41.881"/>
</kw>
<msg timestamp="20210811 22:40:41.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:40:40.170" endtime="20210811 22:40:41.881"/>
</kw>
<msg timestamp="20210811 22:40:41.881" level="INFO">${result} = 2021-08-11 22:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:40.170" endtime="20210811 22:40:41.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:40:41.881" endtime="20210811 22:40:41.882"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:40:41.885" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-87123 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:40:44.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:40:44.759" level="INFO">${output} = 2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:41.883" endtime="20210811 22:40:44.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:40:44.760" level="INFO">2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:40:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:40:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:40:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-08-11 22:40:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:40:44.759" endtime="20210811 22:40:44.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:40:44.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:40:44.761" endtime="20210811 22:40:44.761"/>
</kw>
<status status="PASS" starttime="20210811 22:40:41.883" endtime="20210811 22:40:44.761"/>
</kw>
<msg timestamp="20210811 22:40:44.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:40:41.883" endtime="20210811 22:40:44.762"/>
</kw>
<msg timestamp="20210811 22:40:44.763" level="INFO">${result} = 2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:40:41.882" endtime="20210811 22:40:44.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:40:44.763" endtime="20210811 22:40:44.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:40:36.928" endtime="20210811 22:40:44.764"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:40:36.883" endtime="20210811 22:40:44.764"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:40:48.974" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:40:48.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:40:48.980" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:40:48.970" endtime="20210811 22:40:48.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:40:48.980" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:40:48.980" endtime="20210811 22:40:48.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:40:48.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:40:48.981" endtime="20210811 22:40:48.981"/>
</kw>
<status status="PASS" starttime="20210811 22:40:48.970" endtime="20210811 22:40:48.981"/>
</kw>
<msg timestamp="20210811 22:40:48.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:40:48.970" endtime="20210811 22:40:48.981"/>
</kw>
<msg timestamp="20210811 22:40:48.982" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:40:48.969" endtime="20210811 22:40:48.982"/>
</kw>
<msg timestamp="20210811 22:40:48.982" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:40:48.969" endtime="20210811 22:40:48.982"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:40:48.986" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:40:48.985" endtime="20210811 22:40:48.986"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:40:48.986" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:40:48.986" endtime="20210811 22:40:48.986"/>
</kw>
<status status="PASS" starttime="20210811 22:40:48.985" endtime="20210811 22:40:48.986"/>
</kw>
<msg timestamp="20210811 22:40:48.986" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:40:48.985" endtime="20210811 22:40:48.986"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:40:48.987" endtime="20210811 22:40:48.987"/>
</kw>
<msg timestamp="20210811 22:40:48.987" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:40:48.987" endtime="20210811 22:40:48.987"/>
</kw>
<status status="PASS" starttime="20210811 22:40:48.984" endtime="20210811 22:40:48.988"/>
</kw>
<msg timestamp="20210811 22:40:48.988" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:40:48.983" endtime="20210811 22:40:48.988"/>
</kw>
<msg timestamp="20210811 22:40:48.988" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:40:48.982" endtime="20210811 22:40:48.988"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:40:48.991" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:41:28.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:41:28.779" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40...</msg>
<status status="PASS" starttime="20210811 22:40:48.989" endtime="20210811 22:41:28.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:41:28.780" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:40:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:40:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:40:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:40:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:40:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:40:57 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:40:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721456385_0003
2021-08-11 22:40:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:57 INFO  Configuration:2752 - resource-types.xml not found
2021-08-11 22:40:57 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-11 22:40:57 INFO  YarnClientImpl:324 - Submitted application application_1628721456385_0003
2021-08-11 22:40:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628721456385_0003/
2021-08-11 22:40:57 INFO  Job:1619 - Running job: job_1628721456385_0003
2021-08-11 22:41:04 INFO  Job:1640 - Job job_1628721456385_0003 running in uber mode : false
2021-08-11 22:41:04 INFO  Job:1647 -  map 0% reduce 0%
2021-08-11 22:41:10 INFO  Job:1647 -  map 33% reduce 0%
2021-08-11 22:41:15 INFO  Job:1647 -  map 67% reduce 0%
2021-08-11 22:41:20 INFO  Job:1647 -  map 100% reduce 0%
2021-08-11 22:41:27 INFO  Job:1647 -  map 100% reduce 100%
2021-08-11 22:41:28 INFO  Job:1658 - Job job_1628721456385_0003 completed successfully
2021-08-11 22:41:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1040897
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35420
		Total time spent by all reduces in occupied slots (ms)=23096
		Total time spent by all map tasks (ms)=8855
		Total time spent by all reduce tasks (ms)=5774
		Total vcore-milliseconds taken by all map tasks=8855
		Total vcore-milliseconds taken by all reduce tasks=5774
		Total megabyte-milliseconds taken by all map tasks=36270080
		Total megabyte-milliseconds taken by all reduce tasks=23650304
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=543
		CPU time spent (ms)=6010
		Physical memory (bytes) snapshot=1495052288
		Virtual memory (bytes) snapshot=15788142592
		Total committed heap usage (bytes)=1395130368
		Peak Map Physical memory (bytes)=393977856
		Peak Map Virtual memory (bytes)=3945791488
		Peak Reduce Physical memory (bytes)=337813504
		Peak Reduce Virtual memory (bytes)=3966586880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.974 seconds
2021-08-11 22:41:28 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-08-11 22:41:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:41:28.779" endtime="20210811 22:41:28.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:41:28.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:41:28.780" endtime="20210811 22:41:28.781"/>
</kw>
<status status="PASS" starttime="20210811 22:40:48.989" endtime="20210811 22:41:28.781"/>
</kw>
<msg timestamp="20210811 22:41:28.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:40:48.989" endtime="20210811 22:41:28.781"/>
</kw>
<msg timestamp="20210811 22:41:28.781" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:40...</msg>
<status status="PASS" starttime="20210811 22:40:48.988" endtime="20210811 22:41:28.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:41:28.782" endtime="20210811 22:41:28.782"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:40:48.968" endtime="20210811 22:41:28.782"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:41:28.787" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:41:28.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:41:28.792" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:41:28.785" endtime="20210811 22:41:28.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:41:28.793" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:41:28.793" endtime="20210811 22:41:28.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:41:28.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:41:28.793" endtime="20210811 22:41:28.794"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.785" endtime="20210811 22:41:28.794"/>
</kw>
<msg timestamp="20210811 22:41:28.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:41:28.785" endtime="20210811 22:41:28.794"/>
</kw>
<msg timestamp="20210811 22:41:28.794" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:41:28.784" endtime="20210811 22:41:28.795"/>
</kw>
<msg timestamp="20210811 22:41:28.795" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210811 22:41:28.784" endtime="20210811 22:41:28.795"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:41:28.795" level="INFO">${random} = uHnQBGFn</msg>
<status status="PASS" starttime="20210811 22:41:28.795" endtime="20210811 22:41:28.795"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:41:28.798" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:41:28.798" endtime="20210811 22:41:28.798"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:41:28.799" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.798" endtime="20210811 22:41:28.799"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.798" endtime="20210811 22:41:28.799"/>
</kw>
<msg timestamp="20210811 22:41:28.799" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.797" endtime="20210811 22:41:28.799"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:41:28.800" endtime="20210811 22:41:28.800"/>
</kw>
<msg timestamp="20210811 22:41:28.800" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:41:28.799" endtime="20210811 22:41:28.800"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.797" endtime="20210811 22:41:28.800"/>
</kw>
<msg timestamp="20210811 22:41:28.801" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:41:28.796" endtime="20210811 22:41:28.801"/>
</kw>
<msg timestamp="20210811 22:41:28.801" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:41:28.796" endtime="20210811 22:41:28.801"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:41:28.804" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:41:28.803" endtime="20210811 22:41:28.804"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:41:28.804" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.804" endtime="20210811 22:41:28.804"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.803" endtime="20210811 22:41:28.804"/>
</kw>
<msg timestamp="20210811 22:41:28.804" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.802" endtime="20210811 22:41:28.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:41:28.806" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210811 22:41:28.805" endtime="20210811 22:41:28.806"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:41:28.806" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210811 22:41:28.806" endtime="20210811 22:41:28.806"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.805" endtime="20210811 22:41:28.807"/>
</kw>
<msg timestamp="20210811 22:41:28.807" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210811 22:41:28.805" endtime="20210811 22:41:28.807"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.802" endtime="20210811 22:41:28.807"/>
</kw>
<msg timestamp="20210811 22:41:28.807" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:41:28.801" endtime="20210811 22:41:28.807"/>
</kw>
<msg timestamp="20210811 22:41:28.807" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:41:28.801" endtime="20210811 22:41:28.807"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:41:28.810" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:41:28.810" endtime="20210811 22:41:28.810"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:41:28.811" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.810" endtime="20210811 22:41:28.811"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.809" endtime="20210811 22:41:28.811"/>
</kw>
<msg timestamp="20210811 22:41:28.811" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:41:28.809" endtime="20210811 22:41:28.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:41:28.812" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210811 22:41:28.812" endtime="20210811 22:41:28.812"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:41:28.813" level="INFO">${result} = /wordcount-uHnQBGFn.txt</msg>
<status status="PASS" starttime="20210811 22:41:28.812" endtime="20210811 22:41:28.813"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.812" endtime="20210811 22:41:28.813"/>
</kw>
<msg timestamp="20210811 22:41:28.813" level="INFO">${path_with_leading} = /wordcount-uHnQBGFn.txt</msg>
<status status="PASS" starttime="20210811 22:41:28.811" endtime="20210811 22:41:28.813"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.808" endtime="20210811 22:41:28.813"/>
</kw>
<msg timestamp="20210811 22:41:28.813" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-uHnQBGFn.txt</msg>
<status status="PASS" starttime="20210811 22:41:28.808" endtime="20210811 22:41:28.813"/>
</kw>
<msg timestamp="20210811 22:41:28.814" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-uHnQBGFn.txt</msg>
<status status="PASS" starttime="20210811 22:41:28.807" endtime="20210811 22:41:28.814"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:41:28.817" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-uHnQBGFn.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:42:06.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:42:06.319" level="INFO">${output} = 2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:41:28.815" endtime="20210811 22:42:06.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:42:06.320" level="INFO">2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-11 22:41:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-11 22:41:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:41:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:41:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:41:31 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:41:32 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:41:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721456385_0004
2021-08-11 22:41:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:41:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:32 INFO  Configuration:2752 - resource-types.xml not found
2021-08-11 22:41:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-11 22:41:32 INFO  YarnClientImpl:324 - Submitted application application_1628721456385_0004
2021-08-11 22:41:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628721456385_0004/
2021-08-11 22:41:32 INFO  Job:1619 - Running job: job_1628721456385_0004
2021-08-11 22:41:39 INFO  Job:1640 - Job job_1628721456385_0004 running in uber mode : false
2021-08-11 22:41:39 INFO  Job:1647 -  map 0% reduce 0%
2021-08-11 22:41:46 INFO  Job:1647 -  map 33% reduce 0%
2021-08-11 22:41:50 INFO  Job:1647 -  map 67% reduce 0%
2021-08-11 22:41:55 INFO  Job:1647 -  map 100% reduce 0%
2021-08-11 22:41:59 INFO  Job:1647 -  map 100% reduce 100%
2021-08-11 22:42:05 INFO  Job:1658 - Job job_1628721456385_0004 completed successfully
2021-08-11 22:42:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:42:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1103783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36308
		Total time spent by all reduces in occupied slots (ms)=12808
		Total time spent by all map tasks (ms)=9077
		Total time spent by all reduce tasks (ms)=3202
		Total vcore-milliseconds taken by all map tasks=9077
		Total vcore-milliseconds taken by all reduce tasks=3202
		Total megabyte-milliseconds taken by all map tasks=37179392
		Total megabyte-milliseconds taken by all reduce tasks=13115392
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=527
		CPU time spent (ms)=6350
		Physical memory (bytes) snapshot=1525403648
		Virtual memory (bytes) snapshot=15820222464
		Total committed heap usage (bytes)=1390936064
		Peak Map Physical memory (bytes)=399806464
		Peak Map Virtual memory (bytes)=3954536448
		Peak Reduce Physical memory (bytes)=338419712
		Peak Reduce Virtual memory (bytes)=3973046272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-08-11 22:42:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210811 22:42:06.319" endtime="20210811 22:42:06.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:42:06.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:42:06.320" endtime="20210811 22:42:06.320"/>
</kw>
<status status="PASS" starttime="20210811 22:41:28.815" endtime="20210811 22:42:06.321"/>
</kw>
<msg timestamp="20210811 22:42:06.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:41:28.814" endtime="20210811 22:42:06.321"/>
</kw>
<msg timestamp="20210811 22:42:06.321" level="INFO">${output} = 2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-11 22:41:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210811 22:41:28.814" endtime="20210811 22:42:06.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:42:06.321" endtime="20210811 22:42:06.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:42:06.322" endtime="20210811 22:42:06.322"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:41:28.783" endtime="20210811 22:42:06.322"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:40:48.924" endtime="20210811 22:42:06.323"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:31.411" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:33.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20210811 22:38:33.823" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:38:31.407" endtime="20210811 22:38:33.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:33.824" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:38:33.823" endtime="20210811 22:38:33.824"/>
</kw>
<msg timestamp="20210811 22:38:33.824" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:38:31.407" endtime="20210811 22:38:33.825"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:33.829" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:36.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:36.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:33.827" endtime="20210811 22:38:36.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:36.054" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:36.053" endtime="20210811 22:38:36.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:36.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:36.054" endtime="20210811 22:38:36.054"/>
</kw>
<status status="PASS" starttime="20210811 22:38:33.827" endtime="20210811 22:38:36.055"/>
</kw>
<msg timestamp="20210811 22:38:36.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:33.826" endtime="20210811 22:38:36.055"/>
</kw>
<msg timestamp="20210811 22:38:36.055" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210811 22:38:33.826" endtime="20210811 22:38:36.055"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:38:36.055" endtime="20210811 22:38:36.056"/>
</kw>
<status status="PASS" starttime="20210811 22:38:33.826" endtime="20210811 22:38:36.056"/>
</kw>
<status status="PASS" starttime="20210811 22:38:33.825" endtime="20210811 22:38:36.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:36.061" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:38.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:38.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:36.058" endtime="20210811 22:38:38.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:38.242" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:38.242" endtime="20210811 22:38:38.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:38.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:38.243" endtime="20210811 22:38:38.243"/>
</kw>
<status status="PASS" starttime="20210811 22:38:36.058" endtime="20210811 22:38:38.244"/>
</kw>
<msg timestamp="20210811 22:38:38.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:36.058" endtime="20210811 22:38:38.244"/>
</kw>
<status status="PASS" starttime="20210811 22:38:36.057" endtime="20210811 22:38:38.244"/>
</kw>
<status status="PASS" starttime="20210811 22:38:36.057" endtime="20210811 22:38:38.244"/>
</kw>
<status status="PASS" starttime="20210811 22:38:36.056" endtime="20210811 22:38:38.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 22:38:38.244" endtime="20210811 22:38:38.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:38.248" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:40.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:40.704" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:38...</msg>
<status status="PASS" starttime="20210811 22:38:38.246" endtime="20210811 22:38:40.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:40.706" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:38:38.200Z",
  "modificationTime" : "2021-08-11T22:38:38.200Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210811 22:38:40.705" endtime="20210811 22:38:40.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:40.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:40.706" endtime="20210811 22:38:40.706"/>
</kw>
<status status="PASS" starttime="20210811 22:38:38.245" endtime="20210811 22:38:40.707"/>
</kw>
<msg timestamp="20210811 22:38:40.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:38.245" endtime="20210811 22:38:40.707"/>
</kw>
<msg timestamp="20210811 22:38:40.707" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:38...</msg>
<status status="PASS" starttime="20210811 22:38:38.245" endtime="20210811 22:38:40.707"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:38:40.707" endtime="20210811 22:38:40.708"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:38:40.712" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:38:40.711" endtime="20210811 22:38:40.712"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:38:40.712" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:38:40.712" endtime="20210811 22:38:40.712"/>
</kw>
<status status="PASS" starttime="20210811 22:38:40.711" endtime="20210811 22:38:40.713"/>
</kw>
<msg timestamp="20210811 22:38:40.713" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:38:40.710" endtime="20210811 22:38:40.713"/>
</kw>
<status status="PASS" starttime="20210811 22:38:40.709" endtime="20210811 22:38:40.713"/>
</kw>
<msg timestamp="20210811 22:38:40.713" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:38:40.709" endtime="20210811 22:38:40.713"/>
</kw>
<msg timestamp="20210811 22:38:40.713" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:38:40.708" endtime="20210811 22:38:40.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:40.717" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:43.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:43.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:40.715" endtime="20210811 22:38:43.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:43.117" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:43.116" endtime="20210811 22:38:43.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:43.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:43.117" endtime="20210811 22:38:43.118"/>
</kw>
<status status="PASS" starttime="20210811 22:38:40.714" endtime="20210811 22:38:43.118"/>
</kw>
<msg timestamp="20210811 22:38:43.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:40.714" endtime="20210811 22:38:43.118"/>
</kw>
<status status="PASS" starttime="20210811 22:38:40.714" endtime="20210811 22:38:43.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:43.122" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:47.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:47.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:43.120" endtime="20210811 22:38:47.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:47.984" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:47.980" endtime="20210811 22:38:47.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:47.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:47.985" endtime="20210811 22:38:47.985"/>
</kw>
<status status="PASS" starttime="20210811 22:38:43.119" endtime="20210811 22:38:47.986"/>
</kw>
<msg timestamp="20210811 22:38:47.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:43.119" endtime="20210811 22:38:47.986"/>
</kw>
<status status="PASS" starttime="20210811 22:38:43.119" endtime="20210811 22:38:47.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:47.989" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:51.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:51.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:47.987" endtime="20210811 22:38:51.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:51.993" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:51.992" endtime="20210811 22:38:51.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:51.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:51.993" endtime="20210811 22:38:51.993"/>
</kw>
<status status="PASS" starttime="20210811 22:38:47.987" endtime="20210811 22:38:51.994"/>
</kw>
<msg timestamp="20210811 22:38:51.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:47.987" endtime="20210811 22:38:51.994"/>
</kw>
<status status="PASS" starttime="20210811 22:38:47.986" endtime="20210811 22:38:51.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:51.997" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:55.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:55.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:51.995" endtime="20210811 22:38:55.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:55.682" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:55.681" endtime="20210811 22:38:55.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:55.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:55.682" endtime="20210811 22:38:55.683"/>
</kw>
<status status="PASS" starttime="20210811 22:38:51.995" endtime="20210811 22:38:55.683"/>
</kw>
<msg timestamp="20210811 22:38:55.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:51.995" endtime="20210811 22:38:55.683"/>
</kw>
<status status="PASS" starttime="20210811 22:38:51.994" endtime="20210811 22:38:55.683"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:38:31.406" endtime="20210811 22:38:55.683"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:38:55.689" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:38:55.688" endtime="20210811 22:38:55.689"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:38:55.690" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:38:55.689" endtime="20210811 22:38:55.690"/>
</kw>
<status status="PASS" starttime="20210811 22:38:55.688" endtime="20210811 22:38:55.690"/>
</kw>
<msg timestamp="20210811 22:38:55.690" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:38:55.687" endtime="20210811 22:38:55.690"/>
</kw>
<status status="PASS" starttime="20210811 22:38:55.686" endtime="20210811 22:38:55.690"/>
</kw>
<msg timestamp="20210811 22:38:55.690" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:38:55.686" endtime="20210811 22:38:55.690"/>
</kw>
<msg timestamp="20210811 22:38:55.691" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:38:55.685" endtime="20210811 22:38:55.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:55.695" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:57.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:57.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:55.692" endtime="20210811 22:38:57.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:57.858" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:57.856" endtime="20210811 22:38:57.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:57.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:57.858" endtime="20210811 22:38:57.859"/>
</kw>
<status status="PASS" starttime="20210811 22:38:55.692" endtime="20210811 22:38:57.859"/>
</kw>
<msg timestamp="20210811 22:38:57.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:55.691" endtime="20210811 22:38:57.859"/>
</kw>
<status status="PASS" starttime="20210811 22:38:55.691" endtime="20210811 22:38:57.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:38:57.862" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:38:59.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:38:59.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:38:57.861" endtime="20210811 22:38:59.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:38:59.932" level="INFO"/>
<status status="PASS" starttime="20210811 22:38:59.931" endtime="20210811 22:38:59.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:38:59.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:38:59.932" endtime="20210811 22:38:59.933"/>
</kw>
<status status="PASS" starttime="20210811 22:38:57.860" endtime="20210811 22:38:59.933"/>
</kw>
<msg timestamp="20210811 22:38:59.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:38:57.860" endtime="20210811 22:38:59.933"/>
</kw>
<status status="PASS" starttime="20210811 22:38:57.860" endtime="20210811 22:38:59.933"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:38:55.684" endtime="20210811 22:38:59.933"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210811 22:38:31.354" endtime="20210811 22:38:59.935"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="198021"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:44:08.562" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:44:08.561" endtime="20210811 22:44:08.562"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:44:08.562" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:44:08.562" endtime="20210811 22:44:08.562"/>
</kw>
<status status="PASS" starttime="20210811 22:44:08.561" endtime="20210811 22:44:08.562"/>
</kw>
<msg timestamp="20210811 22:44:08.562" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:44:08.561" endtime="20210811 22:44:08.563"/>
</kw>
<status status="PASS" starttime="20210811 22:44:08.560" endtime="20210811 22:44:08.563"/>
</kw>
<msg timestamp="20210811 22:44:08.563" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:44:08.559" endtime="20210811 22:44:08.563"/>
</kw>
<msg timestamp="20210811 22:44:08.563" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:44:08.559" endtime="20210811 22:44:08.563"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:44:08.564" level="INFO">${random} = 03485</msg>
<status status="PASS" starttime="20210811 22:44:08.563" endtime="20210811 22:44:08.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:08.568" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03485 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:14.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:14.575" level="INFO">${output} = 2021-08-11 22:44:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:44:08.565" endtime="20210811 22:44:14.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:14.576" level="INFO">2021-08-11 22:44:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:44:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:44:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:44:14.575" endtime="20210811 22:44:14.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:14.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:14.576" endtime="20210811 22:44:14.577"/>
</kw>
<status status="PASS" starttime="20210811 22:44:08.564" endtime="20210811 22:44:14.577"/>
</kw>
<msg timestamp="20210811 22:44:14.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:08.564" endtime="20210811 22:44:14.577"/>
</kw>
<msg timestamp="20210811 22:44:14.577" level="INFO">${result} = 2021-08-11 22:44:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:44:08.564" endtime="20210811 22:44:14.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:14.580" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:16.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:16.180" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 o3fs://bucket1.volume1.om/ozone-03485
dr...</msg>
<status status="PASS" starttime="20210811 22:44:14.579" endtime="20210811 22:44:16.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:16.181" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 o3fs://bucket1.volume1.om/ozone-03485
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:44 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:44:16.180" endtime="20210811 22:44:16.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:16.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:16.182" endtime="20210811 22:44:16.183"/>
</kw>
<status status="PASS" starttime="20210811 22:44:14.578" endtime="20210811 22:44:16.183"/>
</kw>
<msg timestamp="20210811 22:44:16.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:14.578" endtime="20210811 22:44:16.183"/>
</kw>
<msg timestamp="20210811 22:44:16.183" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 o3fs://bucket1.volume1.om/ozone-03485
dr...</msg>
<status status="PASS" starttime="20210811 22:44:14.577" endtime="20210811 22:44:16.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:44:16.183" endtime="20210811 22:44:16.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:16.187" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-03485 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:18.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:18.991" level="INFO">${output} = 2021-08-11 22:44:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:44:16.185" endtime="20210811 22:44:18.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:18.992" level="INFO">2021-08-11 22:44:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:44:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210811 22:44:18.992" endtime="20210811 22:44:18.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:18.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:18.993" endtime="20210811 22:44:18.993"/>
</kw>
<status status="PASS" starttime="20210811 22:44:16.185" endtime="20210811 22:44:18.994"/>
</kw>
<msg timestamp="20210811 22:44:18.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:16.184" endtime="20210811 22:44:18.994"/>
</kw>
<msg timestamp="20210811 22:44:18.995" level="INFO">${result} = 2021-08-11 22:44:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:44:16.184" endtime="20210811 22:44:18.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:44:18.995" endtime="20210811 22:44:18.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:44:08.558" endtime="20210811 22:44:18.996"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:44:08.510" endtime="20210811 22:44:18.997"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:23.178" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:23.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:23.184" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:44:23.175" endtime="20210811 22:44:23.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:23.185" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:44:23.184" endtime="20210811 22:44:23.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:23.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:23.185" endtime="20210811 22:44:23.185"/>
</kw>
<status status="PASS" starttime="20210811 22:44:23.174" endtime="20210811 22:44:23.186"/>
</kw>
<msg timestamp="20210811 22:44:23.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:23.174" endtime="20210811 22:44:23.186"/>
</kw>
<msg timestamp="20210811 22:44:23.186" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:44:23.174" endtime="20210811 22:44:23.187"/>
</kw>
<msg timestamp="20210811 22:44:23.187" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:44:23.173" endtime="20210811 22:44:23.187"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:44:23.190" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:44:23.190" endtime="20210811 22:44:23.190"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:44:23.191" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:44:23.190" endtime="20210811 22:44:23.191"/>
</kw>
<status status="PASS" starttime="20210811 22:44:23.189" endtime="20210811 22:44:23.191"/>
</kw>
<msg timestamp="20210811 22:44:23.191" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:44:23.189" endtime="20210811 22:44:23.191"/>
</kw>
<status status="PASS" starttime="20210811 22:44:23.188" endtime="20210811 22:44:23.191"/>
</kw>
<msg timestamp="20210811 22:44:23.191" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:44:23.188" endtime="20210811 22:44:23.191"/>
</kw>
<msg timestamp="20210811 22:44:23.191" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:44:23.187" endtime="20210811 22:44:23.191"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:23.194" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:06.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:06.814" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:44:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:44:23.193" endtime="20210811 22:45:06.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:06.815" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:44:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:44:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:44:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:44:26 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:44:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:44:29 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:44:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721773989_0001
2021-08-11 22:44:31 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:44:32 INFO  Configuration:2795 - resource-types.xml not found
2021-08-11 22:44:32 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-11 22:44:32 INFO  YarnClientImpl:329 - Submitted application application_1628721773989_0001
2021-08-11 22:44:32 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628721773989_0001/
2021-08-11 22:44:32 INFO  Job:1614 - Running job: job_1628721773989_0001
2021-08-11 22:44:41 INFO  Job:1635 - Job job_1628721773989_0001 running in uber mode : false
2021-08-11 22:44:41 INFO  Job:1642 -  map 0% reduce 0%
2021-08-11 22:44:48 INFO  Job:1642 -  map 33% reduce 0%
2021-08-11 22:44:53 INFO  Job:1642 -  map 67% reduce 0%
2021-08-11 22:44:58 INFO  Job:1642 -  map 100% reduce 0%
2021-08-11 22:45:02 INFO  Job:1642 -  map 100% reduce 100%
2021-08-11 22:45:06 INFO  Job:1653 - Job job_1628721773989_0001 completed successfully
2021-08-11 22:45:06 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1116501
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35756
		Total time spent by all reduces in occupied slots (ms)=13608
		Total time spent by all map tasks (ms)=8939
		Total time spent by all reduce tasks (ms)=3402
		Total vcore-milliseconds taken by all map tasks=8939
		Total vcore-milliseconds taken by all reduce tasks=3402
		Total megabyte-milliseconds taken by all map tasks=36614144
		Total megabyte-milliseconds taken by all reduce tasks=13934592
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=539
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1453826048
		Virtual memory (bytes) snapshot=15832076288
		Total committed heap usage (bytes)=1439170560
		Peak Map Physical memory (bytes)=374398976
		Peak Map Virtual memory (bytes)=3954765824
		Peak Reduce Physical memory (bytes)=400089088
		Peak Reduce Virtual memory (bytes)=3975561216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.066 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:45:06.815" endtime="20210811 22:45:06.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:06.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:06.816" endtime="20210811 22:45:06.816"/>
</kw>
<status status="PASS" starttime="20210811 22:44:23.192" endtime="20210811 22:45:06.816"/>
</kw>
<msg timestamp="20210811 22:45:06.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:23.192" endtime="20210811 22:45:06.816"/>
</kw>
<msg timestamp="20210811 22:45:06.817" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:44:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:44:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:44:23.192" endtime="20210811 22:45:06.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:45:06.817" endtime="20210811 22:45:06.817"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:44:23.173" endtime="20210811 22:45:06.818"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:06.822" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:06.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:06.826" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:06.820" endtime="20210811 22:45:06.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:06.828" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:06.827" endtime="20210811 22:45:06.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:06.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:06.828" endtime="20210811 22:45:06.828"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.820" endtime="20210811 22:45:06.828"/>
</kw>
<msg timestamp="20210811 22:45:06.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:06.819" endtime="20210811 22:45:06.829"/>
</kw>
<msg timestamp="20210811 22:45:06.829" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:06.819" endtime="20210811 22:45:06.829"/>
</kw>
<msg timestamp="20210811 22:45:06.829" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:06.819" endtime="20210811 22:45:06.829"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:45:06.829" level="INFO">${random} = r5Y1sNay</msg>
<status status="PASS" starttime="20210811 22:45:06.829" endtime="20210811 22:45:06.829"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:45:06.832" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:45:06.832" endtime="20210811 22:45:06.832"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:45:06.833" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.833" endtime="20210811 22:45:06.833"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.832" endtime="20210811 22:45:06.833"/>
</kw>
<msg timestamp="20210811 22:45:06.833" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.831" endtime="20210811 22:45:06.833"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.831" endtime="20210811 22:45:06.834"/>
</kw>
<msg timestamp="20210811 22:45:06.834" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:45:06.830" endtime="20210811 22:45:06.834"/>
</kw>
<msg timestamp="20210811 22:45:06.834" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:45:06.830" endtime="20210811 22:45:06.834"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:45:06.837" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:45:06.836" endtime="20210811 22:45:06.837"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:45:06.837" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.837" endtime="20210811 22:45:06.837"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.836" endtime="20210811 22:45:06.838"/>
</kw>
<msg timestamp="20210811 22:45:06.838" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.836" endtime="20210811 22:45:06.838"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.835" endtime="20210811 22:45:06.838"/>
</kw>
<msg timestamp="20210811 22:45:06.838" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:45:06.835" endtime="20210811 22:45:06.838"/>
</kw>
<msg timestamp="20210811 22:45:06.838" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:45:06.834" endtime="20210811 22:45:06.838"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:45:06.841" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:45:06.841" endtime="20210811 22:45:06.841"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:45:06.841" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.841" endtime="20210811 22:45:06.841"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.840" endtime="20210811 22:45:06.842"/>
</kw>
<msg timestamp="20210811 22:45:06.842" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:45:06.840" endtime="20210811 22:45:06.842"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.839" endtime="20210811 22:45:06.842"/>
</kw>
<msg timestamp="20210811 22:45:06.842" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-r5Y1sNay.txt</msg>
<status status="PASS" starttime="20210811 22:45:06.839" endtime="20210811 22:45:06.842"/>
</kw>
<msg timestamp="20210811 22:45:06.842" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-r5Y1sNay.txt</msg>
<status status="PASS" starttime="20210811 22:45:06.838" endtime="20210811 22:45:06.842"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:06.845" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-r5Y1sNay.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:42.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:42.469" level="INFO">${output} = 2021-08-11 22:45:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:45:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210811 22:45:06.844" endtime="20210811 22:45:42.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:42.470" level="INFO">2021-08-11 22:45:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:45:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:45:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:45:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:45:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:45:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:45:10 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:45:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721773989_0002
2021-08-11 22:45:10 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:45:10 INFO  Configuration:2795 - resource-types.xml not found
2021-08-11 22:45:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-11 22:45:10 INFO  YarnClientImpl:329 - Submitted application application_1628721773989_0002
2021-08-11 22:45:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628721773989_0002/
2021-08-11 22:45:10 INFO  Job:1614 - Running job: job_1628721773989_0002
2021-08-11 22:45:17 INFO  Job:1635 - Job job_1628721773989_0002 running in uber mode : false
2021-08-11 22:45:17 INFO  Job:1642 -  map 0% reduce 0%
2021-08-11 22:45:24 INFO  Job:1642 -  map 33% reduce 0%
2021-08-11 22:45:29 INFO  Job:1642 -  map 67% reduce 0%
2021-08-11 22:45:34 INFO  Job:1642 -  map 100% reduce 0%
2021-08-11 22:45:38 INFO  Job:1642 -  map 100% reduce 100%
2021-08-11 22:45:42 INFO  Job:1653 - Job job_1628721773989_0002 completed successfully
2021-08-11 22:45:42 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1179267
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38692
		Total time spent by all reduces in occupied slots (ms)=13368
		Total time spent by all map tasks (ms)=9673
		Total time spent by all reduce tasks (ms)=3342
		Total vcore-milliseconds taken by all map tasks=9673
		Total vcore-milliseconds taken by all reduce tasks=3342
		Total megabyte-milliseconds taken by all map tasks=39620608
		Total megabyte-milliseconds taken by all reduce tasks=13688832
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1018
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1902915584
		Virtual memory (bytes) snapshot=15837274112
		Total committed heap usage (bytes)=1809842176
		Peak Map Physical memory (bytes)=563683328
		Peak Map Virtual memory (bytes)=3958321152
		Peak Reduce Physical memory (bytes)=386179072
		Peak Reduce Virtual memory (bytes)=3974172672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:45:42.470" endtime="20210811 22:45:42.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:42.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:42.471" endtime="20210811 22:45:42.471"/>
</kw>
<status status="PASS" starttime="20210811 22:45:06.843" endtime="20210811 22:45:42.472"/>
</kw>
<msg timestamp="20210811 22:45:42.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:06.843" endtime="20210811 22:45:42.472"/>
</kw>
<msg timestamp="20210811 22:45:42.472" level="INFO">${output} = 2021-08-11 22:45:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:45:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210811 22:45:06.842" endtime="20210811 22:45:42.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:45:42.472" endtime="20210811 22:45:42.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:45:42.473" endtime="20210811 22:45:42.473"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:45:06.818" endtime="20210811 22:45:42.473"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:44:23.127" endtime="20210811 22:45:42.474"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:45:46.669" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:45:46.668" endtime="20210811 22:45:46.669"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:45:46.669" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:45:46.669" endtime="20210811 22:45:46.669"/>
</kw>
<status status="PASS" starttime="20210811 22:45:46.668" endtime="20210811 22:45:46.670"/>
</kw>
<msg timestamp="20210811 22:45:46.670" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:45:46.668" endtime="20210811 22:45:46.670"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:45:46.670" endtime="20210811 22:45:46.671"/>
</kw>
<msg timestamp="20210811 22:45:46.671" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:45:46.670" endtime="20210811 22:45:46.671"/>
</kw>
<status status="PASS" starttime="20210811 22:45:46.667" endtime="20210811 22:45:46.671"/>
</kw>
<msg timestamp="20210811 22:45:46.671" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:45:46.667" endtime="20210811 22:45:46.671"/>
</kw>
<msg timestamp="20210811 22:45:46.671" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:45:46.665" endtime="20210811 22:45:46.671"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:45:46.672" level="INFO">${random} = 46793</msg>
<status status="PASS" starttime="20210811 22:45:46.671" endtime="20210811 22:45:46.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:46.677" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-46793 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:49.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:49.769" level="INFO">${output} = 2021-08-11 22:45:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:45:46.673" endtime="20210811 22:45:49.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:49.770" level="INFO">2021-08-11 22:45:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:45:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:45:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:45:49.769" endtime="20210811 22:45:49.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:49.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:49.770" endtime="20210811 22:45:49.770"/>
</kw>
<status status="PASS" starttime="20210811 22:45:46.673" endtime="20210811 22:45:49.771"/>
</kw>
<msg timestamp="20210811 22:45:49.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:46.672" endtime="20210811 22:45:49.771"/>
</kw>
<msg timestamp="20210811 22:45:49.771" level="INFO">${result} = 2021-08-11 22:45:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:45:46.672" endtime="20210811 22:45:49.771"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:49.774" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:51.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:51.344" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 ofs://om/volume1/bucket1/ozone-03485
-rw-...</msg>
<status status="PASS" starttime="20210811 22:45:49.772" endtime="20210811 22:45:51.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:51.345" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 ofs://om/volume1/bucket1/ozone-03485
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:45 ofs://om/volume1/bucket1/ozone-46793
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:44 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:45 ofs://om/volume1/bucket1/wordcount-r5Y1sNay.txt</msg>
<status status="PASS" starttime="20210811 22:45:51.345" endtime="20210811 22:45:51.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:51.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:51.346" endtime="20210811 22:45:51.346"/>
</kw>
<status status="PASS" starttime="20210811 22:45:49.772" endtime="20210811 22:45:51.346"/>
</kw>
<msg timestamp="20210811 22:45:51.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:49.772" endtime="20210811 22:45:51.346"/>
</kw>
<msg timestamp="20210811 22:45:51.347" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-11 22:44 ofs://om/volume1/bucket1/ozone-03485
-rw-...</msg>
<status status="PASS" starttime="20210811 22:45:49.771" endtime="20210811 22:45:51.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:45:51.347" endtime="20210811 22:45:51.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:51.350" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-46793 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:54.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:54.220" level="INFO">${output} = 2021-08-11 22:45:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:45:51.349" endtime="20210811 22:45:54.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:54.221" level="INFO">2021-08-11 22:45:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:45:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210811 22:45:54.220" endtime="20210811 22:45:54.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:54.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:54.222" endtime="20210811 22:45:54.222"/>
</kw>
<status status="PASS" starttime="20210811 22:45:51.348" endtime="20210811 22:45:54.222"/>
</kw>
<msg timestamp="20210811 22:45:54.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:51.348" endtime="20210811 22:45:54.223"/>
</kw>
<msg timestamp="20210811 22:45:54.224" level="INFO">${result} = 2021-08-11 22:45:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:45:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:45:51.347" endtime="20210811 22:45:54.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:45:54.224" endtime="20210811 22:45:54.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:45:46.665" endtime="20210811 22:45:54.225"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:45:46.620" endtime="20210811 22:45:54.225"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:58.495" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:45:58.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:45:58.501" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:58.492" endtime="20210811 22:45:58.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:45:58.502" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:58.501" endtime="20210811 22:45:58.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:45:58.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:45:58.502" endtime="20210811 22:45:58.503"/>
</kw>
<status status="PASS" starttime="20210811 22:45:58.491" endtime="20210811 22:45:58.503"/>
</kw>
<msg timestamp="20210811 22:45:58.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:58.491" endtime="20210811 22:45:58.503"/>
</kw>
<msg timestamp="20210811 22:45:58.503" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:58.491" endtime="20210811 22:45:58.504"/>
</kw>
<msg timestamp="20210811 22:45:58.505" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:45:58.490" endtime="20210811 22:45:58.505"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:45:58.508" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:45:58.507" endtime="20210811 22:45:58.508"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:45:58.508" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:45:58.508" endtime="20210811 22:45:58.508"/>
</kw>
<status status="PASS" starttime="20210811 22:45:58.507" endtime="20210811 22:45:58.508"/>
</kw>
<msg timestamp="20210811 22:45:58.508" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:45:58.506" endtime="20210811 22:45:58.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:45:58.509" endtime="20210811 22:45:58.509"/>
</kw>
<msg timestamp="20210811 22:45:58.509" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:45:58.509" endtime="20210811 22:45:58.509"/>
</kw>
<status status="PASS" starttime="20210811 22:45:58.506" endtime="20210811 22:45:58.510"/>
</kw>
<msg timestamp="20210811 22:45:58.510" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:45:58.505" endtime="20210811 22:45:58.510"/>
</kw>
<msg timestamp="20210811 22:45:58.510" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:45:58.505" endtime="20210811 22:45:58.510"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:45:58.513" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:46:35.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:46:35.935" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:46:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:46:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:45:58.511" endtime="20210811 22:46:35.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:46:35.936" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:46:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:46:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:46:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:46:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:46:03 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:46:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:46:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:46:04 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:46:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721773989_0003
2021-08-11 22:46:04 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:46:04 INFO  Configuration:2795 - resource-types.xml not found
2021-08-11 22:46:04 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-11 22:46:04 INFO  YarnClientImpl:329 - Submitted application application_1628721773989_0003
2021-08-11 22:46:04 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628721773989_0003/
2021-08-11 22:46:04 INFO  Job:1614 - Running job: job_1628721773989_0003
2021-08-11 22:46:12 INFO  Job:1635 - Job job_1628721773989_0003 running in uber mode : false
2021-08-11 22:46:12 INFO  Job:1642 -  map 0% reduce 0%
2021-08-11 22:46:18 INFO  Job:1642 -  map 33% reduce 0%
2021-08-11 22:46:23 INFO  Job:1642 -  map 67% reduce 0%
2021-08-11 22:46:28 INFO  Job:1642 -  map 100% reduce 0%
2021-08-11 22:46:35 INFO  Job:1642 -  map 100% reduce 100%
2021-08-11 22:46:35 INFO  Job:1653 - Job job_1628721773989_0003 completed successfully
2021-08-11 22:46:35 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1116289
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35604
		Total time spent by all reduces in occupied slots (ms)=23308
		Total time spent by all map tasks (ms)=8901
		Total time spent by all reduce tasks (ms)=5827
		Total vcore-milliseconds taken by all map tasks=8901
		Total vcore-milliseconds taken by all reduce tasks=5827
		Total megabyte-milliseconds taken by all map tasks=36458496
		Total megabyte-milliseconds taken by all reduce tasks=23867392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=578
		CPU time spent (ms)=6320
		Physical memory (bytes) snapshot=1382428672
		Virtual memory (bytes) snapshot=15814664192
		Total committed heap usage (bytes)=1271922688
		Peak Map Physical memory (bytes)=351813632
		Peak Map Virtual memory (bytes)=3954761728
		Peak Reduce Physical memory (bytes)=341860352
		Peak Reduce Virtual memory (bytes)=3974451200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.413 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:46:35.936" endtime="20210811 22:46:35.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:46:35.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:46:35.937" endtime="20210811 22:46:35.937"/>
</kw>
<status status="PASS" starttime="20210811 22:45:58.511" endtime="20210811 22:46:35.937"/>
</kw>
<msg timestamp="20210811 22:46:35.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:45:58.511" endtime="20210811 22:46:35.937"/>
</kw>
<msg timestamp="20210811 22:46:35.938" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:46:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:46:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:45:58.510" endtime="20210811 22:46:35.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:46:35.938" endtime="20210811 22:46:35.938"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:45:58.490" endtime="20210811 22:46:35.938"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:46:35.943" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:46:35.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:46:35.949" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:46:35.941" endtime="20210811 22:46:35.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:46:35.950" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:46:35.949" endtime="20210811 22:46:35.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:46:35.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:46:35.950" endtime="20210811 22:46:35.950"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.941" endtime="20210811 22:46:35.951"/>
</kw>
<msg timestamp="20210811 22:46:35.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:46:35.941" endtime="20210811 22:46:35.951"/>
</kw>
<msg timestamp="20210811 22:46:35.951" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:46:35.940" endtime="20210811 22:46:35.951"/>
</kw>
<msg timestamp="20210811 22:46:35.951" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210811 22:46:35.940" endtime="20210811 22:46:35.951"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:46:35.952" level="INFO">${random} = BVQFihZN</msg>
<status status="PASS" starttime="20210811 22:46:35.951" endtime="20210811 22:46:35.952"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:46:35.955" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:46:35.955" endtime="20210811 22:46:35.955"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:46:35.955" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.955" endtime="20210811 22:46:35.956"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.954" endtime="20210811 22:46:35.956"/>
</kw>
<msg timestamp="20210811 22:46:35.956" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.954" endtime="20210811 22:46:35.956"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:46:35.956" endtime="20210811 22:46:35.957"/>
</kw>
<msg timestamp="20210811 22:46:35.957" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:46:35.956" endtime="20210811 22:46:35.957"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.953" endtime="20210811 22:46:35.957"/>
</kw>
<msg timestamp="20210811 22:46:35.957" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:46:35.953" endtime="20210811 22:46:35.957"/>
</kw>
<msg timestamp="20210811 22:46:35.957" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:46:35.952" endtime="20210811 22:46:35.957"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:46:35.960" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:46:35.960" endtime="20210811 22:46:35.960"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:46:35.961" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.960" endtime="20210811 22:46:35.961"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.959" endtime="20210811 22:46:35.961"/>
</kw>
<msg timestamp="20210811 22:46:35.961" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.959" endtime="20210811 22:46:35.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:46:35.962" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210811 22:46:35.962" endtime="20210811 22:46:35.962"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:46:35.963" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210811 22:46:35.963" endtime="20210811 22:46:35.963"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.962" endtime="20210811 22:46:35.963"/>
</kw>
<msg timestamp="20210811 22:46:35.963" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210811 22:46:35.961" endtime="20210811 22:46:35.963"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.959" endtime="20210811 22:46:35.964"/>
</kw>
<msg timestamp="20210811 22:46:35.964" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:46:35.958" endtime="20210811 22:46:35.964"/>
</kw>
<msg timestamp="20210811 22:46:35.964" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:46:35.957" endtime="20210811 22:46:35.964"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:46:35.967" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:46:35.966" endtime="20210811 22:46:35.967"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:46:35.967" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.967" endtime="20210811 22:46:35.967"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.966" endtime="20210811 22:46:35.968"/>
</kw>
<msg timestamp="20210811 22:46:35.968" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:46:35.966" endtime="20210811 22:46:35.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:46:35.969" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210811 22:46:35.969" endtime="20210811 22:46:35.969"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:46:35.970" level="INFO">${result} = /wordcount-BVQFihZN.txt</msg>
<status status="PASS" starttime="20210811 22:46:35.969" endtime="20210811 22:46:35.970"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.968" endtime="20210811 22:46:35.970"/>
</kw>
<msg timestamp="20210811 22:46:35.970" level="INFO">${path_with_leading} = /wordcount-BVQFihZN.txt</msg>
<status status="PASS" starttime="20210811 22:46:35.968" endtime="20210811 22:46:35.970"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.965" endtime="20210811 22:46:35.970"/>
</kw>
<msg timestamp="20210811 22:46:35.970" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-BVQFihZN.txt</msg>
<status status="PASS" starttime="20210811 22:46:35.965" endtime="20210811 22:46:35.970"/>
</kw>
<msg timestamp="20210811 22:46:35.970" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-BVQFihZN.txt</msg>
<status status="PASS" starttime="20210811 22:46:35.964" endtime="20210811 22:46:35.971"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:46:35.973" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-BVQFihZN.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:47:11.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:47:11.334" level="INFO">${output} = 2021-08-11 22:46:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:46:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210811 22:46:35.972" endtime="20210811 22:47:11.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:47:11.335" level="INFO">2021-08-11 22:46:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:46:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:46:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:46:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:46:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:46:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:46:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-11 22:46:39 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:46:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628721773989_0004
2021-08-11 22:46:39 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:46:39 INFO  Configuration:2795 - resource-types.xml not found
2021-08-11 22:46:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-11 22:46:39 INFO  YarnClientImpl:329 - Submitted application application_1628721773989_0004
2021-08-11 22:46:39 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628721773989_0004/
2021-08-11 22:46:39 INFO  Job:1614 - Running job: job_1628721773989_0004
2021-08-11 22:46:47 INFO  Job:1635 - Job job_1628721773989_0004 running in uber mode : false
2021-08-11 22:46:47 INFO  Job:1642 -  map 0% reduce 0%
2021-08-11 22:46:54 INFO  Job:1642 -  map 33% reduce 0%
2021-08-11 22:46:58 INFO  Job:1642 -  map 67% reduce 0%
2021-08-11 22:47:03 INFO  Job:1642 -  map 100% reduce 0%
2021-08-11 22:47:07 INFO  Job:1642 -  map 100% reduce 100%
2021-08-11 22:47:10 INFO  Job:1653 - Job job_1628721773989_0004 completed successfully
2021-08-11 22:47:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1179183
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37716
		Total time spent by all reduces in occupied slots (ms)=13340
		Total time spent by all map tasks (ms)=9429
		Total time spent by all reduce tasks (ms)=3335
		Total vcore-milliseconds taken by all map tasks=9429
		Total vcore-milliseconds taken by all reduce tasks=3335
		Total megabyte-milliseconds taken by all map tasks=38621184
		Total megabyte-milliseconds taken by all reduce tasks=13660160
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=857
		CPU time spent (ms)=7270
		Physical memory (bytes) snapshot=1833721856
		Virtual memory (bytes) snapshot=15831126016
		Total committed heap usage (bytes)=1868038144
		Peak Map Physical memory (bytes)=561111040
		Peak Map Virtual memory (bytes)=3952996352
		Peak Reduce Physical memory (bytes)=333406208
		Peak Reduce Virtual memory (bytes)=3974385664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:47:11.334" endtime="20210811 22:47:11.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:47:11.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:47:11.335" endtime="20210811 22:47:11.336"/>
</kw>
<status status="PASS" starttime="20210811 22:46:35.971" endtime="20210811 22:47:11.336"/>
</kw>
<msg timestamp="20210811 22:47:11.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:46:35.971" endtime="20210811 22:47:11.336"/>
</kw>
<msg timestamp="20210811 22:47:11.336" level="INFO">${output} = 2021-08-11 22:46:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-08-11 22:46:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210811 22:46:35.971" endtime="20210811 22:47:11.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:47:11.337" endtime="20210811 22:47:11.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:47:11.337" endtime="20210811 22:47:11.337"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:46:35.939" endtime="20210811 22:47:11.338"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:45:58.443" endtime="20210811 22:47:11.339"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:26.342" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:30.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20210811 22:43:30.304" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:43:26.339" endtime="20210811 22:43:30.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:30.305" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:43:30.304" endtime="20210811 22:43:30.305"/>
</kw>
<msg timestamp="20210811 22:43:30.306" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:43:26.338" endtime="20210811 22:43:30.306"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:30.310" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:33.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:33.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:30.308" endtime="20210811 22:43:33.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:33.428" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:33.427" endtime="20210811 22:43:33.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:33.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:33.428" endtime="20210811 22:43:33.429"/>
</kw>
<status status="PASS" starttime="20210811 22:43:30.307" endtime="20210811 22:43:33.429"/>
</kw>
<msg timestamp="20210811 22:43:33.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:30.307" endtime="20210811 22:43:33.429"/>
</kw>
<msg timestamp="20210811 22:43:33.429" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210811 22:43:30.307" endtime="20210811 22:43:33.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:43:33.430" endtime="20210811 22:43:33.430"/>
</kw>
<status status="PASS" starttime="20210811 22:43:30.306" endtime="20210811 22:43:33.434"/>
</kw>
<status status="PASS" starttime="20210811 22:43:30.306" endtime="20210811 22:43:33.434"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:33.446" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:36.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:36.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:33.442" endtime="20210811 22:43:36.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:36.360" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:36.359" endtime="20210811 22:43:36.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:36.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:36.360" endtime="20210811 22:43:36.361"/>
</kw>
<status status="PASS" starttime="20210811 22:43:33.441" endtime="20210811 22:43:36.361"/>
</kw>
<msg timestamp="20210811 22:43:36.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:33.441" endtime="20210811 22:43:36.361"/>
</kw>
<status status="PASS" starttime="20210811 22:43:33.440" endtime="20210811 22:43:36.361"/>
</kw>
<status status="PASS" starttime="20210811 22:43:33.440" endtime="20210811 22:43:36.361"/>
</kw>
<status status="PASS" starttime="20210811 22:43:33.440" endtime="20210811 22:43:36.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 22:43:36.361" endtime="20210811 22:43:36.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:36.365" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:39.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:39.471" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:43...</msg>
<status status="PASS" starttime="20210811 22:43:36.363" endtime="20210811 22:43:39.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:39.472" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:43:36.181Z",
  "modificationTime" : "2021-08-11T22:43:36.181Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210811 22:43:39.472" endtime="20210811 22:43:39.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:39.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:39.472" endtime="20210811 22:43:39.473"/>
</kw>
<status status="PASS" starttime="20210811 22:43:36.363" endtime="20210811 22:43:39.473"/>
</kw>
<msg timestamp="20210811 22:43:39.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:36.362" endtime="20210811 22:43:39.473"/>
</kw>
<msg timestamp="20210811 22:43:39.474" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:43...</msg>
<status status="PASS" starttime="20210811 22:43:36.362" endtime="20210811 22:43:39.474"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:43:39.474" endtime="20210811 22:43:39.474"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:43:39.478" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:43:39.478" endtime="20210811 22:43:39.478"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:43:39.479" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:43:39.478" endtime="20210811 22:43:39.479"/>
</kw>
<status status="PASS" starttime="20210811 22:43:39.477" endtime="20210811 22:43:39.479"/>
</kw>
<msg timestamp="20210811 22:43:39.479" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:43:39.476" endtime="20210811 22:43:39.479"/>
</kw>
<status status="PASS" starttime="20210811 22:43:39.476" endtime="20210811 22:43:39.479"/>
</kw>
<msg timestamp="20210811 22:43:39.480" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:43:39.475" endtime="20210811 22:43:39.480"/>
</kw>
<msg timestamp="20210811 22:43:39.480" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:43:39.474" endtime="20210811 22:43:39.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:39.483" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:42.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:42.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:39.481" endtime="20210811 22:43:42.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:42.625" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:42.624" endtime="20210811 22:43:42.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:42.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:42.625" endtime="20210811 22:43:42.625"/>
</kw>
<status status="PASS" starttime="20210811 22:43:39.481" endtime="20210811 22:43:42.626"/>
</kw>
<msg timestamp="20210811 22:43:42.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:39.480" endtime="20210811 22:43:42.626"/>
</kw>
<status status="PASS" starttime="20210811 22:43:39.480" endtime="20210811 22:43:42.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:42.629" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:48.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:48.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:42.627" endtime="20210811 22:43:48.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:48.806" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:48.805" endtime="20210811 22:43:48.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:48.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:48.806" endtime="20210811 22:43:48.807"/>
</kw>
<status status="PASS" starttime="20210811 22:43:42.627" endtime="20210811 22:43:48.808"/>
</kw>
<msg timestamp="20210811 22:43:48.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:42.627" endtime="20210811 22:43:48.808"/>
</kw>
<status status="PASS" starttime="20210811 22:43:42.626" endtime="20210811 22:43:48.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:48.812" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:53.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:53.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:48.809" endtime="20210811 22:43:53.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:53.448" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:53.447" endtime="20210811 22:43:53.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:53.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:53.448" endtime="20210811 22:43:53.449"/>
</kw>
<status status="PASS" starttime="20210811 22:43:48.809" endtime="20210811 22:43:53.449"/>
</kw>
<msg timestamp="20210811 22:43:53.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:48.809" endtime="20210811 22:43:53.449"/>
</kw>
<status status="PASS" starttime="20210811 22:43:48.808" endtime="20210811 22:43:53.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:53.453" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:43:58.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:43:58.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:53.451" endtime="20210811 22:43:58.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:43:58.357" level="INFO"/>
<status status="PASS" starttime="20210811 22:43:58.357" endtime="20210811 22:43:58.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:43:58.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:43:58.357" endtime="20210811 22:43:58.358"/>
</kw>
<status status="PASS" starttime="20210811 22:43:53.450" endtime="20210811 22:43:58.358"/>
</kw>
<msg timestamp="20210811 22:43:58.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:53.450" endtime="20210811 22:43:58.358"/>
</kw>
<status status="PASS" starttime="20210811 22:43:53.450" endtime="20210811 22:43:58.359"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:43:26.338" endtime="20210811 22:43:58.359"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:43:58.365" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:43:58.364" endtime="20210811 22:43:58.365"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:43:58.365" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:43:58.365" endtime="20210811 22:43:58.365"/>
</kw>
<status status="PASS" starttime="20210811 22:43:58.364" endtime="20210811 22:43:58.366"/>
</kw>
<msg timestamp="20210811 22:43:58.366" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:43:58.362" endtime="20210811 22:43:58.366"/>
</kw>
<status status="PASS" starttime="20210811 22:43:58.361" endtime="20210811 22:43:58.366"/>
</kw>
<msg timestamp="20210811 22:43:58.366" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:43:58.361" endtime="20210811 22:43:58.366"/>
</kw>
<msg timestamp="20210811 22:43:58.367" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:43:58.360" endtime="20210811 22:43:58.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:43:58.370" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:01.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:01.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:43:58.368" endtime="20210811 22:44:01.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:01.210" level="INFO"/>
<status status="PASS" starttime="20210811 22:44:01.209" endtime="20210811 22:44:01.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:01.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:01.210" endtime="20210811 22:44:01.211"/>
</kw>
<status status="PASS" starttime="20210811 22:43:58.367" endtime="20210811 22:44:01.211"/>
</kw>
<msg timestamp="20210811 22:44:01.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:43:58.367" endtime="20210811 22:44:01.211"/>
</kw>
<status status="PASS" starttime="20210811 22:43:58.367" endtime="20210811 22:44:01.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:44:01.215" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:44:04.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:44:04.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:44:01.213" endtime="20210811 22:44:04.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:44:04.333" level="INFO"/>
<status status="PASS" starttime="20210811 22:44:04.333" endtime="20210811 22:44:04.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:44:04.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:44:04.334" endtime="20210811 22:44:04.334"/>
</kw>
<status status="PASS" starttime="20210811 22:44:01.212" endtime="20210811 22:44:04.334"/>
</kw>
<msg timestamp="20210811 22:44:04.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:44:01.212" endtime="20210811 22:44:04.335"/>
</kw>
<status status="PASS" starttime="20210811 22:44:01.212" endtime="20210811 22:44:04.335"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:43:58.359" endtime="20210811 22:44:04.335"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210811 22:43:26.289" endtime="20210811 22:44:04.336"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="208382"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:49:18.746" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:49:18.746" endtime="20210811 22:49:18.746"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:49:18.747" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:49:18.746" endtime="20210811 22:49:18.747"/>
</kw>
<status status="PASS" starttime="20210811 22:49:18.745" endtime="20210811 22:49:18.747"/>
</kw>
<msg timestamp="20210811 22:49:18.747" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:49:18.745" endtime="20210811 22:49:18.747"/>
</kw>
<status status="PASS" starttime="20210811 22:49:18.744" endtime="20210811 22:49:18.747"/>
</kw>
<msg timestamp="20210811 22:49:18.747" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:49:18.744" endtime="20210811 22:49:18.747"/>
</kw>
<msg timestamp="20210811 22:49:18.748" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:49:18.743" endtime="20210811 22:49:18.748"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:49:18.748" level="INFO">${random} = 95086</msg>
<status status="PASS" starttime="20210811 22:49:18.748" endtime="20210811 22:49:18.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:18.753" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-95086 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:22.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:22.304" level="INFO">${output} = 2021-08-11 22:49:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:49:18.749" endtime="20210811 22:49:22.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:22.305" level="INFO">2021-08-11 22:49:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:49:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:49:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:49:22.304" endtime="20210811 22:49:22.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:22.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:22.305" endtime="20210811 22:49:22.306"/>
</kw>
<status status="PASS" starttime="20210811 22:49:18.749" endtime="20210811 22:49:22.306"/>
</kw>
<msg timestamp="20210811 22:49:22.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:18.749" endtime="20210811 22:49:22.306"/>
</kw>
<msg timestamp="20210811 22:49:22.306" level="INFO">${result} = 2021-08-11 22:49:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:49:18.748" endtime="20210811 22:49:22.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:22.309" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:23.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:23.996" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:49 o3fs://bucket1.volume1.om/ozone-95086
dr...</msg>
<status status="PASS" starttime="20210811 22:49:22.308" endtime="20210811 22:49:23.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:23.997" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:49 o3fs://bucket1.volume1.om/ozone-95086
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:49 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:49:23.996" endtime="20210811 22:49:23.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:23.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:23.997" endtime="20210811 22:49:23.998"/>
</kw>
<status status="PASS" starttime="20210811 22:49:22.307" endtime="20210811 22:49:23.998"/>
</kw>
<msg timestamp="20210811 22:49:23.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:22.307" endtime="20210811 22:49:23.998"/>
</kw>
<msg timestamp="20210811 22:49:23.998" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:49 o3fs://bucket1.volume1.om/ozone-95086
dr...</msg>
<status status="PASS" starttime="20210811 22:49:22.307" endtime="20210811 22:49:23.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:49:23.998" endtime="20210811 22:49:23.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:24.002" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-95086 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:27.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:27.075" level="INFO">${output} = 2021-08-11 22:49:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:49:24.000" endtime="20210811 22:49:27.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:27.076" level="INFO">2021-08-11 22:49:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:49:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210811 22:49:27.076" endtime="20210811 22:49:27.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:27.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:27.077" endtime="20210811 22:49:27.077"/>
</kw>
<status status="PASS" starttime="20210811 22:49:24.000" endtime="20210811 22:49:27.077"/>
</kw>
<msg timestamp="20210811 22:49:27.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:23.999" endtime="20210811 22:49:27.078"/>
</kw>
<msg timestamp="20210811 22:49:27.078" level="INFO">${result} = 2021-08-11 22:49:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:49:23.999" endtime="20210811 22:49:27.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:49:27.078" endtime="20210811 22:49:27.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:49:18.742" endtime="20210811 22:49:27.078"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:49:18.697" endtime="20210811 22:49:27.080"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:31.256" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:31.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:31.261" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:49:31.253" endtime="20210811 22:49:31.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:31.262" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:49:31.262" endtime="20210811 22:49:31.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:31.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:31.262" endtime="20210811 22:49:31.263"/>
</kw>
<status status="PASS" starttime="20210811 22:49:31.252" endtime="20210811 22:49:31.263"/>
</kw>
<msg timestamp="20210811 22:49:31.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:31.252" endtime="20210811 22:49:31.263"/>
</kw>
<msg timestamp="20210811 22:49:31.263" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:49:31.252" endtime="20210811 22:49:31.264"/>
</kw>
<msg timestamp="20210811 22:49:31.265" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:49:31.251" endtime="20210811 22:49:31.265"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:49:31.268" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:49:31.267" endtime="20210811 22:49:31.268"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:49:31.268" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:49:31.268" endtime="20210811 22:49:31.268"/>
</kw>
<status status="PASS" starttime="20210811 22:49:31.267" endtime="20210811 22:49:31.268"/>
</kw>
<msg timestamp="20210811 22:49:31.268" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:49:31.266" endtime="20210811 22:49:31.268"/>
</kw>
<status status="PASS" starttime="20210811 22:49:31.266" endtime="20210811 22:49:31.269"/>
</kw>
<msg timestamp="20210811 22:49:31.269" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:49:31.265" endtime="20210811 22:49:31.269"/>
</kw>
<msg timestamp="20210811 22:49:31.269" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:49:31.265" endtime="20210811 22:49:31.269"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:31.272" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:11.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:11.526" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:49:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:33 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:49:31.270" endtime="20210811 22:50:11.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:11.527" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:49:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:49:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:49:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:49:34 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:49:35 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-11 22:49:35 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:49:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628722084328_0001
2021-08-11 22:49:37 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:49:38 INFO  Configuration:2824 - resource-types.xml not found
2021-08-11 22:49:38 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-11 22:49:38 INFO  YarnClientImpl:338 - Submitted application application_1628722084328_0001
2021-08-11 22:49:38 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628722084328_0001/
2021-08-11 22:49:38 INFO  Job:1620 - Running job: job_1628722084328_0001
2021-08-11 22:49:47 INFO  Job:1641 - Job job_1628722084328_0001 running in uber mode : false
2021-08-11 22:49:47 INFO  Job:1648 -  map 0% reduce 0%
2021-08-11 22:49:54 INFO  Job:1648 -  map 33% reduce 0%
2021-08-11 22:49:59 INFO  Job:1648 -  map 67% reduce 0%
2021-08-11 22:50:04 INFO  Job:1648 -  map 100% reduce 0%
2021-08-11 22:50:09 INFO  Job:1648 -  map 100% reduce 100%
2021-08-11 22:50:10 INFO  Job:1659 - Job job_1628722084328_0001 completed successfully
2021-08-11 22:50:10 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1268453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40388
		Total time spent by all reduces in occupied slots (ms)=14880
		Total time spent by all map tasks (ms)=10097
		Total time spent by all reduce tasks (ms)=3720
		Total vcore-milliseconds taken by all map tasks=10097
		Total vcore-milliseconds taken by all reduce tasks=3720
		Total megabyte-milliseconds taken by all map tasks=41357312
		Total megabyte-milliseconds taken by all reduce tasks=15237120
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=550
		CPU time spent (ms)=6390
		Physical memory (bytes) snapshot=1640673280
		Virtual memory (bytes) snapshot=15795036160
		Total committed heap usage (bytes)=1471676416
		Peak Map Physical memory (bytes)=439947264
		Peak Map Virtual memory (bytes)=3947970560
		Peak Reduce Physical memory (bytes)=371802112
		Peak Reduce Virtual memory (bytes)=3979481088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.51 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:50:11.526" endtime="20210811 22:50:11.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:11.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:11.527" endtime="20210811 22:50:11.528"/>
</kw>
<status status="PASS" starttime="20210811 22:49:31.270" endtime="20210811 22:50:11.528"/>
</kw>
<msg timestamp="20210811 22:50:11.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:31.270" endtime="20210811 22:50:11.528"/>
</kw>
<msg timestamp="20210811 22:50:11.529" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:49:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:49:33 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:49:31.269" endtime="20210811 22:50:11.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:50:11.529" endtime="20210811 22:50:11.529"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:49:31.250" endtime="20210811 22:50:11.529"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:50:11.534" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:11.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:11.539" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:50:11.532" endtime="20210811 22:50:11.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:11.540" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:50:11.539" endtime="20210811 22:50:11.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:11.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:11.540" endtime="20210811 22:50:11.541"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.531" endtime="20210811 22:50:11.541"/>
</kw>
<msg timestamp="20210811 22:50:11.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:50:11.531" endtime="20210811 22:50:11.541"/>
</kw>
<msg timestamp="20210811 22:50:11.541" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:50:11.531" endtime="20210811 22:50:11.541"/>
</kw>
<msg timestamp="20210811 22:50:11.541" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:50:11.530" endtime="20210811 22:50:11.541"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:50:11.542" level="INFO">${random} = wwxKGMOH</msg>
<status status="PASS" starttime="20210811 22:50:11.542" endtime="20210811 22:50:11.542"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:50:11.545" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:50:11.545" endtime="20210811 22:50:11.545"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:50:11.546" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.545" endtime="20210811 22:50:11.546"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.544" endtime="20210811 22:50:11.546"/>
</kw>
<msg timestamp="20210811 22:50:11.546" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.544" endtime="20210811 22:50:11.546"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.543" endtime="20210811 22:50:11.546"/>
</kw>
<msg timestamp="20210811 22:50:11.546" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:50:11.543" endtime="20210811 22:50:11.546"/>
</kw>
<msg timestamp="20210811 22:50:11.546" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210811 22:50:11.542" endtime="20210811 22:50:11.546"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:50:11.549" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:50:11.549" endtime="20210811 22:50:11.549"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:50:11.550" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.549" endtime="20210811 22:50:11.550"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.549" endtime="20210811 22:50:11.550"/>
</kw>
<msg timestamp="20210811 22:50:11.550" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.548" endtime="20210811 22:50:11.550"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.548" endtime="20210811 22:50:11.550"/>
</kw>
<msg timestamp="20210811 22:50:11.550" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:50:11.547" endtime="20210811 22:50:11.550"/>
</kw>
<msg timestamp="20210811 22:50:11.551" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210811 22:50:11.547" endtime="20210811 22:50:11.551"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:50:11.553" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:50:11.553" endtime="20210811 22:50:11.553"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:50:11.554" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.554" endtime="20210811 22:50:11.554"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.553" endtime="20210811 22:50:11.554"/>
</kw>
<msg timestamp="20210811 22:50:11.554" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:50:11.552" endtime="20210811 22:50:11.554"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.552" endtime="20210811 22:50:11.554"/>
</kw>
<msg timestamp="20210811 22:50:11.555" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-wwxKGMOH.txt</msg>
<status status="PASS" starttime="20210811 22:50:11.551" endtime="20210811 22:50:11.555"/>
</kw>
<msg timestamp="20210811 22:50:11.555" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-wwxKGMOH.txt</msg>
<status status="PASS" starttime="20210811 22:50:11.551" endtime="20210811 22:50:11.555"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:50:11.558" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-wwxKGMOH.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:44.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:44.601" level="INFO">${output} = 2021-08-11 22:50:13 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:50:13 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210811 22:50:11.556" endtime="20210811 22:50:44.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:44.602" level="INFO">2021-08-11 22:50:13 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:50:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:50:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:50:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:50:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:50:14 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-11 22:50:15 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:50:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628722084328_0002
2021-08-11 22:50:15 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:50:15 INFO  Configuration:2824 - resource-types.xml not found
2021-08-11 22:50:15 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-11 22:50:15 INFO  YarnClientImpl:338 - Submitted application application_1628722084328_0002
2021-08-11 22:50:15 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628722084328_0002/
2021-08-11 22:50:15 INFO  Job:1620 - Running job: job_1628722084328_0002
2021-08-11 22:50:22 INFO  Job:1641 - Job job_1628722084328_0002 running in uber mode : false
2021-08-11 22:50:22 INFO  Job:1648 -  map 0% reduce 0%
2021-08-11 22:50:30 INFO  Job:1648 -  map 33% reduce 0%
2021-08-11 22:50:34 INFO  Job:1648 -  map 67% reduce 0%
2021-08-11 22:50:39 INFO  Job:1648 -  map 100% reduce 0%
2021-08-11 22:50:44 INFO  Job:1648 -  map 100% reduce 100%
2021-08-11 22:50:44 INFO  Job:1659 - Job job_1628722084328_0002 completed successfully
2021-08-11 22:50:44 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1331211
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38604
		Total time spent by all reduces in occupied slots (ms)=14032
		Total time spent by all map tasks (ms)=9651
		Total time spent by all reduce tasks (ms)=3508
		Total vcore-milliseconds taken by all map tasks=9651
		Total vcore-milliseconds taken by all reduce tasks=3508
		Total megabyte-milliseconds taken by all map tasks=39530496
		Total megabyte-milliseconds taken by all reduce tasks=14368768
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=6060
		Physical memory (bytes) snapshot=1527369728
		Virtual memory (bytes) snapshot=15762358272
		Total committed heap usage (bytes)=1416101888
		Peak Map Physical memory (bytes)=426307584
		Peak Map Virtual memory (bytes)=3937898496
		Peak Reduce Physical memory (bytes)=345456640
		Peak Reduce Virtual memory (bytes)=3955752960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:50:44.602" endtime="20210811 22:50:44.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:44.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:44.603" endtime="20210811 22:50:44.604"/>
</kw>
<status status="PASS" starttime="20210811 22:50:11.556" endtime="20210811 22:50:44.604"/>
</kw>
<msg timestamp="20210811 22:50:44.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:50:11.555" endtime="20210811 22:50:44.604"/>
</kw>
<msg timestamp="20210811 22:50:44.604" level="INFO">${output} = 2021-08-11 22:50:13 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:50:13 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210811 22:50:11.555" endtime="20210811 22:50:44.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:50:44.604" endtime="20210811 22:50:44.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:50:44.605" endtime="20210811 22:50:44.605"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:50:11.530" endtime="20210811 22:50:44.605"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:49:31.205" endtime="20210811 22:50:44.606"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:50:48.863" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:50:48.862" endtime="20210811 22:50:48.863"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:50:48.863" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:50:48.863" endtime="20210811 22:50:48.863"/>
</kw>
<status status="PASS" starttime="20210811 22:50:48.862" endtime="20210811 22:50:48.863"/>
</kw>
<msg timestamp="20210811 22:50:48.863" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:50:48.861" endtime="20210811 22:50:48.863"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:50:48.864" endtime="20210811 22:50:48.864"/>
</kw>
<msg timestamp="20210811 22:50:48.864" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:50:48.864" endtime="20210811 22:50:48.864"/>
</kw>
<status status="PASS" starttime="20210811 22:50:48.861" endtime="20210811 22:50:48.865"/>
</kw>
<msg timestamp="20210811 22:50:48.865" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:50:48.860" endtime="20210811 22:50:48.865"/>
</kw>
<msg timestamp="20210811 22:50:48.865" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:50:48.859" endtime="20210811 22:50:48.865"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:50:48.865" level="INFO">${random} = 27845</msg>
<status status="PASS" starttime="20210811 22:50:48.865" endtime="20210811 22:50:48.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:50:48.870" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-27845 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:52.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:52.242" level="INFO">${output} = 2021-08-11 22:50:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:50:48.867" endtime="20210811 22:50:52.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:52.243" level="INFO">2021-08-11 22:50:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:50:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:50:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210811 22:50:52.243" endtime="20210811 22:50:52.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:52.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:52.244" endtime="20210811 22:50:52.244"/>
</kw>
<status status="PASS" starttime="20210811 22:50:48.866" endtime="20210811 22:50:52.244"/>
</kw>
<msg timestamp="20210811 22:50:52.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:50:48.866" endtime="20210811 22:50:52.245"/>
</kw>
<msg timestamp="20210811 22:50:52.245" level="INFO">${result} = 2021-08-11 22:50:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:50:48.865" endtime="20210811 22:50:52.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:50:52.248" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:53.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:53.928" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:50 ofs://om/volume1/bucket1/ozone-27845
-rw-...</msg>
<status status="PASS" starttime="20210811 22:50:52.246" endtime="20210811 22:50:53.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:53.929" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:50 ofs://om/volume1/bucket1/ozone-27845
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:49 ofs://om/volume1/bucket1/ozone-95086
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:49 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:50 ofs://om/volume1/bucket1/wordcount-wwxKGMOH.txt</msg>
<status status="PASS" starttime="20210811 22:50:53.928" endtime="20210811 22:50:53.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:53.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:53.929" endtime="20210811 22:50:53.929"/>
</kw>
<status status="PASS" starttime="20210811 22:50:52.246" endtime="20210811 22:50:53.930"/>
</kw>
<msg timestamp="20210811 22:50:53.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:50:52.245" endtime="20210811 22:50:53.930"/>
</kw>
<msg timestamp="20210811 22:50:53.930" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-11 22:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-11 22:50 ofs://om/volume1/bucket1/ozone-27845
-rw-...</msg>
<status status="PASS" starttime="20210811 22:50:52.245" endtime="20210811 22:50:53.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:50:53.930" endtime="20210811 22:50:53.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:50:53.934" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-27845 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:50:56.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:50:56.841" level="INFO">${output} = 2021-08-11 22:50:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:50:53.932" endtime="20210811 22:50:56.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:50:56.843" level="INFO">2021-08-11 22:50:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:50:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210811 22:50:56.842" endtime="20210811 22:50:56.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:50:56.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:50:56.843" endtime="20210811 22:50:56.843"/>
</kw>
<status status="PASS" starttime="20210811 22:50:53.931" endtime="20210811 22:50:56.844"/>
</kw>
<msg timestamp="20210811 22:50:56.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:50:53.931" endtime="20210811 22:50:56.844"/>
</kw>
<msg timestamp="20210811 22:50:56.844" level="INFO">${result} = 2021-08-11 22:50:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:50:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210811 22:50:53.931" endtime="20210811 22:50:56.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:50:56.844" endtime="20210811 22:50:56.845"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210811 22:50:48.859" endtime="20210811 22:50:56.845"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210811 22:50:48.812" endtime="20210811 22:50:56.846"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:51:01.059" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:51:01.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:51:01.065" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:01.056" endtime="20210811 22:51:01.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:51:01.066" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:01.065" endtime="20210811 22:51:01.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:51:01.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:51:01.066" endtime="20210811 22:51:01.067"/>
</kw>
<status status="PASS" starttime="20210811 22:51:01.055" endtime="20210811 22:51:01.067"/>
</kw>
<msg timestamp="20210811 22:51:01.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:51:01.055" endtime="20210811 22:51:01.067"/>
</kw>
<msg timestamp="20210811 22:51:01.067" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:01.055" endtime="20210811 22:51:01.069"/>
</kw>
<msg timestamp="20210811 22:51:01.069" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:01.054" endtime="20210811 22:51:01.069"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:01.072" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:51:01.072" endtime="20210811 22:51:01.072"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:01.073" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:51:01.072" endtime="20210811 22:51:01.073"/>
</kw>
<status status="PASS" starttime="20210811 22:51:01.071" endtime="20210811 22:51:01.073"/>
</kw>
<msg timestamp="20210811 22:51:01.073" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:51:01.071" endtime="20210811 22:51:01.073"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:51:01.073" endtime="20210811 22:51:01.074"/>
</kw>
<msg timestamp="20210811 22:51:01.074" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:51:01.073" endtime="20210811 22:51:01.074"/>
</kw>
<status status="PASS" starttime="20210811 22:51:01.070" endtime="20210811 22:51:01.074"/>
</kw>
<msg timestamp="20210811 22:51:01.074" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:51:01.070" endtime="20210811 22:51:01.074"/>
</kw>
<msg timestamp="20210811 22:51:01.074" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:51:01.069" endtime="20210811 22:51:01.074"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:51:01.077" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:51:34.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:51:34.408" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:51:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:51:03 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:51:01.076" endtime="20210811 22:51:34.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:51:34.410" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:51:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:51:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:51:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:51:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-11 22:51:04 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:51:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:51:04 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-11 22:51:04 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:51:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628722084328_0003
2021-08-11 22:51:05 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:51:05 INFO  Configuration:2824 - resource-types.xml not found
2021-08-11 22:51:05 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-11 22:51:05 INFO  YarnClientImpl:338 - Submitted application application_1628722084328_0003
2021-08-11 22:51:05 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628722084328_0003/
2021-08-11 22:51:05 INFO  Job:1620 - Running job: job_1628722084328_0003
2021-08-11 22:51:12 INFO  Job:1641 - Job job_1628722084328_0003 running in uber mode : false
2021-08-11 22:51:12 INFO  Job:1648 -  map 0% reduce 0%
2021-08-11 22:51:18 INFO  Job:1648 -  map 33% reduce 0%
2021-08-11 22:51:23 INFO  Job:1648 -  map 67% reduce 0%
2021-08-11 22:51:28 INFO  Job:1648 -  map 100% reduce 0%
2021-08-11 22:51:32 INFO  Job:1648 -  map 100% reduce 100%
2021-08-11 22:51:33 INFO  Job:1659 - Job job_1628722084328_0003 completed successfully
2021-08-11 22:51:33 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1268249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37908
		Total time spent by all reduces in occupied slots (ms)=13728
		Total time spent by all map tasks (ms)=9477
		Total time spent by all reduce tasks (ms)=3432
		Total vcore-milliseconds taken by all map tasks=9477
		Total vcore-milliseconds taken by all reduce tasks=3432
		Total megabyte-milliseconds taken by all map tasks=38817792
		Total megabyte-milliseconds taken by all reduce tasks=14057472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=6210
		Physical memory (bytes) snapshot=1622433792
		Virtual memory (bytes) snapshot=15776694272
		Total committed heap usage (bytes)=1464336384
		Peak Map Physical memory (bytes)=438190080
		Peak Map Virtual memory (bytes)=3949375488
		Peak Reduce Physical memory (bytes)=343695360
		Peak Reduce Virtual memory (bytes)=3958173696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.57 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210811 22:51:34.409" endtime="20210811 22:51:34.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:51:34.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:51:34.410" endtime="20210811 22:51:34.410"/>
</kw>
<status status="PASS" starttime="20210811 22:51:01.075" endtime="20210811 22:51:34.410"/>
</kw>
<msg timestamp="20210811 22:51:34.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:51:01.075" endtime="20210811 22:51:34.411"/>
</kw>
<msg timestamp="20210811 22:51:34.411" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-11 22:51:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:51:03 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210811 22:51:01.075" endtime="20210811 22:51:34.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:51:34.411" endtime="20210811 22:51:34.412"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:51:01.053" endtime="20210811 22:51:34.412"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:51:34.417" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:51:34.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:51:34.422" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:34.415" endtime="20210811 22:51:34.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:51:34.423" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:34.422" endtime="20210811 22:51:34.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:51:34.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:51:34.423" endtime="20210811 22:51:34.423"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.414" endtime="20210811 22:51:34.424"/>
</kw>
<msg timestamp="20210811 22:51:34.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:51:34.414" endtime="20210811 22:51:34.424"/>
</kw>
<msg timestamp="20210811 22:51:34.424" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:34.414" endtime="20210811 22:51:34.424"/>
</kw>
<msg timestamp="20210811 22:51:34.424" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210811 22:51:34.413" endtime="20210811 22:51:34.424"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210811 22:51:34.425" level="INFO">${random} = fUyuUvjr</msg>
<status status="PASS" starttime="20210811 22:51:34.424" endtime="20210811 22:51:34.425"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:34.428" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:51:34.428" endtime="20210811 22:51:34.428"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:34.429" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.428" endtime="20210811 22:51:34.429"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.427" endtime="20210811 22:51:34.429"/>
</kw>
<msg timestamp="20210811 22:51:34.429" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.427" endtime="20210811 22:51:34.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210811 22:51:34.429" endtime="20210811 22:51:34.430"/>
</kw>
<msg timestamp="20210811 22:51:34.430" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210811 22:51:34.429" endtime="20210811 22:51:34.430"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.426" endtime="20210811 22:51:34.430"/>
</kw>
<msg timestamp="20210811 22:51:34.430" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:51:34.426" endtime="20210811 22:51:34.430"/>
</kw>
<msg timestamp="20210811 22:51:34.430" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210811 22:51:34.425" endtime="20210811 22:51:34.430"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:34.433" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:51:34.433" endtime="20210811 22:51:34.433"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:34.434" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.433" endtime="20210811 22:51:34.434"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.432" endtime="20210811 22:51:34.434"/>
</kw>
<msg timestamp="20210811 22:51:34.434" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.432" endtime="20210811 22:51:34.434"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:34.435" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210811 22:51:34.435" endtime="20210811 22:51:34.435"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:34.436" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210811 22:51:34.436" endtime="20210811 22:51:34.436"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.435" endtime="20210811 22:51:34.436"/>
</kw>
<msg timestamp="20210811 22:51:34.436" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210811 22:51:34.434" endtime="20210811 22:51:34.436"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.432" endtime="20210811 22:51:34.437"/>
</kw>
<msg timestamp="20210811 22:51:34.437" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:51:34.431" endtime="20210811 22:51:34.437"/>
</kw>
<msg timestamp="20210811 22:51:34.437" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210811 22:51:34.430" endtime="20210811 22:51:34.437"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:34.440" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210811 22:51:34.439" endtime="20210811 22:51:34.440"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:34.440" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.440" endtime="20210811 22:51:34.441"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.439" endtime="20210811 22:51:34.441"/>
</kw>
<msg timestamp="20210811 22:51:34.441" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210811 22:51:34.439" endtime="20210811 22:51:34.441"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:51:34.442" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210811 22:51:34.442" endtime="20210811 22:51:34.442"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:51:34.443" level="INFO">${result} = /wordcount-fUyuUvjr.txt</msg>
<status status="PASS" starttime="20210811 22:51:34.442" endtime="20210811 22:51:34.443"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.441" endtime="20210811 22:51:34.443"/>
</kw>
<msg timestamp="20210811 22:51:34.443" level="INFO">${path_with_leading} = /wordcount-fUyuUvjr.txt</msg>
<status status="PASS" starttime="20210811 22:51:34.441" endtime="20210811 22:51:34.443"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.438" endtime="20210811 22:51:34.443"/>
</kw>
<msg timestamp="20210811 22:51:34.443" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-fUyuUvjr.txt</msg>
<status status="PASS" starttime="20210811 22:51:34.438" endtime="20210811 22:51:34.443"/>
</kw>
<msg timestamp="20210811 22:51:34.443" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-fUyuUvjr.txt</msg>
<status status="PASS" starttime="20210811 22:51:34.437" endtime="20210811 22:51:34.443"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:51:34.446" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-fUyuUvjr.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:52:10.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:52:10.473" level="INFO">${output} = 2021-08-11 22:51:36 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:51:36 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210811 22:51:34.445" endtime="20210811 22:52:10.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:52:10.474" level="INFO">2021-08-11 22:51:36 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:51:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-11 22:51:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-11 22:51:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-11 22:51:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-11 22:51:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-11 22:51:37 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-11 22:51:37 INFO  JobSubmitter:202 - number of splits:3
2021-08-11 22:51:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628722084328_0004
2021-08-11 22:51:38 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-11 22:51:38 INFO  Configuration:2824 - resource-types.xml not found
2021-08-11 22:51:38 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-11 22:51:38 INFO  YarnClientImpl:338 - Submitted application application_1628722084328_0004
2021-08-11 22:51:38 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628722084328_0004/
2021-08-11 22:51:38 INFO  Job:1620 - Running job: job_1628722084328_0004
2021-08-11 22:51:45 INFO  Job:1641 - Job job_1628722084328_0004 running in uber mode : false
2021-08-11 22:51:45 INFO  Job:1648 -  map 0% reduce 0%
2021-08-11 22:51:51 INFO  Job:1648 -  map 33% reduce 0%
2021-08-11 22:51:56 INFO  Job:1648 -  map 67% reduce 0%
2021-08-11 22:52:01 INFO  Job:1648 -  map 100% reduce 0%
2021-08-11 22:52:07 INFO  Job:1648 -  map 100% reduce 100%
2021-08-11 22:52:10 INFO  Job:1659 - Job job_1628722084328_0004 completed successfully
2021-08-11 22:52:10 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1331127
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38052
		Total time spent by all reduces in occupied slots (ms)=14308
		Total time spent by all map tasks (ms)=9513
		Total time spent by all reduce tasks (ms)=3577
		Total vcore-milliseconds taken by all map tasks=9513
		Total vcore-milliseconds taken by all reduce tasks=3577
		Total megabyte-milliseconds taken by all map tasks=38965248
		Total megabyte-milliseconds taken by all reduce tasks=14651392
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=6990
		Physical memory (bytes) snapshot=1674633216
		Virtual memory (bytes) snapshot=15812247552
		Total committed heap usage (bytes)=1470103552
		Peak Map Physical memory (bytes)=448917504
		Peak Map Virtual memory (bytes)=3952852992
		Peak Reduce Physical memory (bytes)=365707264
		Peak Reduce Virtual memory (bytes)=3973656576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210811 22:52:10.473" endtime="20210811 22:52:10.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:52:10.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:52:10.474" endtime="20210811 22:52:10.475"/>
</kw>
<status status="PASS" starttime="20210811 22:51:34.444" endtime="20210811 22:52:10.475"/>
</kw>
<msg timestamp="20210811 22:52:10.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:51:34.444" endtime="20210811 22:52:10.475"/>
</kw>
<msg timestamp="20210811 22:52:10.476" level="INFO">${output} = 2021-08-11 22:51:36 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.3:8032
2021-08-11 22:51:36 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210811 22:51:34.444" endtime="20210811 22:52:10.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:52:10.476" endtime="20210811 22:52:10.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:52:10.476" endtime="20210811 22:52:10.477"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210811 22:51:34.413" endtime="20210811 22:52:10.477"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210811 22:51:01.007" endtime="20210811 22:52:10.478"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:35.917" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:39.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20210811 22:48:39.814" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:48:35.914" endtime="20210811 22:48:39.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:39.815" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:48:39.814" endtime="20210811 22:48:39.815"/>
</kw>
<msg timestamp="20210811 22:48:39.815" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210811 22:48:35.913" endtime="20210811 22:48:39.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:39.819" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:42.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:48:42.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:48:39.817" endtime="20210811 22:48:42.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:42.666" level="INFO"/>
<status status="PASS" starttime="20210811 22:48:42.665" endtime="20210811 22:48:42.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:48:42.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:48:42.666" endtime="20210811 22:48:42.667"/>
</kw>
<status status="PASS" starttime="20210811 22:48:39.817" endtime="20210811 22:48:42.667"/>
</kw>
<msg timestamp="20210811 22:48:42.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:39.817" endtime="20210811 22:48:42.667"/>
</kw>
<msg timestamp="20210811 22:48:42.668" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210811 22:48:39.816" endtime="20210811 22:48:42.668"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:48:42.668" endtime="20210811 22:48:42.668"/>
</kw>
<status status="PASS" starttime="20210811 22:48:39.816" endtime="20210811 22:48:42.668"/>
</kw>
<status status="PASS" starttime="20210811 22:48:39.815" endtime="20210811 22:48:42.668"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:42.673" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:45.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:48:45.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:48:42.671" endtime="20210811 22:48:45.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:45.526" level="INFO"/>
<status status="PASS" starttime="20210811 22:48:45.526" endtime="20210811 22:48:45.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:48:45.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:48:45.527" endtime="20210811 22:48:45.527"/>
</kw>
<status status="PASS" starttime="20210811 22:48:42.670" endtime="20210811 22:48:45.527"/>
</kw>
<msg timestamp="20210811 22:48:45.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:42.670" endtime="20210811 22:48:45.528"/>
</kw>
<status status="PASS" starttime="20210811 22:48:42.669" endtime="20210811 22:48:45.528"/>
</kw>
<status status="PASS" starttime="20210811 22:48:42.669" endtime="20210811 22:48:45.528"/>
</kw>
<status status="PASS" starttime="20210811 22:48:42.669" endtime="20210811 22:48:45.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210811 22:48:45.528" endtime="20210811 22:48:45.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:45.532" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:48.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:48:48.686" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:48...</msg>
<status status="PASS" starttime="20210811 22:48:45.530" endtime="20210811 22:48:48.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:48.688" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:48:45.355Z",
  "modificationTime" : "2021-08-11T22:48:45.355Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210811 22:48:48.687" endtime="20210811 22:48:48.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:48:48.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:48:48.688" endtime="20210811 22:48:48.688"/>
</kw>
<status status="PASS" starttime="20210811 22:48:45.529" endtime="20210811 22:48:48.689"/>
</kw>
<msg timestamp="20210811 22:48:48.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:45.529" endtime="20210811 22:48:48.689"/>
</kw>
<msg timestamp="20210811 22:48:48.689" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-11T22:48...</msg>
<status status="PASS" starttime="20210811 22:48:45.529" endtime="20210811 22:48:48.689"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210811 22:48:48.689" endtime="20210811 22:48:48.689"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:48:48.693" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:48:48.693" endtime="20210811 22:48:48.693"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:48:48.694" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:48:48.694" endtime="20210811 22:48:48.694"/>
</kw>
<status status="PASS" starttime="20210811 22:48:48.693" endtime="20210811 22:48:48.694"/>
</kw>
<msg timestamp="20210811 22:48:48.694" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:48:48.691" endtime="20210811 22:48:48.694"/>
</kw>
<status status="PASS" starttime="20210811 22:48:48.691" endtime="20210811 22:48:48.695"/>
</kw>
<msg timestamp="20210811 22:48:48.695" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:48:48.690" endtime="20210811 22:48:48.695"/>
</kw>
<msg timestamp="20210811 22:48:48.695" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210811 22:48:48.690" endtime="20210811 22:48:48.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:48.698" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:51.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:48:51.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:48:48.696" endtime="20210811 22:48:51.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:51.674" level="INFO"/>
<status status="PASS" starttime="20210811 22:48:51.673" endtime="20210811 22:48:51.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:48:51.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:48:51.674" endtime="20210811 22:48:51.675"/>
</kw>
<status status="PASS" starttime="20210811 22:48:48.696" endtime="20210811 22:48:51.675"/>
</kw>
<msg timestamp="20210811 22:48:51.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:48.696" endtime="20210811 22:48:51.675"/>
</kw>
<status status="PASS" starttime="20210811 22:48:48.695" endtime="20210811 22:48:51.675"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:51.679" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:48:57.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:48:57.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:48:51.677" endtime="20210811 22:48:57.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:48:57.828" level="INFO"/>
<status status="PASS" starttime="20210811 22:48:57.827" endtime="20210811 22:48:57.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:48:57.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:48:57.828" endtime="20210811 22:48:57.829"/>
</kw>
<status status="PASS" starttime="20210811 22:48:51.676" endtime="20210811 22:48:57.829"/>
</kw>
<msg timestamp="20210811 22:48:57.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:51.676" endtime="20210811 22:48:57.829"/>
</kw>
<status status="PASS" starttime="20210811 22:48:51.676" endtime="20210811 22:48:57.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:48:57.833" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:03.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:03.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:48:57.831" endtime="20210811 22:49:03.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:03.546" level="INFO"/>
<status status="PASS" starttime="20210811 22:49:03.546" endtime="20210811 22:49:03.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:03.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:03.547" endtime="20210811 22:49:03.547"/>
</kw>
<status status="PASS" starttime="20210811 22:48:57.830" endtime="20210811 22:49:03.547"/>
</kw>
<msg timestamp="20210811 22:49:03.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:48:57.830" endtime="20210811 22:49:03.548"/>
</kw>
<status status="PASS" starttime="20210811 22:48:57.830" endtime="20210811 22:49:03.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:03.551" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:08.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:08.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:49:03.549" endtime="20210811 22:49:08.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:08.518" level="INFO"/>
<status status="PASS" starttime="20210811 22:49:08.517" endtime="20210811 22:49:08.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:08.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:08.518" endtime="20210811 22:49:08.518"/>
</kw>
<status status="PASS" starttime="20210811 22:49:03.549" endtime="20210811 22:49:08.519"/>
</kw>
<msg timestamp="20210811 22:49:08.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:03.549" endtime="20210811 22:49:08.519"/>
</kw>
<status status="PASS" starttime="20210811 22:49:03.548" endtime="20210811 22:49:08.519"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:48:35.912" endtime="20210811 22:49:08.519"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210811 22:49:08.526" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210811 22:49:08.525" endtime="20210811 22:49:08.526"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210811 22:49:08.527" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210811 22:49:08.526" endtime="20210811 22:49:08.527"/>
</kw>
<status status="PASS" starttime="20210811 22:49:08.525" endtime="20210811 22:49:08.527"/>
</kw>
<msg timestamp="20210811 22:49:08.527" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210811 22:49:08.524" endtime="20210811 22:49:08.527"/>
</kw>
<status status="PASS" starttime="20210811 22:49:08.523" endtime="20210811 22:49:08.527"/>
</kw>
<msg timestamp="20210811 22:49:08.527" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:49:08.523" endtime="20210811 22:49:08.527"/>
</kw>
<msg timestamp="20210811 22:49:08.528" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210811 22:49:08.522" endtime="20210811 22:49:08.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:08.531" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:11.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:11.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:49:08.529" endtime="20210811 22:49:11.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:11.516" level="INFO"/>
<status status="PASS" starttime="20210811 22:49:11.514" endtime="20210811 22:49:11.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:11.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:11.516" endtime="20210811 22:49:11.516"/>
</kw>
<status status="PASS" starttime="20210811 22:49:08.528" endtime="20210811 22:49:11.517"/>
</kw>
<msg timestamp="20210811 22:49:11.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:08.528" endtime="20210811 22:49:11.517"/>
</kw>
<status status="PASS" starttime="20210811 22:49:08.528" endtime="20210811 22:49:11.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210811 22:49:11.520" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210811 22:49:14.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210811 22:49:14.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210811 22:49:11.518" endtime="20210811 22:49:14.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210811 22:49:14.534" level="INFO"/>
<status status="PASS" starttime="20210811 22:49:14.533" endtime="20210811 22:49:14.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210811 22:49:14.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210811 22:49:14.534" endtime="20210811 22:49:14.534"/>
</kw>
<status status="PASS" starttime="20210811 22:49:11.518" endtime="20210811 22:49:14.535"/>
</kw>
<msg timestamp="20210811 22:49:14.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210811 22:49:11.518" endtime="20210811 22:49:14.535"/>
</kw>
<status status="PASS" starttime="20210811 22:49:11.517" endtime="20210811 22:49:14.535"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210811 22:49:08.521" endtime="20210811 22:49:14.535"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210811 22:48:35.864" endtime="20210811 22:49:14.537"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="197962"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="799586"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
