<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210827 22:23:27.524" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:15:12.699" level="INFO">${random} = 13627</msg>
<status status="PASS" starttime="20210827 22:15:12.698" endtime="20210827 22:15:12.699"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:15:12.702" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-13627 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:15:16.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:15:16.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:12.701" endtime="20210827 22:15:16.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:15:16.528" level="INFO"/>
<status status="PASS" starttime="20210827 22:15:16.527" endtime="20210827 22:15:16.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:15:16.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:15:16.528" endtime="20210827 22:15:16.529"/>
</kw>
<status status="PASS" starttime="20210827 22:15:12.700" endtime="20210827 22:15:16.529"/>
</kw>
<msg timestamp="20210827 22:15:16.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:15:12.700" endtime="20210827 22:15:16.529"/>
</kw>
<msg timestamp="20210827 22:15:16.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:12.699" endtime="20210827 22:15:16.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:15:16.529" endtime="20210827 22:15:16.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:15:12.697" endtime="20210827 22:15:16.530"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:15:12.651" endtime="20210827 22:15:16.532"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:14:59.871" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:15:02.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:15:02.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:14:59.870" endtime="20210827 22:15:02.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:15:02.285" level="INFO"/>
<status status="PASS" starttime="20210827 22:15:02.285" endtime="20210827 22:15:02.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:15:02.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:15:02.286" endtime="20210827 22:15:02.286"/>
</kw>
<status status="PASS" starttime="20210827 22:14:59.870" endtime="20210827 22:15:02.286"/>
</kw>
<msg timestamp="20210827 22:15:02.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:14:59.869" endtime="20210827 22:15:02.287"/>
</kw>
<msg timestamp="20210827 22:15:02.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:14:59.868" endtime="20210827 22:15:02.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:15:02.287" endtime="20210827 22:15:02.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:15:02.291" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:15:04.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:15:04.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:02.289" endtime="20210827 22:15:04.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:15:04.435" level="INFO"/>
<status status="PASS" starttime="20210827 22:15:04.435" endtime="20210827 22:15:04.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:15:04.436" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:15:04.435" endtime="20210827 22:15:04.436"/>
</kw>
<status status="PASS" starttime="20210827 22:15:02.289" endtime="20210827 22:15:04.436"/>
</kw>
<msg timestamp="20210827 22:15:04.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:15:02.288" endtime="20210827 22:15:04.437"/>
</kw>
<msg timestamp="20210827 22:15:04.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:02.288" endtime="20210827 22:15:04.437"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:15:04.437" endtime="20210827 22:15:04.437"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:15:04.442" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:15:09.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:15:09.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:04.441" endtime="20210827 22:15:09.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:15:09.240" level="INFO"/>
<status status="PASS" starttime="20210827 22:15:09.239" endtime="20210827 22:15:09.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:15:09.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:15:09.240" endtime="20210827 22:15:09.241"/>
</kw>
<status status="PASS" starttime="20210827 22:15:04.438" endtime="20210827 22:15:09.241"/>
</kw>
<msg timestamp="20210827 22:15:09.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:15:04.438" endtime="20210827 22:15:09.241"/>
</kw>
<msg timestamp="20210827 22:15:09.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:15:04.438" endtime="20210827 22:15:09.241"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:15:09.242" endtime="20210827 22:15:09.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:14:59.868" endtime="20210827 22:15:09.242"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 22:14:59.821" endtime="20210827 22:15:09.243"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:16:22.770" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:16:25.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:16:25.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:22.767" endtime="20210827 22:16:25.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:16:25.280" level="INFO"/>
<status status="PASS" starttime="20210827 22:16:25.279" endtime="20210827 22:16:25.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:16:25.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:16:25.280" endtime="20210827 22:16:25.281"/>
</kw>
<status status="PASS" starttime="20210827 22:16:22.767" endtime="20210827 22:16:25.281"/>
</kw>
<msg timestamp="20210827 22:16:25.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:16:22.766" endtime="20210827 22:16:25.282"/>
</kw>
<msg timestamp="20210827 22:16:25.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:22.766" endtime="20210827 22:16:25.282"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:16:25.282" endtime="20210827 22:16:25.283"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:16:25.287" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:16:27.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:16:27.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:25.285" endtime="20210827 22:16:27.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:16:27.624" level="INFO"/>
<status status="PASS" starttime="20210827 22:16:27.623" endtime="20210827 22:16:27.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:16:27.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:16:27.625" endtime="20210827 22:16:27.625"/>
</kw>
<status status="PASS" starttime="20210827 22:16:25.284" endtime="20210827 22:16:27.626"/>
</kw>
<msg timestamp="20210827 22:16:27.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:16:25.283" endtime="20210827 22:16:27.626"/>
</kw>
<msg timestamp="20210827 22:16:27.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:25.283" endtime="20210827 22:16:27.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:16:27.627" endtime="20210827 22:16:27.627"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:16:27.631" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:16:32.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:16:32.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:27.629" endtime="20210827 22:16:32.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:16:32.500" level="INFO"/>
<status status="PASS" starttime="20210827 22:16:32.499" endtime="20210827 22:16:32.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:16:32.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:16:32.500" endtime="20210827 22:16:32.501"/>
</kw>
<status status="PASS" starttime="20210827 22:16:27.628" endtime="20210827 22:16:32.501"/>
</kw>
<msg timestamp="20210827 22:16:32.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:16:27.628" endtime="20210827 22:16:32.501"/>
</kw>
<msg timestamp="20210827 22:16:32.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:27.627" endtime="20210827 22:16:32.502"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:16:32.502" endtime="20210827 22:16:32.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:16:22.765" endtime="20210827 22:16:32.503"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 22:16:22.706" endtime="20210827 22:16:32.504"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:16:36.160" level="INFO">${random} = 62704</msg>
<status status="PASS" starttime="20210827 22:16:36.160" endtime="20210827 22:16:36.160"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:16:36.165" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-62704 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:16:40.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:16:40.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:36.162" endtime="20210827 22:16:40.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:16:40.491" level="INFO"/>
<status status="PASS" starttime="20210827 22:16:40.490" endtime="20210827 22:16:40.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:16:40.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:16:40.491" endtime="20210827 22:16:40.492"/>
</kw>
<status status="PASS" starttime="20210827 22:16:36.162" endtime="20210827 22:16:40.492"/>
</kw>
<msg timestamp="20210827 22:16:40.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:16:36.161" endtime="20210827 22:16:40.493"/>
</kw>
<msg timestamp="20210827 22:16:40.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:36.161" endtime="20210827 22:16:40.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:16:40.493" endtime="20210827 22:16:40.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:16:36.159" endtime="20210827 22:16:40.494"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:16:36.098" endtime="20210827 22:16:40.495"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:16:14.224" level="INFO">${random} = 46600</msg>
<status status="PASS" starttime="20210827 22:16:14.224" endtime="20210827 22:16:14.224"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:16:14.229" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-46600 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:16:19.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:16:19.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:14.226" endtime="20210827 22:16:19.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:16:19.165" level="INFO"/>
<status status="PASS" starttime="20210827 22:16:19.164" endtime="20210827 22:16:19.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:16:19.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:16:19.165" endtime="20210827 22:16:19.166"/>
</kw>
<status status="PASS" starttime="20210827 22:16:14.226" endtime="20210827 22:16:19.166"/>
</kw>
<msg timestamp="20210827 22:16:19.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:16:14.225" endtime="20210827 22:16:19.167"/>
</kw>
<msg timestamp="20210827 22:16:19.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:16:14.224" endtime="20210827 22:16:19.167"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:16:19.167" endtime="20210827 22:16:19.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:16:14.223" endtime="20210827 22:16:19.168"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:16:14.161" endtime="20210827 22:16:19.169"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="32506"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:18:16.504" level="INFO">${random} = 56683</msg>
<status status="PASS" starttime="20210827 22:18:16.504" endtime="20210827 22:18:16.504"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:18:16.507" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-56683 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:18:20.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:18:20.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:16.506" endtime="20210827 22:18:20.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:18:20.571" level="INFO"/>
<status status="PASS" starttime="20210827 22:18:20.570" endtime="20210827 22:18:20.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:18:20.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:18:20.571" endtime="20210827 22:18:20.572"/>
</kw>
<status status="PASS" starttime="20210827 22:18:16.505" endtime="20210827 22:18:20.572"/>
</kw>
<msg timestamp="20210827 22:18:20.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:18:16.505" endtime="20210827 22:18:20.573"/>
</kw>
<msg timestamp="20210827 22:18:20.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:16.505" endtime="20210827 22:18:20.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:18:20.573" endtime="20210827 22:18:20.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:18:16.503" endtime="20210827 22:18:20.574"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:18:16.452" endtime="20210827 22:18:20.575"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:18:03.010" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:18:05.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:18:05.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:03.008" endtime="20210827 22:18:05.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:18:05.280" level="INFO"/>
<status status="PASS" starttime="20210827 22:18:05.279" endtime="20210827 22:18:05.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:18:05.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:18:05.280" endtime="20210827 22:18:05.280"/>
</kw>
<status status="PASS" starttime="20210827 22:18:03.008" endtime="20210827 22:18:05.281"/>
</kw>
<msg timestamp="20210827 22:18:05.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:18:03.007" endtime="20210827 22:18:05.281"/>
</kw>
<msg timestamp="20210827 22:18:05.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:03.007" endtime="20210827 22:18:05.283"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:18:05.283" endtime="20210827 22:18:05.284"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:18:05.295" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:18:07.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:18:07.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:05.286" endtime="20210827 22:18:07.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:18:07.528" level="INFO"/>
<status status="PASS" starttime="20210827 22:18:07.527" endtime="20210827 22:18:07.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:18:07.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:18:07.528" endtime="20210827 22:18:07.529"/>
</kw>
<status status="PASS" starttime="20210827 22:18:05.285" endtime="20210827 22:18:07.529"/>
</kw>
<msg timestamp="20210827 22:18:07.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:18:05.285" endtime="20210827 22:18:07.529"/>
</kw>
<msg timestamp="20210827 22:18:07.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:05.284" endtime="20210827 22:18:07.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:18:07.529" endtime="20210827 22:18:07.530"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:18:07.538" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:18:12.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:18:12.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:07.537" endtime="20210827 22:18:12.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:18:12.691" level="INFO"/>
<status status="PASS" starttime="20210827 22:18:12.690" endtime="20210827 22:18:12.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:18:12.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:18:12.691" endtime="20210827 22:18:12.692"/>
</kw>
<status status="PASS" starttime="20210827 22:18:07.535" endtime="20210827 22:18:12.692"/>
</kw>
<msg timestamp="20210827 22:18:12.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:18:07.531" endtime="20210827 22:18:12.692"/>
</kw>
<msg timestamp="20210827 22:18:12.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 22:18:07.530" endtime="20210827 22:18:12.692"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:18:12.693" endtime="20210827 22:18:12.693"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:18:03.006" endtime="20210827 22:18:12.693"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 22:18:02.959" endtime="20210827 22:18:12.694"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:49.188" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:19:49.188" endtime="20210827 22:19:49.188"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:49.189" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:19:49.189" endtime="20210827 22:19:49.189"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:19:49.190" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:19:49.190" endtime="20210827 22:19:49.190"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:19:49.191" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:19:49.190" endtime="20210827 22:19:49.191"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:19:49.192" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:19:49.192" level="INFO">${version_file_contents} = #Fri Aug 27 22:19:08 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102726285
clusterID=e2d0b9ab-b45c-4c63-bc61-86075ceb0889
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 22:19:49.192" endtime="20210827 22:19:49.193"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:19:49.193" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:19:49.193" endtime="20210827 22:19:49.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:19:49.194" endtime="20210827 22:19:49.194"/>
</kw>
<status status="PASS" starttime="20210827 22:19:49.191" endtime="20210827 22:19:49.194"/>
</kw>
<status status="PASS" starttime="20210827 22:19:49.191" endtime="20210827 22:19:49.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:19:49.182" endtime="20210827 22:19:49.195"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:19:49.121" endtime="20210827 22:19:49.196"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210827 22:20:43.159" endtime="20210827 22:20:43.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:43.165" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:22:06.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:22:06.378" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210827 22:20:43.161" endtime="20210827 22:22:06.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:06.380" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210827 22:22:06.379" endtime="20210827 22:22:06.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:22:06.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:22:06.380" endtime="20210827 22:22:06.380"/>
</kw>
<status status="PASS" starttime="20210827 22:20:43.161" endtime="20210827 22:22:06.381"/>
</kw>
<msg timestamp="20210827 22:22:06.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:43.161" endtime="20210827 22:22:06.381"/>
</kw>
<msg timestamp="20210827 22:22:06.381" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210827 22:20:43.160" endtime="20210827 22:22:06.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:06.382" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210827 22:22:06.382" endtime="20210827 22:22:06.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:43.159" endtime="20210827 22:22:06.382"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210827 22:22:06.390" endtime="20210827 22:22:06.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:22:06.400" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:22:09.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:22:09.067" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210827 22:22:06.398" endtime="20210827 22:22:09.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:09.069" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 22:22:09.068" endtime="20210827 22:22:09.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:22:09.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:22:09.069" endtime="20210827 22:22:09.070"/>
</kw>
<status status="PASS" starttime="20210827 22:22:06.397" endtime="20210827 22:22:09.070"/>
</kw>
<msg timestamp="20210827 22:22:09.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:22:06.397" endtime="20210827 22:22:09.071"/>
</kw>
<msg timestamp="20210827 22:22:09.071" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210827 22:22:06.393" endtime="20210827 22:22:09.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:09.072" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 22:22:09.071" endtime="20210827 22:22:09.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:06.384" endtime="20210827 22:22:09.072"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210827 22:20:43.099" endtime="20210827 22:22:09.074"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:12.856" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210827 22:22:12.855" endtime="20210827 22:22:12.856"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:12.856" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:12.856" endtime="20210827 22:22:12.856"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:12.857" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:12.856" endtime="20210827 22:22:12.857"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:12.858" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:12.857" endtime="20210827 22:22:12.858"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:12.859" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:12.859" level="INFO">${version_file_contents} = #Fri Aug 27 22:20:50 UTC 2021
cTime=1630102642252
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
nodeType=SCM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb87
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 22:22:12.859" endtime="20210827 22:22:12.860"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:12.860" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 22:22:12.860" endtime="20210827 22:22:12.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:12.860" endtime="20210827 22:22:12.861"/>
</kw>
<status status="PASS" starttime="20210827 22:22:12.858" endtime="20210827 22:22:12.861"/>
</kw>
<status status="PASS" starttime="20210827 22:22:12.858" endtime="20210827 22:22:12.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:12.854" endtime="20210827 22:22:12.861"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:12.795" endtime="20210827 22:22:12.862"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:16.720" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:22:16.720" endtime="20210827 22:22:16.721"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:16.721" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:16.721" endtime="20210827 22:22:16.721"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:16.722" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:16.722" endtime="20210827 22:22:16.722"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:16.723" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:16.722" endtime="20210827 22:22:16.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:16.725" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:16.725" level="INFO">${version_file_contents} = #Fri Aug 27 22:20:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102726285
clusterID=e2d0b9ab-b45c-4c63-bc61-86075ceb0889
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 22:22:16.724" endtime="20210827 22:22:16.725"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:16.725" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 22:22:16.725" endtime="20210827 22:22:16.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:16.726" endtime="20210827 22:22:16.726"/>
</kw>
<status status="PASS" starttime="20210827 22:22:16.723" endtime="20210827 22:22:16.727"/>
</kw>
<status status="PASS" starttime="20210827 22:22:16.723" endtime="20210827 22:22:16.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:16.718" endtime="20210827 22:22:16.727"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:16.659" endtime="20210827 22:22:16.728"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:20.557" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:22:20.557" endtime="20210827 22:22:20.558"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:20.558" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:20.558" endtime="20210827 22:22:20.558"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:20.559" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:20.558" endtime="20210827 22:22:20.559"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:20.560" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:20.559" endtime="20210827 22:22:20.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:20.561" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:20.561" level="INFO">${version_file_contents} = #Fri Aug 27 22:21:21 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102726250
clusterID=07ad8469-7a9c-4d8c-809c-f719917db1d2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 22:22:20.561" endtime="20210827 22:22:20.561"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:20.562" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 22:22:20.562" endtime="20210827 22:22:20.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:20.562" endtime="20210827 22:22:20.563"/>
</kw>
<status status="PASS" starttime="20210827 22:22:20.560" endtime="20210827 22:22:20.563"/>
</kw>
<status status="PASS" starttime="20210827 22:22:20.560" endtime="20210827 22:22:20.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:20.556" endtime="20210827 22:22:20.563"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:20.492" endtime="20210827 22:22:20.565"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:24.363" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:22:24.362" endtime="20210827 22:22:24.363"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:24.363" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:24.363" endtime="20210827 22:22:24.363"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:24.364" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:24.364" endtime="20210827 22:22:24.364"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:24.365" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:24.364" endtime="20210827 22:22:24.365"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:24.366" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:24.367" level="INFO">${version_file_contents} = #Fri Aug 27 22:20:58 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102723443
clusterID=f46c7aa3-4db5-4b3c-b251-c553713e73c9
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 22:22:24.366" endtime="20210827 22:22:24.367"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:24.368" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 22:22:24.367" endtime="20210827 22:22:24.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:24.368" endtime="20210827 22:22:24.368"/>
</kw>
<status status="PASS" starttime="20210827 22:22:24.365" endtime="20210827 22:22:24.369"/>
</kw>
<status status="PASS" starttime="20210827 22:22:24.365" endtime="20210827 22:22:24.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:24.361" endtime="20210827 22:22:24.369"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:24.298" endtime="20210827 22:22:24.370"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:28.151" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:22:28.150" endtime="20210827 22:22:28.151"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:28.152" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:28.151" endtime="20210827 22:22:28.152"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:28.152" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:28.152" endtime="20210827 22:22:28.152"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:28.153" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:28.153" endtime="20210827 22:22:28.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:28.154" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:28.155" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:37 UTC 2021
cTime=1630102640157
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=c229d105-4a97-490f-8b01-818931530352
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:22:28.154" endtime="20210827 22:22:28.155"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:28.155" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:22:28.155" endtime="20210827 22:22:28.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:28.156" endtime="20210827 22:22:28.156"/>
</kw>
<status status="PASS" starttime="20210827 22:22:28.154" endtime="20210827 22:22:28.156"/>
</kw>
<status status="PASS" starttime="20210827 22:22:28.153" endtime="20210827 22:22:28.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:28.149" endtime="20210827 22:22:28.156"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:28.089" endtime="20210827 22:22:28.157"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:31.928" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:22:31.927" endtime="20210827 22:22:31.928"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:31.928" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:31.928" endtime="20210827 22:22:31.929"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:31.929" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:31.929" endtime="20210827 22:22:31.929"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:31.930" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:31.929" endtime="20210827 22:22:31.930"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:31.931" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:31.931" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:38 UTC 2021
cTime=1630102641922
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=634410f6-5e57-4f01-8680-02138075f23a
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:22:31.931" endtime="20210827 22:22:31.931"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:31.932" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:22:31.932" endtime="20210827 22:22:31.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:31.932" endtime="20210827 22:22:31.933"/>
</kw>
<status status="PASS" starttime="20210827 22:22:31.930" endtime="20210827 22:22:31.933"/>
</kw>
<status status="PASS" starttime="20210827 22:22:31.930" endtime="20210827 22:22:31.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:31.927" endtime="20210827 22:22:31.933"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:31.866" endtime="20210827 22:22:31.934"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:35.705" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:22:35.704" endtime="20210827 22:22:35.705"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:22:35.706" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:22:35.705" endtime="20210827 22:22:35.706"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:22:35.706" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:22:35.706" endtime="20210827 22:22:35.706"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:22:35.707" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:22:35.707" endtime="20210827 22:22:35.707"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:22:35.708" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:22:35.709" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:37 UTC 2021
cTime=1630102638934
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=684349bd-9953-47a4-99f1-cfa55e5ee9bc
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:22:35.708" endtime="20210827 22:22:35.709"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:22:35.709" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:22:35.709" endtime="20210827 22:22:35.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:35.710" endtime="20210827 22:22:35.710"/>
</kw>
<status status="PASS" starttime="20210827 22:22:35.708" endtime="20210827 22:22:35.710"/>
</kw>
<status status="PASS" starttime="20210827 22:22:35.707" endtime="20210827 22:22:35.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:35.703" endtime="20210827 22:22:35.711"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:22:35.640" endtime="20210827 22:22:35.711"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:22:39.465" level="INFO">${random} = 82023</msg>
<status status="PASS" starttime="20210827 22:22:39.464" endtime="20210827 22:22:39.465"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:22:39.470" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-82023 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:22:43.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:22:43.812" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:39.467" endtime="20210827 22:22:43.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:43.814" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:43.813" endtime="20210827 22:22:43.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:22:43.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:22:43.814" endtime="20210827 22:22:43.815"/>
</kw>
<status status="PASS" starttime="20210827 22:22:39.466" endtime="20210827 22:22:43.815"/>
</kw>
<msg timestamp="20210827 22:22:43.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:22:39.466" endtime="20210827 22:22:43.815"/>
</kw>
<msg timestamp="20210827 22:22:43.816" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:39.465" endtime="20210827 22:22:43.816"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:43.816" endtime="20210827 22:22:43.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:39.463" endtime="20210827 22:22:43.817"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:22:39.401" endtime="20210827 22:22:43.818"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:22:47.580" level="INFO">${random} = 22324</msg>
<status status="PASS" starttime="20210827 22:22:47.579" endtime="20210827 22:22:47.580"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:22:47.586" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-22324 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:22:51.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:22:51.851" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:47.582" endtime="20210827 22:22:51.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:51.852" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:51.851" endtime="20210827 22:22:51.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:22:51.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:22:51.853" endtime="20210827 22:22:51.853"/>
</kw>
<status status="PASS" starttime="20210827 22:22:47.582" endtime="20210827 22:22:51.854"/>
</kw>
<msg timestamp="20210827 22:22:51.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:22:47.581" endtime="20210827 22:22:51.854"/>
</kw>
<msg timestamp="20210827 22:22:51.854" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:47.580" endtime="20210827 22:22:51.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:51.854" endtime="20210827 22:22:51.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:47.578" endtime="20210827 22:22:51.855"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:22:47.517" endtime="20210827 22:22:51.856"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:52.974" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:19:52.974" endtime="20210827 22:19:52.974"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:52.975" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:19:52.974" endtime="20210827 22:19:52.975"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:19:52.976" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:19:52.975" endtime="20210827 22:19:52.976"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:19:52.977" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:19:52.976" endtime="20210827 22:19:52.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:19:52.979" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:19:52.979" level="INFO">${version_file_contents} = #Fri Aug 27 22:19:08 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102726250
clusterID=07ad8469-7a9c-4d8c-809c-f719917db1d2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 22:19:52.978" endtime="20210827 22:19:52.979"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:19:52.979" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:19:52.979" endtime="20210827 22:19:52.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:19:52.980" endtime="20210827 22:19:52.980"/>
</kw>
<status status="PASS" starttime="20210827 22:19:52.978" endtime="20210827 22:19:52.980"/>
</kw>
<status status="PASS" starttime="20210827 22:19:52.977" endtime="20210827 22:19:52.980"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:19:52.973" endtime="20210827 22:19:52.981"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:19:52.914" endtime="20210827 22:19:52.981"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:22:55.594" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:22:58.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:22:58.017" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:55.590" endtime="20210827 22:22:58.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:22:58.019" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:58.018" endtime="20210827 22:22:58.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:22:58.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:22:58.019" endtime="20210827 22:22:58.020"/>
</kw>
<status status="PASS" starttime="20210827 22:22:55.590" endtime="20210827 22:22:58.020"/>
</kw>
<msg timestamp="20210827 22:22:58.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:22:55.589" endtime="20210827 22:22:58.020"/>
</kw>
<msg timestamp="20210827 22:22:58.021" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:55.588" endtime="20210827 22:22:58.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:22:58.021" endtime="20210827 22:22:58.021"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:22:58.025" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:23:00.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:23:00.524" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:58.023" endtime="20210827 22:23:00.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:23:00.525" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:00.524" endtime="20210827 22:23:00.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:23:00.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:23:00.525" endtime="20210827 22:23:00.526"/>
</kw>
<status status="PASS" starttime="20210827 22:22:58.022" endtime="20210827 22:23:00.526"/>
</kw>
<msg timestamp="20210827 22:23:00.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:22:58.022" endtime="20210827 22:23:00.527"/>
</kw>
<msg timestamp="20210827 22:23:00.527" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:22:58.021" endtime="20210827 22:23:00.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:23:00.527" endtime="20210827 22:23:00.528"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:23:00.532" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:23:05.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:23:05.366" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:00.530" endtime="20210827 22:23:05.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:23:05.369" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:05.368" endtime="20210827 22:23:05.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:23:05.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:23:05.369" endtime="20210827 22:23:05.369"/>
</kw>
<status status="PASS" starttime="20210827 22:23:00.529" endtime="20210827 22:23:05.370"/>
</kw>
<msg timestamp="20210827 22:23:05.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:23:00.529" endtime="20210827 22:23:05.370"/>
</kw>
<msg timestamp="20210827 22:23:05.370" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:00.528" endtime="20210827 22:23:05.371"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:23:05.371" endtime="20210827 22:23:05.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:22:55.588" endtime="20210827 22:23:05.372"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 22:22:55.526" endtime="20210827 22:23:05.373"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:23:09.047" level="INFO">${random} = 20107</msg>
<status status="PASS" starttime="20210827 22:23:09.047" endtime="20210827 22:23:09.047"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:23:09.052" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-20107 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:23:13.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:23:13.433" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:09.049" endtime="20210827 22:23:13.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:23:13.434" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:13.433" endtime="20210827 22:23:13.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:23:13.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:23:13.435" endtime="20210827 22:23:13.436"/>
</kw>
<status status="PASS" starttime="20210827 22:23:09.049" endtime="20210827 22:23:13.437"/>
</kw>
<msg timestamp="20210827 22:23:13.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:23:09.048" endtime="20210827 22:23:13.437"/>
</kw>
<msg timestamp="20210827 22:23:13.437" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:23:09.047" endtime="20210827 22:23:13.438"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:23:13.438" endtime="20210827 22:23:13.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:23:09.046" endtime="20210827 22:23:13.439"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:23:08.985" endtime="20210827 22:23:13.440"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:56.840" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 22:19:56.839" endtime="20210827 22:19:56.840"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:56.841" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:19:56.841" endtime="20210827 22:19:56.841"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:19:56.842" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:19:56.841" endtime="20210827 22:19:56.842"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:19:56.842" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 22:19:56.842" endtime="20210827 22:19:56.843"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:19:56.844" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:19:56.844" level="INFO">${version_file_contents} = #Fri Aug 27 22:19:06 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630102723443
clusterID=f46c7aa3-4db5-4b3c-b251-c553713e73c9
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 22:19:56.843" endtime="20210827 22:19:56.844"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:19:56.845" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:19:56.844" endtime="20210827 22:19:56.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:19:56.845" endtime="20210827 22:19:56.845"/>
</kw>
<status status="PASS" starttime="20210827 22:19:56.843" endtime="20210827 22:19:56.846"/>
</kw>
<status status="PASS" starttime="20210827 22:19:56.843" endtime="20210827 22:19:56.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:19:56.839" endtime="20210827 22:19:56.846"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:19:56.775" endtime="20210827 22:19:56.847"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:00.633" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:20:00.632" endtime="20210827 22:20:00.633"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:00.634" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:20:00.633" endtime="20210827 22:20:00.634"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:20:00.634" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:20:00.634" endtime="20210827 22:20:00.634"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:20:00.635" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:20:00.634" endtime="20210827 22:20:00.635"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:20:00.637" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:20:00.637" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:37 UTC 2021
cTime=1630102640157
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=c229d105-4a97-490f-8b01-818931530352
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:20:00.636" endtime="20210827 22:20:00.637"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:20:00.638" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:20:00.637" endtime="20210827 22:20:00.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:00.638" endtime="20210827 22:20:00.639"/>
</kw>
<status status="PASS" starttime="20210827 22:20:00.636" endtime="20210827 22:20:00.639"/>
</kw>
<status status="PASS" starttime="20210827 22:20:00.635" endtime="20210827 22:20:00.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:00.631" endtime="20210827 22:20:00.639"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:20:00.568" endtime="20210827 22:20:00.640"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:04.421" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:20:04.420" endtime="20210827 22:20:04.421"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:04.421" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:20:04.421" endtime="20210827 22:20:04.422"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:20:04.422" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:20:04.422" endtime="20210827 22:20:04.423"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:20:04.423" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:20:04.423" endtime="20210827 22:20:04.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:20:04.425" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:20:04.425" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:38 UTC 2021
cTime=1630102641922
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=634410f6-5e57-4f01-8680-02138075f23a
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:20:04.425" endtime="20210827 22:20:04.425"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:20:04.426" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:20:04.425" endtime="20210827 22:20:04.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:04.426" endtime="20210827 22:20:04.427"/>
</kw>
<status status="PASS" starttime="20210827 22:20:04.424" endtime="20210827 22:20:04.427"/>
</kw>
<status status="PASS" starttime="20210827 22:20:04.423" endtime="20210827 22:20:04.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:04.419" endtime="20210827 22:20:04.427"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:20:04.352" endtime="20210827 22:20:04.428"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:08.195" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 22:20:08.194" endtime="20210827 22:20:08.195"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:20:08.196" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:20:08.195" endtime="20210827 22:20:08.196"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:20:08.197" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:20:08.196" endtime="20210827 22:20:08.197"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:20:08.198" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 22:20:08.197" endtime="20210827 22:20:08.198"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:20:08.199" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:20:08.199" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:37 UTC 2021
cTime=1630102638934
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
omUuid=684349bd-9953-47a4-99f1-cfa55e5ee9bc
nodeType=OM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb8...</msg>
<status status="PASS" starttime="20210827 22:20:08.199" endtime="20210827 22:20:08.199"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:20:08.200" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:20:08.200" endtime="20210827 22:20:08.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:08.200" endtime="20210827 22:20:08.201"/>
</kw>
<status status="PASS" starttime="20210827 22:20:08.198" endtime="20210827 22:20:08.201"/>
</kw>
<status status="PASS" starttime="20210827 22:20:08.198" endtime="20210827 22:20:08.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:08.193" endtime="20210827 22:20:08.201"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:20:08.126" endtime="20210827 22:20:08.202"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:20:11.924" level="INFO">${random} = 65277</msg>
<status status="PASS" starttime="20210827 22:20:11.924" endtime="20210827 22:20:11.924"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:11.930" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-65277 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:20:17.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:20:17.030" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:11.926" endtime="20210827 22:20:17.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:20:17.032" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:17.031" endtime="20210827 22:20:17.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:20:17.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:20:17.032" endtime="20210827 22:20:17.033"/>
</kw>
<status status="PASS" starttime="20210827 22:20:11.926" endtime="20210827 22:20:17.033"/>
</kw>
<msg timestamp="20210827 22:20:17.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:11.925" endtime="20210827 22:20:17.034"/>
</kw>
<msg timestamp="20210827 22:20:17.034" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:11.924" endtime="20210827 22:20:17.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:17.034" endtime="20210827 22:20:17.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:11.923" endtime="20210827 22:20:17.035"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:20:11.862" endtime="20210827 22:20:17.037"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:20.802" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:20:23.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:20:23.496" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:20.799" endtime="20210827 22:20:23.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:20:23.497" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:23.497" endtime="20210827 22:20:23.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:20:23.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:20:23.498" endtime="20210827 22:20:23.499"/>
</kw>
<status status="PASS" starttime="20210827 22:20:20.798" endtime="20210827 22:20:23.499"/>
</kw>
<msg timestamp="20210827 22:20:23.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:20.798" endtime="20210827 22:20:23.499"/>
</kw>
<msg timestamp="20210827 22:20:23.500" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:20.797" endtime="20210827 22:20:23.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:23.500" endtime="20210827 22:20:23.503"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:23.507" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:20:26.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:20:26.284" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:23.505" endtime="20210827 22:20:26.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:20:26.285" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:26.284" endtime="20210827 22:20:26.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:20:26.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:20:26.285" endtime="20210827 22:20:26.286"/>
</kw>
<status status="PASS" starttime="20210827 22:20:23.504" endtime="20210827 22:20:26.286"/>
</kw>
<msg timestamp="20210827 22:20:26.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:23.504" endtime="20210827 22:20:26.287"/>
</kw>
<msg timestamp="20210827 22:20:26.287" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:23.503" endtime="20210827 22:20:26.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:26.287" endtime="20210827 22:20:26.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:26.295" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:20:31.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:20:31.343" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:26.289" endtime="20210827 22:20:31.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:20:31.344" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:31.344" endtime="20210827 22:20:31.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:20:31.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:20:31.345" endtime="20210827 22:20:31.345"/>
</kw>
<status status="PASS" starttime="20210827 22:20:26.289" endtime="20210827 22:20:31.346"/>
</kw>
<msg timestamp="20210827 22:20:31.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:26.288" endtime="20210827 22:20:31.346"/>
</kw>
<msg timestamp="20210827 22:20:31.346" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:26.288" endtime="20210827 22:20:31.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:31.347" endtime="20210827 22:20:31.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:20.796" endtime="20210827 22:20:31.347"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 22:20:20.732" endtime="20210827 22:20:31.349"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 22:20:35.075" level="INFO">${random} = 10748</msg>
<status status="PASS" starttime="20210827 22:20:35.074" endtime="20210827 22:20:35.075"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 22:20:35.080" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-10748 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 22:20:39.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 22:20:39.435" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:35.077" endtime="20210827 22:20:39.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 22:20:39.436" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:39.436" endtime="20210827 22:20:39.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 22:20:39.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 22:20:39.437" endtime="20210827 22:20:39.437"/>
</kw>
<status status="PASS" starttime="20210827 22:20:35.076" endtime="20210827 22:20:39.438"/>
</kw>
<msg timestamp="20210827 22:20:39.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 22:20:35.076" endtime="20210827 22:20:39.438"/>
</kw>
<msg timestamp="20210827 22:20:39.438" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 22:20:35.075" endtime="20210827 22:20:39.438"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:20:39.439" endtime="20210827 22:20:39.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:20:35.073" endtime="20210827 22:20:39.439"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 22:20:35.012" endtime="20210827 22:20:39.441"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:45.406" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210827 22:19:45.405" endtime="20210827 22:19:45.406"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 22:19:45.407" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 22:19:45.406" endtime="20210827 22:19:45.407"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 22:19:45.407" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 22:19:45.407" endtime="20210827 22:19:45.408"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 22:19:45.408" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210827 22:19:45.408" endtime="20210827 22:19:45.408"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 22:19:45.410" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 22:19:45.410" level="INFO">${version_file_contents} = #Fri Aug 27 22:17:22 UTC 2021
cTime=1630102642252
clusterID=CID-a01e8f94-808e-464d-9782-30bf074f8caf
nodeType=SCM
scmUuid=ea0433ce-b29f-4e3d-bce1-07e9b089eb87
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 22:19:45.409" endtime="20210827 22:19:45.410"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 22:19:45.411" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 22:19:45.410" endtime="20210827 22:19:45.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 22:19:45.411" endtime="20210827 22:19:45.412"/>
</kw>
<status status="PASS" starttime="20210827 22:19:45.409" endtime="20210827 22:19:45.412"/>
</kw>
<status status="PASS" starttime="20210827 22:19:45.409" endtime="20210827 22:19:45.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 22:19:45.404" endtime="20210827 22:19:45.412"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 22:19:45.337" endtime="20210827 22:19:45.413"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="144114"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="176620"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
