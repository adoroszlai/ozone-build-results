<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210827 18:57:57.262" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:50:21.670" level="INFO">${random} = 06430</msg>
<status status="PASS" starttime="20210827 18:50:21.669" endtime="20210827 18:50:21.670"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:50:21.672" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-06430 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:50:24.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:50:24.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:21.671" endtime="20210827 18:50:24.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:50:24.854" level="INFO"/>
<status status="PASS" starttime="20210827 18:50:24.853" endtime="20210827 18:50:24.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:50:24.854" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:50:24.854" endtime="20210827 18:50:24.855"/>
</kw>
<status status="PASS" starttime="20210827 18:50:21.671" endtime="20210827 18:50:24.855"/>
</kw>
<msg timestamp="20210827 18:50:24.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:50:21.670" endtime="20210827 18:50:24.855"/>
</kw>
<msg timestamp="20210827 18:50:24.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:21.670" endtime="20210827 18:50:24.855"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:50:24.855" endtime="20210827 18:50:24.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:50:21.669" endtime="20210827 18:50:24.856"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:50:21.634" endtime="20210827 18:50:24.856"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:50:10.405" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:50:12.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:50:12.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:10.404" endtime="20210827 18:50:12.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:50:12.474" level="INFO"/>
<status status="PASS" starttime="20210827 18:50:12.474" endtime="20210827 18:50:12.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:50:12.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:50:12.475" endtime="20210827 18:50:12.475"/>
</kw>
<status status="PASS" starttime="20210827 18:50:10.404" endtime="20210827 18:50:12.475"/>
</kw>
<msg timestamp="20210827 18:50:12.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:50:10.404" endtime="20210827 18:50:12.475"/>
</kw>
<msg timestamp="20210827 18:50:12.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:10.403" endtime="20210827 18:50:12.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:50:12.476" endtime="20210827 18:50:12.476"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:50:12.478" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:50:14.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:50:14.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:12.477" endtime="20210827 18:50:14.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:50:14.199" level="INFO"/>
<status status="PASS" starttime="20210827 18:50:14.199" endtime="20210827 18:50:14.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:50:14.200" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:50:14.199" endtime="20210827 18:50:14.200"/>
</kw>
<status status="PASS" starttime="20210827 18:50:12.477" endtime="20210827 18:50:14.200"/>
</kw>
<msg timestamp="20210827 18:50:14.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:50:12.477" endtime="20210827 18:50:14.200"/>
</kw>
<msg timestamp="20210827 18:50:14.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:12.476" endtime="20210827 18:50:14.200"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:50:14.200" endtime="20210827 18:50:14.201"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:50:14.205" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:50:18.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:50:18.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:14.204" endtime="20210827 18:50:18.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:50:18.594" level="INFO"/>
<status status="PASS" starttime="20210827 18:50:18.594" endtime="20210827 18:50:18.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:50:18.595" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:50:18.595" endtime="20210827 18:50:18.595"/>
</kw>
<status status="PASS" starttime="20210827 18:50:14.202" endtime="20210827 18:50:18.595"/>
</kw>
<msg timestamp="20210827 18:50:18.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:50:14.201" endtime="20210827 18:50:18.595"/>
</kw>
<msg timestamp="20210827 18:50:18.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:50:14.201" endtime="20210827 18:50:18.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:50:18.596" endtime="20210827 18:50:18.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:50:10.403" endtime="20210827 18:50:18.596"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 18:50:10.366" endtime="20210827 18:50:18.598"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:51:28.686" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:51:30.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:51:30.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:28.683" endtime="20210827 18:51:30.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:51:30.876" level="INFO"/>
<status status="PASS" starttime="20210827 18:51:30.875" endtime="20210827 18:51:30.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:51:30.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:51:30.876" endtime="20210827 18:51:30.877"/>
</kw>
<status status="PASS" starttime="20210827 18:51:28.683" endtime="20210827 18:51:30.877"/>
</kw>
<msg timestamp="20210827 18:51:30.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:51:28.682" endtime="20210827 18:51:30.877"/>
</kw>
<msg timestamp="20210827 18:51:30.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:28.682" endtime="20210827 18:51:30.877"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:51:30.877" endtime="20210827 18:51:30.878"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:51:30.881" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:51:32.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:51:32.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:30.879" endtime="20210827 18:51:32.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:51:32.942" level="INFO"/>
<status status="PASS" starttime="20210827 18:51:32.941" endtime="20210827 18:51:32.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:51:32.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:51:32.942" endtime="20210827 18:51:32.943"/>
</kw>
<status status="PASS" starttime="20210827 18:51:30.879" endtime="20210827 18:51:32.943"/>
</kw>
<msg timestamp="20210827 18:51:32.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:51:30.879" endtime="20210827 18:51:32.943"/>
</kw>
<msg timestamp="20210827 18:51:32.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:30.878" endtime="20210827 18:51:32.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:51:32.944" endtime="20210827 18:51:32.944"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:51:32.948" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:51:36.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:51:36.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:32.946" endtime="20210827 18:51:36.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:51:36.974" level="INFO"/>
<status status="PASS" starttime="20210827 18:51:36.973" endtime="20210827 18:51:36.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:51:36.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:51:36.974" endtime="20210827 18:51:36.975"/>
</kw>
<status status="PASS" starttime="20210827 18:51:32.945" endtime="20210827 18:51:36.975"/>
</kw>
<msg timestamp="20210827 18:51:36.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:51:32.945" endtime="20210827 18:51:36.975"/>
</kw>
<msg timestamp="20210827 18:51:36.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:32.944" endtime="20210827 18:51:36.975"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:51:36.976" endtime="20210827 18:51:36.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:51:28.681" endtime="20210827 18:51:36.976"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 18:51:28.635" endtime="20210827 18:51:36.977"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:51:40.194" level="INFO">${random} = 09086</msg>
<status status="PASS" starttime="20210827 18:51:40.193" endtime="20210827 18:51:40.194"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:51:40.198" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-09086 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:51:43.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:51:43.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:40.195" endtime="20210827 18:51:43.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:51:43.902" level="INFO"/>
<status status="PASS" starttime="20210827 18:51:43.902" endtime="20210827 18:51:43.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:51:43.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:51:43.903" endtime="20210827 18:51:43.903"/>
</kw>
<status status="PASS" starttime="20210827 18:51:40.195" endtime="20210827 18:51:43.904"/>
</kw>
<msg timestamp="20210827 18:51:43.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:51:40.195" endtime="20210827 18:51:43.904"/>
</kw>
<msg timestamp="20210827 18:51:43.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:40.194" endtime="20210827 18:51:43.904"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:51:43.904" endtime="20210827 18:51:43.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:51:40.192" endtime="20210827 18:51:43.905"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:51:40.147" endtime="20210827 18:51:43.906"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:51:21.347" level="INFO">${random} = 30664</msg>
<status status="PASS" starttime="20210827 18:51:21.346" endtime="20210827 18:51:21.347"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:51:21.352" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-30664 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:51:25.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:51:25.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:21.348" endtime="20210827 18:51:25.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:51:25.460" level="INFO"/>
<status status="PASS" starttime="20210827 18:51:25.459" endtime="20210827 18:51:25.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:51:25.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:51:25.460" endtime="20210827 18:51:25.460"/>
</kw>
<status status="PASS" starttime="20210827 18:51:21.348" endtime="20210827 18:51:25.461"/>
</kw>
<msg timestamp="20210827 18:51:25.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:51:21.348" endtime="20210827 18:51:25.461"/>
</kw>
<msg timestamp="20210827 18:51:25.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:51:21.347" endtime="20210827 18:51:25.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:51:25.461" endtime="20210827 18:51:25.462"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:51:21.346" endtime="20210827 18:51:25.462"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:51:21.300" endtime="20210827 18:51:25.463"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="27718"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:53:12.072" level="INFO">${random} = 08521</msg>
<status status="PASS" starttime="20210827 18:53:12.072" endtime="20210827 18:53:12.072"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:53:12.075" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-08521 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:53:15.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:53:15.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:12.074" endtime="20210827 18:53:15.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:53:15.073" level="INFO"/>
<status status="PASS" starttime="20210827 18:53:15.073" endtime="20210827 18:53:15.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:53:15.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:53:15.073" endtime="20210827 18:53:15.074"/>
</kw>
<status status="PASS" starttime="20210827 18:53:12.073" endtime="20210827 18:53:15.074"/>
</kw>
<msg timestamp="20210827 18:53:15.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:53:12.073" endtime="20210827 18:53:15.074"/>
</kw>
<msg timestamp="20210827 18:53:15.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:12.072" endtime="20210827 18:53:15.074"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:53:15.075" endtime="20210827 18:53:15.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:53:12.071" endtime="20210827 18:53:15.075"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:53:12.036" endtime="20210827 18:53:15.076"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:53:01.022" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:53:02.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:53:02.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:01.021" endtime="20210827 18:53:02.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:53:02.718" level="INFO"/>
<status status="PASS" starttime="20210827 18:53:02.717" endtime="20210827 18:53:02.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:53:02.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:53:02.718" endtime="20210827 18:53:02.718"/>
</kw>
<status status="PASS" starttime="20210827 18:53:01.020" endtime="20210827 18:53:02.718"/>
</kw>
<msg timestamp="20210827 18:53:02.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:53:01.020" endtime="20210827 18:53:02.719"/>
</kw>
<msg timestamp="20210827 18:53:02.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:01.020" endtime="20210827 18:53:02.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:53:02.719" endtime="20210827 18:53:02.719"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:53:02.722" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:53:04.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:53:04.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:02.720" endtime="20210827 18:53:04.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:53:04.522" level="INFO"/>
<status status="PASS" starttime="20210827 18:53:04.521" endtime="20210827 18:53:04.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:53:04.522" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:53:04.522" endtime="20210827 18:53:04.522"/>
</kw>
<status status="PASS" starttime="20210827 18:53:02.720" endtime="20210827 18:53:04.523"/>
</kw>
<msg timestamp="20210827 18:53:04.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:53:02.720" endtime="20210827 18:53:04.523"/>
</kw>
<msg timestamp="20210827 18:53:04.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:02.719" endtime="20210827 18:53:04.523"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:53:04.523" endtime="20210827 18:53:04.523"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:53:04.531" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:53:08.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:53:08.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:04.530" endtime="20210827 18:53:08.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:53:08.963" level="INFO"/>
<status status="PASS" starttime="20210827 18:53:08.962" endtime="20210827 18:53:08.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:53:08.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:53:08.963" endtime="20210827 18:53:08.963"/>
</kw>
<status status="PASS" starttime="20210827 18:53:04.524" endtime="20210827 18:53:08.963"/>
</kw>
<msg timestamp="20210827 18:53:08.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:53:04.524" endtime="20210827 18:53:08.964"/>
</kw>
<msg timestamp="20210827 18:53:08.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210827 18:53:04.524" endtime="20210827 18:53:08.964"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:53:08.964" endtime="20210827 18:53:08.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:53:01.019" endtime="20210827 18:53:08.965"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 18:53:00.984" endtime="20210827 18:53:08.965"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:30.172" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:54:30.172" endtime="20210827 18:54:30.172"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:30.173" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:30.172" endtime="20210827 18:54:30.173"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:30.173" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:30.173" endtime="20210827 18:54:30.173"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:30.174" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:30.173" endtime="20210827 18:54:30.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:30.175" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:30.175" level="INFO">${version_file_contents} = #Fri Aug 27 18:53:56 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090414988
clusterID=d8450bd1-e2fe-47a4-9a69-610877095f84
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 18:54:30.175" endtime="20210827 18:54:30.175"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:30.176" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:30.176" endtime="20210827 18:54:30.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:30.177" endtime="20210827 18:54:30.177"/>
</kw>
<status status="PASS" starttime="20210827 18:54:30.174" endtime="20210827 18:54:30.177"/>
</kw>
<status status="PASS" starttime="20210827 18:54:30.174" endtime="20210827 18:54:30.177"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:30.171" endtime="20210827 18:54:30.177"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:30.126" endtime="20210827 18:54:30.178"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210827 18:55:19.108" endtime="20210827 18:55:19.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:55:19.113" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:56:46.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:56:46.735" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210827 18:55:19.110" endtime="20210827 18:56:46.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:56:46.736" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210827 18:56:46.735" endtime="20210827 18:56:46.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:56:46.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:56:46.736" endtime="20210827 18:56:46.737"/>
</kw>
<status status="PASS" starttime="20210827 18:55:19.109" endtime="20210827 18:56:46.737"/>
</kw>
<msg timestamp="20210827 18:56:46.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:55:19.109" endtime="20210827 18:56:46.737"/>
</kw>
<msg timestamp="20210827 18:56:46.738" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210827 18:55:19.108" endtime="20210827 18:56:46.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:56:46.738" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210827 18:56:46.738" endtime="20210827 18:56:46.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:55:19.107" endtime="20210827 18:56:46.738"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210827 18:56:46.740" endtime="20210827 18:56:46.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:56:46.744" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:56:49.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:56:49.077" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 18:56:46.742" endtime="20210827 18:56:49.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:56:49.078" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 18:56:49.078" endtime="20210827 18:56:49.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:56:49.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:56:49.079" endtime="20210827 18:56:49.079"/>
</kw>
<status status="PASS" starttime="20210827 18:56:46.741" endtime="20210827 18:56:49.079"/>
</kw>
<msg timestamp="20210827 18:56:49.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:56:46.741" endtime="20210827 18:56:49.080"/>
</kw>
<msg timestamp="20210827 18:56:49.080" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 18:56:46.740" endtime="20210827 18:56:49.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:56:49.080" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210827 18:56:49.080" endtime="20210827 18:56:49.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:56:46.739" endtime="20210827 18:56:49.081"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210827 18:55:19.063" endtime="20210827 18:56:49.082"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:52.447" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210827 18:56:52.446" endtime="20210827 18:56:52.447"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:52.448" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:56:52.447" endtime="20210827 18:56:52.448"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:56:52.448" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:56:52.448" endtime="20210827 18:56:52.448"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:56:52.449" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210827 18:56:52.448" endtime="20210827 18:56:52.449"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:56:52.450" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:56:52.450" level="INFO">${version_file_contents} = #Fri Aug 27 18:55:26 UTC 2021
cTime=1630090333555
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
nodeType=SCM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172a
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 18:56:52.449" endtime="20210827 18:56:52.450"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:56:52.451" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 18:56:52.450" endtime="20210827 18:56:52.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:56:52.451" endtime="20210827 18:56:52.451"/>
</kw>
<status status="PASS" starttime="20210827 18:56:52.449" endtime="20210827 18:56:52.451"/>
</kw>
<status status="PASS" starttime="20210827 18:56:52.449" endtime="20210827 18:56:52.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:56:52.446" endtime="20210827 18:56:52.452"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:56:52.400" endtime="20210827 18:56:52.452"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:55.842" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:56:55.841" endtime="20210827 18:56:55.842"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:55.842" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:56:55.842" endtime="20210827 18:56:55.842"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:56:55.843" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:56:55.843" endtime="20210827 18:56:55.843"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:56:55.843" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:56:55.843" endtime="20210827 18:56:55.843"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:56:55.845" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:56:55.845" level="INFO">${version_file_contents} = #Fri Aug 27 18:55:37 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090414988
clusterID=d8450bd1-e2fe-47a4-9a69-610877095f84
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 18:56:55.844" endtime="20210827 18:56:55.845"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:56:55.845" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 18:56:55.845" endtime="20210827 18:56:55.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:56:55.846" endtime="20210827 18:56:55.846"/>
</kw>
<status status="PASS" starttime="20210827 18:56:55.844" endtime="20210827 18:56:55.846"/>
</kw>
<status status="PASS" starttime="20210827 18:56:55.844" endtime="20210827 18:56:55.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:56:55.840" endtime="20210827 18:56:55.846"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:56:55.794" endtime="20210827 18:56:55.847"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:59.244" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:56:59.243" endtime="20210827 18:56:59.244"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:56:59.244" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:56:59.244" endtime="20210827 18:56:59.244"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:56:59.245" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:56:59.245" endtime="20210827 18:56:59.245"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:56:59.245" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:56:59.245" endtime="20210827 18:56:59.245"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:56:59.247" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:56:59.247" level="INFO">${version_file_contents} = #Fri Aug 27 18:55:37 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090417782
clusterID=b0432d1b-9f1f-4745-b0ce-b1246ad1eff2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 18:56:59.246" endtime="20210827 18:56:59.247"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:56:59.247" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 18:56:59.247" endtime="20210827 18:56:59.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:56:59.248" endtime="20210827 18:56:59.248"/>
</kw>
<status status="PASS" starttime="20210827 18:56:59.246" endtime="20210827 18:56:59.248"/>
</kw>
<status status="PASS" starttime="20210827 18:56:59.246" endtime="20210827 18:56:59.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:56:59.242" endtime="20210827 18:56:59.248"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:56:59.196" endtime="20210827 18:56:59.249"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:02.630" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:57:02.629" endtime="20210827 18:57:02.630"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:02.631" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:57:02.630" endtime="20210827 18:57:02.631"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:57:02.631" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:57:02.631" endtime="20210827 18:57:02.631"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:57:02.632" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:57:02.631" endtime="20210827 18:57:02.632"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:57:02.633" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:57:02.633" level="INFO">${version_file_contents} = #Fri Aug 27 18:55:37 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090417261
clusterID=eef38474-ab6c-4605-b4ff-f16dc7b7310f
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210827 18:57:02.633" endtime="20210827 18:57:02.633"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:57:02.634" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210827 18:57:02.633" endtime="20210827 18:57:02.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:02.634" endtime="20210827 18:57:02.634"/>
</kw>
<status status="PASS" starttime="20210827 18:57:02.632" endtime="20210827 18:57:02.634"/>
</kw>
<status status="PASS" starttime="20210827 18:57:02.632" endtime="20210827 18:57:02.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:02.629" endtime="20210827 18:57:02.635"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:57:02.583" endtime="20210827 18:57:02.635"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:06.030" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:57:06.029" endtime="20210827 18:57:06.030"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:06.030" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:57:06.030" endtime="20210827 18:57:06.030"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:57:06.031" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:57:06.030" endtime="20210827 18:57:06.031"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:57:06.031" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:57:06.031" endtime="20210827 18:57:06.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:57:06.032" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:57:06.033" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:38 UTC 2021
cTime=1630090341898
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=0a0c9e12-075a-4c29-87ad-eb04d17b1853
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:57:06.032" endtime="20210827 18:57:06.033"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:57:06.033" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:57:06.033" endtime="20210827 18:57:06.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:06.033" endtime="20210827 18:57:06.034"/>
</kw>
<status status="PASS" starttime="20210827 18:57:06.032" endtime="20210827 18:57:06.034"/>
</kw>
<status status="PASS" starttime="20210827 18:57:06.031" endtime="20210827 18:57:06.034"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:06.028" endtime="20210827 18:57:06.034"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:57:05.982" endtime="20210827 18:57:06.035"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:09.372" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:57:09.371" endtime="20210827 18:57:09.372"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:09.372" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:57:09.372" endtime="20210827 18:57:09.372"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:57:09.373" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:57:09.373" endtime="20210827 18:57:09.373"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:57:09.373" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:57:09.373" endtime="20210827 18:57:09.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:57:09.375" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:57:09.375" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:38 UTC 2021
cTime=1630090342015
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=7e60a7c2-a74d-4793-83f7-175b4be14a18
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:57:09.374" endtime="20210827 18:57:09.375"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:57:09.375" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:57:09.375" endtime="20210827 18:57:09.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:09.376" endtime="20210827 18:57:09.376"/>
</kw>
<status status="PASS" starttime="20210827 18:57:09.374" endtime="20210827 18:57:09.376"/>
</kw>
<status status="PASS" starttime="20210827 18:57:09.374" endtime="20210827 18:57:09.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:09.371" endtime="20210827 18:57:09.376"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:57:09.325" endtime="20210827 18:57:09.377"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:12.652" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:57:12.652" endtime="20210827 18:57:12.652"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:57:12.653" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:57:12.653" endtime="20210827 18:57:12.653"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:57:12.653" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:57:12.653" endtime="20210827 18:57:12.653"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:57:12.654" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:57:12.654" endtime="20210827 18:57:12.654"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:57:12.655" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:57:12.655" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:35 UTC 2021
cTime=1630090343629
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=2d2d6078-475e-4b6a-b563-c1c298610a95
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:57:12.655" endtime="20210827 18:57:12.655"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:57:12.656" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:57:12.655" endtime="20210827 18:57:12.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:12.656" endtime="20210827 18:57:12.656"/>
</kw>
<status status="PASS" starttime="20210827 18:57:12.654" endtime="20210827 18:57:12.657"/>
</kw>
<status status="PASS" starttime="20210827 18:57:12.654" endtime="20210827 18:57:12.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:12.651" endtime="20210827 18:57:12.657"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:57:12.607" endtime="20210827 18:57:12.658"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:57:15.848" level="INFO">${random} = 46785</msg>
<status status="PASS" starttime="20210827 18:57:15.847" endtime="20210827 18:57:15.848"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:15.853" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-46785 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:19.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:19.429" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:15.849" endtime="20210827 18:57:19.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:19.431" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:19.430" endtime="20210827 18:57:19.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:19.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:19.431" endtime="20210827 18:57:19.432"/>
</kw>
<status status="PASS" starttime="20210827 18:57:15.849" endtime="20210827 18:57:19.432"/>
</kw>
<msg timestamp="20210827 18:57:19.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:15.849" endtime="20210827 18:57:19.432"/>
</kw>
<msg timestamp="20210827 18:57:19.432" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:15.848" endtime="20210827 18:57:19.432"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:19.432" endtime="20210827 18:57:19.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:15.847" endtime="20210827 18:57:19.433"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:57:15.801" endtime="20210827 18:57:19.434"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:57:22.623" level="INFO">${random} = 72686</msg>
<status status="PASS" starttime="20210827 18:57:22.622" endtime="20210827 18:57:22.623"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:22.627" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-72686 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:26.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:26.132" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:22.624" endtime="20210827 18:57:26.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:26.133" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:26.132" endtime="20210827 18:57:26.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:26.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:26.133" endtime="20210827 18:57:26.134"/>
</kw>
<status status="PASS" starttime="20210827 18:57:22.624" endtime="20210827 18:57:26.135"/>
</kw>
<msg timestamp="20210827 18:57:26.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:22.624" endtime="20210827 18:57:26.135"/>
</kw>
<msg timestamp="20210827 18:57:26.135" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:22.623" endtime="20210827 18:57:26.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:26.135" endtime="20210827 18:57:26.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:22.622" endtime="20210827 18:57:26.136"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:57:22.578" endtime="20210827 18:57:26.138"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:33.601" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:54:33.600" endtime="20210827 18:54:33.601"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:33.602" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:33.601" endtime="20210827 18:54:33.602"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:33.602" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:33.602" endtime="20210827 18:54:33.602"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:33.603" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:33.602" endtime="20210827 18:54:33.603"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:33.604" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:33.605" level="INFO">${version_file_contents} = #Fri Aug 27 18:53:57 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090417782
clusterID=b0432d1b-9f1f-4745-b0ce-b1246ad1eff2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 18:54:33.604" endtime="20210827 18:54:33.605"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:33.605" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:33.605" endtime="20210827 18:54:33.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:33.606" endtime="20210827 18:54:33.606"/>
</kw>
<status status="PASS" starttime="20210827 18:54:33.603" endtime="20210827 18:54:33.606"/>
</kw>
<status status="PASS" starttime="20210827 18:54:33.603" endtime="20210827 18:54:33.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:33.599" endtime="20210827 18:54:33.606"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:33.548" endtime="20210827 18:54:33.608"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:29.356" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:31.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:31.374" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:29.353" endtime="20210827 18:57:31.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:31.375" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:31.375" endtime="20210827 18:57:31.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:31.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:31.376" endtime="20210827 18:57:31.376"/>
</kw>
<status status="PASS" starttime="20210827 18:57:29.352" endtime="20210827 18:57:31.377"/>
</kw>
<msg timestamp="20210827 18:57:31.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:29.352" endtime="20210827 18:57:31.377"/>
</kw>
<msg timestamp="20210827 18:57:31.377" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:29.351" endtime="20210827 18:57:31.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:31.377" endtime="20210827 18:57:31.378"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:31.381" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:33.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:33.216" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:31.379" endtime="20210827 18:57:33.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:33.217" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:33.216" endtime="20210827 18:57:33.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:33.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:33.217" endtime="20210827 18:57:33.218"/>
</kw>
<status status="PASS" starttime="20210827 18:57:31.378" endtime="20210827 18:57:33.218"/>
</kw>
<msg timestamp="20210827 18:57:33.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:31.378" endtime="20210827 18:57:33.218"/>
</kw>
<msg timestamp="20210827 18:57:33.218" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:31.378" endtime="20210827 18:57:33.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:33.219" endtime="20210827 18:57:33.219"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:33.222" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:37.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:37.188" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:33.220" endtime="20210827 18:57:37.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:37.190" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:37.189" endtime="20210827 18:57:37.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:37.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:37.190" endtime="20210827 18:57:37.191"/>
</kw>
<status status="PASS" starttime="20210827 18:57:33.220" endtime="20210827 18:57:37.191"/>
</kw>
<msg timestamp="20210827 18:57:37.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:33.220" endtime="20210827 18:57:37.191"/>
</kw>
<msg timestamp="20210827 18:57:37.191" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:33.219" endtime="20210827 18:57:37.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:37.192" endtime="20210827 18:57:37.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:29.351" endtime="20210827 18:57:37.192"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 18:57:29.305" endtime="20210827 18:57:37.193"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:57:40.385" level="INFO">${random} = 86238</msg>
<status status="PASS" starttime="20210827 18:57:40.385" endtime="20210827 18:57:40.385"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:57:40.390" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-86238 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:57:44.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:57:44.044" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:40.387" endtime="20210827 18:57:44.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:57:44.045" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:44.044" endtime="20210827 18:57:44.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:57:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:57:44.045" endtime="20210827 18:57:44.046"/>
</kw>
<status status="PASS" starttime="20210827 18:57:40.386" endtime="20210827 18:57:44.046"/>
</kw>
<msg timestamp="20210827 18:57:44.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:57:40.386" endtime="20210827 18:57:44.046"/>
</kw>
<msg timestamp="20210827 18:57:44.046" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:57:40.385" endtime="20210827 18:57:44.046"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:57:44.046" endtime="20210827 18:57:44.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:57:40.384" endtime="20210827 18:57:44.047"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:57:40.339" endtime="20210827 18:57:44.048"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:37.002" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210827 18:54:37.002" endtime="20210827 18:54:37.002"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:37.003" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:37.003" endtime="20210827 18:54:37.003"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:37.003" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:37.003" endtime="20210827 18:54:37.003"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:37.004" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:37.004" endtime="20210827 18:54:37.004"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:37.005" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:37.005" level="INFO">${version_file_contents} = #Fri Aug 27 18:53:57 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630090417261
clusterID=eef38474-ab6c-4605-b4ff-f16dc7b7310f
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 18:54:37.005" endtime="20210827 18:54:37.005"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:37.006" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:37.005" endtime="20210827 18:54:37.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:37.006" endtime="20210827 18:54:37.007"/>
</kw>
<status status="PASS" starttime="20210827 18:54:37.004" endtime="20210827 18:54:37.007"/>
</kw>
<status status="PASS" starttime="20210827 18:54:37.004" endtime="20210827 18:54:37.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:37.001" endtime="20210827 18:54:37.007"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:36.956" endtime="20210827 18:54:37.008"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:40.368" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:54:40.367" endtime="20210827 18:54:40.368"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:40.368" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:40.368" endtime="20210827 18:54:40.368"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:40.369" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:40.369" endtime="20210827 18:54:40.369"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:40.369" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:40.369" endtime="20210827 18:54:40.370"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:40.371" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:40.371" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:38 UTC 2021
cTime=1630090341898
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=0a0c9e12-075a-4c29-87ad-eb04d17b1853
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:54:40.370" endtime="20210827 18:54:40.371"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:40.372" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:40.371" endtime="20210827 18:54:40.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:40.372" endtime="20210827 18:54:40.372"/>
</kw>
<status status="PASS" starttime="20210827 18:54:40.370" endtime="20210827 18:54:40.372"/>
</kw>
<status status="PASS" starttime="20210827 18:54:40.370" endtime="20210827 18:54:40.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:40.366" endtime="20210827 18:54:40.373"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:40.320" endtime="20210827 18:54:40.373"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:43.761" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:54:43.760" endtime="20210827 18:54:43.761"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:43.762" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:43.761" endtime="20210827 18:54:43.762"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:43.762" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:43.762" endtime="20210827 18:54:43.762"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:43.763" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:43.762" endtime="20210827 18:54:43.763"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:43.764" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:43.764" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:38 UTC 2021
cTime=1630090342015
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=7e60a7c2-a74d-4793-83f7-175b4be14a18
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:54:43.763" endtime="20210827 18:54:43.764"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:43.765" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:43.764" endtime="20210827 18:54:43.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:43.765" endtime="20210827 18:54:43.765"/>
</kw>
<status status="PASS" starttime="20210827 18:54:43.763" endtime="20210827 18:54:43.765"/>
</kw>
<status status="PASS" starttime="20210827 18:54:43.763" endtime="20210827 18:54:43.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:43.760" endtime="20210827 18:54:43.766"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:43.712" endtime="20210827 18:54:43.766"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:47.074" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210827 18:54:47.073" endtime="20210827 18:54:47.074"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:47.074" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:47.074" endtime="20210827 18:54:47.074"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:47.075" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:47.074" endtime="20210827 18:54:47.075"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:47.075" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:47.075" endtime="20210827 18:54:47.075"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:47.076" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:47.077" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:35 UTC 2021
cTime=1630090343629
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
omUuid=2d2d6078-475e-4b6a-b563-c1c298610a95
nodeType=OM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172...</msg>
<status status="PASS" starttime="20210827 18:54:47.076" endtime="20210827 18:54:47.077"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:47.077" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:47.077" endtime="20210827 18:54:47.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:47.077" endtime="20210827 18:54:47.078"/>
</kw>
<status status="PASS" starttime="20210827 18:54:47.076" endtime="20210827 18:54:47.078"/>
</kw>
<status status="PASS" starttime="20210827 18:54:47.075" endtime="20210827 18:54:47.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:47.072" endtime="20210827 18:54:47.078"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:47.027" endtime="20210827 18:54:47.079"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:54:50.264" level="INFO">${random} = 42076</msg>
<status status="PASS" starttime="20210827 18:54:50.263" endtime="20210827 18:54:50.264"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:54:50.268" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-42076 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:54:54.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:54:54.069" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:50.265" endtime="20210827 18:54:54.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:54:54.070" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:54.069" endtime="20210827 18:54:54.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:54:54.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:54:54.070" endtime="20210827 18:54:54.071"/>
</kw>
<status status="PASS" starttime="20210827 18:54:50.265" endtime="20210827 18:54:54.071"/>
</kw>
<msg timestamp="20210827 18:54:54.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:54:50.265" endtime="20210827 18:54:54.071"/>
</kw>
<msg timestamp="20210827 18:54:54.071" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:50.264" endtime="20210827 18:54:54.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:54.072" endtime="20210827 18:54:54.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:50.262" endtime="20210827 18:54:54.072"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:54:50.218" endtime="20210827 18:54:54.073"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:54:57.296" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:54:59.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:54:59.507" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:57.292" endtime="20210827 18:54:59.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:54:59.508" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:59.507" endtime="20210827 18:54:59.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:54:59.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:54:59.508" endtime="20210827 18:54:59.509"/>
</kw>
<status status="PASS" starttime="20210827 18:54:57.292" endtime="20210827 18:54:59.509"/>
</kw>
<msg timestamp="20210827 18:54:59.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:54:57.291" endtime="20210827 18:54:59.509"/>
</kw>
<msg timestamp="20210827 18:54:59.510" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:57.291" endtime="20210827 18:54:59.510"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:59.510" endtime="20210827 18:54:59.510"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:54:59.518" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:55:01.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:55:01.775" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:59.512" endtime="20210827 18:55:01.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:55:01.776" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:01.776" endtime="20210827 18:55:01.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:55:01.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:55:01.777" endtime="20210827 18:55:01.777"/>
</kw>
<status status="PASS" starttime="20210827 18:54:59.511" endtime="20210827 18:55:01.778"/>
</kw>
<msg timestamp="20210827 18:55:01.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:54:59.511" endtime="20210827 18:55:01.778"/>
</kw>
<msg timestamp="20210827 18:55:01.778" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:54:59.510" endtime="20210827 18:55:01.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:55:01.778" endtime="20210827 18:55:01.778"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:55:01.782" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:55:09.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:55:09.213" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:01.780" endtime="20210827 18:55:09.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:55:09.214" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:09.213" endtime="20210827 18:55:09.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:55:09.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:55:09.214" endtime="20210827 18:55:09.214"/>
</kw>
<status status="PASS" starttime="20210827 18:55:01.779" endtime="20210827 18:55:09.215"/>
</kw>
<msg timestamp="20210827 18:55:09.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:55:01.779" endtime="20210827 18:55:09.215"/>
</kw>
<msg timestamp="20210827 18:55:09.215" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:01.779" endtime="20210827 18:55:09.215"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:55:09.215" endtime="20210827 18:55:09.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:57.290" endtime="20210827 18:55:09.216"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210827 18:54:57.243" endtime="20210827 18:55:09.217"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210827 18:55:12.421" level="INFO">${random} = 17518</msg>
<status status="PASS" starttime="20210827 18:55:12.421" endtime="20210827 18:55:12.421"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210827 18:55:12.426" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-17518 2&gt;&amp;1'.</msg>
<msg timestamp="20210827 18:55:15.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210827 18:55:15.908" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:12.423" endtime="20210827 18:55:15.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210827 18:55:15.909" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:15.909" endtime="20210827 18:55:15.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210827 18:55:15.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210827 18:55:15.910" endtime="20210827 18:55:15.910"/>
</kw>
<status status="PASS" starttime="20210827 18:55:12.422" endtime="20210827 18:55:15.911"/>
</kw>
<msg timestamp="20210827 18:55:15.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210827 18:55:12.422" endtime="20210827 18:55:15.911"/>
</kw>
<msg timestamp="20210827 18:55:15.911" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210827 18:55:12.421" endtime="20210827 18:55:15.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:55:15.911" endtime="20210827 18:55:15.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:55:12.420" endtime="20210827 18:55:15.912"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210827 18:55:12.376" endtime="20210827 18:55:15.913"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:26.781" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210827 18:54:26.780" endtime="20210827 18:54:26.781"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210827 18:54:26.781" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210827 18:54:26.781" endtime="20210827 18:54:26.782"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210827 18:54:26.782" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210827 18:54:26.782" endtime="20210827 18:54:26.782"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210827 18:54:26.783" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210827 18:54:26.782" endtime="20210827 18:54:26.783"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210827 18:54:26.784" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210827 18:54:26.784" level="INFO">${version_file_contents} = #Fri Aug 27 18:52:13 UTC 2021
cTime=1630090333555
clusterID=CID-df875335-c3d4-431d-8339-4be7293ceb2f
nodeType=SCM
scmUuid=17725e10-b5a4-4e3a-aa4f-6a96e545172a
layoutVersion=0
</msg>
<status status="PASS" starttime="20210827 18:54:26.783" endtime="20210827 18:54:26.784"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210827 18:54:26.784" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210827 18:54:26.784" endtime="20210827 18:54:26.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210827 18:54:26.785" endtime="20210827 18:54:26.785"/>
</kw>
<status status="PASS" starttime="20210827 18:54:26.783" endtime="20210827 18:54:26.785"/>
</kw>
<status status="PASS" starttime="20210827 18:54:26.783" endtime="20210827 18:54:26.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210827 18:54:26.780" endtime="20210827 18:54:26.785"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210827 18:54:26.728" endtime="20210827 18:54:26.786"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="139943"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="167661"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
